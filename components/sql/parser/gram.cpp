/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         base_yyparse
#define yylex           base_yylex
#define yyerror         base_yyerror
#define yydebug         base_yydebug
#define yynerrs         base_yynerrs

/* First part of user prologue.  */
#line 1 "gram.y"


/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 2006-2010, Greenplum inc
 * Portions Copyright (c) 2012-Present Pivotal Software, Inc.
 * Portions Copyright (c) 1996-2014, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET SQL_inheritance TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.  The handling of SQL_inheritance is
 *	  a good example.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include <ctype.h>
#include <cstring>
#include <limits.h>
#include "pg_functions.h"
#include "guc.h"
#include "nodes/makefuncs.h"
#include "nodes/parsenodes.h"
#include "gramparse.h"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree

/* Private struct for the result of privilege_target production */
typedef struct PrivTarget
{
	GrantTargetType targtype;
	GrantObjectType objtype;
	List	   *objs;
} PrivTarget;

/* ConstraintAttributeSpec yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static Node *makeColumnRef(char *colname, List *indirection,
						   int location, core_yyscan_t yyscanner);
static Node *makeTypeCast(Node *arg, TypeName *type, int location);
static Node *makeStringConst(char *str, int location);
static Node *makeStringConstCast(char *str, int location, TypeName *type);
static Node *makeIntConst(int val, int location);
static Node *makeFloatConst(char *str, int location);
static Node *makeBitStringConst(char *str, int location);
static Node *makeNullAConst(int location);
static Node *makeAConst(Value *v, int location);
static Node *makeBoolAConst(bool state, int location);
static void check_qualified_name(List *names, core_yyscan_t yyscanner);
static List *check_func_name(List *names, core_yyscan_t yyscanner);
static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
static List *extractArgTypes(List *parameters);
static List *extractAggrArgTypes(List *aggrargs);
static List *makeOrderedSetArgs(List *directargs, List *orderedargs,
								core_yyscan_t yyscanner);
static void insertSelectOptions(SelectStmt *stmt,
								List *sortClause, List *lockingClause,
								Node *limitOffset, Node *limitCount,
								WithClause *withClause,
								core_yyscan_t yyscanner);
static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
static Node *doNegate(Node *n, int location);
static void doNegateFloat(Value *v);
static Node *makeAArrayExpr(List *elements, int location);
static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
						 List *args, int location);
static List *mergeTableFuncParameters(List *func_args, List *columns);
static TypeName *TableFuncTypeName(List *columns);
static RangeVar *makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner);
static void SplitColQualList(List *qualList,
							 List **constraintList, CollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);

static void checkWindowExclude(void);
static Node *makeIsNotDistinctFromNode(Node *expr, int position);
List *SystemFuncName(char *name);
TypeName *SystemTypeName(char *name);


#line 240 "gram.cpp"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "gram.hpp"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_IDENT = 3,                      /* IDENT  */
  YYSYMBOL_FCONST = 4,                     /* FCONST  */
  YYSYMBOL_SCONST = 5,                     /* SCONST  */
  YYSYMBOL_BCONST = 6,                     /* BCONST  */
  YYSYMBOL_XCONST = 7,                     /* XCONST  */
  YYSYMBOL_Op = 8,                         /* Op  */
  YYSYMBOL_ICONST = 9,                     /* ICONST  */
  YYSYMBOL_PARAM = 10,                     /* PARAM  */
  YYSYMBOL_TYPECAST = 11,                  /* TYPECAST  */
  YYSYMBOL_DOT_DOT = 12,                   /* DOT_DOT  */
  YYSYMBOL_COLON_EQUALS = 13,              /* COLON_EQUALS  */
  YYSYMBOL_ABORT_P = 14,                   /* ABORT_P  */
  YYSYMBOL_ABSOLUTE_P = 15,                /* ABSOLUTE_P  */
  YYSYMBOL_ACCESS = 16,                    /* ACCESS  */
  YYSYMBOL_ACTION = 17,                    /* ACTION  */
  YYSYMBOL_ADD_P = 18,                     /* ADD_P  */
  YYSYMBOL_ADMIN = 19,                     /* ADMIN  */
  YYSYMBOL_AFTER = 20,                     /* AFTER  */
  YYSYMBOL_AGGREGATE = 21,                 /* AGGREGATE  */
  YYSYMBOL_ALL = 22,                       /* ALL  */
  YYSYMBOL_ALSO = 23,                      /* ALSO  */
  YYSYMBOL_ALTER = 24,                     /* ALTER  */
  YYSYMBOL_ALWAYS = 25,                    /* ALWAYS  */
  YYSYMBOL_ANALYSE = 26,                   /* ANALYSE  */
  YYSYMBOL_ANALYZE = 27,                   /* ANALYZE  */
  YYSYMBOL_AND = 28,                       /* AND  */
  YYSYMBOL_ANY = 29,                       /* ANY  */
  YYSYMBOL_ARRAY = 30,                     /* ARRAY  */
  YYSYMBOL_AS = 31,                        /* AS  */
  YYSYMBOL_ASC = 32,                       /* ASC  */
  YYSYMBOL_ASSERTION = 33,                 /* ASSERTION  */
  YYSYMBOL_ASSIGNMENT = 34,                /* ASSIGNMENT  */
  YYSYMBOL_ASYMMETRIC = 35,                /* ASYMMETRIC  */
  YYSYMBOL_AT = 36,                        /* AT  */
  YYSYMBOL_ATTRIBUTE = 37,                 /* ATTRIBUTE  */
  YYSYMBOL_AUTHORIZATION = 38,             /* AUTHORIZATION  */
  YYSYMBOL_BACKWARD = 39,                  /* BACKWARD  */
  YYSYMBOL_BEFORE = 40,                    /* BEFORE  */
  YYSYMBOL_BEGIN_P = 41,                   /* BEGIN_P  */
  YYSYMBOL_BETWEEN = 42,                   /* BETWEEN  */
  YYSYMBOL_BIGINT = 43,                    /* BIGINT  */
  YYSYMBOL_BINARY = 44,                    /* BINARY  */
  YYSYMBOL_BIT = 45,                       /* BIT  */
  YYSYMBOL_BOOLEAN_P = 46,                 /* BOOLEAN_P  */
  YYSYMBOL_BOTH = 47,                      /* BOTH  */
  YYSYMBOL_BY = 48,                        /* BY  */
  YYSYMBOL_CACHE = 49,                     /* CACHE  */
  YYSYMBOL_CALLED = 50,                    /* CALLED  */
  YYSYMBOL_CASCADE = 51,                   /* CASCADE  */
  YYSYMBOL_CASCADED = 52,                  /* CASCADED  */
  YYSYMBOL_CASE = 53,                      /* CASE  */
  YYSYMBOL_CAST = 54,                      /* CAST  */
  YYSYMBOL_CATALOG_P = 55,                 /* CATALOG_P  */
  YYSYMBOL_CHAIN = 56,                     /* CHAIN  */
  YYSYMBOL_CHAR_P = 57,                    /* CHAR_P  */
  YYSYMBOL_CHARACTER = 58,                 /* CHARACTER  */
  YYSYMBOL_CHARACTERISTICS = 59,           /* CHARACTERISTICS  */
  YYSYMBOL_CHECK = 60,                     /* CHECK  */
  YYSYMBOL_CHECKPOINT = 61,                /* CHECKPOINT  */
  YYSYMBOL_CLASS = 62,                     /* CLASS  */
  YYSYMBOL_CLOSE = 63,                     /* CLOSE  */
  YYSYMBOL_CLUSTER = 64,                   /* CLUSTER  */
  YYSYMBOL_COALESCE = 65,                  /* COALESCE  */
  YYSYMBOL_COLLATE = 66,                   /* COLLATE  */
  YYSYMBOL_COLLATION = 67,                 /* COLLATION  */
  YYSYMBOL_COLUMN = 68,                    /* COLUMN  */
  YYSYMBOL_COMMENT = 69,                   /* COMMENT  */
  YYSYMBOL_COMMENTS = 70,                  /* COMMENTS  */
  YYSYMBOL_COMMIT = 71,                    /* COMMIT  */
  YYSYMBOL_COMMITTED = 72,                 /* COMMITTED  */
  YYSYMBOL_CONCURRENCY = 73,               /* CONCURRENCY  */
  YYSYMBOL_CONCURRENTLY = 74,              /* CONCURRENTLY  */
  YYSYMBOL_CONFIGURATION = 75,             /* CONFIGURATION  */
  YYSYMBOL_CONNECTION = 76,                /* CONNECTION  */
  YYSYMBOL_CONSTRAINT = 77,                /* CONSTRAINT  */
  YYSYMBOL_CONSTRAINTS = 78,               /* CONSTRAINTS  */
  YYSYMBOL_CONTENT_P = 79,                 /* CONTENT_P  */
  YYSYMBOL_CONTINUE_P = 80,                /* CONTINUE_P  */
  YYSYMBOL_CONVERSION_P = 81,              /* CONVERSION_P  */
  YYSYMBOL_COPY = 82,                      /* COPY  */
  YYSYMBOL_COST = 83,                      /* COST  */
  YYSYMBOL_CREATE = 84,                    /* CREATE  */
  YYSYMBOL_CROSS = 85,                     /* CROSS  */
  YYSYMBOL_CSV = 86,                       /* CSV  */
  YYSYMBOL_CURRENT_P = 87,                 /* CURRENT_P  */
  YYSYMBOL_CURRENT_CATALOG = 88,           /* CURRENT_CATALOG  */
  YYSYMBOL_CURRENT_DATE = 89,              /* CURRENT_DATE  */
  YYSYMBOL_CURRENT_ROLE = 90,              /* CURRENT_ROLE  */
  YYSYMBOL_CURRENT_SCHEMA = 91,            /* CURRENT_SCHEMA  */
  YYSYMBOL_CURRENT_TIME = 92,              /* CURRENT_TIME  */
  YYSYMBOL_CURRENT_TIMESTAMP = 93,         /* CURRENT_TIMESTAMP  */
  YYSYMBOL_CURRENT_USER = 94,              /* CURRENT_USER  */
  YYSYMBOL_CURSOR = 95,                    /* CURSOR  */
  YYSYMBOL_CYCLE = 96,                     /* CYCLE  */
  YYSYMBOL_DATA_P = 97,                    /* DATA_P  */
  YYSYMBOL_DATABASE = 98,                  /* DATABASE  */
  YYSYMBOL_DAY_P = 99,                     /* DAY_P  */
  YYSYMBOL_DEALLOCATE = 100,               /* DEALLOCATE  */
  YYSYMBOL_DEC = 101,                      /* DEC  */
  YYSYMBOL_DECIMAL_P = 102,                /* DECIMAL_P  */
  YYSYMBOL_DECLARE = 103,                  /* DECLARE  */
  YYSYMBOL_DEFAULT = 104,                  /* DEFAULT  */
  YYSYMBOL_DEFAULTS = 105,                 /* DEFAULTS  */
  YYSYMBOL_DEFERRABLE = 106,               /* DEFERRABLE  */
  YYSYMBOL_DEFERRED = 107,                 /* DEFERRED  */
  YYSYMBOL_DEFINER = 108,                  /* DEFINER  */
  YYSYMBOL_DELETE_P = 109,                 /* DELETE_P  */
  YYSYMBOL_DELIMITER = 110,                /* DELIMITER  */
  YYSYMBOL_DELIMITERS = 111,               /* DELIMITERS  */
  YYSYMBOL_DESC = 112,                     /* DESC  */
  YYSYMBOL_DICTIONARY = 113,               /* DICTIONARY  */
  YYSYMBOL_DISABLE_P = 114,                /* DISABLE_P  */
  YYSYMBOL_DISCARD = 115,                  /* DISCARD  */
  YYSYMBOL_DISTINCT = 116,                 /* DISTINCT  */
  YYSYMBOL_DO = 117,                       /* DO  */
  YYSYMBOL_DOCUMENT_P = 118,               /* DOCUMENT_P  */
  YYSYMBOL_DOMAIN_P = 119,                 /* DOMAIN_P  */
  YYSYMBOL_DOUBLE_P = 120,                 /* DOUBLE_P  */
  YYSYMBOL_DROP = 121,                     /* DROP  */
  YYSYMBOL_EACH = 122,                     /* EACH  */
  YYSYMBOL_ELSE = 123,                     /* ELSE  */
  YYSYMBOL_ENABLE_P = 124,                 /* ENABLE_P  */
  YYSYMBOL_ENCODING = 125,                 /* ENCODING  */
  YYSYMBOL_ENCRYPTED = 126,                /* ENCRYPTED  */
  YYSYMBOL_END_P = 127,                    /* END_P  */
  YYSYMBOL_ENDPOINT = 128,                 /* ENDPOINT  */
  YYSYMBOL_ENUM_P = 129,                   /* ENUM_P  */
  YYSYMBOL_ESCAPE = 130,                   /* ESCAPE  */
  YYSYMBOL_EVENT = 131,                    /* EVENT  */
  YYSYMBOL_EXCEPT = 132,                   /* EXCEPT  */
  YYSYMBOL_EXCLUDE = 133,                  /* EXCLUDE  */
  YYSYMBOL_EXCLUDING = 134,                /* EXCLUDING  */
  YYSYMBOL_EXCLUSIVE = 135,                /* EXCLUSIVE  */
  YYSYMBOL_EXECUTE = 136,                  /* EXECUTE  */
  YYSYMBOL_EXISTS = 137,                   /* EXISTS  */
  YYSYMBOL_EXPLAIN = 138,                  /* EXPLAIN  */
  YYSYMBOL_EXTENSION = 139,                /* EXTENSION  */
  YYSYMBOL_EXTERNAL = 140,                 /* EXTERNAL  */
  YYSYMBOL_EXTRACT = 141,                  /* EXTRACT  */
  YYSYMBOL_FALSE_P = 142,                  /* FALSE_P  */
  YYSYMBOL_FAMILY = 143,                   /* FAMILY  */
  YYSYMBOL_FETCH = 144,                    /* FETCH  */
  YYSYMBOL_FILTER = 145,                   /* FILTER  */
  YYSYMBOL_FIRST_P = 146,                  /* FIRST_P  */
  YYSYMBOL_FLOAT_P = 147,                  /* FLOAT_P  */
  YYSYMBOL_FOLLOWING = 148,                /* FOLLOWING  */
  YYSYMBOL_FOR = 149,                      /* FOR  */
  YYSYMBOL_FORCE = 150,                    /* FORCE  */
  YYSYMBOL_FOREIGN = 151,                  /* FOREIGN  */
  YYSYMBOL_FORWARD = 152,                  /* FORWARD  */
  YYSYMBOL_FREEZE = 153,                   /* FREEZE  */
  YYSYMBOL_FROM = 154,                     /* FROM  */
  YYSYMBOL_FULL = 155,                     /* FULL  */
  YYSYMBOL_FUNCTION = 156,                 /* FUNCTION  */
  YYSYMBOL_FUNCTIONS = 157,                /* FUNCTIONS  */
  YYSYMBOL_GLOBAL = 158,                   /* GLOBAL  */
  YYSYMBOL_GRANT = 159,                    /* GRANT  */
  YYSYMBOL_GRANTED = 160,                  /* GRANTED  */
  YYSYMBOL_GREATEST = 161,                 /* GREATEST  */
  YYSYMBOL_GROUP_P = 162,                  /* GROUP_P  */
  YYSYMBOL_HANDLER = 163,                  /* HANDLER  */
  YYSYMBOL_HAVING = 164,                   /* HAVING  */
  YYSYMBOL_HEADER_P = 165,                 /* HEADER_P  */
  YYSYMBOL_HOLD = 166,                     /* HOLD  */
  YYSYMBOL_HOUR_P = 167,                   /* HOUR_P  */
  YYSYMBOL_IDENTITY_P = 168,               /* IDENTITY_P  */
  YYSYMBOL_IF_P = 169,                     /* IF_P  */
  YYSYMBOL_ILIKE = 170,                    /* ILIKE  */
  YYSYMBOL_IMMEDIATE = 171,                /* IMMEDIATE  */
  YYSYMBOL_IMMUTABLE = 172,                /* IMMUTABLE  */
  YYSYMBOL_IMPLICIT_P = 173,               /* IMPLICIT_P  */
  YYSYMBOL_IN_P = 174,                     /* IN_P  */
  YYSYMBOL_INCLUDING = 175,                /* INCLUDING  */
  YYSYMBOL_INCREMENT = 176,                /* INCREMENT  */
  YYSYMBOL_INDEX = 177,                    /* INDEX  */
  YYSYMBOL_INDEXES = 178,                  /* INDEXES  */
  YYSYMBOL_INHERIT = 179,                  /* INHERIT  */
  YYSYMBOL_INHERITS = 180,                 /* INHERITS  */
  YYSYMBOL_INITIALLY = 181,                /* INITIALLY  */
  YYSYMBOL_INLINE_P = 182,                 /* INLINE_P  */
  YYSYMBOL_INNER_P = 183,                  /* INNER_P  */
  YYSYMBOL_INOUT = 184,                    /* INOUT  */
  YYSYMBOL_INPUT_P = 185,                  /* INPUT_P  */
  YYSYMBOL_INSENSITIVE = 186,              /* INSENSITIVE  */
  YYSYMBOL_INSERT = 187,                   /* INSERT  */
  YYSYMBOL_INSTEAD = 188,                  /* INSTEAD  */
  YYSYMBOL_INT_P = 189,                    /* INT_P  */
  YYSYMBOL_INTEGER = 190,                  /* INTEGER  */
  YYSYMBOL_INTERSECT = 191,                /* INTERSECT  */
  YYSYMBOL_INTERVAL = 192,                 /* INTERVAL  */
  YYSYMBOL_INTO = 193,                     /* INTO  */
  YYSYMBOL_INVOKER = 194,                  /* INVOKER  */
  YYSYMBOL_IS = 195,                       /* IS  */
  YYSYMBOL_ISNULL = 196,                   /* ISNULL  */
  YYSYMBOL_ISOLATION = 197,                /* ISOLATION  */
  YYSYMBOL_JOIN = 198,                     /* JOIN  */
  YYSYMBOL_KEY = 199,                      /* KEY  */
  YYSYMBOL_LABEL = 200,                    /* LABEL  */
  YYSYMBOL_LANGUAGE = 201,                 /* LANGUAGE  */
  YYSYMBOL_LARGE_P = 202,                  /* LARGE_P  */
  YYSYMBOL_LAST_P = 203,                   /* LAST_P  */
  YYSYMBOL_LATERAL_P = 204,                /* LATERAL_P  */
  YYSYMBOL_LC_COLLATE_P = 205,             /* LC_COLLATE_P  */
  YYSYMBOL_LC_CTYPE_P = 206,               /* LC_CTYPE_P  */
  YYSYMBOL_LEADING = 207,                  /* LEADING  */
  YYSYMBOL_LEAKPROOF = 208,                /* LEAKPROOF  */
  YYSYMBOL_LEAST = 209,                    /* LEAST  */
  YYSYMBOL_LEFT = 210,                     /* LEFT  */
  YYSYMBOL_LEVEL = 211,                    /* LEVEL  */
  YYSYMBOL_LIKE = 212,                     /* LIKE  */
  YYSYMBOL_LIMIT = 213,                    /* LIMIT  */
  YYSYMBOL_LISTEN = 214,                   /* LISTEN  */
  YYSYMBOL_LOAD = 215,                     /* LOAD  */
  YYSYMBOL_LOCAL = 216,                    /* LOCAL  */
  YYSYMBOL_LOCALTIME = 217,                /* LOCALTIME  */
  YYSYMBOL_LOCALTIMESTAMP = 218,           /* LOCALTIMESTAMP  */
  YYSYMBOL_LOCATION = 219,                 /* LOCATION  */
  YYSYMBOL_LOCK_P = 220,                   /* LOCK_P  */
  YYSYMBOL_MAPPING = 221,                  /* MAPPING  */
  YYSYMBOL_MATCH = 222,                    /* MATCH  */
  YYSYMBOL_MATERIALIZED = 223,             /* MATERIALIZED  */
  YYSYMBOL_MAXVALUE = 224,                 /* MAXVALUE  */
  YYSYMBOL_MEMORY_LIMIT = 225,             /* MEMORY_LIMIT  */
  YYSYMBOL_MEMORY_SHARED_QUOTA = 226,      /* MEMORY_SHARED_QUOTA  */
  YYSYMBOL_MEMORY_SPILL_RATIO = 227,       /* MEMORY_SPILL_RATIO  */
  YYSYMBOL_MINUTE_P = 228,                 /* MINUTE_P  */
  YYSYMBOL_MINVALUE = 229,                 /* MINVALUE  */
  YYSYMBOL_MODE = 230,                     /* MODE  */
  YYSYMBOL_MONTH_P = 231,                  /* MONTH_P  */
  YYSYMBOL_MOVE = 232,                     /* MOVE  */
  YYSYMBOL_NAME_P = 233,                   /* NAME_P  */
  YYSYMBOL_NAMES = 234,                    /* NAMES  */
  YYSYMBOL_NATIONAL = 235,                 /* NATIONAL  */
  YYSYMBOL_NATURAL = 236,                  /* NATURAL  */
  YYSYMBOL_NCHAR = 237,                    /* NCHAR  */
  YYSYMBOL_NEXT = 238,                     /* NEXT  */
  YYSYMBOL_NO = 239,                       /* NO  */
  YYSYMBOL_NONE = 240,                     /* NONE  */
  YYSYMBOL_NOT = 241,                      /* NOT  */
  YYSYMBOL_NOTHING = 242,                  /* NOTHING  */
  YYSYMBOL_NOTIFY = 243,                   /* NOTIFY  */
  YYSYMBOL_NOTNULL = 244,                  /* NOTNULL  */
  YYSYMBOL_NOWAIT = 245,                   /* NOWAIT  */
  YYSYMBOL_NULL_P = 246,                   /* NULL_P  */
  YYSYMBOL_NULLIF = 247,                   /* NULLIF  */
  YYSYMBOL_NULLS_P = 248,                  /* NULLS_P  */
  YYSYMBOL_NUMERIC = 249,                  /* NUMERIC  */
  YYSYMBOL_OBJECT_P = 250,                 /* OBJECT_P  */
  YYSYMBOL_OF = 251,                       /* OF  */
  YYSYMBOL_OFF = 252,                      /* OFF  */
  YYSYMBOL_OFFSET = 253,                   /* OFFSET  */
  YYSYMBOL_OIDS = 254,                     /* OIDS  */
  YYSYMBOL_ON = 255,                       /* ON  */
  YYSYMBOL_ONLY = 256,                     /* ONLY  */
  YYSYMBOL_OPERATOR = 257,                 /* OPERATOR  */
  YYSYMBOL_OPTION = 258,                   /* OPTION  */
  YYSYMBOL_OPTIONS = 259,                  /* OPTIONS  */
  YYSYMBOL_OR = 260,                       /* OR  */
  YYSYMBOL_ORDER = 261,                    /* ORDER  */
  YYSYMBOL_ORDINALITY = 262,               /* ORDINALITY  */
  YYSYMBOL_OUT_P = 263,                    /* OUT_P  */
  YYSYMBOL_OUTER_P = 264,                  /* OUTER_P  */
  YYSYMBOL_OVER = 265,                     /* OVER  */
  YYSYMBOL_OVERLAPS = 266,                 /* OVERLAPS  */
  YYSYMBOL_OVERLAY = 267,                  /* OVERLAY  */
  YYSYMBOL_OWNED = 268,                    /* OWNED  */
  YYSYMBOL_OWNER = 269,                    /* OWNER  */
  YYSYMBOL_PARSER = 270,                   /* PARSER  */
  YYSYMBOL_PARTIAL = 271,                  /* PARTIAL  */
  YYSYMBOL_PARTITION = 272,                /* PARTITION  */
  YYSYMBOL_PASSING = 273,                  /* PASSING  */
  YYSYMBOL_PASSWORD = 274,                 /* PASSWORD  */
  YYSYMBOL_PLACING = 275,                  /* PLACING  */
  YYSYMBOL_PLANS = 276,                    /* PLANS  */
  YYSYMBOL_POSITION = 277,                 /* POSITION  */
  YYSYMBOL_PRECEDING = 278,                /* PRECEDING  */
  YYSYMBOL_PRECISION = 279,                /* PRECISION  */
  YYSYMBOL_PRESERVE = 280,                 /* PRESERVE  */
  YYSYMBOL_PREPARE = 281,                  /* PREPARE  */
  YYSYMBOL_PREPARED = 282,                 /* PREPARED  */
  YYSYMBOL_PRIMARY = 283,                  /* PRIMARY  */
  YYSYMBOL_PRIOR = 284,                    /* PRIOR  */
  YYSYMBOL_PRIVILEGES = 285,               /* PRIVILEGES  */
  YYSYMBOL_PROCEDURAL = 286,               /* PROCEDURAL  */
  YYSYMBOL_PROCEDURE = 287,                /* PROCEDURE  */
  YYSYMBOL_PROGRAM = 288,                  /* PROGRAM  */
  YYSYMBOL_QUOTE = 289,                    /* QUOTE  */
  YYSYMBOL_RANGE = 290,                    /* RANGE  */
  YYSYMBOL_READ = 291,                     /* READ  */
  YYSYMBOL_REAL = 292,                     /* REAL  */
  YYSYMBOL_REASSIGN = 293,                 /* REASSIGN  */
  YYSYMBOL_RECHECK = 294,                  /* RECHECK  */
  YYSYMBOL_RECURSIVE = 295,                /* RECURSIVE  */
  YYSYMBOL_REF = 296,                      /* REF  */
  YYSYMBOL_REFERENCES = 297,               /* REFERENCES  */
  YYSYMBOL_REFRESH = 298,                  /* REFRESH  */
  YYSYMBOL_REINDEX = 299,                  /* REINDEX  */
  YYSYMBOL_RELATIVE_P = 300,               /* RELATIVE_P  */
  YYSYMBOL_RELEASE = 301,                  /* RELEASE  */
  YYSYMBOL_RENAME = 302,                   /* RENAME  */
  YYSYMBOL_REPEATABLE = 303,               /* REPEATABLE  */
  YYSYMBOL_REPLACE = 304,                  /* REPLACE  */
  YYSYMBOL_REPLICA = 305,                  /* REPLICA  */
  YYSYMBOL_RESET = 306,                    /* RESET  */
  YYSYMBOL_RESTART = 307,                  /* RESTART  */
  YYSYMBOL_RESTRICT = 308,                 /* RESTRICT  */
  YYSYMBOL_RETURNING = 309,                /* RETURNING  */
  YYSYMBOL_RETURNS = 310,                  /* RETURNS  */
  YYSYMBOL_REVOKE = 311,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 312,                    /* RIGHT  */
  YYSYMBOL_ROLE = 313,                     /* ROLE  */
  YYSYMBOL_ROLLBACK = 314,                 /* ROLLBACK  */
  YYSYMBOL_ROW = 315,                      /* ROW  */
  YYSYMBOL_ROWS = 316,                     /* ROWS  */
  YYSYMBOL_RULE = 317,                     /* RULE  */
  YYSYMBOL_SAVEPOINT = 318,                /* SAVEPOINT  */
  YYSYMBOL_SCHEMA = 319,                   /* SCHEMA  */
  YYSYMBOL_SCROLL = 320,                   /* SCROLL  */
  YYSYMBOL_SEARCH = 321,                   /* SEARCH  */
  YYSYMBOL_SECOND_P = 322,                 /* SECOND_P  */
  YYSYMBOL_SECURITY = 323,                 /* SECURITY  */
  YYSYMBOL_SELECT = 324,                   /* SELECT  */
  YYSYMBOL_SEQUENCE = 325,                 /* SEQUENCE  */
  YYSYMBOL_SEQUENCES = 326,                /* SEQUENCES  */
  YYSYMBOL_SERIALIZABLE = 327,             /* SERIALIZABLE  */
  YYSYMBOL_SERVER = 328,                   /* SERVER  */
  YYSYMBOL_SESSION = 329,                  /* SESSION  */
  YYSYMBOL_SESSION_USER = 330,             /* SESSION_USER  */
  YYSYMBOL_SET = 331,                      /* SET  */
  YYSYMBOL_SETOF = 332,                    /* SETOF  */
  YYSYMBOL_SHARE = 333,                    /* SHARE  */
  YYSYMBOL_SHOW = 334,                     /* SHOW  */
  YYSYMBOL_SIMILAR = 335,                  /* SIMILAR  */
  YYSYMBOL_SIMPLE = 336,                   /* SIMPLE  */
  YYSYMBOL_SMALLINT = 337,                 /* SMALLINT  */
  YYSYMBOL_SNAPSHOT = 338,                 /* SNAPSHOT  */
  YYSYMBOL_SOME = 339,                     /* SOME  */
  YYSYMBOL_STABLE = 340,                   /* STABLE  */
  YYSYMBOL_STANDALONE_P = 341,             /* STANDALONE_P  */
  YYSYMBOL_START = 342,                    /* START  */
  YYSYMBOL_STATEMENT = 343,                /* STATEMENT  */
  YYSYMBOL_STATISTICS = 344,               /* STATISTICS  */
  YYSYMBOL_STDIN = 345,                    /* STDIN  */
  YYSYMBOL_STDOUT = 346,                   /* STDOUT  */
  YYSYMBOL_STORAGE = 347,                  /* STORAGE  */
  YYSYMBOL_STRICT_P = 348,                 /* STRICT_P  */
  YYSYMBOL_STRIP_P = 349,                  /* STRIP_P  */
  YYSYMBOL_SUBSTRING = 350,                /* SUBSTRING  */
  YYSYMBOL_SYMMETRIC = 351,                /* SYMMETRIC  */
  YYSYMBOL_SYSID = 352,                    /* SYSID  */
  YYSYMBOL_SYSTEM_P = 353,                 /* SYSTEM_P  */
  YYSYMBOL_TABLE = 354,                    /* TABLE  */
  YYSYMBOL_TABLES = 355,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 356,               /* TABLESPACE  */
  YYSYMBOL_TEMP = 357,                     /* TEMP  */
  YYSYMBOL_TEMPLATE = 358,                 /* TEMPLATE  */
  YYSYMBOL_TEMPORARY = 359,                /* TEMPORARY  */
  YYSYMBOL_TEXT_P = 360,                   /* TEXT_P  */
  YYSYMBOL_THEN = 361,                     /* THEN  */
  YYSYMBOL_TIME = 362,                     /* TIME  */
  YYSYMBOL_TIMESTAMP = 363,                /* TIMESTAMP  */
  YYSYMBOL_TO = 364,                       /* TO  */
  YYSYMBOL_TRAILING = 365,                 /* TRAILING  */
  YYSYMBOL_TRANSACTION = 366,              /* TRANSACTION  */
  YYSYMBOL_TREAT = 367,                    /* TREAT  */
  YYSYMBOL_TRIGGER = 368,                  /* TRIGGER  */
  YYSYMBOL_TRIM = 369,                     /* TRIM  */
  YYSYMBOL_TRUE_P = 370,                   /* TRUE_P  */
  YYSYMBOL_TRUNCATE = 371,                 /* TRUNCATE  */
  YYSYMBOL_TRUSTED = 372,                  /* TRUSTED  */
  YYSYMBOL_TYPE_P = 373,                   /* TYPE_P  */
  YYSYMBOL_TYPES_P = 374,                  /* TYPES_P  */
  YYSYMBOL_UNBOUNDED = 375,                /* UNBOUNDED  */
  YYSYMBOL_UNCOMMITTED = 376,              /* UNCOMMITTED  */
  YYSYMBOL_UNENCRYPTED = 377,              /* UNENCRYPTED  */
  YYSYMBOL_UNION = 378,                    /* UNION  */
  YYSYMBOL_UNIQUE = 379,                   /* UNIQUE  */
  YYSYMBOL_UNKNOWN = 380,                  /* UNKNOWN  */
  YYSYMBOL_UNLISTEN = 381,                 /* UNLISTEN  */
  YYSYMBOL_UNLOGGED = 382,                 /* UNLOGGED  */
  YYSYMBOL_UNTIL = 383,                    /* UNTIL  */
  YYSYMBOL_UPDATE = 384,                   /* UPDATE  */
  YYSYMBOL_USER = 385,                     /* USER  */
  YYSYMBOL_USING = 386,                    /* USING  */
  YYSYMBOL_VACUUM = 387,                   /* VACUUM  */
  YYSYMBOL_VALID = 388,                    /* VALID  */
  YYSYMBOL_VALIDATE = 389,                 /* VALIDATE  */
  YYSYMBOL_VALIDATOR = 390,                /* VALIDATOR  */
  YYSYMBOL_VALUE_P = 391,                  /* VALUE_P  */
  YYSYMBOL_VALUES = 392,                   /* VALUES  */
  YYSYMBOL_VARCHAR = 393,                  /* VARCHAR  */
  YYSYMBOL_VARIADIC = 394,                 /* VARIADIC  */
  YYSYMBOL_VARYING = 395,                  /* VARYING  */
  YYSYMBOL_VERBOSE = 396,                  /* VERBOSE  */
  YYSYMBOL_VERSION_P = 397,                /* VERSION_P  */
  YYSYMBOL_VIEW = 398,                     /* VIEW  */
  YYSYMBOL_VIEWS = 399,                    /* VIEWS  */
  YYSYMBOL_VOLATILE = 400,                 /* VOLATILE  */
  YYSYMBOL_WHEN = 401,                     /* WHEN  */
  YYSYMBOL_WHERE = 402,                    /* WHERE  */
  YYSYMBOL_WHITESPACE_P = 403,             /* WHITESPACE_P  */
  YYSYMBOL_WINDOW = 404,                   /* WINDOW  */
  YYSYMBOL_WITH = 405,                     /* WITH  */
  YYSYMBOL_WITHIN = 406,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 407,                  /* WITHOUT  */
  YYSYMBOL_WORK = 408,                     /* WORK  */
  YYSYMBOL_WRAPPER = 409,                  /* WRAPPER  */
  YYSYMBOL_WRITE = 410,                    /* WRITE  */
  YYSYMBOL_XML_P = 411,                    /* XML_P  */
  YYSYMBOL_XMLATTRIBUTES = 412,            /* XMLATTRIBUTES  */
  YYSYMBOL_XMLCONCAT = 413,                /* XMLCONCAT  */
  YYSYMBOL_XMLELEMENT = 414,               /* XMLELEMENT  */
  YYSYMBOL_XMLEXISTS = 415,                /* XMLEXISTS  */
  YYSYMBOL_XMLFOREST = 416,                /* XMLFOREST  */
  YYSYMBOL_XMLPARSE = 417,                 /* XMLPARSE  */
  YYSYMBOL_XMLPI = 418,                    /* XMLPI  */
  YYSYMBOL_XMLROOT = 419,                  /* XMLROOT  */
  YYSYMBOL_XMLSERIALIZE = 420,             /* XMLSERIALIZE  */
  YYSYMBOL_YEAR_P = 421,                   /* YEAR_P  */
  YYSYMBOL_YES_P = 422,                    /* YES_P  */
  YYSYMBOL_ZONE = 423,                     /* ZONE  */
  YYSYMBOL_ACTIVE = 424,                   /* ACTIVE  */
  YYSYMBOL_CONTAINS = 425,                 /* CONTAINS  */
  YYSYMBOL_CPUSET = 426,                   /* CPUSET  */
  YYSYMBOL_CPU_RATE_LIMIT = 427,           /* CPU_RATE_LIMIT  */
  YYSYMBOL_CREATEEXTTABLE = 428,           /* CREATEEXTTABLE  */
  YYSYMBOL_CUBE = 429,                     /* CUBE  */
  YYSYMBOL_DECODE = 430,                   /* DECODE  */
  YYSYMBOL_DENY = 431,                     /* DENY  */
  YYSYMBOL_DISTRIBUTED = 432,              /* DISTRIBUTED  */
  YYSYMBOL_DXL = 433,                      /* DXL  */
  YYSYMBOL_ERRORS = 434,                   /* ERRORS  */
  YYSYMBOL_EVERY = 435,                    /* EVERY  */
  YYSYMBOL_EXCHANGE = 436,                 /* EXCHANGE  */
  YYSYMBOL_EXPAND = 437,                   /* EXPAND  */
  YYSYMBOL_FIELDS = 438,                   /* FIELDS  */
  YYSYMBOL_FILL = 439,                     /* FILL  */
  YYSYMBOL_FORMAT = 440,                   /* FORMAT  */
  YYSYMBOL_FULLSCAN = 441,                 /* FULLSCAN  */
  YYSYMBOL_GROUP_ID = 442,                 /* GROUP_ID  */
  YYSYMBOL_GROUPING = 443,                 /* GROUPING  */
  YYSYMBOL_HASH = 444,                     /* HASH  */
  YYSYMBOL_HOST = 445,                     /* HOST  */
  YYSYMBOL_IGNORE_P = 446,                 /* IGNORE_P  */
  YYSYMBOL_INCLUSIVE = 447,                /* INCLUSIVE  */
  YYSYMBOL_INITPLAN = 448,                 /* INITPLAN  */
  YYSYMBOL_LIST = 449,                     /* LIST  */
  YYSYMBOL_LOG_P = 450,                    /* LOG_P  */
  YYSYMBOL_MASTER = 451,                   /* MASTER  */
  YYSYMBOL_MEDIAN = 452,                   /* MEDIAN  */
  YYSYMBOL_MISSING = 453,                  /* MISSING  */
  YYSYMBOL_MODIFIES = 454,                 /* MODIFIES  */
  YYSYMBOL_NEWLINE = 455,                  /* NEWLINE  */
  YYSYMBOL_NOCREATEEXTTABLE = 456,         /* NOCREATEEXTTABLE  */
  YYSYMBOL_NOOVERCOMMIT = 457,             /* NOOVERCOMMIT  */
  YYSYMBOL_ORDERED = 458,                  /* ORDERED  */
  YYSYMBOL_OTHERS = 459,                   /* OTHERS  */
  YYSYMBOL_OVERCOMMIT = 460,               /* OVERCOMMIT  */
  YYSYMBOL_PARALLEL = 461,                 /* PARALLEL  */
  YYSYMBOL_RETRIEVE = 462,                 /* RETRIEVE  */
  YYSYMBOL_PARTITIONS = 463,               /* PARTITIONS  */
  YYSYMBOL_PERCENT = 464,                  /* PERCENT  */
  YYSYMBOL_PERSISTENTLY = 465,             /* PERSISTENTLY  */
  YYSYMBOL_PROTOCOL = 466,                 /* PROTOCOL  */
  YYSYMBOL_QUEUE = 467,                    /* QUEUE  */
  YYSYMBOL_RANDOMLY = 468,                 /* RANDOMLY  */
  YYSYMBOL_READABLE = 469,                 /* READABLE  */
  YYSYMBOL_READS = 470,                    /* READS  */
  YYSYMBOL_REJECT_P = 471,                 /* REJECT_P  */
  YYSYMBOL_REPLICATED = 472,               /* REPLICATED  */
  YYSYMBOL_RESOURCE = 473,                 /* RESOURCE  */
  YYSYMBOL_ROLLUP = 474,                   /* ROLLUP  */
  YYSYMBOL_ROOTPARTITION = 475,            /* ROOTPARTITION  */
  YYSYMBOL_SCATTER = 476,                  /* SCATTER  */
  YYSYMBOL_SEGMENT = 477,                  /* SEGMENT  */
  YYSYMBOL_SEGMENTS = 478,                 /* SEGMENTS  */
  YYSYMBOL_SETS = 479,                     /* SETS  */
  YYSYMBOL_SPLIT = 480,                    /* SPLIT  */
  YYSYMBOL_SQL = 481,                      /* SQL  */
  YYSYMBOL_SUBPARTITION = 482,             /* SUBPARTITION  */
  YYSYMBOL_THRESHOLD = 483,                /* THRESHOLD  */
  YYSYMBOL_TIES = 484,                     /* TIES  */
  YYSYMBOL_VALIDATION = 485,               /* VALIDATION  */
  YYSYMBOL_WEB = 486,                      /* WEB  */
  YYSYMBOL_WRITABLE = 487,                 /* WRITABLE  */
  YYSYMBOL_YEZZEY = 488,                   /* YEZZEY  */
  YYSYMBOL_NULLS_FIRST = 489,              /* NULLS_FIRST  */
  YYSYMBOL_NULLS_LAST = 490,               /* NULLS_LAST  */
  YYSYMBOL_WITH_ORDINALITY = 491,          /* WITH_ORDINALITY  */
  YYSYMBOL_WITH_TIME = 492,                /* WITH_TIME  */
  YYSYMBOL_493_ = 493,                     /* '='  */
  YYSYMBOL_494_ = 494,                     /* '<'  */
  YYSYMBOL_495_ = 495,                     /* '>'  */
  YYSYMBOL_POSTFIXOP = 496,                /* POSTFIXOP  */
  YYSYMBOL_497_ = 497,                     /* '+'  */
  YYSYMBOL_498_ = 498,                     /* '-'  */
  YYSYMBOL_499_ = 499,                     /* '*'  */
  YYSYMBOL_500_ = 500,                     /* '/'  */
  YYSYMBOL_501_ = 501,                     /* '%'  */
  YYSYMBOL_502_ = 502,                     /* '^'  */
  YYSYMBOL_UMINUS = 503,                   /* UMINUS  */
  YYSYMBOL_504_ = 504,                     /* '['  */
  YYSYMBOL_505_ = 505,                     /* ']'  */
  YYSYMBOL_506_ = 506,                     /* '('  */
  YYSYMBOL_507_ = 507,                     /* ')'  */
  YYSYMBOL_508_ = 508,                     /* '.'  */
  YYSYMBOL_509_ = 509,                     /* ';'  */
  YYSYMBOL_510_ = 510,                     /* ','  */
  YYSYMBOL_511_ = 511,                     /* ':'  */
  YYSYMBOL_YYACCEPT = 512,                 /* $accept  */
  YYSYMBOL_stmtblock = 513,                /* stmtblock  */
  YYSYMBOL_stmtmulti = 514,                /* stmtmulti  */
  YYSYMBOL_stmt = 515,                     /* stmt  */
  YYSYMBOL_CreateQueueStmt = 516,          /* CreateQueueStmt  */
  YYSYMBOL_OptQueueList = 517,             /* OptQueueList  */
  YYSYMBOL_OptQueueElem = 518,             /* OptQueueElem  */
  YYSYMBOL_AlterQueueStmt = 519,           /* AlterQueueStmt  */
  YYSYMBOL_DropQueueStmt = 520,            /* DropQueueStmt  */
  YYSYMBOL_CreateResourceGroupStmt = 521,  /* CreateResourceGroupStmt  */
  YYSYMBOL_DropResourceGroupStmt = 522,    /* DropResourceGroupStmt  */
  YYSYMBOL_AlterResourceGroupStmt = 523,   /* AlterResourceGroupStmt  */
  YYSYMBOL_OptResourceGroupList = 524,     /* OptResourceGroupList  */
  YYSYMBOL_OptResourceGroupElem = 525,     /* OptResourceGroupElem  */
  YYSYMBOL_CreateRoleStmt = 526,           /* CreateRoleStmt  */
  YYSYMBOL_opt_with = 527,                 /* opt_with  */
  YYSYMBOL_OptRoleList = 528,              /* OptRoleList  */
  YYSYMBOL_AlterOptRoleList = 529,         /* AlterOptRoleList  */
  YYSYMBOL_AlterOnlyOptRoleElem = 530,     /* AlterOnlyOptRoleElem  */
  YYSYMBOL_AlterOptRoleElem = 531,         /* AlterOptRoleElem  */
  YYSYMBOL_CreateOptRoleElem = 532,        /* CreateOptRoleElem  */
  YYSYMBOL_deny_login_role = 533,          /* deny_login_role  */
  YYSYMBOL_deny_interval = 534,            /* deny_interval  */
  YYSYMBOL_deny_day_specifier = 535,       /* deny_day_specifier  */
  YYSYMBOL_deny_point = 536,               /* deny_point  */
  YYSYMBOL_opt_time = 537,                 /* opt_time  */
  YYSYMBOL_exttab_auth_list = 538,         /* exttab_auth_list  */
  YYSYMBOL_keyvalue_list = 539,            /* keyvalue_list  */
  YYSYMBOL_keyvalue_pair = 540,            /* keyvalue_pair  */
  YYSYMBOL_CreateUserStmt = 541,           /* CreateUserStmt  */
  YYSYMBOL_AlterRoleStmt = 542,            /* AlterRoleStmt  */
  YYSYMBOL_opt_in_database = 543,          /* opt_in_database  */
  YYSYMBOL_AlterRoleSetStmt = 544,         /* AlterRoleSetStmt  */
  YYSYMBOL_AlterUserStmt = 545,            /* AlterUserStmt  */
  YYSYMBOL_AlterUserSetStmt = 546,         /* AlterUserSetStmt  */
  YYSYMBOL_DropRoleStmt = 547,             /* DropRoleStmt  */
  YYSYMBOL_DropUserStmt = 548,             /* DropUserStmt  */
  YYSYMBOL_CreateGroupStmt = 549,          /* CreateGroupStmt  */
  YYSYMBOL_AlterGroupStmt = 550,           /* AlterGroupStmt  */
  YYSYMBOL_add_drop = 551,                 /* add_drop  */
  YYSYMBOL_DropGroupStmt = 552,            /* DropGroupStmt  */
  YYSYMBOL_CreateSchemaStmt = 553,         /* CreateSchemaStmt  */
  YYSYMBOL_OptSchemaName = 554,            /* OptSchemaName  */
  YYSYMBOL_OptSchemaEltList = 555,         /* OptSchemaEltList  */
  YYSYMBOL_schema_stmt = 556,              /* schema_stmt  */
  YYSYMBOL_VariableSetStmt = 557,          /* VariableSetStmt  */
  YYSYMBOL_set_rest = 558,                 /* set_rest  */
  YYSYMBOL_generic_set = 559,              /* generic_set  */
  YYSYMBOL_set_rest_more = 560,            /* set_rest_more  */
  YYSYMBOL_var_name = 561,                 /* var_name  */
  YYSYMBOL_var_list = 562,                 /* var_list  */
  YYSYMBOL_var_value = 563,                /* var_value  */
  YYSYMBOL_iso_level = 564,                /* iso_level  */
  YYSYMBOL_opt_boolean_or_string = 565,    /* opt_boolean_or_string  */
  YYSYMBOL_zone_value = 566,               /* zone_value  */
  YYSYMBOL_opt_encoding = 567,             /* opt_encoding  */
  YYSYMBOL_NonReservedWord_or_Sconst = 568, /* NonReservedWord_or_Sconst  */
  YYSYMBOL_VariableResetStmt = 569,        /* VariableResetStmt  */
  YYSYMBOL_reset_rest = 570,               /* reset_rest  */
  YYSYMBOL_generic_reset = 571,            /* generic_reset  */
  YYSYMBOL_SetResetClause = 572,           /* SetResetClause  */
  YYSYMBOL_FunctionSetResetClause = 573,   /* FunctionSetResetClause  */
  YYSYMBOL_VariableShowStmt = 574,         /* VariableShowStmt  */
  YYSYMBOL_ConstraintsSetStmt = 575,       /* ConstraintsSetStmt  */
  YYSYMBOL_constraints_set_list = 576,     /* constraints_set_list  */
  YYSYMBOL_constraints_set_mode = 577,     /* constraints_set_mode  */
  YYSYMBOL_CheckPointStmt = 578,           /* CheckPointStmt  */
  YYSYMBOL_DiscardStmt = 579,              /* DiscardStmt  */
  YYSYMBOL_AlterTableStmt = 580,           /* AlterTableStmt  */
  YYSYMBOL_alter_table_cmds = 581,         /* alter_table_cmds  */
  YYSYMBOL_alter_table_cmd = 582,          /* alter_table_cmd  */
  YYSYMBOL_alter_column_default = 583,     /* alter_column_default  */
  YYSYMBOL_opt_drop_behavior = 584,        /* opt_drop_behavior  */
  YYSYMBOL_opt_collate_clause = 585,       /* opt_collate_clause  */
  YYSYMBOL_alter_using = 586,              /* alter_using  */
  YYSYMBOL_replica_identity = 587,         /* replica_identity  */
  YYSYMBOL_reloptions = 588,               /* reloptions  */
  YYSYMBOL_opt_reloptions = 589,           /* opt_reloptions  */
  YYSYMBOL_reloption_list = 590,           /* reloption_list  */
  YYSYMBOL_reloption_elem = 591,           /* reloption_elem  */
  YYSYMBOL_opt_table_partition_split_into = 592, /* opt_table_partition_split_into  */
  YYSYMBOL_opt_table_partition_exchange_validate = 593, /* opt_table_partition_exchange_validate  */
  YYSYMBOL_alter_table_partition_id_spec = 594, /* alter_table_partition_id_spec  */
  YYSYMBOL_alter_table_partition_id_spec_with_opt_default = 595, /* alter_table_partition_id_spec_with_opt_default  */
  YYSYMBOL_alter_table_partition_cmd = 596, /* alter_table_partition_cmd  */
  YYSYMBOL_AlterCompositeTypeStmt = 597,   /* AlterCompositeTypeStmt  */
  YYSYMBOL_alter_type_cmds = 598,          /* alter_type_cmds  */
  YYSYMBOL_alter_type_cmd = 599,           /* alter_type_cmd  */
  YYSYMBOL_ClosePortalStmt = 600,          /* ClosePortalStmt  */
  YYSYMBOL_CopyStmt = 601,                 /* CopyStmt  */
  YYSYMBOL_copy_from = 602,                /* copy_from  */
  YYSYMBOL_opt_program = 603,              /* opt_program  */
  YYSYMBOL_skip_external_partition = 604,  /* skip_external_partition  */
  YYSYMBOL_copy_file_name = 605,           /* copy_file_name  */
  YYSYMBOL_copy_options = 606,             /* copy_options  */
  YYSYMBOL_copy_opt_list = 607,            /* copy_opt_list  */
  YYSYMBOL_copy_opt_item = 608,            /* copy_opt_item  */
  YYSYMBOL_opt_binary = 609,               /* opt_binary  */
  YYSYMBOL_opt_oids = 610,                 /* opt_oids  */
  YYSYMBOL_copy_delimiter = 611,           /* copy_delimiter  */
  YYSYMBOL_opt_using = 612,                /* opt_using  */
  YYSYMBOL_copy_generic_opt_list = 613,    /* copy_generic_opt_list  */
  YYSYMBOL_copy_generic_opt_elem = 614,    /* copy_generic_opt_elem  */
  YYSYMBOL_copy_generic_opt_arg = 615,     /* copy_generic_opt_arg  */
  YYSYMBOL_copy_generic_opt_arg_list = 616, /* copy_generic_opt_arg_list  */
  YYSYMBOL_copy_generic_opt_arg_list_item = 617, /* copy_generic_opt_arg_list_item  */
  YYSYMBOL_CreateStmt = 618,               /* CreateStmt  */
  YYSYMBOL_OptTemp = 619,                  /* OptTemp  */
  YYSYMBOL_OptTableElementList = 620,      /* OptTableElementList  */
  YYSYMBOL_OptTypedTableElementList = 621, /* OptTypedTableElementList  */
  YYSYMBOL_TableElementList = 622,         /* TableElementList  */
  YYSYMBOL_TypedTableElementList = 623,    /* TypedTableElementList  */
  YYSYMBOL_TableElement = 624,             /* TableElement  */
  YYSYMBOL_TypedTableElement = 625,        /* TypedTableElement  */
  YYSYMBOL_column_reference_storage_directive = 626, /* column_reference_storage_directive  */
  YYSYMBOL_columnDef = 627,                /* columnDef  */
  YYSYMBOL_columnOptions = 628,            /* columnOptions  */
  YYSYMBOL_ColQualList = 629,              /* ColQualList  */
  YYSYMBOL_ColConstraint = 630,            /* ColConstraint  */
  YYSYMBOL_opt_storage_encoding = 631,     /* opt_storage_encoding  */
  YYSYMBOL_ColConstraintElem = 632,        /* ColConstraintElem  */
  YYSYMBOL_ConstraintAttr = 633,           /* ConstraintAttr  */
  YYSYMBOL_TableLikeClause = 634,          /* TableLikeClause  */
  YYSYMBOL_TableLikeOptionList = 635,      /* TableLikeOptionList  */
  YYSYMBOL_TableLikeOption = 636,          /* TableLikeOption  */
  YYSYMBOL_TableConstraint = 637,          /* TableConstraint  */
  YYSYMBOL_ConstraintElem = 638,           /* ConstraintElem  */
  YYSYMBOL_opt_no_inherit = 639,           /* opt_no_inherit  */
  YYSYMBOL_opt_column_list = 640,          /* opt_column_list  */
  YYSYMBOL_columnList = 641,               /* columnList  */
  YYSYMBOL_columnElem = 642,               /* columnElem  */
  YYSYMBOL_distributed_by_list = 643,      /* distributed_by_list  */
  YYSYMBOL_distributed_by_elem = 644,      /* distributed_by_elem  */
  YYSYMBOL_key_match = 645,                /* key_match  */
  YYSYMBOL_ExclusionConstraintList = 646,  /* ExclusionConstraintList  */
  YYSYMBOL_ExclusionConstraintElem = 647,  /* ExclusionConstraintElem  */
  YYSYMBOL_ExclusionWhereClause = 648,     /* ExclusionWhereClause  */
  YYSYMBOL_key_actions = 649,              /* key_actions  */
  YYSYMBOL_key_update = 650,               /* key_update  */
  YYSYMBOL_key_delete = 651,               /* key_delete  */
  YYSYMBOL_key_action = 652,               /* key_action  */
  YYSYMBOL_OptInherit = 653,               /* OptInherit  */
  YYSYMBOL_OptWith = 654,                  /* OptWith  */
  YYSYMBOL_OnCommitOption = 655,           /* OnCommitOption  */
  YYSYMBOL_OptTableSpace = 656,            /* OptTableSpace  */
  YYSYMBOL_OptConsTableSpace = 657,        /* OptConsTableSpace  */
  YYSYMBOL_ExistingIndex = 658,            /* ExistingIndex  */
  YYSYMBOL_optNumsegments = 659,           /* optNumsegments  */
  YYSYMBOL_DistributedBy = 660,            /* DistributedBy  */
  YYSYMBOL_OptDistributedBy = 661,         /* OptDistributedBy  */
  YYSYMBOL_OptTabPartitionColumnEncList = 662, /* OptTabPartitionColumnEncList  */
  YYSYMBOL_TabPartitionColumnEncList = 663, /* TabPartitionColumnEncList  */
  YYSYMBOL_OptTabPartitionStorageAttr = 664, /* OptTabPartitionStorageAttr  */
  YYSYMBOL_OptTabPartitionSpec = 665,      /* OptTabPartitionSpec  */
  YYSYMBOL_OptTabSubPartitionSpec = 666,   /* OptTabSubPartitionSpec  */
  YYSYMBOL_TabPartitionElemList = 667,     /* TabPartitionElemList  */
  YYSYMBOL_TabSubPartitionElemList = 668,  /* TabSubPartitionElemList  */
  YYSYMBOL_tab_part_val_no_paran = 669,    /* tab_part_val_no_paran  */
  YYSYMBOL_tab_part_val = 670,             /* tab_part_val  */
  YYSYMBOL_TabPartitionBoundarySpecValList = 671, /* TabPartitionBoundarySpecValList  */
  YYSYMBOL_OptTabPartitionRangeInclusive = 672, /* OptTabPartitionRangeInclusive  */
  YYSYMBOL_TabPartitionBoundarySpecStart = 673, /* TabPartitionBoundarySpecStart  */
  YYSYMBOL_TabPartitionBoundarySpecEnd = 674, /* TabPartitionBoundarySpecEnd  */
  YYSYMBOL_OptTabPartitionBoundarySpecEvery = 675, /* OptTabPartitionBoundarySpecEvery  */
  YYSYMBOL_OptTabPartitionBoundarySpecEnd = 676, /* OptTabPartitionBoundarySpecEnd  */
  YYSYMBOL_TabPartitionBoundarySpec = 677, /* TabPartitionBoundarySpec  */
  YYSYMBOL_OptTabPartitionBoundarySpec = 678, /* OptTabPartitionBoundarySpec  */
  YYSYMBOL_multi_spec_value_list = 679,    /* multi_spec_value_list  */
  YYSYMBOL_part_values_single = 680,       /* part_values_single  */
  YYSYMBOL_part_values_clause = 681,       /* part_values_clause  */
  YYSYMBOL_part_values_or_spec_list = 682, /* part_values_or_spec_list  */
  YYSYMBOL_TabPartitionElem = 683,         /* TabPartitionElem  */
  YYSYMBOL_TabSubPartitionElem = 684,      /* TabSubPartitionElem  */
  YYSYMBOL_TabPartitionNameDecl = 685,     /* TabPartitionNameDecl  */
  YYSYMBOL_TabPartitionDefaultNameDecl = 686, /* TabPartitionDefaultNameDecl  */
  YYSYMBOL_TabSubPartitionNameDecl = 687,  /* TabSubPartitionNameDecl  */
  YYSYMBOL_TabSubPartitionDefaultNameDecl = 688, /* TabSubPartitionDefaultNameDecl  */
  YYSYMBOL_TabPartitionByType = 689,       /* TabPartitionByType  */
  YYSYMBOL_OptTabPartitionBy = 690,        /* OptTabPartitionBy  */
  YYSYMBOL_TabSubPartitionTemplate = 691,  /* TabSubPartitionTemplate  */
  YYSYMBOL_opt_list_subparts = 692,        /* opt_list_subparts  */
  YYSYMBOL_TabSubPartitionBy = 693,        /* TabSubPartitionBy  */
  YYSYMBOL_TabSubPartition = 694,          /* TabSubPartition  */
  YYSYMBOL_CreateAsStmt = 695,             /* CreateAsStmt  */
  YYSYMBOL_create_as_target = 696,         /* create_as_target  */
  YYSYMBOL_opt_with_data = 697,            /* opt_with_data  */
  YYSYMBOL_CreateExternalStmt = 698,       /* CreateExternalStmt  */
  YYSYMBOL_OptWritable = 699,              /* OptWritable  */
  YYSYMBOL_OptWeb = 700,                   /* OptWeb  */
  YYSYMBOL_ExtTypedesc = 701,              /* ExtTypedesc  */
  YYSYMBOL_ext_on_clause_list = 702,       /* ext_on_clause_list  */
  YYSYMBOL_ext_on_clause_item = 703,       /* ext_on_clause_item  */
  YYSYMBOL_format_opt = 704,               /* format_opt  */
  YYSYMBOL_format_opt_list = 705,          /* format_opt_list  */
  YYSYMBOL_format_def_list = 706,          /* format_def_list  */
  YYSYMBOL_format_def_item = 707,          /* format_def_item  */
  YYSYMBOL_format_opt_item = 708,          /* format_opt_item  */
  YYSYMBOL_ext_options_opt = 709,          /* ext_options_opt  */
  YYSYMBOL_ext_options = 710,              /* ext_options  */
  YYSYMBOL_ext_options_list = 711,         /* ext_options_list  */
  YYSYMBOL_ext_options_item = 712,         /* ext_options_item  */
  YYSYMBOL_OptExtTableElementList = 713,   /* OptExtTableElementList  */
  YYSYMBOL_ExtTableElementList = 714,      /* ExtTableElementList  */
  YYSYMBOL_ExtTableElement = 715,          /* ExtTableElement  */
  YYSYMBOL_ExtcolumnDef = 716,             /* ExtcolumnDef  */
  YYSYMBOL_OptSingleRowErrorHandling = 717, /* OptSingleRowErrorHandling  */
  YYSYMBOL_OptLogErrorTable = 718,         /* OptLogErrorTable  */
  YYSYMBOL_ExtSingleRowErrorHandling = 719, /* ExtSingleRowErrorHandling  */
  YYSYMBOL_ExtLogErrorTable = 720,         /* ExtLogErrorTable  */
  YYSYMBOL_OptSrehLimitType = 721,         /* OptSrehLimitType  */
  YYSYMBOL_ext_opt_encoding_list = 722,    /* ext_opt_encoding_list  */
  YYSYMBOL_ext_opt_encoding_item = 723,    /* ext_opt_encoding_item  */
  YYSYMBOL_CreateMatViewStmt = 724,        /* CreateMatViewStmt  */
  YYSYMBOL_create_mv_target = 725,         /* create_mv_target  */
  YYSYMBOL_OptNoLog = 726,                 /* OptNoLog  */
  YYSYMBOL_RefreshMatViewStmt = 727,       /* RefreshMatViewStmt  */
  YYSYMBOL_CreateSeqStmt = 728,            /* CreateSeqStmt  */
  YYSYMBOL_AlterSeqStmt = 729,             /* AlterSeqStmt  */
  YYSYMBOL_OptSeqOptList = 730,            /* OptSeqOptList  */
  YYSYMBOL_SeqOptList = 731,               /* SeqOptList  */
  YYSYMBOL_SeqOptElem = 732,               /* SeqOptElem  */
  YYSYMBOL_opt_by = 733,                   /* opt_by  */
  YYSYMBOL_NumericOnly = 734,              /* NumericOnly  */
  YYSYMBOL_NumericOnly_list = 735,         /* NumericOnly_list  */
  YYSYMBOL_CreatePLangStmt = 736,          /* CreatePLangStmt  */
  YYSYMBOL_opt_trusted = 737,              /* opt_trusted  */
  YYSYMBOL_handler_name = 738,             /* handler_name  */
  YYSYMBOL_opt_inline_handler = 739,       /* opt_inline_handler  */
  YYSYMBOL_validator_clause = 740,         /* validator_clause  */
  YYSYMBOL_opt_validator = 741,            /* opt_validator  */
  YYSYMBOL_DropPLangStmt = 742,            /* DropPLangStmt  */
  YYSYMBOL_opt_procedural = 743,           /* opt_procedural  */
  YYSYMBOL_CreateTableSpaceStmt = 744,     /* CreateTableSpaceStmt  */
  YYSYMBOL_OptTableSpaceOwner = 745,       /* OptTableSpaceOwner  */
  YYSYMBOL_DropTableSpaceStmt = 746,       /* DropTableSpaceStmt  */
  YYSYMBOL_CreateExtensionStmt = 747,      /* CreateExtensionStmt  */
  YYSYMBOL_create_extension_opt_list = 748, /* create_extension_opt_list  */
  YYSYMBOL_create_extension_opt_item = 749, /* create_extension_opt_item  */
  YYSYMBOL_AlterExtensionStmt = 750,       /* AlterExtensionStmt  */
  YYSYMBOL_alter_extension_opt_list = 751, /* alter_extension_opt_list  */
  YYSYMBOL_alter_extension_opt_item = 752, /* alter_extension_opt_item  */
  YYSYMBOL_AlterExtensionContentsStmt = 753, /* AlterExtensionContentsStmt  */
  YYSYMBOL_CreateFdwStmt = 754,            /* CreateFdwStmt  */
  YYSYMBOL_fdw_option = 755,               /* fdw_option  */
  YYSYMBOL_fdw_options = 756,              /* fdw_options  */
  YYSYMBOL_opt_fdw_options = 757,          /* opt_fdw_options  */
  YYSYMBOL_DropFdwStmt = 758,              /* DropFdwStmt  */
  YYSYMBOL_AlterFdwStmt = 759,             /* AlterFdwStmt  */
  YYSYMBOL_create_generic_options = 760,   /* create_generic_options  */
  YYSYMBOL_generic_option_list = 761,      /* generic_option_list  */
  YYSYMBOL_alter_generic_options = 762,    /* alter_generic_options  */
  YYSYMBOL_alter_generic_option_list = 763, /* alter_generic_option_list  */
  YYSYMBOL_alter_generic_option_elem = 764, /* alter_generic_option_elem  */
  YYSYMBOL_generic_option_elem = 765,      /* generic_option_elem  */
  YYSYMBOL_generic_option_name = 766,      /* generic_option_name  */
  YYSYMBOL_generic_option_arg = 767,       /* generic_option_arg  */
  YYSYMBOL_CreateForeignServerStmt = 768,  /* CreateForeignServerStmt  */
  YYSYMBOL_opt_type = 769,                 /* opt_type  */
  YYSYMBOL_foreign_server_version = 770,   /* foreign_server_version  */
  YYSYMBOL_opt_foreign_server_version = 771, /* opt_foreign_server_version  */
  YYSYMBOL_DropForeignServerStmt = 772,    /* DropForeignServerStmt  */
  YYSYMBOL_AlterForeignServerStmt = 773,   /* AlterForeignServerStmt  */
  YYSYMBOL_CreateForeignTableStmt = 774,   /* CreateForeignTableStmt  */
  YYSYMBOL_AlterForeignTableStmt = 775,    /* AlterForeignTableStmt  */
  YYSYMBOL_CreateUserMappingStmt = 776,    /* CreateUserMappingStmt  */
  YYSYMBOL_auth_ident = 777,               /* auth_ident  */
  YYSYMBOL_DropUserMappingStmt = 778,      /* DropUserMappingStmt  */
  YYSYMBOL_AlterUserMappingStmt = 779,     /* AlterUserMappingStmt  */
  YYSYMBOL_CreateTrigStmt = 780,           /* CreateTrigStmt  */
  YYSYMBOL_TriggerActionTime = 781,        /* TriggerActionTime  */
  YYSYMBOL_TriggerEvents = 782,            /* TriggerEvents  */
  YYSYMBOL_TriggerOneEvent = 783,          /* TriggerOneEvent  */
  YYSYMBOL_TriggerForSpec = 784,           /* TriggerForSpec  */
  YYSYMBOL_TriggerForOptEach = 785,        /* TriggerForOptEach  */
  YYSYMBOL_TriggerForType = 786,           /* TriggerForType  */
  YYSYMBOL_TriggerWhen = 787,              /* TriggerWhen  */
  YYSYMBOL_TriggerFuncArgs = 788,          /* TriggerFuncArgs  */
  YYSYMBOL_TriggerFuncArg = 789,           /* TriggerFuncArg  */
  YYSYMBOL_OptConstrFromTable = 790,       /* OptConstrFromTable  */
  YYSYMBOL_ConstraintAttributeSpec = 791,  /* ConstraintAttributeSpec  */
  YYSYMBOL_ConstraintAttributeElem = 792,  /* ConstraintAttributeElem  */
  YYSYMBOL_DropTrigStmt = 793,             /* DropTrigStmt  */
  YYSYMBOL_CreateEventTrigStmt = 794,      /* CreateEventTrigStmt  */
  YYSYMBOL_event_trigger_when_list = 795,  /* event_trigger_when_list  */
  YYSYMBOL_event_trigger_when_item = 796,  /* event_trigger_when_item  */
  YYSYMBOL_event_trigger_value_list = 797, /* event_trigger_value_list  */
  YYSYMBOL_AlterEventTrigStmt = 798,       /* AlterEventTrigStmt  */
  YYSYMBOL_enable_trigger = 799,           /* enable_trigger  */
  YYSYMBOL_CreateAssertStmt = 800,         /* CreateAssertStmt  */
  YYSYMBOL_DropAssertStmt = 801,           /* DropAssertStmt  */
  YYSYMBOL_DefineStmt = 802,               /* DefineStmt  */
  YYSYMBOL_opt_ordered = 803,              /* opt_ordered  */
  YYSYMBOL_definition = 804,               /* definition  */
  YYSYMBOL_def_list = 805,                 /* def_list  */
  YYSYMBOL_def_elem = 806,                 /* def_elem  */
  YYSYMBOL_def_arg = 807,                  /* def_arg  */
  YYSYMBOL_old_aggr_definition = 808,      /* old_aggr_definition  */
  YYSYMBOL_old_aggr_list = 809,            /* old_aggr_list  */
  YYSYMBOL_old_aggr_elem = 810,            /* old_aggr_elem  */
  YYSYMBOL_opt_enum_val_list = 811,        /* opt_enum_val_list  */
  YYSYMBOL_enum_val_list = 812,            /* enum_val_list  */
  YYSYMBOL_AlterEnumStmt = 813,            /* AlterEnumStmt  */
  YYSYMBOL_opt_if_not_exists = 814,        /* opt_if_not_exists  */
  YYSYMBOL_CreateOpClassStmt = 815,        /* CreateOpClassStmt  */
  YYSYMBOL_opclass_item_list = 816,        /* opclass_item_list  */
  YYSYMBOL_opclass_item = 817,             /* opclass_item  */
  YYSYMBOL_opt_default = 818,              /* opt_default  */
  YYSYMBOL_opt_opfamily = 819,             /* opt_opfamily  */
  YYSYMBOL_opclass_purpose = 820,          /* opclass_purpose  */
  YYSYMBOL_opt_recheck = 821,              /* opt_recheck  */
  YYSYMBOL_CreateOpFamilyStmt = 822,       /* CreateOpFamilyStmt  */
  YYSYMBOL_AlterOpFamilyStmt = 823,        /* AlterOpFamilyStmt  */
  YYSYMBOL_opclass_drop_list = 824,        /* opclass_drop_list  */
  YYSYMBOL_opclass_drop = 825,             /* opclass_drop  */
  YYSYMBOL_DropOpClassStmt = 826,          /* DropOpClassStmt  */
  YYSYMBOL_DropOpFamilyStmt = 827,         /* DropOpFamilyStmt  */
  YYSYMBOL_DropOwnedStmt = 828,            /* DropOwnedStmt  */
  YYSYMBOL_ReassignOwnedStmt = 829,        /* ReassignOwnedStmt  */
  YYSYMBOL_DropStmt = 830,                 /* DropStmt  */
  YYSYMBOL_drop_type = 831,                /* drop_type  */
  YYSYMBOL_any_name_list = 832,            /* any_name_list  */
  YYSYMBOL_any_name = 833,                 /* any_name  */
  YYSYMBOL_attrs = 834,                    /* attrs  */
  YYSYMBOL_TruncateStmt = 835,             /* TruncateStmt  */
  YYSYMBOL_opt_restart_seqs = 836,         /* opt_restart_seqs  */
  YYSYMBOL_CommentStmt = 837,              /* CommentStmt  */
  YYSYMBOL_comment_type = 838,             /* comment_type  */
  YYSYMBOL_comment_text = 839,             /* comment_text  */
  YYSYMBOL_SecLabelStmt = 840,             /* SecLabelStmt  */
  YYSYMBOL_opt_provider = 841,             /* opt_provider  */
  YYSYMBOL_security_label_type = 842,      /* security_label_type  */
  YYSYMBOL_security_label = 843,           /* security_label  */
  YYSYMBOL_FetchStmt = 844,                /* FetchStmt  */
  YYSYMBOL_fetch_args = 845,               /* fetch_args  */
  YYSYMBOL_from_in = 846,                  /* from_in  */
  YYSYMBOL_opt_from_in = 847,              /* opt_from_in  */
  YYSYMBOL_GrantStmt = 848,                /* GrantStmt  */
  YYSYMBOL_RevokeStmt = 849,               /* RevokeStmt  */
  YYSYMBOL_privileges = 850,               /* privileges  */
  YYSYMBOL_privilege_list = 851,           /* privilege_list  */
  YYSYMBOL_privilege = 852,                /* privilege  */
  YYSYMBOL_privilege_target = 853,         /* privilege_target  */
  YYSYMBOL_grantee_list = 854,             /* grantee_list  */
  YYSYMBOL_grantee = 855,                  /* grantee  */
  YYSYMBOL_opt_grant_grant_option = 856,   /* opt_grant_grant_option  */
  YYSYMBOL_function_with_argtypes_list = 857, /* function_with_argtypes_list  */
  YYSYMBOL_function_with_argtypes = 858,   /* function_with_argtypes  */
  YYSYMBOL_GrantRoleStmt = 859,            /* GrantRoleStmt  */
  YYSYMBOL_RevokeRoleStmt = 860,           /* RevokeRoleStmt  */
  YYSYMBOL_opt_grant_admin_option = 861,   /* opt_grant_admin_option  */
  YYSYMBOL_opt_granted_by = 862,           /* opt_granted_by  */
  YYSYMBOL_AlterDefaultPrivilegesStmt = 863, /* AlterDefaultPrivilegesStmt  */
  YYSYMBOL_DefACLOptionList = 864,         /* DefACLOptionList  */
  YYSYMBOL_DefACLOption = 865,             /* DefACLOption  */
  YYSYMBOL_DefACLAction = 866,             /* DefACLAction  */
  YYSYMBOL_defacl_privilege_target = 867,  /* defacl_privilege_target  */
  YYSYMBOL_IndexStmt = 868,                /* IndexStmt  */
  YYSYMBOL_opt_unique = 869,               /* opt_unique  */
  YYSYMBOL_opt_concurrently = 870,         /* opt_concurrently  */
  YYSYMBOL_opt_index_name = 871,           /* opt_index_name  */
  YYSYMBOL_access_method_clause = 872,     /* access_method_clause  */
  YYSYMBOL_index_params = 873,             /* index_params  */
  YYSYMBOL_index_elem = 874,               /* index_elem  */
  YYSYMBOL_opt_collate = 875,              /* opt_collate  */
  YYSYMBOL_opt_class = 876,                /* opt_class  */
  YYSYMBOL_opt_asc_desc = 877,             /* opt_asc_desc  */
  YYSYMBOL_opt_nulls_order = 878,          /* opt_nulls_order  */
  YYSYMBOL_CreateFunctionStmt = 879,       /* CreateFunctionStmt  */
  YYSYMBOL_opt_or_replace = 880,           /* opt_or_replace  */
  YYSYMBOL_func_args = 881,                /* func_args  */
  YYSYMBOL_func_args_list = 882,           /* func_args_list  */
  YYSYMBOL_func_args_with_defaults = 883,  /* func_args_with_defaults  */
  YYSYMBOL_func_args_with_defaults_list = 884, /* func_args_with_defaults_list  */
  YYSYMBOL_func_arg = 885,                 /* func_arg  */
  YYSYMBOL_arg_class = 886,                /* arg_class  */
  YYSYMBOL_param_name = 887,               /* param_name  */
  YYSYMBOL_func_return = 888,              /* func_return  */
  YYSYMBOL_func_type = 889,                /* func_type  */
  YYSYMBOL_func_arg_with_default = 890,    /* func_arg_with_default  */
  YYSYMBOL_aggr_arg = 891,                 /* aggr_arg  */
  YYSYMBOL_aggr_args = 892,                /* aggr_args  */
  YYSYMBOL_aggr_args_list = 893,           /* aggr_args_list  */
  YYSYMBOL_createfunc_opt_list = 894,      /* createfunc_opt_list  */
  YYSYMBOL_common_func_opt_item = 895,     /* common_func_opt_item  */
  YYSYMBOL_createfunc_opt_item = 896,      /* createfunc_opt_item  */
  YYSYMBOL_func_as = 897,                  /* func_as  */
  YYSYMBOL_opt_definition = 898,           /* opt_definition  */
  YYSYMBOL_table_func_column = 899,        /* table_func_column  */
  YYSYMBOL_table_func_column_list = 900,   /* table_func_column_list  */
  YYSYMBOL_AlterFunctionStmt = 901,        /* AlterFunctionStmt  */
  YYSYMBOL_alterfunc_opt_list = 902,       /* alterfunc_opt_list  */
  YYSYMBOL_opt_restrict = 903,             /* opt_restrict  */
  YYSYMBOL_RemoveFuncStmt = 904,           /* RemoveFuncStmt  */
  YYSYMBOL_RemoveAggrStmt = 905,           /* RemoveAggrStmt  */
  YYSYMBOL_RemoveOperStmt = 906,           /* RemoveOperStmt  */
  YYSYMBOL_oper_argtypes = 907,            /* oper_argtypes  */
  YYSYMBOL_any_operator = 908,             /* any_operator  */
  YYSYMBOL_DoStmt = 909,                   /* DoStmt  */
  YYSYMBOL_dostmt_opt_list = 910,          /* dostmt_opt_list  */
  YYSYMBOL_dostmt_opt_item = 911,          /* dostmt_opt_item  */
  YYSYMBOL_CreateCastStmt = 912,           /* CreateCastStmt  */
  YYSYMBOL_cast_context = 913,             /* cast_context  */
  YYSYMBOL_DropCastStmt = 914,             /* DropCastStmt  */
  YYSYMBOL_opt_if_exists = 915,            /* opt_if_exists  */
  YYSYMBOL_ReindexStmt = 916,              /* ReindexStmt  */
  YYSYMBOL_reindex_type = 917,             /* reindex_type  */
  YYSYMBOL_opt_force = 918,                /* opt_force  */
  YYSYMBOL_AlterTypeStmt = 919,            /* AlterTypeStmt  */
  YYSYMBOL_AlterTblSpcStmt = 920,          /* AlterTblSpcStmt  */
  YYSYMBOL_RenameStmt = 921,               /* RenameStmt  */
  YYSYMBOL_opt_column = 922,               /* opt_column  */
  YYSYMBOL_opt_set_data = 923,             /* opt_set_data  */
  YYSYMBOL_AlterObjectSchemaStmt = 924,    /* AlterObjectSchemaStmt  */
  YYSYMBOL_AlterOwnerStmt = 925,           /* AlterOwnerStmt  */
  YYSYMBOL_RuleStmt = 926,                 /* RuleStmt  */
  YYSYMBOL_RuleActionList = 927,           /* RuleActionList  */
  YYSYMBOL_RuleActionMulti = 928,          /* RuleActionMulti  */
  YYSYMBOL_RuleActionStmt = 929,           /* RuleActionStmt  */
  YYSYMBOL_RuleActionStmtOrEmpty = 930,    /* RuleActionStmtOrEmpty  */
  YYSYMBOL_event = 931,                    /* event  */
  YYSYMBOL_opt_instead = 932,              /* opt_instead  */
  YYSYMBOL_DropRuleStmt = 933,             /* DropRuleStmt  */
  YYSYMBOL_NotifyStmt = 934,               /* NotifyStmt  */
  YYSYMBOL_notify_payload = 935,           /* notify_payload  */
  YYSYMBOL_ListenStmt = 936,               /* ListenStmt  */
  YYSYMBOL_UnlistenStmt = 937,             /* UnlistenStmt  */
  YYSYMBOL_TransactionStmt = 938,          /* TransactionStmt  */
  YYSYMBOL_opt_transaction = 939,          /* opt_transaction  */
  YYSYMBOL_transaction_mode_item = 940,    /* transaction_mode_item  */
  YYSYMBOL_transaction_mode_list = 941,    /* transaction_mode_list  */
  YYSYMBOL_transaction_mode_list_or_empty = 942, /* transaction_mode_list_or_empty  */
  YYSYMBOL_ViewStmt = 943,                 /* ViewStmt  */
  YYSYMBOL_opt_check_option = 944,         /* opt_check_option  */
  YYSYMBOL_LoadStmt = 945,                 /* LoadStmt  */
  YYSYMBOL_CreatedbStmt = 946,             /* CreatedbStmt  */
  YYSYMBOL_createdb_opt_list = 947,        /* createdb_opt_list  */
  YYSYMBOL_createdb_opt_item = 948,        /* createdb_opt_item  */
  YYSYMBOL_opt_equal = 949,                /* opt_equal  */
  YYSYMBOL_AlterDatabaseStmt = 950,        /* AlterDatabaseStmt  */
  YYSYMBOL_AlterDatabaseSetStmt = 951,     /* AlterDatabaseSetStmt  */
  YYSYMBOL_alterdb_opt_list = 952,         /* alterdb_opt_list  */
  YYSYMBOL_alterdb_opt_item = 953,         /* alterdb_opt_item  */
  YYSYMBOL_DropdbStmt = 954,               /* DropdbStmt  */
  YYSYMBOL_AlterSystemStmt = 955,          /* AlterSystemStmt  */
  YYSYMBOL_CreateDomainStmt = 956,         /* CreateDomainStmt  */
  YYSYMBOL_AlterDomainStmt = 957,          /* AlterDomainStmt  */
  YYSYMBOL_opt_as = 958,                   /* opt_as  */
  YYSYMBOL_AlterTSDictionaryStmt = 959,    /* AlterTSDictionaryStmt  */
  YYSYMBOL_AlterTSConfigurationStmt = 960, /* AlterTSConfigurationStmt  */
  YYSYMBOL_CreateConversionStmt = 961,     /* CreateConversionStmt  */
  YYSYMBOL_ClusterStmt = 962,              /* ClusterStmt  */
  YYSYMBOL_cluster_index_specification = 963, /* cluster_index_specification  */
  YYSYMBOL_VacuumStmt = 964,               /* VacuumStmt  */
  YYSYMBOL_vacuum_option_list = 965,       /* vacuum_option_list  */
  YYSYMBOL_vacuum_option_elem = 966,       /* vacuum_option_elem  */
  YYSYMBOL_AnalyzeStmt = 967,              /* AnalyzeStmt  */
  YYSYMBOL_analyze_keyword = 968,          /* analyze_keyword  */
  YYSYMBOL_opt_verbose = 969,              /* opt_verbose  */
  YYSYMBOL_opt_rootonly_all = 970,         /* opt_rootonly_all  */
  YYSYMBOL_opt_full = 971,                 /* opt_full  */
  YYSYMBOL_opt_freeze = 972,               /* opt_freeze  */
  YYSYMBOL_opt_name_list = 973,            /* opt_name_list  */
  YYSYMBOL_ExplainStmt = 974,              /* ExplainStmt  */
  YYSYMBOL_ExplainableStmt = 975,          /* ExplainableStmt  */
  YYSYMBOL_opt_dxl = 976,                  /* opt_dxl  */
  YYSYMBOL_explain_option_list = 977,      /* explain_option_list  */
  YYSYMBOL_explain_option_elem = 978,      /* explain_option_elem  */
  YYSYMBOL_explain_option_name = 979,      /* explain_option_name  */
  YYSYMBOL_explain_option_arg = 980,       /* explain_option_arg  */
  YYSYMBOL_PrepareStmt = 981,              /* PrepareStmt  */
  YYSYMBOL_prep_type_clause = 982,         /* prep_type_clause  */
  YYSYMBOL_PreparableStmt = 983,           /* PreparableStmt  */
  YYSYMBOL_ExecuteStmt = 984,              /* ExecuteStmt  */
  YYSYMBOL_execute_param_clause = 985,     /* execute_param_clause  */
  YYSYMBOL_DeallocateStmt = 986,           /* DeallocateStmt  */
  YYSYMBOL_cdb_string_list = 987,          /* cdb_string_list  */
  YYSYMBOL_cdb_string = 988,               /* cdb_string  */
  YYSYMBOL_InsertStmt = 989,               /* InsertStmt  */
  YYSYMBOL_insert_rest = 990,              /* insert_rest  */
  YYSYMBOL_insert_column_list = 991,       /* insert_column_list  */
  YYSYMBOL_insert_column_item = 992,       /* insert_column_item  */
  YYSYMBOL_returning_clause = 993,         /* returning_clause  */
  YYSYMBOL_DeleteStmt = 994,               /* DeleteStmt  */
  YYSYMBOL_using_clause = 995,             /* using_clause  */
  YYSYMBOL_LockStmt = 996,                 /* LockStmt  */
  YYSYMBOL_opt_lock = 997,                 /* opt_lock  */
  YYSYMBOL_lock_type = 998,                /* lock_type  */
  YYSYMBOL_opt_nowait = 999,               /* opt_nowait  */
  YYSYMBOL_opt_masteronly = 1000,          /* opt_masteronly  */
  YYSYMBOL_UpdateStmt = 1001,              /* UpdateStmt  */
  YYSYMBOL_set_clause_list = 1002,         /* set_clause_list  */
  YYSYMBOL_set_clause = 1003,              /* set_clause  */
  YYSYMBOL_single_set_clause = 1004,       /* single_set_clause  */
  YYSYMBOL_multiple_set_clause = 1005,     /* multiple_set_clause  */
  YYSYMBOL_set_target = 1006,              /* set_target  */
  YYSYMBOL_set_target_list = 1007,         /* set_target_list  */
  YYSYMBOL_DeclareCursorStmt = 1008,       /* DeclareCursorStmt  */
  YYSYMBOL_cursor_name = 1009,             /* cursor_name  */
  YYSYMBOL_cursor_options = 1010,          /* cursor_options  */
  YYSYMBOL_opt_hold = 1011,                /* opt_hold  */
  YYSYMBOL_SelectStmt = 1012,              /* SelectStmt  */
  YYSYMBOL_RetrieveStmt = 1013,            /* RetrieveStmt  */
  YYSYMBOL_select_with_parens = 1014,      /* select_with_parens  */
  YYSYMBOL_select_no_parens = 1015,        /* select_no_parens  */
  YYSYMBOL_select_clause = 1016,           /* select_clause  */
  YYSYMBOL_simple_select = 1017,           /* simple_select  */
  YYSYMBOL_with_clause = 1018,             /* with_clause  */
  YYSYMBOL_cte_list = 1019,                /* cte_list  */
  YYSYMBOL_common_table_expr = 1020,       /* common_table_expr  */
  YYSYMBOL_opt_with_clause = 1021,         /* opt_with_clause  */
  YYSYMBOL_into_clause = 1022,             /* into_clause  */
  YYSYMBOL_OptTempTableName = 1023,        /* OptTempTableName  */
  YYSYMBOL_opt_table = 1024,               /* opt_table  */
  YYSYMBOL_opt_all = 1025,                 /* opt_all  */
  YYSYMBOL_opt_distinct = 1026,            /* opt_distinct  */
  YYSYMBOL_opt_sort_clause = 1027,         /* opt_sort_clause  */
  YYSYMBOL_sort_clause = 1028,             /* sort_clause  */
  YYSYMBOL_sortby_list = 1029,             /* sortby_list  */
  YYSYMBOL_sortby = 1030,                  /* sortby  */
  YYSYMBOL_select_limit = 1031,            /* select_limit  */
  YYSYMBOL_opt_select_limit = 1032,        /* opt_select_limit  */
  YYSYMBOL_limit_clause = 1033,            /* limit_clause  */
  YYSYMBOL_offset_clause = 1034,           /* offset_clause  */
  YYSYMBOL_select_limit_value = 1035,      /* select_limit_value  */
  YYSYMBOL_select_offset_value = 1036,     /* select_offset_value  */
  YYSYMBOL_select_fetch_first_value = 1037, /* select_fetch_first_value  */
  YYSYMBOL_I_or_F_const = 1038,            /* I_or_F_const  */
  YYSYMBOL_row_or_rows = 1039,             /* row_or_rows  */
  YYSYMBOL_first_or_next = 1040,           /* first_or_next  */
  YYSYMBOL_group_clause = 1041,            /* group_clause  */
  YYSYMBOL_group_elem_list = 1042,         /* group_elem_list  */
  YYSYMBOL_group_elem = 1043,              /* group_elem  */
  YYSYMBOL_having_clause = 1044,           /* having_clause  */
  YYSYMBOL_for_locking_clause = 1045,      /* for_locking_clause  */
  YYSYMBOL_opt_for_locking_clause = 1046,  /* opt_for_locking_clause  */
  YYSYMBOL_for_locking_items = 1047,       /* for_locking_items  */
  YYSYMBOL_for_locking_item = 1048,        /* for_locking_item  */
  YYSYMBOL_for_locking_strength = 1049,    /* for_locking_strength  */
  YYSYMBOL_locked_rels_list = 1050,        /* locked_rels_list  */
  YYSYMBOL_values_clause = 1051,           /* values_clause  */
  YYSYMBOL_from_clause = 1052,             /* from_clause  */
  YYSYMBOL_from_list = 1053,               /* from_list  */
  YYSYMBOL_table_ref = 1054,               /* table_ref  */
  YYSYMBOL_joined_table = 1055,            /* joined_table  */
  YYSYMBOL_alias_clause = 1056,            /* alias_clause  */
  YYSYMBOL_opt_alias_clause = 1057,        /* opt_alias_clause  */
  YYSYMBOL_func_alias_clause = 1058,       /* func_alias_clause  */
  YYSYMBOL_join_type = 1059,               /* join_type  */
  YYSYMBOL_join_outer = 1060,              /* join_outer  */
  YYSYMBOL_join_qual = 1061,               /* join_qual  */
  YYSYMBOL_relation_expr = 1062,           /* relation_expr  */
  YYSYMBOL_relation_expr_list = 1063,      /* relation_expr_list  */
  YYSYMBOL_relation_expr_opt_alias = 1064, /* relation_expr_opt_alias  */
  YYSYMBOL_func_table = 1065,              /* func_table  */
  YYSYMBOL_rowsfrom_item = 1066,           /* rowsfrom_item  */
  YYSYMBOL_rowsfrom_list = 1067,           /* rowsfrom_list  */
  YYSYMBOL_opt_col_def_list = 1068,        /* opt_col_def_list  */
  YYSYMBOL_opt_ordinality = 1069,          /* opt_ordinality  */
  YYSYMBOL_where_clause = 1070,            /* where_clause  */
  YYSYMBOL_where_or_current_clause = 1071, /* where_or_current_clause  */
  YYSYMBOL_OptTableFuncElementList = 1072, /* OptTableFuncElementList  */
  YYSYMBOL_TableFuncElementList = 1073,    /* TableFuncElementList  */
  YYSYMBOL_TableFuncElement = 1074,        /* TableFuncElement  */
  YYSYMBOL_Typename = 1075,                /* Typename  */
  YYSYMBOL_NestedTypename = 1076,          /* NestedTypename  */
  YYSYMBOL_opt_array_bounds = 1077,        /* opt_array_bounds  */
  YYSYMBOL_SimpleTypename = 1078,          /* SimpleTypename  */
  YYSYMBOL_ConstTypename = 1079,           /* ConstTypename  */
  YYSYMBOL_GenericType = 1080,             /* GenericType  */
  YYSYMBOL_opt_type_modifiers = 1081,      /* opt_type_modifiers  */
  YYSYMBOL_Numeric = 1082,                 /* Numeric  */
  YYSYMBOL_opt_float = 1083,               /* opt_float  */
  YYSYMBOL_Bit = 1084,                     /* Bit  */
  YYSYMBOL_ConstBit = 1085,                /* ConstBit  */
  YYSYMBOL_BitWithLength = 1086,           /* BitWithLength  */
  YYSYMBOL_BitWithoutLength = 1087,        /* BitWithoutLength  */
  YYSYMBOL_Character = 1088,               /* Character  */
  YYSYMBOL_ConstCharacter = 1089,          /* ConstCharacter  */
  YYSYMBOL_CharacterWithLength = 1090,     /* CharacterWithLength  */
  YYSYMBOL_CharacterWithoutLength = 1091,  /* CharacterWithoutLength  */
  YYSYMBOL_character = 1092,               /* character  */
  YYSYMBOL_opt_varying = 1093,             /* opt_varying  */
  YYSYMBOL_opt_charset = 1094,             /* opt_charset  */
  YYSYMBOL_ConstDatetime = 1095,           /* ConstDatetime  */
  YYSYMBOL_ConstInterval = 1096,           /* ConstInterval  */
  YYSYMBOL_opt_timezone = 1097,            /* opt_timezone  */
  YYSYMBOL_opt_interval = 1098,            /* opt_interval  */
  YYSYMBOL_interval_second = 1099,         /* interval_second  */
  YYSYMBOL_a_expr = 1100,                  /* a_expr  */
  YYSYMBOL_b_expr = 1101,                  /* b_expr  */
  YYSYMBOL_c_expr = 1102,                  /* c_expr  */
  YYSYMBOL_scatter_clause = 1103,          /* scatter_clause  */
  YYSYMBOL_table_value_select_clause = 1104, /* table_value_select_clause  */
  YYSYMBOL_func_application = 1105,        /* func_application  */
  YYSYMBOL_func_expr = 1106,               /* func_expr  */
  YYSYMBOL_func_expr_windowless = 1107,    /* func_expr_windowless  */
  YYSYMBOL_func_expr_common_subexpr = 1108, /* func_expr_common_subexpr  */
  YYSYMBOL_xml_root_version = 1109,        /* xml_root_version  */
  YYSYMBOL_opt_xml_root_standalone = 1110, /* opt_xml_root_standalone  */
  YYSYMBOL_xml_attributes = 1111,          /* xml_attributes  */
  YYSYMBOL_xml_attribute_list = 1112,      /* xml_attribute_list  */
  YYSYMBOL_xml_attribute_el = 1113,        /* xml_attribute_el  */
  YYSYMBOL_document_or_content = 1114,     /* document_or_content  */
  YYSYMBOL_xml_whitespace_option = 1115,   /* xml_whitespace_option  */
  YYSYMBOL_xmlexists_argument = 1116,      /* xmlexists_argument  */
  YYSYMBOL_within_group_clause = 1117,     /* within_group_clause  */
  YYSYMBOL_filter_clause = 1118,           /* filter_clause  */
  YYSYMBOL_window_clause = 1119,           /* window_clause  */
  YYSYMBOL_window_definition_list = 1120,  /* window_definition_list  */
  YYSYMBOL_window_definition = 1121,       /* window_definition  */
  YYSYMBOL_over_clause = 1122,             /* over_clause  */
  YYSYMBOL_window_specification = 1123,    /* window_specification  */
  YYSYMBOL_opt_existing_window_name = 1124, /* opt_existing_window_name  */
  YYSYMBOL_opt_partition_clause = 1125,    /* opt_partition_clause  */
  YYSYMBOL_opt_frame_clause = 1126,        /* opt_frame_clause  */
  YYSYMBOL_frame_extent = 1127,            /* frame_extent  */
  YYSYMBOL_frame_bound = 1128,             /* frame_bound  */
  YYSYMBOL_window_frame_exclusion = 1129,  /* window_frame_exclusion  */
  YYSYMBOL_row = 1130,                     /* row  */
  YYSYMBOL_sub_type = 1131,                /* sub_type  */
  YYSYMBOL_all_Op = 1132,                  /* all_Op  */
  YYSYMBOL_MathOp = 1133,                  /* MathOp  */
  YYSYMBOL_qual_Op = 1134,                 /* qual_Op  */
  YYSYMBOL_qual_all_Op = 1135,             /* qual_all_Op  */
  YYSYMBOL_subquery_Op = 1136,             /* subquery_Op  */
  YYSYMBOL_expr_list = 1137,               /* expr_list  */
  YYSYMBOL_func_arg_list = 1138,           /* func_arg_list  */
  YYSYMBOL_func_arg_expr = 1139,           /* func_arg_expr  */
  YYSYMBOL_type_list = 1140,               /* type_list  */
  YYSYMBOL_nested_type_list = 1141,        /* nested_type_list  */
  YYSYMBOL_array_expr = 1142,              /* array_expr  */
  YYSYMBOL_array_expr_list = 1143,         /* array_expr_list  */
  YYSYMBOL_extract_list = 1144,            /* extract_list  */
  YYSYMBOL_extract_arg = 1145,             /* extract_arg  */
  YYSYMBOL_overlay_list = 1146,            /* overlay_list  */
  YYSYMBOL_overlay_placing = 1147,         /* overlay_placing  */
  YYSYMBOL_position_list = 1148,           /* position_list  */
  YYSYMBOL_substr_list = 1149,             /* substr_list  */
  YYSYMBOL_substr_from = 1150,             /* substr_from  */
  YYSYMBOL_substr_for = 1151,              /* substr_for  */
  YYSYMBOL_trim_list = 1152,               /* trim_list  */
  YYSYMBOL_in_expr = 1153,                 /* in_expr  */
  YYSYMBOL_case_expr = 1154,               /* case_expr  */
  YYSYMBOL_when_clause_list = 1155,        /* when_clause_list  */
  YYSYMBOL_when_clause = 1156,             /* when_clause  */
  YYSYMBOL_when_operand = 1157,            /* when_operand  */
  YYSYMBOL_case_default = 1158,            /* case_default  */
  YYSYMBOL_case_arg = 1159,                /* case_arg  */
  YYSYMBOL_decode_expr = 1160,             /* decode_expr  */
  YYSYMBOL_search_result_list = 1161,      /* search_result_list  */
  YYSYMBOL_search_result = 1162,           /* search_result  */
  YYSYMBOL_decode_default = 1163,          /* decode_default  */
  YYSYMBOL_columnref = 1164,               /* columnref  */
  YYSYMBOL_indirection_el = 1165,          /* indirection_el  */
  YYSYMBOL_indirection = 1166,             /* indirection  */
  YYSYMBOL_opt_indirection = 1167,         /* opt_indirection  */
  YYSYMBOL_opt_asymmetric = 1168,          /* opt_asymmetric  */
  YYSYMBOL_ctext_expr = 1169,              /* ctext_expr  */
  YYSYMBOL_ctext_expr_list = 1170,         /* ctext_expr_list  */
  YYSYMBOL_ctext_row = 1171,               /* ctext_row  */
  YYSYMBOL_opt_target_list = 1172,         /* opt_target_list  */
  YYSYMBOL_target_list = 1173,             /* target_list  */
  YYSYMBOL_target_el = 1174,               /* target_el  */
  YYSYMBOL_qualified_name_list = 1175,     /* qualified_name_list  */
  YYSYMBOL_qualified_name = 1176,          /* qualified_name  */
  YYSYMBOL_name_list = 1177,               /* name_list  */
  YYSYMBOL_name = 1178,                    /* name  */
  YYSYMBOL_database_name = 1179,           /* database_name  */
  YYSYMBOL_access_method = 1180,           /* access_method  */
  YYSYMBOL_attr_name = 1181,               /* attr_name  */
  YYSYMBOL_index_name = 1182,              /* index_name  */
  YYSYMBOL_file_name = 1183,               /* file_name  */
  YYSYMBOL_func_name = 1184,               /* func_name  */
  YYSYMBOL_AexprConst = 1185,              /* AexprConst  */
  YYSYMBOL_Iconst = 1186,                  /* Iconst  */
  YYSYMBOL_Sconst = 1187,                  /* Sconst  */
  YYSYMBOL_RoleId = 1188,                  /* RoleId  */
  YYSYMBOL_QueueId = 1189,                 /* QueueId  */
  YYSYMBOL_role_list = 1190,               /* role_list  */
  YYSYMBOL_SignedIconst = 1191,            /* SignedIconst  */
  YYSYMBOL_ColId = 1192,                   /* ColId  */
  YYSYMBOL_type_function_name = 1193,      /* type_function_name  */
  YYSYMBOL_NonReservedWord = 1194,         /* NonReservedWord  */
  YYSYMBOL_ColLabel = 1195,                /* ColLabel  */
  YYSYMBOL_unreserved_keyword = 1196,      /* unreserved_keyword  */
  YYSYMBOL_ColLabelNoAs = 1197,            /* ColLabelNoAs  */
  YYSYMBOL_keywords_ok_in_alias_no_as = 1198, /* keywords_ok_in_alias_no_as  */
  YYSYMBOL_PartitionColId = 1199,          /* PartitionColId  */
  YYSYMBOL_PartitionIdentKeyword = 1200,   /* PartitionIdentKeyword  */
  YYSYMBOL_col_name_keyword = 1201,        /* col_name_keyword  */
  YYSYMBOL_type_func_name_keyword = 1202,  /* type_func_name_keyword  */
  YYSYMBOL_reserved_keyword = 1203         /* reserved_keyword  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;




#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE) \
             + YYSIZEOF (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  813
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   106709

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  512
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  692
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3046
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5657

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   749


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   501,     2,     2,
     506,   507,   499,   497,   510,   498,   508,   500,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   511,   509,
     494,   493,   495,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   504,     2,   505,   502,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   496,   503
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  1134,  1134,  1141,  1148,  1158,  1159,  1160,  1161,  1162,
    1163,  1164,  1165,  1166,  1167,  1168,  1169,  1170,  1171,  1172,
    1173,  1174,  1175,  1176,  1177,  1178,  1179,  1180,  1181,  1182,
    1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,
    1203,  1204,  1205,  1206,  1207,  1208,  1209,  1210,  1211,  1212,
    1213,  1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,
    1223,  1224,  1225,  1226,  1227,  1228,  1229,  1230,  1231,  1232,
    1233,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1242,
    1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1252,
    1253,  1254,  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1262,
    1263,  1264,  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1272,
    1273,  1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,  1282,
    1284,  1294,  1304,  1320,  1321,  1325,  1330,  1335,  1340,  1345,
    1359,  1366,  1380,  1394,  1418,  1433,  1449,  1463,  1475,  1479,
    1484,  1488,  1492,  1496,  1500,  1513,  1524,  1525,  1534,  1535,
    1539,  1540,  1550,  1551,  1555,  1560,  1564,  1569,  1574,  1578,
    1582,  1586,  1590,  1594,  1598,  1603,  1607,  1611,  1665,  1667,
    1671,  1675,  1679,  1683,  1689,  1690,  1693,  1702,  1703,  1706,
    1715,  1716,  1720,  1721,  1725,  1726,  1730,  1744,  1762,  1773,
    1774,  1778,  1786,  1804,  1816,  1824,  1845,  1852,  1871,  1878,
    1895,  1913,  1924,  1925,  1937,  1944,  1961,  1974,  1984,  2002,
    2020,  2021,  2025,  2032,  2040,  2041,  2042,  2043,  2044,  2045,
    2059,  2065,  2071,  2080,  2088,  2096,  2100,  2108,  2116,  2123,
    2133,  2134,  2142,  2153,  2161,  2169,  2180,  2188,  2196,  2203,
    2212,  2222,  2223,  2227,  2228,  2231,  2233,  2237,  2238,  2239,
    2240,  2244,  2245,  2246,  2252,  2264,  2268,  2272,  2287,  2310,
    2311,  2312,  2316,  2317,  2318,  2322,  2323,  2327,  2331,  2332,
    2339,  2346,  2356,  2363,  2373,  2374,  2379,  2380,  2385,  2391,
    2397,  2403,  2409,  2419,  2429,  2430,  2434,  2435,  2443,  2458,
    2464,  2470,  2476,  2482,  2501,  2510,  2519,  2527,  2538,  2549,
    2558,  2567,  2578,  2589,  2598,  2607,  2616,  2625,  2634,  2643,
    2654,  2668,  2669,  2674,  2682,  2690,  2702,  2710,  2718,  2727,
    2736,  2745,  2754,  2764,  2777,  2792,  2801,  2809,  2824,  2832,
    2842,  2852,  2859,  2866,  2874,  2882,  2890,  2898,  2906,  2913,
    2920,  2928,  2935,  2942,  2950,  2958,  2966,  2974,  2982,  2991,
    2999,  3007,  3014,  3019,  3026,  3033,  3043,  3050,  3058,  3066,
    3074,  3082,  3089,  3099,  3100,  3104,  3105,  3106,  3110,  3118,
    3122,  3123,  3127,  3134,  3141,  3148,  3158,  3161,  3162,  3166,
    3167,  3172,  3186,  3199,  3204,  3211,  3223,  3227,  3228,  3229,
    3233,  3241,  3272,  3311,  3316,  3322,  3333,  3365,  3397,  3430,
    3450,  3476,  3506,  3532,  3561,  3580,  3595,  3658,  3673,  3695,
    3717,  3753,  3766,  3767,  3772,  3781,  3791,  3801,  3827,  3833,
    3863,  3915,  3954,  3955,  3959,  3960,  3964,  3965,  3974,  3975,
    3976,  3979,  3980,  3985,  3986,  3990,  3994,  3998,  4002,  4006,
    4010,  4014,  4018,  4022,  4026,  4030,  4034,  4038,  4042,  4046,
    4050,  4054,  4063,  4067,  4071,  4075,  4079,  4083,  4087,  4088,
    4093,  4097,  4104,  4111,  4112,  4113,  4114,  4115,  4119,  4123,
    4131,  4142,  4161,  4181,  4201,  4234,  4235,  4236,  4237,  4238,
    4245,  4252,  4253,  4257,  4258,  4262,  4263,  4267,  4271,  4278,
    4282,  4289,  4290,  4291,  4292,  4296,  4297,  4301,  4310,  4322,
    4344,  4365,  4366,  4370,  4378,  4379,  4380,  4395,  4396,  4415,
    4422,  4429,  4440,  4451,  4461,  4470,  4503,  4510,  4517,  4524,
    4535,  4545,  4546,  4547,  4551,  4552,  4553,  4554,  4555,  4556,
    4565,  4573,  4577,  4590,  4605,  4619,  4634,  4648,  4666,  4687,
    4688,  4692,  4693,  4697,  4698,  4701,  4708,  4709,  4729,  4740,
    4744,  4752,  4757,  4763,  4764,  4768,  4773,  4780,  4781,  4791,
    4793,  4795,  4797,  4800,  4803,  4806,  4810,  4811,  4812,  4813,
    4814,  4817,  4818,  4823,  4824,  4825,  4826,  4829,  4830,  4831,
    4832,  4835,  4836,  4839,  4840,  4843,  4847,  4852,  4857,  4865,
    4873,  4881,  4892,  4893,  4898,  4899,  4903,  4904,  4910,  4920,
    4930,  4940,  4943,  4951,  4955,  4963,  4967,  4968,  4972,  4973,
    4977,  4978,  4982,  4986,  4989,  4990,  4991,  4998,  4999,  5004,
    5005,  5006,  5010,  5026,  5042,  5050,  5054,  5055,  5060,  5068,
    5081,  5096,  5097,  5100,  5110,  5122,  5126,  5133,  5137,  5143,
    5144,  5149,  5167,  5183,  5199,  5206,  5223,  5239,  5255,  5261,
    5266,  5272,  5278,  5285,  5286,  5288,  5298,  5319,  5323,  5359,
    5360,  5364,  5381,  5389,  5390,  5396,  5418,  5441,  5455,  5456,
    5457,  5467,  5527,  5528,  5529,  5532,  5533,  5537,  5547,  5560,
    5561,  5565,  5569,  5573,  5577,  5581,  5585,  5592,  5593,  5594,
    5595,  5599,  5603,  5610,  5614,  5621,  5625,  5632,  5636,  5640,
    5644,  5648,  5652,  5656,  5660,  5664,  5668,  5672,  5679,  5680,
    5684,  5685,  5689,  5693,  5700,  5707,  5708,  5712,  5716,  5723,
    5724,  5728,  5744,  5766,  5770,  5789,  5790,  5793,  5815,  5819,
    5820,  5824,  5825,  5826,  5833,  5834,  5838,  5842,  5856,  5873,
    5886,  5887,  5899,  5919,  5931,  5939,  5950,  5951,  5954,  5955,
    5958,  5962,  5966,  5970,  5974,  5978,  5982,  5986,  5990,  5994,
    5998,  6002,  6008,  6009,  6013,  6014,  6015,  6020,  6023,  6024,
    6036,  6048,  6063,  6064,  6072,  6073,  6077,  6078,  6082,  6083,
    6087,  6088,  6092,  6103,  6116,  6117,  6127,  6138,  6139,  6152,
    6159,  6176,  6184,  6195,  6198,  6202,  6206,  6210,  6222,  6232,
    6235,  6239,  6252,  6262,  6272,  6281,  6290,  6299,  6309,  6318,
    6328,  6338,  6348,  6357,  6366,  6375,  6384,  6393,  6402,  6411,
    6420,  6429,  6438,  6447,  6456,  6465,  6483,  6494,  6495,  6496,
    6497,  6501,  6502,  6506,  6507,  6517,  6528,  6548,  6556,  6568,
    6569,  6573,  6577,  6585,  6589,  6593,  6600,  6604,  6609,  6614,
    6621,  6628,  6633,  6643,  6657,  6658,  6663,  6664,  6668,  6669,
    6679,  6690,  6710,  6719,  6727,  6744,  6759,  6784,  6793,  6811,
    6823,  6824,  6825,  6835,  6843,  6860,  6879,  6899,  6924,  6925,
    6926,  6930,  6932,  6954,  6956,  6958,  6960,  6962,  6967,  6972,
    6982,  6983,  6987,  6988,  6992,  6993,  6997,  6998,  6999,  7003,
    7009,  7010,  7011,  7015,  7016,  7021,  7022,  7049,  7050,  7051,
    7052,  7053,  7054,  7059,  7070,  7093,  7103,  7117,  7119,  7124,
    7129,  7131,  7136,  7146,  7147,  7148,  7149,  7161,  7181,  7204,
    7214,  7225,  7235,  7245,  7256,  7265,  7286,  7293,  7300,  7309,
    7318,  7327,  7336,  7345,  7356,  7357,  7360,  7363,  7364,  7367,
    7381,  7388,  7390,  7391,  7392,  7393,  7394,  7401,  7404,  7407,
    7408,  7416,  7423,  7424,  7427,  7429,  7440,  7450,  7460,  7472,
    7473,  7489,  7504,  7505,  7509,  7519,  7530,  7539,  7549,  7558,
    7559,  7562,  7563,  7566,  7567,  7568,  7571,  7585,  7590,  7600,
    7609,  7621,  7622,  7626,  7634,  7646,  7657,  7671,  7682,  7705,
    7715,  7733,  7744,  7755,  7766,  7780,  7781,  7782,  7783,  7784,
    7785,  7786,  7787,  7788,  7789,  7790,  7791,  7792,  7793,  7794,
    7795,  7796,  7797,  7798,  7799,  7803,  7804,  7807,  7808,  7811,
    7813,  7826,  7837,  7838,  7839,  7871,  7880,  7889,  7898,  7907,
    7916,  7925,  7935,  7944,  7953,  7962,  7971,  7980,  7992,  7993,
    7994,  7995,  7996,  7997,  7998,  7999,  8000,  8001,  8002,  8003,
    8004,  8005,  8006,  8007,  8008,  8009,  8010,  8011,  8012,  8013,
    8014,  8015,  8016,  8020,  8021,  8035,  8046,  8057,  8068,  8079,
    8092,  8093,  8097,  8098,  8099,  8100,  8101,  8102,  8103,  8104,
    8105,  8106,  8107,  8108,  8109,  8112,  8113,  8123,  8129,  8137,
    8145,  8153,  8161,  8169,  8177,  8185,  8193,  8201,  8209,  8217,
    8225,  8233,  8241,  8249,  8257,  8267,  8268,  8271,  8272,  8282,
    8298,  8312,  8338,  8340,  8342,  8344,  8351,  8360,  8361,  8364,
    8371,  8378,  8385,  8399,  8407,  8415,  8423,  8431,  8439,  8447,
    8455,  8463,  8471,  8479,  8487,  8495,  8503,  8511,  8519,  8527,
    8539,  8540,  8543,  8553,  8567,  8568,  8572,  8573,  8578,  8594,
    8607,  8617,  8629,  8630,  8633,  8634,  8644,  8654,  8655,  8659,
    8663,  8667,  8678,  8691,  8705,  8722,  8723,  8724,  8725,  8737,
    8773,  8774,  8778,  8779,  8783,  8784,  8788,  8789,  8792,  8793,
    8801,  8812,  8823,  8836,  8837,  8840,  8841,  8842,  8845,  8846,
    8847,  8850,  8851,  8852,  8868,  8880,  8893,  8908,  8909,  8912,
    8913,  8917,  8918,  8926,  8927,  8931,  8932,  8947,  8956,  8965,
    8974,  8983,  8995,  8996,  8997,  8998,  8999,  9005,  9009,  9024,
    9025,  9031,  9041,  9045,  9050,  9058,  9099,  9103,  9107,  9111,
    9119,  9120,  9125,  9126,  9133,  9137,  9141,  9145,  9149,  9153,
    9157,  9161,  9165,  9169,  9173,  9177,  9181,  9185,  9189,  9194,
    9198,  9202,  9206,  9210,  9214,  9218,  9222,  9229,  9233,  9237,
    9241,  9247,  9248,  9255,  9256,  9259,  9271,  9275,  9290,  9301,
    9302,  9307,  9308,  9323,  9334,  9348,  9359,  9373,  9384,  9398,
    9406,  9408,  9410,  9415,  9417,  9430,  9439,  9440,  9444,  9448,
    9460,  9471,  9482,  9495,  9496,  9497,  9501,  9514,  9515,  9529,
    9537,  9547,  9560,  9561,  9564,  9565,  9573,  9590,  9599,  9616,
    9626,  9635,  9644,  9653,  9662,  9672,  9681,  9691,  9700,  9709,
    9719,  9729,  9738,  9747,  9757,  9767,  9777,  9787,  9797,  9807,
    9817,  9827,  9837,  9847,  9857,  9867,  9878,  9889,  9900,  9911,
    9921,  9932,  9943,  9953,  9963,  9971,  9980,  9989,  9998, 10007,
   10016, 10025, 10034, 10043, 10055, 10065, 10066, 10069, 10070, 10080,
   10090, 10099, 10108, 10117, 10126, 10136, 10146, 10156, 10166, 10175,
   10184, 10193, 10202, 10211, 10220, 10229, 10238, 10247, 10256, 10265,
   10274, 10283, 10292, 10309, 10318, 10326, 10334, 10342, 10350, 10359,
   10367, 10375, 10384, 10393, 10402, 10410, 10418, 10426, 10434, 10442,
   10450, 10458, 10466, 10483, 10500, 10501, 10502, 10507, 10513, 10522,
   10523, 10524, 10525, 10526, 10530, 10531, 10534, 10535, 10536, 10537,
   10541, 10542, 10543, 10548, 10559, 10581, 10591, 10592, 10595, 10604,
   10610, 10629, 10636, 10643, 10650, 10657, 10664, 10671, 10679, 10687,
   10695, 10703, 10711, 10718, 10725, 10734, 10735, 10736, 10740, 10743,
   10746, 10749, 10752, 10759, 10761, 10763, 10768, 10770, 10782, 10795,
   10808, 10826, 10847, 10848, 10849, 10850, 10860, 10876, 10886, 10887,
   10891, 10895, 10899, 10903, 10907, 10911, 10915, 10919, 10923, 10927,
   10931, 10935, 10939, 10943, 10947, 10951, 10961, 10962, 10973, 10980,
   10991, 11002, 11003, 11007, 11021, 11028, 11046, 11052, 11068, 11081,
   11090, 11098, 11106, 11115, 11126, 11137, 11147, 11148, 11159, 11169,
   11180, 11191, 11202, 11213, 11222, 11244, 11267, 11275, 11284, 11295,
   11296, 11308, 11324, 11340, 11354, 11374, 11399, 11400, 11404, 11405,
   11406, 11407, 11408, 11412, 11428, 11442, 11454, 11469, 11470, 11474,
   11475, 11479, 11480, 11483, 11484, 11487, 11488, 11492, 11493, 11506,
   11513, 11526, 11536, 11546, 11547, 11548, 11549, 11550, 11551, 11552,
   11553, 11554, 11555, 11564, 11565, 11569, 11573, 11580, 11587, 11588,
   11592, 11593, 11594, 11604, 11614, 11615, 11619, 11620, 11621, 11622,
   11632, 11639, 11657, 11658, 11668, 11674, 11680, 11686, 11702, 11703,
   11716, 11730, 11740, 11746, 11752, 11761, 11763, 11768, 11779, 11780,
   11791, 11805, 11806, 11817, 11837, 11838, 11841, 11842, 11843, 11844,
   11845, 11846, 11847, 11848, 11851, 11852, 11855, 11856, 11866, 11884,
   11885, 11889, 11890, 11894, 11902, 11930, 11941, 11942, 11952, 11963,
   11966, 11967, 11968, 11969, 11970, 11971, 11974, 11975, 11976, 12024,
   12025, 12029, 12036, 12047, 12048, 12063, 12064, 12071, 12079, 12087,
   12095, 12103, 12111, 12122, 12123, 12150, 12165, 12166, 12185, 12189,
   12193, 12208, 12215, 12225, 12226, 12229, 12241, 12242, 12246, 12258,
   12266, 12271, 12276, 12281, 12286, 12294, 12302, 12307, 12312, 12319,
   12320, 12323, 12324, 12325, 12332, 12333, 12334, 12335, 12339, 12340,
   12344, 12348, 12349, 12352, 12361, 12374, 12375, 12376, 12377, 12381,
   12382, 12386, 12388, 12404, 12406, 12411, 12414, 12419, 12420, 12428,
   12448, 12449, 12451, 12456, 12457, 12461, 12462, 12465, 12466, 12471,
   12472, 12476, 12477, 12481, 12482, 12490, 12498, 12506, 12511, 12512,
   12516, 12517, 12521, 12522, 12526, 12527, 12531, 12542, 12543, 12544,
   12545, 12549, 12550, 12555, 12561, 12579, 12580, 12584, 12585, 12591,
   12596, 12603, 12611, 12646, 12671, 12675, 12701, 12705, 12717, 12730,
   12744, 12755, 12770, 12776, 12781, 12787, 12794, 12795, 12803, 12807,
   12811, 12817, 12824, 12829, 12830, 12831, 12832, 12836, 12837, 12849,
   12850, 12855, 12862, 12869, 12876, 12887, 12888, 12901, 12905, 12912,
   12933, 12943, 12955, 12960, 12961, 12964, 12965, 12968, 12969, 12974,
   12975, 12980, 12981, 12989, 12994, 12995, 12999, 13003, 13009, 13039,
   13044, 13051, 13056, 13062, 13067, 13076, 13077, 13086, 13088, 13091,
   13095, 13096, 13097, 13098, 13099, 13100, 13105, 13135, 13136, 13137,
   13138, 13149, 13155, 13163, 13164, 13170, 13175, 13180, 13185, 13190,
   13195, 13200, 13205, 13211, 13217, 13223, 13230, 13252, 13261, 13265,
   13273, 13277, 13285, 13297, 13318, 13322, 13328, 13332, 13345, 13356,
   13371, 13373, 13375, 13377, 13379, 13381, 13386, 13387, 13391, 13392,
   13399, 13408, 13416, 13425, 13436, 13444, 13445, 13446, 13450, 13452,
   13454, 13456, 13458, 13460, 13462, 13467, 13472, 13478, 13486, 13491,
   13498, 13505, 13509, 13513, 13543, 13544, 13546, 13554, 13569, 13571,
   13573, 13575, 13577, 13579, 13581, 13583, 13585, 13587, 13589, 13592,
   13594, 13596, 13599, 13601, 13603, 13606, 13608, 13615, 13617, 13624,
   13626, 13633, 13635, 13643, 13650, 13657, 13664, 13681, 13688, 13695,
   13702, 13709, 13725, 13732, 13739, 13746, 13753, 13760, 13767, 13771,
   13779, 13783, 13793, 13800, 13807, 13820, 13833, 13852, 13873, 13883,
   13890, 13906, 13911, 13929, 13931, 13933, 13935, 13937, 13939, 13941,
   13943, 13945, 13947, 13949, 13951, 13953, 13955, 13957, 13959, 13961,
   13965, 13970, 13974, 13978, 13983, 14000, 14001, 14002, 14017, 14029,
   14031, 14033, 14035, 14045, 14068, 14078, 14088, 14096, 14103, 14115,
   14116, 14117, 14121, 14129, 14133, 14139, 14146, 14153, 14166, 14173,
   14201, 14236, 14247, 14248, 14255, 14261, 14287, 14297, 14310, 14318,
   14331, 14341, 14354, 14364, 14377, 14381, 14385, 14389, 14393, 14397,
   14401, 14403, 14407, 14416, 14421, 14428, 14443, 14450, 14454, 14458,
   14462, 14466, 14473, 14481, 14489, 14496, 14501, 14529, 14543, 14547,
   14551, 14555, 14559, 14563, 14577, 14590, 14594, 14603, 14607, 14611,
   14616, 14630, 14632, 14636, 14638, 14640, 14643, 14646, 14649, 14650,
   14653, 14661, 14671, 14672, 14675, 14676, 14677, 14682, 14686, 14690,
   14694, 14705, 14706, 14710, 14711, 14719, 14720, 14724, 14725, 14730,
   14738, 14740, 14754, 14757, 14784, 14785, 14788, 14789, 14800, 14821,
   14829, 14838, 14855, 14900, 14908, 14916, 14924, 14932, 14942, 14943,
   14944, 14945, 14946, 14960, 14961, 14962, 14965, 14966, 14967, 14970,
   14971, 14974, 14975, 14976, 14977, 14978, 14979, 14980, 14981, 14982,
   14985, 14987, 14992, 14994, 14999, 15001, 15003, 15005, 15007, 15009,
   15021, 15025, 15032, 15036, 15042, 15046, 15057, 15058, 15062, 15063,
   15066, 15070, 15074, 15080, 15081, 15086, 15090, 15097, 15098, 15099,
   15100, 15101, 15102, 15103, 15104, 15114, 15118, 15125, 15132, 15133,
   15149, 15153, 15158, 15162, 15177, 15182, 15186, 15189, 15192, 15193,
   15194, 15197, 15204, 15214, 15228, 15229, 15233, 15244, 15245, 15249,
   15250, 15253, 15254, 15268, 15280, 15281, 15285, 15296, 15297, 15301,
   15305, 15312, 15316, 15320, 15327, 15337, 15338, 15342, 15343, 15346,
   15347, 15358, 15359, 15368, 15369, 15377, 15387, 15388, 15392, 15393,
   15396, 15418, 15426, 15434, 15442, 15464, 15465, 15476, 15480, 15515,
   15517, 15522, 15525, 15528, 15530, 15532, 15534, 15544, 15546, 15557,
   15561, 15565, 15569, 15573, 15582, 15589, 15621, 15625, 15631, 15648,
   15652, 15656, 15662, 15663, 15664, 15665, 15667, 15669, 15673, 15674,
   15675, 15691, 15692, 15693, 15698, 15699, 15700, 15705, 15706, 15707,
   15708, 15714, 15715, 15716, 15717, 15718, 15738, 15739, 15740, 15741,
   15742, 15743, 15744, 15745, 15746, 15747, 15748, 15749, 15750, 15751,
   15752, 15753, 15754, 15755, 15756, 15757, 15758, 15759, 15760, 15761,
   15762, 15763, 15764, 15765, 15766, 15767, 15768, 15769, 15770, 15771,
   15772, 15773, 15774, 15775, 15776, 15777, 15778, 15779, 15780, 15781,
   15782, 15783, 15784, 15785, 15786, 15787, 15788, 15789, 15790, 15791,
   15792, 15793, 15794, 15795, 15796, 15797, 15798, 15799, 15800, 15801,
   15802, 15803, 15804, 15805, 15806, 15807, 15808, 15809, 15810, 15811,
   15812, 15813, 15814, 15815, 15816, 15817, 15818, 15819, 15820, 15821,
   15822, 15823, 15824, 15825, 15826, 15827, 15828, 15829, 15830, 15831,
   15832, 15833, 15834, 15835, 15836, 15837, 15838, 15839, 15840, 15841,
   15842, 15843, 15844, 15845, 15846, 15847, 15848, 15849, 15850, 15851,
   15852, 15853, 15854, 15855, 15856, 15857, 15858, 15859, 15860, 15861,
   15862, 15863, 15864, 15865, 15866, 15867, 15868, 15869, 15870, 15871,
   15872, 15873, 15874, 15875, 15876, 15877, 15878, 15879, 15880, 15881,
   15882, 15883, 15884, 15885, 15886, 15887, 15888, 15889, 15890, 15891,
   15892, 15893, 15894, 15895, 15896, 15897, 15898, 15899, 15900, 15901,
   15902, 15903, 15904, 15905, 15906, 15907, 15908, 15909, 15910, 15911,
   15912, 15913, 15914, 15915, 15916, 15917, 15918, 15919, 15920, 15921,
   15922, 15923, 15924, 15925, 15926, 15927, 15928, 15929, 15930, 15931,
   15932, 15933, 15934, 15935, 15936, 15937, 15938, 15939, 15940, 15941,
   15942, 15943, 15944, 15945, 15946, 15947, 15948, 15949, 15950, 15951,
   15952, 15953, 15954, 15955, 15956, 15957, 15958, 15959, 15960, 15961,
   15962, 15963, 15964, 15965, 15966, 15967, 15968, 15969, 15970, 15971,
   15972, 15973, 15974, 15975, 15976, 15977, 15978, 15979, 15980, 15981,
   15982, 15983, 15984, 15985, 15986, 15987, 15988, 15989, 15990, 15991,
   15992, 15993, 15994, 15995, 15996, 15997, 15998, 15999, 16000, 16001,
   16002, 16003, 16004, 16005, 16006, 16007, 16008, 16009, 16010, 16011,
   16012, 16013, 16014, 16015, 16016, 16017, 16018, 16019, 16020, 16021,
   16022, 16023, 16024, 16025, 16026, 16027, 16028, 16029, 16030, 16031,
   16032, 16033, 16034, 16035, 16036, 16037, 16038, 16039, 16040, 16041,
   16042, 16043, 16044, 16045, 16046, 16047, 16048, 16049, 16050, 16051,
   16052, 16053, 16067, 16070, 16071, 16072, 16073, 16074, 16077, 16078,
   16081, 16082, 16083, 16084, 16085, 16086, 16087, 16088, 16089, 16090,
   16091, 16092, 16093, 16094, 16095, 16096, 16097, 16098, 16099, 16100,
   16101, 16102, 16103, 16104, 16105, 16106, 16107, 16108, 16109, 16110,
   16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120,
   16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128, 16129, 16130,
   16131, 16132, 16133, 16134, 16135, 16136, 16137, 16138, 16139, 16140,
   16141, 16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149, 16150,
   16151, 16152, 16153, 16154, 16155, 16156, 16157, 16158, 16159, 16160,
   16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170,
   16171, 16172, 16173, 16174, 16175, 16176, 16177, 16178, 16179, 16180,
   16181, 16182, 16183, 16184, 16185, 16186, 16187, 16188, 16189, 16190,
   16191, 16192, 16193, 16194, 16195, 16196, 16197, 16198, 16199, 16200,
   16201, 16202, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16210,
   16211, 16212, 16213, 16214, 16215, 16216, 16217, 16218, 16219, 16220,
   16221, 16222, 16223, 16224, 16225, 16226, 16227, 16228, 16229, 16230,
   16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238, 16239, 16240,
   16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249, 16250,
   16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260,
   16261, 16262, 16263, 16264, 16265, 16266, 16267, 16268, 16269, 16270,
   16271, 16272, 16273, 16274, 16275, 16276, 16277, 16278, 16279, 16280,
   16281, 16282, 16283, 16284, 16285, 16286, 16287, 16288, 16289, 16290,
   16291, 16292, 16293, 16294, 16295, 16296, 16297, 16298, 16299, 16300,
   16301, 16302, 16303, 16304, 16305, 16306, 16307, 16308, 16309, 16310,
   16311, 16312, 16313, 16314, 16315, 16316, 16317, 16318, 16319, 16320,
   16321, 16322, 16323, 16324, 16325, 16326, 16327, 16328, 16329, 16330,
   16331, 16332, 16333, 16334, 16335, 16336, 16337, 16338, 16339, 16340,
   16341, 16342, 16343, 16344, 16345, 16346, 16347, 16348, 16349, 16350,
   16351, 16352, 16353, 16354, 16355, 16356, 16357, 16358, 16372, 16373,
   16374, 16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382, 16383,
   16384, 16385, 16386, 16387, 16388, 16389, 16390, 16391, 16392, 16393,
   16394, 16395, 16396, 16397, 16398, 16399, 16400, 16401, 16402, 16403,
   16404, 16405, 16406, 16407, 16408, 16409, 16410, 16411, 16412, 16413,
   16414, 16415, 16416, 16417, 16418, 16419, 16420, 16421, 16422, 16423,
   16437, 16438, 16439, 16440, 16441, 16442, 16443, 16444, 16445, 16446,
   16447, 16448, 16449, 16450, 16451, 16452, 16453, 16454, 16455, 16456,
   16457, 16458, 16468, 16469, 16470, 16471, 16472, 16473, 16474, 16475,
   16476, 16477, 16478, 16479, 16480, 16481, 16482, 16483, 16484, 16485,
   16486, 16487, 16488, 16489, 16490, 16491, 16492, 16493, 16494, 16495,
   16496, 16497, 16498, 16499, 16500, 16501, 16502, 16503, 16504, 16505,
   16506, 16507, 16508, 16509, 16510, 16511, 16512, 16513, 16514, 16515,
   16516, 16517, 16518, 16519, 16520, 16521, 16522, 16523, 16524, 16525,
   16526, 16527, 16528, 16529, 16530, 16531, 16532, 16533, 16534, 16535,
   16536, 16537, 16538, 16539, 16540, 16541, 16542, 16543, 16544, 16545,
   16546, 16547, 16548, 16549, 16550, 16551, 16552
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "IDENT", "FCONST",
  "SCONST", "BCONST", "XCONST", "Op", "ICONST", "PARAM", "TYPECAST",
  "DOT_DOT", "COLON_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION",
  "ADD_P", "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED",
  "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENCY", "CONCURRENTLY", "CONFIGURATION",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE", "CROSS", "CSV", "CURRENT_P",
  "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA",
  "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR", "CYCLE",
  "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC", "DECIMAL_P",
  "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER",
  "DELETE_P", "DELIMITER", "DELIMITERS", "DESC", "DICTIONARY", "DISABLE_P",
  "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P",
  "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P",
  "ENDPOINT", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE",
  "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GLOBAL", "GRANT", "GRANTED",
  "GREATEST", "GROUP_P", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LC_COLLATE_P", "LC_CTYPE_P", "LEADING", "LEAKPROOF", "LEAST", "LEFT",
  "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "MEMORY_LIMIT", "MEMORY_SHARED_QUOTA",
  "MEMORY_SPILL_RATIO", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE",
  "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "ON",
  "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY",
  "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OWNED", "OWNER",
  "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD", "PLACING",
  "PLANS", "POSITION", "PRECEDING", "PRECISION", "PRESERVE", "PREPARE",
  "PREPARED", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "QUOTE", "RANGE", "READ", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE",
  "ROLLBACK", "ROW", "ROWS", "RULE", "SAVEPOINT", "SCHEMA", "SCROLL",
  "SEARCH", "SECOND_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SMALLINT", "SNAPSHOT", "SOME",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSTRING", "SYMMETRIC",
  "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE",
  "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "YEAR_P", "YES_P", "ZONE", "ACTIVE", "CONTAINS", "CPUSET",
  "CPU_RATE_LIMIT", "CREATEEXTTABLE", "CUBE", "DECODE", "DENY",
  "DISTRIBUTED", "DXL", "ERRORS", "EVERY", "EXCHANGE", "EXPAND", "FIELDS",
  "FILL", "FORMAT", "FULLSCAN", "GROUP_ID", "GROUPING", "HASH", "HOST",
  "IGNORE_P", "INCLUSIVE", "INITPLAN", "LIST", "LOG_P", "MASTER", "MEDIAN",
  "MISSING", "MODIFIES", "NEWLINE", "NOCREATEEXTTABLE", "NOOVERCOMMIT",
  "ORDERED", "OTHERS", "OVERCOMMIT", "PARALLEL", "RETRIEVE", "PARTITIONS",
  "PERCENT", "PERSISTENTLY", "PROTOCOL", "QUEUE", "RANDOMLY", "READABLE",
  "READS", "REJECT_P", "REPLICATED", "RESOURCE", "ROLLUP", "ROOTPARTITION",
  "SCATTER", "SEGMENT", "SEGMENTS", "SETS", "SPLIT", "SQL", "SUBPARTITION",
  "THRESHOLD", "TIES", "VALIDATION", "WEB", "WRITABLE", "YEZZEY",
  "NULLS_FIRST", "NULLS_LAST", "WITH_ORDINALITY", "WITH_TIME", "'='",
  "'<'", "'>'", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'",
  "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','", "':'",
  "$accept", "stmtblock", "stmtmulti", "stmt", "CreateQueueStmt",
  "OptQueueList", "OptQueueElem", "AlterQueueStmt", "DropQueueStmt",
  "CreateResourceGroupStmt", "DropResourceGroupStmt",
  "AlterResourceGroupStmt", "OptResourceGroupList", "OptResourceGroupElem",
  "CreateRoleStmt", "opt_with", "OptRoleList", "AlterOptRoleList",
  "AlterOnlyOptRoleElem", "AlterOptRoleElem", "CreateOptRoleElem",
  "deny_login_role", "deny_interval", "deny_day_specifier", "deny_point",
  "opt_time", "exttab_auth_list", "keyvalue_list", "keyvalue_pair",
  "CreateUserStmt", "AlterRoleStmt", "opt_in_database", "AlterRoleSetStmt",
  "AlterUserStmt", "AlterUserSetStmt", "DropRoleStmt", "DropUserStmt",
  "CreateGroupStmt", "AlterGroupStmt", "add_drop", "DropGroupStmt",
  "CreateSchemaStmt", "OptSchemaName", "OptSchemaEltList", "schema_stmt",
  "VariableSetStmt", "set_rest", "generic_set", "set_rest_more",
  "var_name", "var_list", "var_value", "iso_level",
  "opt_boolean_or_string", "zone_value", "opt_encoding",
  "NonReservedWord_or_Sconst", "VariableResetStmt", "reset_rest",
  "generic_reset", "SetResetClause", "FunctionSetResetClause",
  "VariableShowStmt", "ConstraintsSetStmt", "constraints_set_list",
  "constraints_set_mode", "CheckPointStmt", "DiscardStmt",
  "AlterTableStmt", "alter_table_cmds", "alter_table_cmd",
  "alter_column_default", "opt_drop_behavior", "opt_collate_clause",
  "alter_using", "replica_identity", "reloptions", "opt_reloptions",
  "reloption_list", "reloption_elem", "opt_table_partition_split_into",
  "opt_table_partition_exchange_validate", "alter_table_partition_id_spec",
  "alter_table_partition_id_spec_with_opt_default",
  "alter_table_partition_cmd", "AlterCompositeTypeStmt", "alter_type_cmds",
  "alter_type_cmd", "ClosePortalStmt", "CopyStmt", "copy_from",
  "opt_program", "skip_external_partition", "copy_file_name",
  "copy_options", "copy_opt_list", "copy_opt_item", "opt_binary",
  "opt_oids", "copy_delimiter", "opt_using", "copy_generic_opt_list",
  "copy_generic_opt_elem", "copy_generic_opt_arg",
  "copy_generic_opt_arg_list", "copy_generic_opt_arg_list_item",
  "CreateStmt", "OptTemp", "OptTableElementList",
  "OptTypedTableElementList", "TableElementList", "TypedTableElementList",
  "TableElement", "TypedTableElement",
  "column_reference_storage_directive", "columnDef", "columnOptions",
  "ColQualList", "ColConstraint", "opt_storage_encoding",
  "ColConstraintElem", "ConstraintAttr", "TableLikeClause",
  "TableLikeOptionList", "TableLikeOption", "TableConstraint",
  "ConstraintElem", "opt_no_inherit", "opt_column_list", "columnList",
  "columnElem", "distributed_by_list", "distributed_by_elem", "key_match",
  "ExclusionConstraintList", "ExclusionConstraintElem",
  "ExclusionWhereClause", "key_actions", "key_update", "key_delete",
  "key_action", "OptInherit", "OptWith", "OnCommitOption", "OptTableSpace",
  "OptConsTableSpace", "ExistingIndex", "optNumsegments", "DistributedBy",
  "OptDistributedBy", "OptTabPartitionColumnEncList",
  "TabPartitionColumnEncList", "OptTabPartitionStorageAttr",
  "OptTabPartitionSpec", "OptTabSubPartitionSpec", "TabPartitionElemList",
  "TabSubPartitionElemList", "tab_part_val_no_paran", "tab_part_val",
  "TabPartitionBoundarySpecValList", "OptTabPartitionRangeInclusive",
  "TabPartitionBoundarySpecStart", "TabPartitionBoundarySpecEnd",
  "OptTabPartitionBoundarySpecEvery", "OptTabPartitionBoundarySpecEnd",
  "TabPartitionBoundarySpec", "OptTabPartitionBoundarySpec",
  "multi_spec_value_list", "part_values_single", "part_values_clause",
  "part_values_or_spec_list", "TabPartitionElem", "TabSubPartitionElem",
  "TabPartitionNameDecl", "TabPartitionDefaultNameDecl",
  "TabSubPartitionNameDecl", "TabSubPartitionDefaultNameDecl",
  "TabPartitionByType", "OptTabPartitionBy", "TabSubPartitionTemplate",
  "opt_list_subparts", "TabSubPartitionBy", "TabSubPartition",
  "CreateAsStmt", "create_as_target", "opt_with_data",
  "CreateExternalStmt", "OptWritable", "OptWeb", "ExtTypedesc",
  "ext_on_clause_list", "ext_on_clause_item", "format_opt",
  "format_opt_list", "format_def_list", "format_def_item",
  "format_opt_item", "ext_options_opt", "ext_options", "ext_options_list",
  "ext_options_item", "OptExtTableElementList", "ExtTableElementList",
  "ExtTableElement", "ExtcolumnDef", "OptSingleRowErrorHandling",
  "OptLogErrorTable", "ExtSingleRowErrorHandling", "ExtLogErrorTable",
  "OptSrehLimitType", "ext_opt_encoding_list", "ext_opt_encoding_item",
  "CreateMatViewStmt", "create_mv_target", "OptNoLog",
  "RefreshMatViewStmt", "CreateSeqStmt", "AlterSeqStmt", "OptSeqOptList",
  "SeqOptList", "SeqOptElem", "opt_by", "NumericOnly", "NumericOnly_list",
  "CreatePLangStmt", "opt_trusted", "handler_name", "opt_inline_handler",
  "validator_clause", "opt_validator", "DropPLangStmt", "opt_procedural",
  "CreateTableSpaceStmt", "OptTableSpaceOwner", "DropTableSpaceStmt",
  "CreateExtensionStmt", "create_extension_opt_list",
  "create_extension_opt_item", "AlterExtensionStmt",
  "alter_extension_opt_list", "alter_extension_opt_item",
  "AlterExtensionContentsStmt", "CreateFdwStmt", "fdw_option",
  "fdw_options", "opt_fdw_options", "DropFdwStmt", "AlterFdwStmt",
  "create_generic_options", "generic_option_list", "alter_generic_options",
  "alter_generic_option_list", "alter_generic_option_elem",
  "generic_option_elem", "generic_option_name", "generic_option_arg",
  "CreateForeignServerStmt", "opt_type", "foreign_server_version",
  "opt_foreign_server_version", "DropForeignServerStmt",
  "AlterForeignServerStmt", "CreateForeignTableStmt",
  "AlterForeignTableStmt", "CreateUserMappingStmt", "auth_ident",
  "DropUserMappingStmt", "AlterUserMappingStmt", "CreateTrigStmt",
  "TriggerActionTime", "TriggerEvents", "TriggerOneEvent",
  "TriggerForSpec", "TriggerForOptEach", "TriggerForType", "TriggerWhen",
  "TriggerFuncArgs", "TriggerFuncArg", "OptConstrFromTable",
  "ConstraintAttributeSpec", "ConstraintAttributeElem", "DropTrigStmt",
  "CreateEventTrigStmt", "event_trigger_when_list",
  "event_trigger_when_item", "event_trigger_value_list",
  "AlterEventTrigStmt", "enable_trigger", "CreateAssertStmt",
  "DropAssertStmt", "DefineStmt", "opt_ordered", "definition", "def_list",
  "def_elem", "def_arg", "old_aggr_definition", "old_aggr_list",
  "old_aggr_elem", "opt_enum_val_list", "enum_val_list", "AlterEnumStmt",
  "opt_if_not_exists", "CreateOpClassStmt", "opclass_item_list",
  "opclass_item", "opt_default", "opt_opfamily", "opclass_purpose",
  "opt_recheck", "CreateOpFamilyStmt", "AlterOpFamilyStmt",
  "opclass_drop_list", "opclass_drop", "DropOpClassStmt",
  "DropOpFamilyStmt", "DropOwnedStmt", "ReassignOwnedStmt", "DropStmt",
  "drop_type", "any_name_list", "any_name", "attrs", "TruncateStmt",
  "opt_restart_seqs", "CommentStmt", "comment_type", "comment_text",
  "SecLabelStmt", "opt_provider", "security_label_type", "security_label",
  "FetchStmt", "fetch_args", "from_in", "opt_from_in", "GrantStmt",
  "RevokeStmt", "privileges", "privilege_list", "privilege",
  "privilege_target", "grantee_list", "grantee", "opt_grant_grant_option",
  "function_with_argtypes_list", "function_with_argtypes", "GrantRoleStmt",
  "RevokeRoleStmt", "opt_grant_admin_option", "opt_granted_by",
  "AlterDefaultPrivilegesStmt", "DefACLOptionList", "DefACLOption",
  "DefACLAction", "defacl_privilege_target", "IndexStmt", "opt_unique",
  "opt_concurrently", "opt_index_name", "access_method_clause",
  "index_params", "index_elem", "opt_collate", "opt_class", "opt_asc_desc",
  "opt_nulls_order", "CreateFunctionStmt", "opt_or_replace", "func_args",
  "func_args_list", "func_args_with_defaults",
  "func_args_with_defaults_list", "func_arg", "arg_class", "param_name",
  "func_return", "func_type", "func_arg_with_default", "aggr_arg",
  "aggr_args", "aggr_args_list", "createfunc_opt_list",
  "common_func_opt_item", "createfunc_opt_item", "func_as",
  "opt_definition", "table_func_column", "table_func_column_list",
  "AlterFunctionStmt", "alterfunc_opt_list", "opt_restrict",
  "RemoveFuncStmt", "RemoveAggrStmt", "RemoveOperStmt", "oper_argtypes",
  "any_operator", "DoStmt", "dostmt_opt_list", "dostmt_opt_item",
  "CreateCastStmt", "cast_context", "DropCastStmt", "opt_if_exists",
  "ReindexStmt", "reindex_type", "opt_force", "AlterTypeStmt",
  "AlterTblSpcStmt", "RenameStmt", "opt_column", "opt_set_data",
  "AlterObjectSchemaStmt", "AlterOwnerStmt", "RuleStmt", "RuleActionList",
  "RuleActionMulti", "RuleActionStmt", "RuleActionStmtOrEmpty", "event",
  "opt_instead", "DropRuleStmt", "NotifyStmt", "notify_payload",
  "ListenStmt", "UnlistenStmt", "TransactionStmt", "opt_transaction",
  "transaction_mode_item", "transaction_mode_list",
  "transaction_mode_list_or_empty", "ViewStmt", "opt_check_option",
  "LoadStmt", "CreatedbStmt", "createdb_opt_list", "createdb_opt_item",
  "opt_equal", "AlterDatabaseStmt", "AlterDatabaseSetStmt",
  "alterdb_opt_list", "alterdb_opt_item", "DropdbStmt", "AlterSystemStmt",
  "CreateDomainStmt", "AlterDomainStmt", "opt_as", "AlterTSDictionaryStmt",
  "AlterTSConfigurationStmt", "CreateConversionStmt", "ClusterStmt",
  "cluster_index_specification", "VacuumStmt", "vacuum_option_list",
  "vacuum_option_elem", "AnalyzeStmt", "analyze_keyword", "opt_verbose",
  "opt_rootonly_all", "opt_full", "opt_freeze", "opt_name_list",
  "ExplainStmt", "ExplainableStmt", "opt_dxl", "explain_option_list",
  "explain_option_elem", "explain_option_name", "explain_option_arg",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "ExecuteStmt",
  "execute_param_clause", "DeallocateStmt", "cdb_string_list",
  "cdb_string", "InsertStmt", "insert_rest", "insert_column_list",
  "insert_column_item", "returning_clause", "DeleteStmt", "using_clause",
  "LockStmt", "opt_lock", "lock_type", "opt_nowait", "opt_masteronly",
  "UpdateStmt", "set_clause_list", "set_clause", "single_set_clause",
  "multiple_set_clause", "set_target", "set_target_list",
  "DeclareCursorStmt", "cursor_name", "cursor_options", "opt_hold",
  "SelectStmt", "RetrieveStmt", "select_with_parens", "select_no_parens",
  "select_clause", "simple_select", "with_clause", "cte_list",
  "common_table_expr", "opt_with_clause", "into_clause",
  "OptTempTableName", "opt_table", "opt_all", "opt_distinct",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "select_limit", "opt_select_limit", "limit_clause", "offset_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_elem_list", "group_elem", "having_clause", "for_locking_clause",
  "opt_for_locking_clause", "for_locking_items", "for_locking_item",
  "for_locking_strength", "locked_rels_list", "values_clause",
  "from_clause", "from_list", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "relation_expr_list",
  "relation_expr_opt_alias", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "where_or_current_clause", "OptTableFuncElementList",
  "TableFuncElementList", "TableFuncElement", "Typename", "NestedTypename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "opt_charset", "ConstDatetime", "ConstInterval",
  "opt_timezone", "opt_interval", "interval_second", "a_expr", "b_expr",
  "c_expr", "scatter_clause", "table_value_select_clause",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "xml_root_version",
  "opt_xml_root_standalone", "xml_attributes", "xml_attribute_list",
  "xml_attribute_el", "document_or_content", "xml_whitespace_option",
  "xmlexists_argument", "within_group_clause", "filter_clause",
  "window_clause", "window_definition_list", "window_definition",
  "over_clause", "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "window_frame_exclusion", "row", "sub_type", "all_Op",
  "MathOp", "qual_Op", "qual_all_Op", "subquery_Op", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "nested_type_list",
  "array_expr", "array_expr_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "when_operand", "case_default",
  "case_arg", "decode_expr", "search_result_list", "search_result",
  "decode_default", "columnref", "indirection_el", "indirection",
  "opt_indirection", "opt_asymmetric", "ctext_expr", "ctext_expr_list",
  "ctext_row", "opt_target_list", "target_list", "target_el",
  "qualified_name_list", "qualified_name", "name_list", "name",
  "database_name", "access_method", "attr_name", "index_name", "file_name",
  "func_name", "AexprConst", "Iconst", "Sconst", "RoleId", "QueueId",
  "role_list", "SignedIconst", "ColId", "type_function_name",
  "NonReservedWord", "ColLabel", "unreserved_keyword", "ColLabelNoAs",
  "keywords_ok_in_alias_no_as", "PartitionColId", "PartitionIdentKeyword",
  "col_name_keyword", "type_func_name_keyword", "reserved_keyword", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5034)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3016)

#define yytable_value_is_error(Yyn) \
  ((Yyn) == YYTABLE_NINF)

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
    5461,    88, 13667, -5034, -5034,    88, -5034, 72855,    84,   707,
     129,   204, 12981, 73341, 83547,   675,   344, 14104,    88, 83547,
    1975, 56331, 69453, 83547,  1148,   842, 56331, 83547, 84033,  1014,
    1280,  1292, 84519, 73827, 68481,  1784, 83547,  1312,   417, 85005,
   74313,  1221, 74799,   842, 51957,   118,  1187, 85491,   355,  1829,
    1885,  1277, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034,    84, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  1792,
   -5034,  1387,  1943,  1657,   317,  1283, -5034, -5034, -5034, 63135,
   83547, 83547, 83547,  1705, 83547,  1664, 83547,  1716,   223, 63135,
   63621, 75285,  1873,  1779, 47482, -5034, 60705, 83547, 83547, 85977,
   83547,   160, 70911, 83547,  1825, 83547, 83547, 61191, 86463, 83547,
     189,  1998,  1635, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, 83547,
    4273,  1148, -5034, -5034, 83547,  1839, 83547,  1733, 83547,  1845,
   83547, -5034, 83547,  1959, 86949,   552,  1809, 63621,  1867, 47982,
    1903, 63621, 87435, 83547, 83547, -5034, -5034,  1991, 83547, 83547,
   -5034,  2110, 64107, -5034, -5034,   217, -5034,   125,  2202,  2179,
    2392,  2342,  2251,   916, -5034, 75771, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, 61677,   344, -5034, -5034, 64593, 83547,
    2267, -5034, -5034, 87921, -5034,  2138, -5034,   712,   784, 65079,
   65565,  2399,  2134, 48482,  2464, 66051, 88407, -5034, -5034, 88893,
   -5034, 89379,  2223, 89865, -5034, 66537, -5034, -5034,   382,  2335,
   90351, -5034,  2073,  2015,  2121, 43038, -5034, -5034, -5034, -5034,
      84, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,   285,
    1793,   283,   213,   289, -5034, -5034,   226,   244,   249,   285,
    2571,  2571, -5034, 83547, -5034, -5034,  1793,    65,  2086,  2086,
    2086,  2357,    28, -5034,  2086, -5034, -5034, -5034, -5034, 74799,
   -5034,  2109,  1148,  2091,  2579,  2235, 83547, -5034, 83547, -5034,
   83547, 83547, -5034, -5034,  2611,  2243,  2494,  2184, -5034, -5034,
   -5034,  2440,  2441,  2480,   107,  1148,  2350, -5034,  2598, -5034,
    2500, 28042,  1148, 76257, 90837,   220, 61677,  1148, 76743,  2341,
    1634,  2518, -5034, -5034, -5034,   164, -5034,  2745,  2370,  2606,
    2184,  1635, 45010, -5034,  2296,   832, 74799, -5034, -5034, -5034,
     229,  2655, 28546, -5034, 83547,  2309, -5034,  2320,  2669,  2677,
    2334,  2338,  1657, -5034,  5461, 91323,  1281,  1281,  2799,  1281,
    1906,  1944, -5034,  2205, -5034,  2697,  2660, 74799,  1187,   254,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034,  2354,   832, -5034,   291, -5034,  1578,  2358,  1738,
    1863, -5034, -5034,   895, 83547,  2537,   239,    68, 74799,  2465,
   77229,  3862,  2386, -5034,   308, -5034, -5034, -5034, -5034,  2711,
    2743,  5650,   349, 77715, -5034, 83547, 83547, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034,  2390, -5034, -5034,  2403,
    2732,  1638,  2652,   206,  2783,  8005,  1689, 78201, 83547,  2747,
    2797,  6444,  2182,   950,  2688,  1028,  2732,  2818,  1856,  2831,
    7949,  2678,  2713, 83547, 63621, 83547, -5034,  2776,  2886,   581,
   -5034,   844, -5034,  2608,  2755,    77, 63135,  2516, -5034, -5034,
   83547, -5034, -5034, -5034,  2630, -5034,   899, 63135, -5034,  2750,
    2626, 48982, -5034, 83547, -5034, -5034, -5034, -5034, -5034,  2705,
   83547, -5034, -5034,   393,  2840, 83547, -5034,  2086,  2757,  2986,
  101489,   108, 83547,  2653,  3038, 83547,  2832,  2653,  2663, 91809,
   -5034, -5034,  2653, -5034, -5034, 83547, 83547,  2568,  1456,  2653,
    2834,  3039,  3045,  2712,  2815,  1200,  1617,   196,  2938,  2653,
   83547, 63621,  2690, 83547, 92295, 83547,  2604,  2695, 63135, 83547,
    3024, 63135, 83547, -5034,    83, -5034, -5034,  1018, -5034, -5034,
   -5034, -5034,  2962,  2354,   280,  2963,  2595,  2966, -5034, -5034,
   -5034,  2756,  2707, -5034,  2972,  2386,  2977, -5034,  2609, 92781,
   -5034, 93267, 93753,  2984,  2390, 63621,  2985,  2609,  2987,  2868,
    2991,   280,  2994, -5034,  1313,  2997,  2880,  2999,  1808,  2609,
   83547, 63621, 62163,  3002,   194, -5034, 31570, -5034,  2788, -5034,
     947,  1187, -5034,  1669, -5034, 55845, -5034,  2121,  1793, -5034,
   83547,  1793, 83547,  1793, 83547,  1793, 83547,  1793, 83547, 83547,
   83547,  1793, -5034, -5034, -5034, 83547,  2637, 83547, 83547, -5034,
   -5034, -5034, 69939, 63621, 70425, -5034, -5034,   138,  1148, -5034,
   -5034,101489,  3115, 63621,  3024,  2998,  2998,  2998, -5034, -5034,
   -5034,  2940, 83547,  3000,  3003, 69939, 63621, -5034, 94239, 61677,
    2898,  2648, -5034, -5034, -5034, -5034, -5034,  1782,  3150,   265,
    3151, 31570,  2651,   245,   245,  2654,  3010, -5034, -5034, -5034,
     295,  2656,  2657, -5034,   266,   266,  2888,  2665,  2667, -5034,
     279,  2668,  3164,  3170,   288,  2671,  2673,  2674,  1437,   245,
   31570, -5034,  2675,   266,  2681,  2684,  2685,  3178,  2691, -5034,
    3179,  2692,  2693,   263,   270,  2694,  2696, -5034,  2665, -5034,
     259,  2699,  2704,  2708,  2710,  2719,  2721,  2722,  2724,  2725,
    2726,  2727,  2731, 31570, 31570, -5034, 27034,   832,  1148, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034,   202, -5034,   297, 50982,
   -5034,  2790, -5034, -5034,  2935, 31570, -5034, -5034, -5034,  3018,
    2728, -5034,   302, -5034, -5034, -5034,   832, -5034, -5034,  1186,
    2729, -5034,   438, -5034, -5034, -5034, -5034, -5034, -5034, 59247,
    3186, -5034,   386,  1148,   844,   381,  3131, 54873, 55359, -5034,
   -5034,  3008, -5034, 83547, -5034, -5034, 31570, 51471, -5034,   832,
     163, -5034, -5034, -5034, -5034,  1736, -5034, -5034, -5034,    84,
   -5034, 11851, -5034,  1755,  2309, 83547, 83547,  3205,  3113,  3114,
   -5034, -5034, -5034, 83547, 78687, -5034,  2320, -5034, -5034,  1657,
    1657, 31570,  1657,  1528,  1972, 29050, 32074,  3097,  2996,  1588,
    1680,  3098, -5034,  3001,  1906,  1944, 74799, 74799, 98613,  2922,
   -5034, 53415,  1886,   832,  2891,  2893,  2941, 57303,  2751,  2897,
    2899,  2943,  2900,  2901, 94725, -5034, -5034, -5034, -5034,  1624,
    1068,  1409,  2902,   236,   861,  3191, -5034,  1474,  2950, -5034,
   -5034, -5034,  4663,  8386, 83547,  3133,  9762,  3019,   349,  3020,
    2953, -5034, -5034,  2792,  3069,  2914,  2918,  3035,   349,   333,
   95211, -5034, -5034, -5034,  2802,  2803,  2804, -5034, -5034, -5034,
    4722, 25056, -5034,  2925,  2906,  2930, 83547, 67023,  1731,  3043,
     130,  1818,   290, 83547,  3125,  3042, 83547,  2800,  2944,   237,
    3126,  2801,  2087,   919,  3232,   919,   168,   938,  2806, -5034,
   -5034, -5034, -5034,  1946,  2105,  3041, -5034,  3137,  3180, 11067,
    2932,  2934,100537,  1418, 49482,  3226,  1546,  2965, -5034,  1546,
   83547,  2971,  2973, 83547,   349, -5034,  3278,   349,   349,  1817,
    3282,   787,   429,  2045,  2653,  2806,  1976, -5034,  2974,  2978,
     337, -5034,  3092, -5034, -5034,    46,  3004, 74799,   828,  2196,
    2806,  2988,  2990,  2801,  2801, 83547, 83547, 83547, 83547, 83547,
     228,  3320,  3321,  2995,   301,   274,  2851, -5034,  1546, 59733,
    3006, -5034,  1546, 83547,   817,  2199,  2806,  3007,  3009,  3031,
   -5034, -5034,  1232,  1776, -5034, -5034, -5034,  1635, -5034, 83547,
   -5034, 83547,  2354,101489,  3108, -5034,  2955, -5034,  2386,   349,
   -5034, 83547, 83547,  2390,  1493,  1397,  3110, -5034, -5034, 83547,
    3171,  2967, -5034,   322,  2861, -5034, -5034,  2979, -5034,  2979,
    2979,  2862,  2862,  2870, -5034, -5034, -5034,  1437,  2979,  2862,
   -5034,102441, -5034,    25,   854, -5034,  3346,  3349, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034,  1079,  1786, -5034,
   83547, 57303, -5034,  3362, -5034, -5034,101489,  3128,  3247, -5034,
   83547,  3144,  2881, -5034,  3284,  3012, -5034, -5034,   642, -5034,
    3249, 63621,   362,  1148,  3005, 83547,  3177, 83547, 83547, 83547,
   83547, -5034, -5034,  3149,  1105,   145, -5034, 59733, -5034,  3013,
   -5034, 83547,  1976,  3163,  3374,    92,  2086, -5034,  1726, 83547,
    2903,  3257, -5034, 83547,  2904,  3380, 83547,  3211, -5034,  1936,
   -5034,  3093, -5034,  2958, 63135,   280, -5034, -5034, -5034, -5034,
  101489, 83547, -5034, 95697, 63135,   280, 63621, 63621,  3285,   194,
    3291,  3029,  3292,  3046, 49482,   280,   286, 63621, 83547, 83547,
   83547, -5034, 83547, -5034, -5034, -5034, -5034, 83547, 83547, 63621,
   59733,  3294, -5034, -5034,  3296,   280, 83547, 83547, -5034, 11851,
    1806, -5034,   947, 60219, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034,   947, 83547, -5034, 83547, -5034, 83547, -5034, 83547, -5034,
   83547, -5034, -5034, -5034, 83547, -5034, 83547,  1858, -5034, -5034,
    1871,  1349, 83547, 83547,   770, 63135, 83547,  3184, 83547, 83547,
   83547, 83547, 83547, 83547,  3071,  2729,    19, -5034,   272, 74799,
    3192, -5034, -5034,  1893,  1829,   748, 83547, -5034, -5034, -5034,
   -5034, -5034, -5034, 70425, 69453,  3286,   117, 83547, -5034, -5034,
    3719, 31570,   832, 27538, -5034, -5034, -5034,  2933, 11851,  3037,
   31570, -5034, -5034, 31570,  2937,  2571,  2571, 31570, -5034, -5034,
   -5034, -5034,   987,  2571, -5034, 31570, 31570,  2571,  2571,  2979,
    2979, -5034,  4696, 31570, -5034, 49482, 31570, 35602, 24066, 31570,
    1829,  3074,  3022,  2571, -5034,  2571, -5034, 31570, 26530, -5034,
   31570,  3213, 31570, 31570,   381,  3214, 31570,   381, 31570,  2942,
   31570, 31570,  3437,  3437, 44517,  1882,  6740,  2945,   832, -5034,
    3119,  2571, -5034,  2571,  1096, -5034,   364,101489, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, 31570, 57303,
   -5034, -5034,  3090, -5034, -5034, -5034, -5034,   252, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, 83547, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   31570, -5034, -5034, -5034,  2947, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
    1850, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, 31570,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
     257, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034,  2951, -5034, -5034, 31570, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034,  3094, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, 31570, 31570, 31570, 31570, 31570, 31570, 31570,
   31570, 31570, -5034, 38088,   539, -5034, -5034, -5034,  3297,  3311,
     620,   441, 79173,  3307, 28042, 23056, -5034,   296, -5034, -5034,
   -5034, 83547,  3186, -5034, -5034,  3096, -5034, -5034, -5034, -5034,
   -5034,   304, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  2956,
   -5034, -5034, -5034, -5034,  2956, -5034,  2960,  5684, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034,  3300,  3302,   280, 83547,   229, 71397,  3090,  2951,
   -5034, 28546, -5034,  1922, -5034,  2959, 83547, 83547,  2320, -5034,
    2320, -5034,  3281, -5034,  2964, -5034,  9917,  3281, -5034, -5034,
   36100,  3140,  3277,  3221, -5034, -5034, -5034,  2969, 11851, 32578,
   32578, -5034,  2044, 11851,  2061, -5034, -5034, -5034, -5034, -5034,
   -5034,  1434, -5034, 83547,  3192,  3097,  1680,  3095,   181, 83547,
   -5034, 45503,  3217, -5034,  3436, -5034,102441, -5034,  2980, -5034,
  101965, 99585, -5034, -5034,   661, -5034,   529,  3122,  3127,  3173,
   63621, 83547, 83547, -5034, 57303, 63621, 83547, 83547, 63621, 83547,
   83547, -5034,  3413,  1367, 69453,  3175, 68967, -5034, -5034,  2989,
   83547,  3104,  3298,  3301,    36, -5034, -5034, 96183, -5034,  3250,
   63621, 83547, 83547, 31570,  3261, 83547, 83547, -5034,   311,  3145,
    3146, -5034, 83547,  3147, 63135,  3011, 83547, 83547, 83547,  3152,
     900, 63135,  3116, 49982, 83547, 83547, 83547, 83547,  3187, 83547,
   83547,  3314,   919,  2806,  1520, 74799,  1000,  2269,  2806,  3266,
   -5034,   379,   336, -5034, -5034, 63621, 83547,  3263, -5034, -5034,
   -5034, 79659,  3481,  3183, -5034, -5034,  3425,  3426, -5034, 96669,
   -5034, -5034, -5034,  1949, -5034, 63621, 63621, 83547, 12290, 83547,
    3252,103393, -5034, -5034,101489, -5034, 83547,  3253,103865,  8386,
   83547, 83547, 83547, 71883, 97155,  3254,104337,   280, 97641,  1458,
    1614, 83547, 72369, -5034, 83547, -5034, -5034, 57789, 63621, 83547,
    3165,   967, 57303, -5034, 83547,   638,  1005,   405,  3174, -5034,
   -5034,   280, 83547,  3123,  3255, -5034,  3262,  3499,  8386, -5034,
   -5034,  3181,  3182, 83547,  1061,  2375,  2806, 83547, 83547,  3033,
    1950,  3189,  3220, -5034, 83547, 90837, -5034, 63621,  2709, -5034,
    3239, 63621, 83547,  9739, -5034, -5034,   349, -5034, -5034, -5034,
   -5034, -5034, 83547, 83547,   349, 83547,   349,  1500, -5034, 63621,
   83547, -5034, -5034, -5034, 83547, 12543, 83547, 83547, 83547, 83547,
   63621, 83547, -5034, -5034,  1308,  1255,  1630,  1654,  3242, 83547,
    3377, 83547, 98127, 63621, 83547, 83547,  3422, 83547,  2130, -5034,
   -5034, -5034,  3223, -5034, 63621,  2709, -5034, 12980, 83547, 83547,
   83547, 63621,   822,   982,  3190,  3193,   256,  3264, -5034, -5034,
   -5034, -5034, -5034, -5034,  3353,  3525, 83547, -5034,  3363,  3364,
    3176,  3188,  3365,  1021, 83547, -5034, -5034, -5034, -5034, 83547,
    3368,  1021,  3312,   849, -5034, -5034,  2653, -5034, 31570,  3535,
  101489,  3063,  3064,  3206,  3208,  3209, -5034,  3081,  3216,  2571,
   -5034, -5034,  1879, -5034, -5034,  2000, -5034,  3076,  1105,  1828,
   -5034, 57303, 83547,   776,   170,  3438, 67509,  2730,  3439, 83547,
    3195, 83547,  2730, 83547, -5034,  2048, 69453, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034,  3440, -5034,  1148,  2568,
    2568,  2568,  2568, -5034, -5034, -5034, -5034,  3343,  2011, -5034,
    3091,  2568, 83547,  3268,  2730,  2568,   458,  3099, -5034,  1976,
    3453,  1239, 83547, 67509,  2007,  3194,  3244,  3571,  2086, 53901,
   -5034,  2568,  1148,  3351, -5034, 25532,  6979,  3355,  2568, 61677,
    3442,  3446,  3455, -5034, -5034,  2354, -5034,  3582, -5034,  3477,
     280,  2386, -5034,  2609, -5034, 83547, -5034, 83547, 83547, 83547,
   83547,  2390, -5034, -5034,  2609,  3360,   280,   280, -5034,  3366,
     280,  2609,  3290,  3471, 61677, -5034,   194, -5034, -5034, 31570,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  2004,
   -5034, 83547, -5034,  3448,  3449,  3450,  3117,  3120,  3222, 83547,
    3124, -5034,  3117,   349,  3117,  2729,  2729,  3117,  3120,  3117,
   62649,  3606,  3472,   219, -5034,   867,  1472,  3405, -5034, -5034,
    3185, -5034,101489, -5034, -5034, -5034, -5034, -5034, 83547,  3233,
     132,  3382,  3132, 62649,  3593,   280, -5034, 63135, -5034, -5034,
   -5034,  3287,  3306, 63135,  3402,  3256, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034,  3461, 83547,  2010, -5034, -5034,  1722, -5034,
    1772, 31570, 33082,   207, -5034, 10984,  2014, 31570,  3156,  3158,
    2016, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  3159,  3513,
   -5034,  3161,  2036,  2049,  3169,  3172, -5034, -5034,  5661,  3199,
   11036,  3200, 35602, 35602,  1522, -5034, -5034, 35602,  3201, -5034,
    2060, 10331,  3202,  3207,  3204,  3212,  3246, -5034,  3218,  3219,
   11256, 29554, 31570, 29554, 29554, 11626,  3202,  3224,  2065, 57303,
    5884,  3398, 11694,  2067, -5034, 31570, 57303,  6237, 31570,  6260,
   -5034,  2074,  6856, -5034, 31570, 83547,  3225,  3227, -5034, -5034,
    4696, -5034,  3259, -5034, 35602, 35602, -5034,  2063, 27034, -5034,
   -5034,  3531, -5034, -5034,  1579, -5034,  3203, -5034, -5034,  2187,
     324, 31570,  2947, 31570,  3323, 49482,  3084, 31570,  3433,  2040,
    2040,   482,   482,   310,   310,   310,  1894,   441, -5034, -5034,
   -5034,  3210,  3215,  3229,  3423,  2691, 31570, -5034,  2078,  2090,
   83547,  2700,  2917,  3339, -5034, -5034, 39578,  3289, -5034, 31570,
   31570, 31570,  3230, -5034,  3679, 11851,    79, -5034,  3681, -5034,
    1635,  2571,  1096, 55845, -5034, -5034, 31570, -5034, -5034, -5034,
    2320, -5034, -5034, -5034, -5034, -5034, 83547,  1829, -5034, -5034,
   -5034, -5034, 31570, -5034, -5034,   821,  1952,   634,  3443,  2297,
    2297,  2044,  3444, -5034, -5034,  3329, -5034, 31570,  2149, -5034,
    2163, -5034, -5034, -5034, -5034,  2729, -5034, -5034, -5034, 39578,
    3313,  3304, 44024,  3409, -5034, -5034, 83547,   137, -5034, -5034,
   -5034,  3231, -5034, -5034, 99585,  1786, -5034,101965, -5034,101965,
   -5034,  1786,  3672, -5034, 99585,  1748, 63621, 83547, 83547, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  3515,
   -5034, 63621, 63621,  3474, 83547,  3475,  3483, 31570,  1119, 83547,
    3236,  3241,   981,  3559, 83547, -5034,  3602,   280, -5034, -5034,
    3381, -5034, 11851, -5034, -5034, -5034, -5034, -5034, 63621, 83547,
   -5034, 61677, -5034,  2354,101489, -5034, -5034, -5034, 83547,  3342,
   83547, -5034, 83547, 83547, 83547,  2390, -5034, -5034, -5034, -5034,
    1534, -5034, -5034, 83547, 83547,   815,  3389,  3390, 83547, -5034,
    1270,  3092, 13183, 83547, 83547, 83547,  3570,  3279, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034,  3512, -5034, -5034, -5034, -5034,
   99585, -5034,  2609,   183,   819,  2806, -5034,103865, -5034,  3258,
    3260, -5034,  3267,  3269,   801,  3632,  3325, -5034,   105, -5034,
   -5034, -5034,  3273,  3502, -5034,105753, -5034, -5034,  1432, -5034,
   -5034, -5034, -5034, -5034,  3633,   280,104809,  3635, -5034,  3639,
     280, 83547, 83547, 83547, 83547, -5034, -5034, -5034, -5034, -5034,
   57303, 57303, 57303,  2095, -5034, -5034,  1148, -5034, -5034, -5034,
    3766, -5034, -5034, -5034,  3600, -5034,  2114, -5034,  1674, -5034,
   -5034,  3347, -5034, -5034,  3272, -5034,  3303, -5034,  3274, -5034,
   -5034,  3428, -5034,105281,  3280, -5034, 63621, 83547, 13256, 83547,
   83547, 83547,  1916, -5034,  1508,101489, -5034,101013, 63621, 83547,
   -5034, -5034, -5034,  3572,  3352,  3510, -5034,  1022,  3514, 63621,
    3406,  3288,  1640,  3288,   408, -5034, -5034, -5034,  3431, -5034,
   -5034,   876,  2443,  2806,  1976, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034,  1551,  1140,  2458,  2806,  3434, -5034,  3435,
   -5034, -5034, -5034,  3569,  3579,  3580,  3441,  3456,  3484,  3459,
    3460,  3485, -5034,  3463,  3493,  3464,  3500,  3466,   280,101489,
    3561,  1148,  3501,  3694,   280, -5034,  3473, -5034,  2568, -5034,
    3802, -5034, 83547, -5034,   992,  2706,  2806, -5034, -5034, -5034,
   -5034,   285,   285,   285,   285,  1148,   285, -5034, -5034,  3357,
    2568,  2568,  3359,  3361, -5034, -5034, -5034, 63621, 83547, -5034,
   -5034, -5034,  1021,101489,  3650,  1021,  1021, 83547, 83547,  1021,
   -5034, -5034, -5034,  3654,  3657,  1021, -5034, -5034, -5034, -5034,
    2757,  3348,  7305,  3356,  3064,  3350,  2571,   233,  1344,  1130,
    3533,  2571,  3625,  3354, -5034, -5034, 57303, 46982,  2055,  3646,
    3369,  3369,  3369,  3369,  3369,  3369,  3369, -5034,  1575,   292,
    2653, 61677, 83547, 61677, -5034,   170,  3502, 83547, 83547,  3795,
   83547,  3358,  3371, -5034, -5034, -5034, -5034, -5034, 63621,   805,
   63621,  2571, -5034, -5034,  3494, -5034, 83547,  2086,  3828,  3045,
     362,  3565,  1847,  3774,  3194, -5034, -5034, -5034, -5034, 83547,
   83547,  1105,  1148, -5034,  3379,  3384, -5034, 83547, -5034,  2568,
   83547, 83547, 83547,  3233,  3367,  3383,101489,   644,  3618,  3634,
    2801,  3860, 83547,  1829,  3194,  3399,  2119, -5034, -5034,  3532,
   83547, -5034,  2151,   136, -5034,  1148, 61677,100061, -5034,  4757,
   -5034, -5034,  1256, -5034,  3732, -5034, -5034,  1829,   280,101489,
   83547, -5034,   280,   194,  3516,   280,  3517,   280,   280, 83547,
   -5034, -5034, 83547, -5034, 83547, 59733,   280, -5034, 11851, -5034,
   -5034,  3581,  3585,  3586, 83547,  3117, 63135, -5034,  3388, 63621,
      53, -5034, -5034,  3641, -5034, -5034, -5034, -5034, -5034,  3771,
    3773, -5034,  3645, -5034, -5034, -5034,  1035, -5034, 63621, 69939,
     330, 63621, -5034,  2354, -5034, -5034,  2386,   349, -5034, 83547,
    3714, -5034, -5034, -5034,  3407,  2152,  3669, 11851,  3554, 31570,
   -5034,  3787,101489, -5034,  7402, -5034, -5034, -5034, -5034, 31570,
   -5034, -5034, -5034, -5034, -5034, 31570, -5034, 31570,  3764, -5034,
    3908,  3908,101489, 35602,  1737,  2681, 35602, 35602, 35602, 35602,
   35602, 35602, 35602, 35602, 35602, 38592,   471, -5034, -5034, 31570,
   31570,  3775,  3764, -5034,   218, -5034, -5034, -5034,  1206,  1206,
  101489,  3416,  3202,  3430,  3432, 31570, -5034, -5034,  2158, 31570,
   37102,  3445, 57303, -5034, 31570, 10430,  2173,  3523, 11775, 31570,
    3419, -5034, -5034, -5034,   832,  7420, -5034,  3880,  1148, 31570,
    1563,  2116, 31570,  2186, 31570,  3786, -5034, -5034, -5034,  3451,
   -5034, -5034,101489, 31570, 35602, 35602,  3553, -5034,  3965, 31570,
    3452,  5013, 27034, -5034,  3682,  3542, 45996, -5034,   842,   842,
     842,   842, -5034, 83547, 83547, 83547, 40071,  3792,  3454, 39085,
   80145,  3457,  1992, -5034, 80145, 80631, -5034,  3458, -5034,  3462,
     832, 31570,  3789,   210,   210,  3682, -5034, 31570, 30058,  3468,
   -5034,   844,  3470, -5034, -5034,  9765, -5034, -5034,  3476, -5034,
    3465, -5034,  1952, -5034, -5034, -5034, -5034, -5034,  3700, -5034,
   -5034, -5034,  3457, 33586,  3409, -5034,  2201, -5034, -5034, 28042,
   -5034, -5034,  2209, 45503,  3313, 28546,   832,  2211,  1749, -5034,
   -5034, 99585, -5034,  3589, -5034, -5034, -5034,  3369,  2609,  2609,
    1339,  3117,  3809,  1339,  7508, -5034, -5034, 40564, 83547, 83547,
   -5034, 83547,  2215,  1765, 83547, -5034, 83547, -5034, -5034, -5034,
   -5034,  3933, -5034, 83547, -5034, -5034,  3583,  3584, -5034, 83547,
   83547, 83547, 83547, -5034, -5034,  2358, -5034, -5034, 63621, 83547,
   -5034, -5034, -5034,  1244,  2761,  2806, -5034,  3614, -5034, -5034,
   -5034,  3781, -5034,  3931,  3624, 83547,   801, 41057, 41057, 41057,
   41553,  3267,  3269,   105, -5034,  3325,  3482, -5034, 83547,  2568,
    3486,101489,  3487, -5034,  1765, -5034,   966,  2801,   172, -5034,
   -5034,  3608, 83547, -5034,  3845,103865, 83547, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, 57789, -5034, -5034, -5034,
   83547, -5034, 57303, 46982, 57303, -5034, 83547,  3980, -5034,   949,
   83547,  3632, 42049, -5034,  1649,  1287,  2808,  2806, -5034,  3626,
   -5034,  3627,  3631,  3680,  1217,  1263,  3636,  3640,  3684,  3503,
    3504,  3505, -5034, -5034,   285,  3857,  1148, -5034, -5034,  1148,
    2609,  1148, 57303, -5034,  3909,  2030, -5034, -5034, -5034, 83547,
   83547, 83547, 83547, 83547,  3969,  3662, 83547, 83547, 83547, 83547,
   83547,  3870,  1116,  1931, 63621, 83547, 83547, 63621, 83547, 83547,
   83547, 83547, 83547, 83547, 83547, -5034,  3954,  3884,  2093,  3925,
    3651, 83547, -5034, 83547, -5034,  3092, 83547, 83547, -5034, -5034,
   -5034, -5034, -5034, -5034,   349,  3616, -5034,   349,   349, -5034,
   -5034, -5034,  3518,  1021, -5034, -5034,  3832,  3833, -5034,  1021,
    1021, -5034,   322, 57303, -5034,  3162, -5034,  2571,  2161,  3524,
   -5034,  3528, -5034, -5034, -5034, -5034, -5034, -5034,  3530, -5034,
    1096, -5034, -5034,  3465, -5034,  1946,  2105, -5034, -5034, -5034,
   -5034, -5034, -5034, 83547,  3369, -5034,  1291,  1257,  1301,  1427,
   81117, 81603, 82089,  3529, 83547, 83547, 35602, -5034,  1707,   909,
   -5034,  3831, 83547,  3637, -5034, -5034, -5034,  3752, 83547, -5034,
   -5034, -5034, -5034, -5034,  3543,  3916,  3932, -5034,  3728, 67509,
    2609, 63621, 63621,  2609, -5034,101489,  3555,  3194, 63621,   362,
    1726, 92295,  3655, -5034,  3550,  3914, -5034,  3558,  3556, -5034,
   -5034, 83547,  3502, -5034,  2217,   380,  2073,  3347, 67995,  2007,
    3889, -5034, -5034, -5034,  4000,  3716, -5034,  1829,  3568,  3233,
    3716, 46982, -5034,  4073,  1148,  3104, -5034, 99585, 31570, 31570,
   -5034,  3567, -5034,  3573,  8320, -5034,  2568, -5034, -5034, -5034,
   -5034, -5034, -5034,  3717, 83547, -5034, -5034,  3575,   280, -5034,
   -5034, 83547, -5034, 83547, -5034, -5034,   280,   280, -5034,  3755,
   -5034, 83547, 83547, 83547,  3117, -5034,   349, -5034,  3921, 62649,
   -5034, -5034, -5034, -5034, -5034, -5034,  3987,   117,  3934, -5034,
   -5034,  3894,  3895,  3896,  3898,  1088, -5034, -5034,  3978, 31570,
   11851, -5034,  3590, -5034, 11851,  7926, 11851,  3775, -5034,  2400,
    3942, -5034,  1227,  3592,  2400,  1122,  1122,   475,   475,   243,
     243,   243,  3908,   471, 11851, 11851, -5034, -5034, 31570, -5034,
   -5034, -5034,  3595, -5034, -5034, -5034,  3202, -5034, 34090,  8470,
    3803,  4052, -5034, -5034, -5034,  3701,  3702,  3599, -5034, 31570,
   34594,  3597,102441,  5783, 31570, -5034,  3601, -5034, -5034,  1096,
    1314, 35602, 35602,  1399, -5034,  1103, 31570,101489,  2219,  1399,
    2153,  2259, 31570, 31570,  6593,   540, 31570,  8558,  3603, 31570,
   99099, -5034, -5034, 83547, 83547, 83547, 83547, -5034, -5034, -5034,
   80145, 80631,  3605, 31570, 24562,  1992,  3609, 83547, -5034, -5034,
    3607, 39578,  3911,  3848, -5034, 39578,  3848,  1479,  3848,  3920,
   -5034, 46489, -5034, -5034,  3613, -5034, -5034, 23056,  1918, 11851,
    4072,  3957, 31570,  3615,  3619,  3621, 11851, 31570, -5034,  1148,
    1148, -5034, -5034, 49482, -5034, -5034,  3873, 11851, -5034,  1829,
   83547,   832,  2728,  3643, 83547, -5034,  3409, -5034, -5034,  3756,
    2227, -5034,   285, -5034, -5034, -5034, -5034,  3761, 69453,  3976,
   -5034, 31570,  2229, -5034,  3727,  4067,   346,  2256,  2258,  1765,
   -5034,  3637, -5034,  1752,  3955,   208, -5034,   280, -5034,101489,
   -5034, 83547, 83547, -5034, -5034, -5034, -5034,  2751, -5034, -5034,
   83547, 83547, 83547, 83547, -5034, 63621, 83547, -5034,   105,  3638,
   54387, 54387,  4127, -5034,  2263,   305, -5034,  2271,   320,  2280,
   54387,  4127,  2282,  2284,  3486, -5034, 41057, -5034,  3784,   993,
   -5034, -5034,   436, 57303,  2850,  3897, -5034, -5034,  3899,   285,
   83547, -5034,101489,   280,   280,   280,   280, -5034, -5034, -5034,
   -5034,  3648,  2290, -5034, 82575, -5034,   179,106225, -5034, -5034,
    2294,   105, -5034,   801,   801,  2189,  3949,  3269,  3642, -5034,
    3644,  4098,  3791, 83547, 83547, 83547, 83547, 63621, 83547, 83547,
    2571,  2571,101489,  3649, -5034,  2571,  2571,  3652, -5034, 63621,
   83547, 83547, -5034, -5034, -5034, -5034,  3909, -5034, -5034, -5034,
    2295, -5034,  3656,  4122,  3793, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, 63621, 83547, -5034,  3790, -5034, -5034, -5034, 83547,
   83547, 83547, 83547,  4019, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, 83547, -5034, -5034,  1148,  1148,
  101489,   280,   280, -5034, -5034, -5034, -5034,  2568, -5034, -5034,
    3963, -5034,  1021,  1021, -5034, -5034,   234,  2306, -5034, 42545,
   -5034, -5034,  3038,  1148,  3038,  2035, -5034, -5034,  3038, -5034,
    3686,  3038,  3712,  3038, -5034,  1765,  3661,  1938,  4011, -5034,
   -5034, -5034, -5034,  4016,   285, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
   31570, -5034,  1423,  2400, -5034, -5034, -5034, -5034,  3637,  2086,
    3785, 63135,  1039, -5034,  3999,   776, 67509,  2568,  2568,  1524,
   83547, -5034,  2609,  2609,  3788, 83547,  4144, -5034,   625, 83547,
    4054,  3778, -5034,  1148, -5034, -5034,  3194, 83547, 67509,  3233,
   -5034,  3910,  2308, -5034, -5034, -5034,  3776,  3634,  3674,  2007,
     276, 83547, -5034,  3779, 83061,  3347, -5034, -5034,  3399, -5034,
    4029,  3683, -5034, 11851, 11851,  1148,102917,  4757, -5034, 83547,
    4004,   280, -5034,   280,   280, -5034, -5034, 83547,  3117,  3117,
    3117, -5034,  3930, -5034, -5034,   280, 62649,  1088,  1088,  1088,
    1088, -5034, -5034, -5034,  4036, 11851, -5034, -5034, -5034, 35602,
    4037, -5034,  3689,101489,  3202, -5034,  3690,  2310,  2317, -5034,
   37595,  3901, -5034, -5034, -5034,  8621,  3801, 11851,  3858,  3691,
    3696, -5034, 31570,  6359, -5034, -5034,  1047,  1047,  1103,  2318,
   -5034, 35602, 35602,  1399,  1399, 31570,  1399, -5034, -5034,  8832,
    3929, -5034, -5034, -5034, -5034, -5034, -5034, -5034, 58275,  6633,
   80145,  3698, 83547,  1992, 39578, -5034, -5034,  1226, -5034, 39578,
    4007, -5034, 39578, 83547,  3705, 83547,    79, 35098, 31570,  3804,
   -5034, -5034, -5034,  3682, -5034,  1096,  3699, 83547, -5034, -5034,
    1187, -5034, -5034, -5034, -5034, -5034, 62649,  3952, 62649,  1765,
    9123,  3637, 40564, 50482, 83547, 82575, 82575,  3915,  3637,  3785,
   -5034, -5034, -5034, -5034, -5034, -5034,  3706, -5034, -5034, -5034,
    3853, -5034, -5034,   578,  3192,  3486, 41057,  4127,   235,101489,
     222, 41057, 31570, -5034, 31570,   222,  2326, -5034,  3713, -5034,
   54387, -5034,  2327, 83547,  2332, -5034,101489,  2333, -5034,  2568,
   -5034, -5034, -5034, -5034, -5034,  3954, -5034, -5034, -5034, -5034,
   46982,  3303, 83547, 83547, -5034, -5034,106225, -5034, -5034,   993,
    1729,   105,   105,  3735,  3738, -5034,  3718, -5034,  3949, 63621,
   83547, -5034,  3864, -5034, -5034, -5034, -5034, -5034, 43531, 49482,
   -5034,  1217,  3720,  3724,  1263, -5034, -5034, -5034, -5034, -5034,
   57303,  1148,  3909,  1148, -5034,   750,  3192, 83547,  1192,  1072,
    3827,  3117,  4084, -5034, -5034, -5034,  3954, -5034, -5034, -5034,
    1021, -5034, -5034, -5034,  2653,  4123, -5034, 57303, -5034, 58761,
   -5034, -5034, -5034,  1148, -5034,  1148,  3989, 83547, 52443,  1148,
   -5034,  1148,  3799,  1148, -5034, 63135,  4207,  4207, 83547, -5034,
   -5034,  9173,  3994, -5034,  3785,  4020,  4064, -5034,  3737, 83547,
    3961,  3743,  3744, -5034, -5034,  1124,  1124,  3502, 83547,  2345,
    1829,   362, 67509,  3502, -5034,  1787,  3746,  4108, -5034,  4219,
    3367,  3747, -5034,  4205, -5034, -5034, 67995,  3997,  3716, 83547,
    3634,  3943, -5034,  3947, -5034,  1447, -5034, -5034,  3758,  3757,
   -5034, -5034,101489, -5034, 83547, 40564, -5034,101965, -5034,  2351,
   -5034, -5034,  3289, 83547,   960, -5034, -5034, -5034, -5034, -5034,
   -5034,   330, -5034, -5034, -5034, -5034, 31570,   660, 35602,101489,
    2360, 31570, -5034, 31570, -5034,  4218, -5034, -5034, -5034,   144,
   -5034, -5034, 11851, -5034,  1047,  1047,  1399, -5034,  4220,  3682,
   -5034,  2366,  4238, 31570, -5034, 83547,  2379, -5034, 31570,  3765,
   -5034, -5034, 39578,  1226,  2398, 83547,  2405,101489,  3767,  3772,
    1132,  3777, 23561,  3763, -5034, 11851, 11851, 83547, -5034,  3782,
   -5034, -5034, -5034, -5034,    53,  1339,   330,  4067,  3785, -5034,
    3796, -5034, -5034,  1676,  1676, 83547,  3785, -5034, -5034, 83547,
    3923, -5034, -5034,  4250,  4271, -5034, -5034, -5034, -5034, -5034,
     210,   210, -5034, -5034, 54387,  4127, -5034, -5034, -5034, -5034,
   -5034, 57303, -5034,  3902, -5034, -5034, -5034, -5034, -5034, -5034,
   -5034,  3486,  1729,  1729,  1729, -5034, -5034,   919, -5034,  1055,
    3192, 83547,101489,  2386,   103, -5034,101489,101489, -5034, -5034,
   -5034, -5034, -5034,  3928, -5034, -5034, 83547, 83547, 83547, 83547,
   83547,   280, -5034,  3348,  1148, -5034, -5034,  2412, -5034, -5034,
   -5034, 83547,  3550, -5034,  3550, -5034, -5034, -5034, -5034,  4207,
     385, -5034, -5034, -5034,  1887,  4046, -5034,  1189,  4038,  3935,
    3794, -5034, 63135,  4290,  3968, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034,  4154,  3194,  3779, -5034, -5034, -5034,
   -5034, 31570,  4012,  1829,  2007,  3889,   785, -5034, -5034,  3347,
    2421,  3716, -5034, -5034,  4243,  4047,  4244,  1517, 83061, -5034,
   -5034,  2422, -5034, -5034,  8320,102917,  4189, -5034,  3918, 83547,
   -5034, -5034, -5034, 11851,   660,  2423, -5034,  2431,  2432,  4013,
    3919, -5034, 31570,  1400,  3458, 58275,  3805, -5034,  9225,  2438,
   -5034, 11851, 83547, -5034, -5034, -5034,  2448, -5034, -5034, 31570,
    3806, 31570, -5034, 35098,  3807, -5034,  4282, -5034, -5034,  4160,
   -5034, 82575,  3917, 49482,  1952,  1952,  2086, -5034,  1765, -5034,
   83547,101489,101489,  3811,  3813,  2450, -5034, 31570, -5034, -5034,
   -5034,  3486,  3486,  3812,  3967, -5034, -5034,  2455, -5034,  1513,
    4027,  4175,  2459,  2466, 83547,  3120,  3924,  3120, -5034,  3117,
   -5034,  1701, -5034, -5034, 58761,  3550, -5034, -5034, -5034,  4203,
    4149, -5034, -5034, -5034, -5034,   238, -5034,  4075,  4076, 83547,
   -5034,  3836, -5034,  2467, 83547, 83547,  4303,  4306, -5034,  9350,
   63135,  3779,  3634,  2007, -5034, -5034,  3837,  1575,  3910, -5034,
    3347,  4081, -5034,  4087,  1148,  3840,  3907, -5034,  3194, 40564,
    4757, -5034,   338, -5034, -5034, -5034, -5034, -5034, -5034, -5034,
    2964, 30562, 30562,  3841, -5034, -5034, 83547, -5034,  2474, -5034,
    2492, 35098,  2501, -5034, 83547,  3843, 62649,  1676,  3846, -5034,
    3844, -5034, -5034,  4020,  1765,  3192,  3850, -5034,  1148,   225,
   -5034, 11851, -5034, -5034,   919, 83547, 63135,  4305, -5034, -5034,
   -5034,  4027, -5034, -5034,  3192, 83547,  3926,  3913,  3878, -5034,
    4048, -5034,   935,   935,  4252, -5034,  3981, -5034, -5034,  3855,
   -5034,  4359,  3502, -5034,  1217,  1829, -5034,  3866, -5034,  3716,
    3634, 83547, -5034,  3910, -5034, -5034, -5034,  1148,  1148,  3716,
   -5034, -5034, -5034, -5034,  2080, 36604,  4051,   258, 10483,  4237,
   -5034,  4237, -5034,  2505, -5034, -5034,  2507, -5034, -5034, -5034,
     330,  1952, 31570,  1765, -5034,  4038, -5034, -5034, -5034,  3868,
    3192,  2386, 83547, -5034, -5034, -5034,  4180,  4236, -5034,  3906,
    3778, -5034,  4361, -5034,  1030, -5034, -5034, -5034, -5034, -5034,
    3649,  3779, 56817,  3347,  3716,  2511, -5034,  4126,  2513, -5034,
   -5034,  3876,  3289, -5034,  2417, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034,  4355, -5034, -5034, -5034, -5034, -5034,   358, -5034,
   -5034, -5034, -5034, -5034, -5034,  9728, -5034, -5034, -5034, -5034,
   -5034, 83547,  3936,  4173,  4251, -5034, -5034, -5034, -5034, -5034,
    2528, -5034, -5034, -5034, -5034,  3910,  3347,  3912,   542, -5034,
   -5034,  1148, 22068,  4130, -5034,  2200, -5034, -5034,  2221,  2338,
   31066,  4078, -5034,  3937, -5034, -5034,  1765, -5034, -5034,  2571,
    4110, -5034, 56817, -5034,  3910,  4350,  3900,  3938, -5034, -5034,
    1148, -5034,  2571, -5034,  4126, -5034,  3940,   203,   275,  1650,
    3941,   298,   313,  3948,   335, -5034,  1372,  2529, -5034, -5034,
    3944,  3904, -5034, -5034,  2417, -5034, -5034, -5034,    86, 63135,
   -5034, -5034,   785,  1294, -5034,   323,  3912, -5034, -5034, -5034,
    1148,  1148,  4156, 52929,  1148,  1148,  3962,  1148, -5034,  3038,
    3038,  1650, -5034,  3038,  3038,  3948,  3038, -5034, -5034, -5034,
   57303, 26026, 22562, -5034,   214, -5034, -5034, -5034, -5034,  3905,
    3922,   300,106225, -5034,  2530,   105, -5034,   801,   801,  3939,
   -5034, -5034, -5034, 83547, -5034,  3550, -5034, -5034, -5034, -5034,
   -5034, 83547, -5034, -5034,  2540, -5034,  1148,  3369,  3973, -5034,
    3347,  3945, -5034, 56817, 83547,106225, -5034, -5034,  1294,  1729,
     105,   105,   993,  3550,  2549, -5034, 57303, -5034,  2030,   126,
   -5034,  3946,  2550,  2558, -5034, -5034,  3486,  1729,  1729,  2560,
   -5034, -5034, -5034, -5034, -5034,  4195, -5034, -5034, -5034,  3486,
    3486, -5034,  2571, -5034, -5034,    86, -5034
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
    1687,  1467,   795,  1558,  1557,  1467,   298,     0,  1560,     0,
    1467,   463,  1218,     0,     0,     0,     0,   795,  1467,     0,
    1687,     0,     0,     0,     0,  1700,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1467,     0,     0,  1707,     0,
       0,     0,     0,  1700,     0,  1564,     0,     0,     0,     0,
       0,     2,     4,    59,    20,    86,    60,    87,    21,    67,
      68,    23,    22,    34,    33,    92,    93,    53,    17,    81,
      61,   126,   125,   127,    40,    36,    75,    29,    30,    37,
      41,    63,    42,    48,    54,   104,    62,    24,    58,    85,
      64,    90,    47,    11,    12,    49,    79,    13,    50,    80,
      14,    51,    15,    69,    94,    32,    65,    91,    66,     5,
      43,    77,    73,    10,    55,    56,    57,    82,    83,    84,
     109,    89,   121,    39,   118,    98,    99,   115,   100,   116,
       8,   101,    52,    16,   112,   111,   113,    76,    44,    78,
     110,    31,    26,   114,    18,    19,   117,    88,   107,   103,
     122,   120,   128,   105,    70,     6,     7,    95,    25,    46,
       9,    28,    27,    45,    38,   124,    35,  1560,    97,   108,
      96,    71,   102,    74,   106,   123,    72,   119,   129,  1660,
    1659,  1709,  1665,  1686,     0,  1676,  1466,  1465,  1451,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   794,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1477,  2271,  2286,  2287,  2288,  2289,  2291,  2292,
    2293,  2294,   429,  2295,  2296,  2297,  2298,  2299,  2300,  2301,
    2302,  2303,  2304,  2888,  2889,  2890,  2891,  2305,  2306,  2307,
    2308,  2309,  2310,  2311,  2892,  2893,  2312,  2313,  2314,  2315,
    2316,  2894,  2317,  2318,  2319,  2320,  2321,  2322,  2323,  2324,
    2326,  2327,  2328,  2329,  2330,  2334,  2336,  2337,  2338,  2339,
    2340,  2341,  2342,  2895,  2896,  2343,  2344,  2345,  2346,  2347,
    2348,  2349,  2351,  2352,  2353,  2354,  2355,  2356,  2357,  2359,
    2360,  2361,  2362,  2363,  2364,  2366,  2367,  2370,  2371,  2372,
    2897,  2374,  2375,  2376,  2898,  2377,  2380,  2381,  2899,  2382,
    2384,  2386,  2387,  2388,  2389,  2900,  2390,  2392,  2393,  2395,
    2396,  2397,  2399,  2400,  2401,  2402,  2404,  2405,  2406,  2407,
    2408,  2410,  2903,  2411,  2412,  2413,  2414,  2904,  2905,  2906,
    2415,  2416,  2417,  2418,  2419,  2420,  2421,  2422,  2423,  2424,
    2907,  2425,  2427,  2428,  2429,  2430,  2431,  2433,  2435,  2436,
    2437,  2438,  2439,  2440,  2441,  2442,  2444,  2446,  2447,  2448,
    2449,  2909,  2910,  2451,  2452,  2911,  2455,  2456,  2457,  2912,
    2458,  2913,  2459,  2460,  2461,  2462,  2463,  2464,  2465,  2467,
    2914,  2469,  2915,  2471,  2472,  2474,  2475,  2477,  2478,  2481,
    2916,  2917,  2484,  2482,  2483,  2485,  2486,  2487,  2488,  2489,
    2492,  2494,  2495,  2918,  2498,  2499,  2500,  2501,  2502,  2503,
    2505,  2506,  2507,  2508,  2509,  2510,  2512,  2514,  2515,  2517,
    2518,  2519,  2520,  2920,  2522,  2523,  2524,  2525,  2526,  2527,
    2528,  2529,  2532,  2533,  2534,  2535,  2536,  2537,  2921,  2538,
    2539,  2540,  2923,  2541,  2544,  2545,  2546,  2547,  2548,  2549,
    2550,  2551,  2552,  2553,  2924,  2555,  2556,  2557,  2558,  2559,
    2560,  2561,  2562,  2925,  2926,  2565,  2927,  2566,  2928,  2567,
    2568,  2569,  2570,  2571,  2572,  2573,  2574,  2575,  2576,  2577,
    2578,  2579,  2580,  2582,  2583,  2929,  2930,  2584,  2585,  2586,
    2587,  2588,  2590,  2591,  2592,  2593,  2594,  2596,  2597,  2931,
    2932,  2933,  2934,  2935,  2936,  2937,  2938,  2939,  2598,  2599,
    2601,  2290,  2325,  2331,  2332,  2333,  2335,  2350,  2358,  2365,
    2368,  2369,  2373,  2378,  2379,  2383,  2385,  2902,  2901,  2391,
    2394,  2398,  2403,  2409,  2426,  2432,  2434,  2908,  2443,  2445,
    2450,  2453,  2454,  2466,  2468,  2470,  2473,  2516,  2476,  2479,
    2480,  2490,  2491,  2493,  2496,  2497,  2504,  2511,  2513,  2919,
    2521,  2530,  2531,  2922,  2542,  2543,  2554,  2563,  2564,  2581,
    2589,  2595,  2600,   428,  1649,  2241,  2272,  2273,  1559,  1537,
     795,     0,  1454,   462,     0,     0,     0,     0,     0,     0,
       0,   989,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   221,     0,     0,   486,   485,     0,     0,     0,
    1190,   491,     0,   954,   683,     0,   682,     0,     0,     0,
       0,     0,     0,   783,  1606,  2482,  1604,  1650,   299,   302,
     303,   300,   301,  2263,     0,  1305,  1306,  1308,     0,     0,
    1318,  1026,  1027,     0,  1025,     0,  1029,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,  1028,  1018,     0,
    1015,     0,     0,     0,  1024,     0,  1019,  1034,     0,     0,
       0,  1455,  1603,   492,  1584,     0,  1582,  1578,  1579,  1580,
    1560,  1569,  1581,  1574,  1576,  1575,  1577,  1573,  2262,  2287,
    1128,  1128,  1128,  1128,  1125,  1126,  1128,  1128,  1128,  2505,
       0,     0,  1107,     0,  1109,  2268,  1128,  1133,   552,   552,
     552,     0,  1132,  1137,   552,  1448,  1486,  2246,  1699,     0,
    1108,  1447,  2565,  1595,     0,     0,     0,  1322,     0,  1323,
       0,  2524,  1459,   283,  2536,  2925,  2565,   282,   277,   278,
     251,  2292,     0,     0,  1132,     0,  1456,  1457,  1091,  1706,
    1704,  2227,  2310,  2324,  2429,   274,  2519,  2525,  2536,  2925,
    2565,  2597,   230,   240,   235,     0,   292,  2536,  2925,  2565,
     288,  1477,     0,  1677,  1801,  2237,     0,  1450,  1449,  1563,
       0,  1566,     0,  1763,  2500,  1681,  1683,  1568,     0,     0,
    1674,     0,     0,     1,  1687,  1562,  1703,  1703,     0,  1703,
       0,  1666,  1674,  1669,  1673,     0,     0,     0,     0,  2271,
    2940,  2941,  2942,  2943,  2944,  2945,  2946,  2947,  2948,  2949,
    2950,  2951,  2952,  2953,  2954,  2955,  2956,  2957,  2958,  2959,
    2960,  2961,     0,     0,  2247,  2272,  2276,     0,  1037,     0,
     157,  2242,  1178,     0,     0,     0,     0,  2241,     0,     0,
       0,     0,     0,  2277,     0,  2264,  2278,  2279,  2280,     0,
    2397,     0,     0,     0,  2129,  2314,  2377,  2139,  2137,  2138,
    2131,  2132,  2133,  2134,  2135,  2136,     0,  1303,  2130,     0,
     199,   157,     0,     0,  2397,     0,     0,     0,     0,     0,
    2397,     0,     0,     0,     0,     0,   199,  2433,   157,  2397,
       0,     0,     0,     0,     0,     0,  1471,     0,     0,     0,
    1473,  1476,  1452,  1540,     0,  2237,     0,     0,  1068,  1058,
       0,  1069,  1059,  1064,     0,  1071,     0,     0,  1061,     0,
       0,     0,  1072,     0,  1060,  1062,  1074,  1063,  1070,     0,
       0,  1065,  1066,     0,     0,     0,  1463,   552,   435,     0,
       0,     0,     0,   157,  1527,     0,  2397,   157,     0,     0,
     490,   489,   157,   488,   487,  2314,  2377,     0,  1217,   157,
    2397,     0,   223,   865,   798,     0,     0,   943,  2433,   157,
       0,     0,     0,     0,     0,     0,   686,     0,     0,     0,
    1193,     0,     0,   782,   795,  1607,  1605,     0,  1309,   276,
     275,  1307,  2397,     0,   377,     0,     0,  2397,  1514,  1023,
    1016,     0,     0,  1022,  2397,     0,  2397,  2266,   214,     0,
    1020,  2314,  2377,  2397,     0,     0,  2397,   206,  2397,     0,
    2397,   377,  2397,   799,     0,  2397,     0,  2397,  2433,   208,
       0,     0,     0,  2397,   377,  1035,     0,  1600,     0,  1583,
    1687,  2929,  1589,     0,  1585,  1592,  1588,  1584,  1128,  1127,
       0,  1128,     0,  1128,     0,  1128,     0,  1128,     0,     0,
       0,  1128,  2269,  2270,  1110,     0,  1134,     0,     0,  1141,
    1140,  1139,     0,     0,     0,  1142,  1805,  1625,     0,  1445,
    1462,     0,     0,     0,  1193,  1325,  1325,  1325,  1458,   281,
     279,     0,     0,     0,     0,     0,     0,  1464,     0,     0,
       0,     0,  2250,  2252,  2253,  2140,  2217,     0,  2889,  2890,
    2891,  2202,     0,  2892,  2893,  2894,  2942,  2038,  2025,  2034,
    2039,  2026,  2028,  2035,  2895,  2896,  2356,  2897,  2898,  2260,
    2899,  2900,  2904,  2905,  2906,  2907,  2030,  2032,  2909,  2910,
       0,  2261,  2912,  2913,  2463,  2915,  2916,  2918,  2920,  2036,
    2923,  2924,     0,  2925,  2926,  2927,  2928,  2259,     0,  2037,
    2930,  2932,  2933,  2934,  2935,  2936,  2937,  2938,  2939,     0,
    2902,  2901,  2908,     0,     0,  2234,     0,  2002,     0,  1847,
    1848,  1870,  1871,  1849,  1876,  1877,  1889,  1850,     0,  2233,
    1914,  2092,  2000,  2021,  2008,     0,  1999,  2001,  1995,  1689,
    2226,  2228,     0,  1996,  2249,  2251,  2209,   243,   294,     0,
     295,  2235,  2536,   231,   273,   245,   272,   246,   244,     0,
    2312,   232,     0,     0,   233,     0,     0,     0,     0,   291,
     289,     0,  1453,     0,  1803,  1802,     0,     0,  2215,  2238,
    1044,  1550,  1551,  1549,  1552,     0,  1546,  1548,  1565,  1560,
    2222,  2221,  2223,     0,  1682,     0,     0,     0,     0,     0,
    1664,  1663,     3,  2385,  2521,  1553,  1568,  1701,  1702,     0,
       0,     0,     0,     0,     0,     0,     0,  1753,  1717,  1718,
    1720,  1750,  1754,  1762,     0,  1670,     0,     0,  1807,     0,
    1764,     0,     0,  2248,     0,     0,     0,     0,  1038,     0,
       0,     0,     0,     0,     0,   156,  1512,   285,  1510,     0,
       0,     0,     0,     0,     0,     0,  1519,     0,     0,   212,
     213,   810,   795,     0,     0,  2397,     0,     0,     0,     0,
       0,  1257,  1264,     0,     0,     0,     0,     0,     0,     0,
       0,  1258,  1256,  1259,     0,     0,     0,   287,  1268,  1289,
    1292,     0,  1168,     0,     0,     0,     0,     0,  1376,     0,
       0,  1376,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   321,
     362,   372,   774,     0,     0,     0,   777,     0,  2397,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   161,     0,
       0,     0,     0,     0,     0,   761,   773,     0,     0,     0,
       0,     0,   770,     0,   157,   313,   754,   758,     0,     0,
       0,   874,   873,  1517,  1516,     0,     0,     0,  1376,     0,
     304,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   421,   422,     0,     0,
       0,   161,     0,     0,     0,     0,   315,     0,     0,     0,
     134,  2265,     0,     0,  1472,  1469,  1470,     0,  1475,     0,
    1536,     0,     0,     0,     0,  1076,     0,  1073,     0,     0,
    1067,  2314,  2377,     0,     0,     0,     0,  1082,  1081,     0,
       0,   465,   434,     0,     0,  2274,  1858,  1887,  1865,  1887,
    1887,  1854,  1854,  1867,  1855,  1856,  1894,     0,  1887,  1854,
    1859,     0,  1857,  1897,  1897,  1882,     0,  1839,  1840,  1841,
    1842,  1868,  1869,  1843,  1874,  1875,  1844,  1911,  1854,  2275,
       0,     0,   952,     0,  1489,  1526,     0,     0,     0,   804,
       0,  2397,     0,   159,   990,     0,   941,   491,     0,   159,
       0,     0,   217,     0,   869,     0,     0,     0,     0,     0,
       0,   889,   888,     0,     0,     0,   942,     0,   159,     0,
     134,     0,   757,  2397,     0,   552,   552,   685,   492,     0,
       0,     0,  1192,  1195,     0,     0,     0,     0,  1653,  1656,
    1654,     0,  1652,     0,     0,   377,   375,   376,   938,  1317,
       0,     0,  1017,     0,     0,   377,     0,     0,  2397,   377,
    2397,     0,  2397,     0,     0,   377,   377,     0,     0,     0,
       0,   870,     0,  1033,  1031,  1030,  1032,     0,     0,     0,
       0,     0,   146,   144,  2397,   377,     0,     0,  1012,  2150,
       0,  1571,  1687,     0,   262,   263,   261,  1590,   264,  1591,
    1587,  1687,     0,  1118,     0,  1122,     0,  1113,     0,  1119,
       0,  1114,  1111,  1112,     0,  1117,     0,     0,   553,   555,
       0,     0,  2340,  2355,     0,  2386,  2419,  2420,  2525,  2532,
       0,  2558,  2569,  2490,     0,  1143,  1173,  1138,     0,     0,
    1635,  1446,  2156,     0,  1687,     0,     0,  1324,  1321,  1320,
    1319,   280,   252,     0,     0,     0,  1175,  2524,  1461,  1090,
     795,     0,  1997,     0,  2005,  2006,  1886,  1873,  2201,     0,
       0,  1881,  1880,     0,     0,     0,     0,     0,  1863,  1862,
    1861,  2004,  2166,     0,  1860,     0,     0,     0,     0,  1887,
    1887,  1885,  1934,     0,  1864,     0,     0,  2179,     0,  2185,
       0,     0,     0,     0,  1893,     0,  1891,     0,     0,  1970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1918,  1919,     0,  2002,  2150,     0,  2003,  2256,
       0,     0,  1879,     0,  1911,  2231,  2140,     0,  2610,  2611,
    2612,  2613,  2605,  2615,  2616,  2617,  2618,  2606,     0,     0,
    2619,  2620,  2607,  2882,  2621,  2622,  2623,  2220,  2842,  2883,
    2843,  2844,  2624,  2625,  2626,  2627,  2628,  2629,  2630,  2631,
    2632,  2633,  2634,  2845,     0,  2635,  2636,  2637,  2638,  2639,
    2640,  2642,  2643,  2644,  2645,  2649,  2650,  2651,  2652,  2653,
    2847,  2848,  2654,  2655,  2656,  2657,  2658,  2659,  2660,  2661,
    2662,  2663,  2664,  2665,  2666,  2667,  2668,  2669,  2671,  2672,
    2675,  2676,  2677,  2849,  2678,  2679,  2850,  2682,  2851,  2683,
    2685,  2884,  2686,  2687,  2688,  2852,  2689,  2691,  2692,  2694,
    2148,  2695,  2696,  2697,     0,  2698,  2700,  2701,  2702,  2703,
    2704,  2855,  2705,  2706,  2707,  2708,  2856,  2857,  2858,  2709,
       0,  1948,  2710,  2711,  2712,  2713,  2714,  2859,  2715,  2146,
    2717,  2718,  2719,  2720,  2721,  2723,  2724,  2725,  2726,  2727,
    2728,  2730,  2732,  2733,  2734,  2860,  2861,  2736,  2737,  2862,
       0,  2739,  2740,  1950,  2741,  2863,  2742,  2864,  2743,  2744,
    2745,  2746,  2747,  2748,     0,  2865,  2886,  2866,  2751,  2752,
    2754,  2756,  2867,  2868,  2761,  2759,  2760,  2762,  2763,  2764,
    2765,  2768,  2769,  2770,  2869,  2771,  2772,  2773,  2774,  2775,
    2776,  2777,  2778,  2779,  2781,  2782,  2783,  2784,  2785,  2786,
    2871,  2787,  2788,  2789,  2790,  2791,  2792,  2793,  2796,  2797,
    2798,  2799,  2872,  2800,  2801,     0,  2802,  2874,  2805,  2806,
    2807,  2808,  2809,  2810,  2811,  2812,  2875,  2814,  2815,  2604,
    2816,  2817,  2818,  2876,  2877,  2821,  2878,  2822,  2879,  2823,
    2824,  2825,  2826,  2827,  2828,  2829,  2830,  2831,  2832,  2833,
    2834,  2837,  2880,  2881,  2887,  2835,  2836,  2838,  2839,  2840,
    2841,  2614,  2641,  2646,  2647,  2648,  2846,  2670,  2673,  2674,
    2680,  2681,  2684,  2853,  2854,  2690,  2693,  2699,  2716,  2885,
    2722,  2729,  2731,  2735,  2738,  2749,  2750,  2753,  2755,  2757,
    2758,  2766,  2767,  2780,  2870,  2794,  2795,  2873,  2803,  2804,
    2813,  2819,  2820,  2139,  2137,  2138,  2131,  2132,  2133,  2134,
    2135,  2136,  2144,  1931,     0,  2232,  2602,  2603,     0,  2094,
       0,  1930,     0,  1766,     0,     0,  2254,  2210,   296,   297,
     293,     0,     0,   248,   247,     0,   266,   270,   271,   242,
     269,     0,   265,   250,  2083,  2082,   249,   241,   238,   236,
     253,   255,   256,   239,   237,   290,     0,     0,  2281,  2962,
    2963,  2964,  2965,  2966,  2967,  2968,  2969,  2970,  2971,  2972,
    2973,  2974,  2975,  2976,  2977,  2978,  2979,  2980,  2981,  2982,
    2983,  2984,  2986,  2987,  2988,  2989,  2991,  2992,  2993,  2994,
    2995,  2996,  2997,  2998,  2999,  3000,  3001,  3002,  3003,  3004,
    3005,  3006,  3007,  3008,  3009,  3010,  3011,  3012,  3013,  3014,
    3015,  3016,  3017,  3018,  3019,  3020,  3021,  3022,  3023,  3024,
    3025,  3026,  3028,  3029,  3030,  3031,  3032,  3033,  3034,  3035,
    3036,  3037,  3038,  3039,  3040,  3041,  3042,  3043,  3044,  3045,
    3046,  2985,  2990,  3027,  2212,  2211,  2244,  2282,  2283,  2284,
    2285,  2216,     0,     0,   377,  1544,     0,  1541,     0,     0,
    2225,     0,  1684,     0,  2239,     0,     0,     0,  1568,  1561,
    1568,  1554,  1680,  1679,  1710,  1711,  1210,  1678,  1737,  1738,
       0,     0,     0,     0,  1759,  1757,  1728,  1721,  1727,     0,
       0,  1725,     0,  1729,  1914,  1752,  1668,  1715,  1716,  1719,
    1667,     0,  1755,     0,  1635,  1753,  1720,  1622,     0,     0,
    1808,     0,  1232,  1234,     0,  1233,     0,  1236,     0,  1245,
       0,     0,  1231,  1250,     0,  1239,  1237,     0,     0,     0,
       0,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
    2558,   284,  1508,     0,     0,     0,     0,  1177,  1176,     0,
       0,  1197,     0,     0,     0,  1522,   541,     0,   374,     0,
       0,     0,     0,     0,     0,     0,     0,   936,   933,     0,
       0,   932,     0,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   306,   844,     0,  1376,     0,   877,     0,
    1266,     0,     0,  1269,  1265,     0,     0,     0,  1267,  1262,
    1263,  2525,  2536,  2565,   286,  1270,     0,     0,  1291,     0,
    1290,  1288,  1220,     0,  1221,     0,     0,     0,     0,     0,
       0,   642,   323,   336,     0,  1375,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   377,     0,     0,
       0,     0,     0,   357,     0,   366,   365,     0,     0,     0,
       0,     0,     0,   370,     0,     0,     0,     0,     0,   369,
     359,   377,     0,     0,     0,   363,     0,     0,     0,   775,
     776,     0,     0,     0,  1376,     0,   317,     0,     0,     0,
       0,     0,     0,  1304,     0,     0,   202,     0,   198,   201,
       0,     0,     0,     0,   760,   772,     0,   764,   765,   762,
     766,   767,     0,     0,     0,     0,     0,     0,   759,     0,
       0,   867,   866,   872,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,  1327,     0,     0,     0,     0,     0,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,   205,
     880,   881,     0,   882,     0,   203,   204,     0,     0,     0,
       0,     0,     0,   140,     0,     0,     0,     0,   260,  1468,
    1474,  1539,  2245,  1538,     0,     0,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,  1077,  1078,  1079,  1080,     0,
       0,     0,     0,     0,   439,   440,   157,   438,     0,  1839,
       0,  1833,  1829,  1900,  1901,  1902,  1899,  1912,  1898,     0,
    1845,  1903,  1854,  1851,   953,     0,   957,   960,     0,  1487,
     512,     0,     0,   801,   844,     0,   494,   210,     0,     0,
       0,     0,   155,   221,   223,   492,     0,   222,   224,   226,
     227,   228,   225,   229,   864,   868,     0,   797,     0,     0,
       0,     0,     0,   890,   894,   893,   897,   895,     0,   891,
       0,     0,  1825,     0,   197,     0,   131,     0,   753,   756,
       0,     0,     0,   494,   586,   388,     0,     0,   552,     0,
     940,     0,     0,     0,  1194,     0,     0,     0,     0,     0,
       0,     0,     0,  1651,  1655,     0,  1295,     0,  1515,  2397,
     377,     0,  1293,   215,  2267,     0,  1013,     0,     0,     0,
       0,     0,  1297,  1009,   207,     0,   377,   377,   800,     0,
     377,   209,     0,     0,     0,   792,   377,  1036,  1602,     0,
    1572,  1586,  1570,  1115,  1124,  1123,  1121,  1120,  1116,     0,
    1135,     0,   551,     0,     0,     0,  1149,  1150,     0,     0,
    1148,  1166,  1151,     0,  1153,  1145,  1144,  1154,  1156,  1155,
       0,     0,  1175,     0,  1632,     0,  1630,     0,  1806,  1634,
    1637,  1594,     0,  1593,  1597,  1599,  1598,  1596,     0,   680,
       0,     0,  1132,     0,     0,   377,  1460,     0,  1092,  1093,
    1099,     0,     0,     0,     0,     0,  1100,  1096,  1097,  1098,
    1101,  1102,  1103,     0,     0,     0,  2218,  2162,     0,  2163,
       0,     0,     0,  2200,  2194,     0,     0,     0,     0,     0,
       0,  2167,  2170,  2171,  2172,  2169,  2173,  2168,     0,     0,
    2174,     0,     0,     0,     0,     0,  1884,  1883,     0,     0,
       0,     0,     0,     0,     0,  1973,  2008,     0,     0,  2124,
       0,  2150,  2184,     0,  2009,     0,     0,  1895,     0,     0,
       0,     0,     0,     0,     0,  2150,  2190,     0,     0,     0,
       0,  1914,  2081,     0,  2078,     0,     0,     0,     0,     0,
    2055,     0,     0,  2217,     0,     0,     0,     0,  2257,  1915,
    1932,  2230,     0,  2219,     0,     0,  1916,  1939,     0,  2191,
    1966,     0,  1971,  1954,     0,  1947,     0,  1952,  1956,  1935,
    2220,  2149,     0,  2147,     0,     0,  1933,     0,  1928,  1926,
    1927,  1920,  1921,  1922,  1923,  1924,  1925,  1929,  2128,  2126,
    2127,     0,     0,     0,  2102,     0,     0,  1951,  2388,  2429,
       0,  1700,  1700,  1700,  1688,  1698,     0,  1820,  2229,     0,
       0,     0,     0,  2013,     0,  2154,  1709,  2152,  2247,  2236,
       0,     0,  1911,     0,  1804,  2213,     0,  1042,  1043,  1041,
    1568,  1547,  1543,  1542,  2224,  1567,     0,  1687,  1662,  1661,
    1555,  1556,     0,  1208,  1209,     0,  1213,  2920,  2522,     0,
       0,     0,     0,  1730,  1760,     0,  1751,     0,  2250,  1731,
    2249,  1732,  1735,  1736,  1726,  1761,  1756,  1672,  1671,     0,
    1823,     0,     0,  1619,  1612,  1809,     0,  1766,  1639,  1641,
    1642,     0,  2217,  1235,     0,  1854,  1246,     0,  1230,     0,
    1229,  1854,     0,  1247,     0,  1854,     0,     0,     0,  1404,
    1330,  1380,  1040,  1405,  1331,  1381,  1406,  1332,  1509,     0,
    1511,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   915,  2397,   377,  1520,  1407,
       0,  1333,   373,  1521,  1382,  1525,   935,   934,     0,     0,
    1383,     0,   809,     0,     0,   814,   815,   816,     0,     0,
       0,   817,     0,  2314,  2377,     0,   822,   829,   834,   824,
       0,   835,   830,     0,     0,     0,     0,     0,     0,   841,
     848,     0,     0,     0,     0,     0,     0,     0,  1273,  1275,
    1274,  1260,  1261,  1408,  1336,     0,  1384,  1272,  1271,  1219,
       0,  1337,   211,     0,     0,   310,   324,     0,  2609,     0,
       0,  2746,  2806,  2880,   642,   637,   635,   641,   611,   638,
     400,  2608,  1835,   850,   915,   405,   403,   409,  1378,   343,
     356,   351,   352,   350,  2397,   377,   405,  2694,   412,  2397,
     377,     0,     0,     0,     0,   353,   348,   349,   345,   358,
    2291,  2357,  2537,     0,   854,   856,     0,   861,   367,  1351,
       0,   384,   383,   382,     0,   371,     0,   389,   392,   368,
     341,   361,   344,   342,     0,   601,   597,   600,     0,   420,
     338,     0,   364,   405,     0,   322,     0,     0,     0,     0,
       0,     0,     0,  2243,     0,     0,  1299,     0,     0,     0,
     200,  1365,   177,     0,     0,     0,   168,     0,     0,     0,
       0,   193,     0,   193,     0,   160,   162,   176,     0,  1414,
    1341,     0,     0,   314,   755,   763,   768,  1345,   771,  1394,
     769,  1421,  1342,     0,  1376,     0,   305,     0,  1343,     0,
    1388,  1416,  1367,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1528,     0,     0,     0,     0,     0,   377,     0,
       0,     0,  1378,  2397,   377,  1415,     0,  1372,     0,  1402,
       0,   423,     0,  1366,     0,     0,   316,  1347,  1396,  1374,
    1417,     0,     0,     0,     0,     0,     0,   147,   148,     0,
       0,     0,     0,     0,   139,   138,   133,     0,     0,   258,
     257,   259,     0,     0,     0,     0,     0,     0,     0,     0,
    1084,  1051,  1083,     0,     0,     0,  1045,   464,   432,   433,
     435,   444,     0,  1834,  1830,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1852,   956,     0,     0,     0,     0,
    1507,  1507,  1507,  1507,  1507,  1507,  1507,  1488,  1518,     0,
     157,     0,     0,     0,   803,   843,   850,     0,     0,     0,
       0,     0,   493,   497,   504,   501,   502,   503,     0,     0,
       0,     0,   178,   158,     0,   998,     0,   552,     0,   223,
     216,     0,     0,     0,   388,   951,   949,   948,   950,     0,
       0,     0,   973,   947,     0,  1824,  1826,     0,   145,     0,
       0,     0,     0,   680,   496,     0,   555,     0,     0,   590,
       0,     0,     0,     0,   388,  2274,     0,   969,   939,     0,
       0,  1224,     0,  1242,  1225,     0,     0,     0,  1279,  1284,
    1280,  1252,     0,   945,   780,  1657,  1658,     0,   377,     0,
       0,   845,   377,   377,     0,   377,     0,   377,   377,     0,
    1443,   871,     0,   923,     0,     0,   377,  1011,  2151,  1136,
     554,     0,     0,     0,     0,  1147,     0,   778,  1152,     0,
    1165,  1160,  1162,     0,  1169,  1633,  1626,  1628,  1627,     0,
       0,  1624,     0,  1623,  2157,  1010,     0,   752,     0,     0,
     377,     0,  1170,     0,  1094,  1095,     0,     0,  1104,     0,
       0,  1705,  2160,  2161,     0,     0,  2950,  2197,     0,     0,
    2195,     0,     0,  2051,     0,  2027,  2029,  1853,  2041,     0,
    1866,  2052,  2053,  2031,  2033,     0,  2141,     0,     0,  2042,
    1975,  1976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1988,  1987,  2043,  2123,     0,
       0,  2182,  2183,  2044,     0,  2012,  2007,  1896,  1897,  1897,
       0,     0,  2189,     0,     0,     0,  2049,  2058,     0,     0,
       0,     0,     0,  2065,     0,  2086,     0,     0,     0,     0,
    2208,  2204,  2054,  2056,  1998,  2151,  1888,  1889,     0,     0,
       0,     0,     0,     0,     0,     0,  1972,  1955,  1949,     0,
    1953,  1957,     0,     0,     0,     0,  1941,  1967,  1937,     0,
       0,  1943,     0,  1968,     0,     0,     0,  2020,  1700,  1700,
    1700,  1700,  1697,     0,     0,     0,     0,  2522,     0,     0,
    1787,  1765,  1767,  1774,  1787,  1792,  2022,  1818,  2023,     0,
    2237,     0,  1740,  1709,  1709,  1709,  2019,     0,     0,     0,
    1708,   234,     0,   267,   254,     0,  1545,  2240,     0,  1712,
       0,  2142,  1213,  1211,  1212,  1714,  1734,  1733,     0,  1724,
    1758,  1722,  1621,     0,  1619,  1614,     0,  1615,  2217,     0,
    1611,  1646,     0,     0,  1823,     0,  1645,     0,  1854,  1227,
    1228,     0,  1251,     0,  1403,  1329,  1379,  1507,  1180,  1181,
       0,  1179,     0,     0,     0,   540,  1196,     0,     0,     0,
     915,     0,     0,   544,     0,  1523,     0,  1422,  1364,   811,
     812,     0,   823,     0,   832,   831,     0,     0,   819,     0,
       0,     0,     0,   818,   837,   784,   838,   840,     0,     0,
     839,   842,   847,  1376,     0,   878,  1353,     0,  1400,  1254,
    1276,     0,  1222,     0,     0,     0,   642,     0,     0,     0,
       0,     0,     0,   611,   636,   635,     0,   640,     0,     0,
     615,     0,     0,   512,   337,   404,     0,     0,     0,   325,
     335,     0,     0,   340,  2694,     0,     0,   333,   354,   346,
     355,   347,   858,   859,   857,   853,     0,   860,   862,   415,
       0,   386,     0,     0,     0,   360,     0,     0,   599,     0,
       0,     0,     0,  1410,     0,  1376,     0,   318,  1349,     0,
    1398,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1411,  1385,     0,     0,     0,   165,   164,     0,
     175,     0,     0,   173,     0,     0,   184,   185,   174,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   424,   379,     0,   976,     0,
       0,     0,   426,     0,  1326,     0,     0,     0,   149,   153,
     152,   154,   151,   150,     0,   141,   142,     0,     0,  1409,
    1338,  1046,     0,     0,  1047,  1055,     0,     0,  1048,     0,
       0,  1057,     0,     0,   431,   441,   915,     0,     0,     0,
    1837,     0,  1905,  1906,  1907,  1908,  1909,  1910,     0,  1904,
    1911,   958,   967,  2463,   962,  2131,  2132,   965,   959,   961,
     964,   966,   963,     0,  1507,  1506,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   526,     0,     0,
     520,     0,     0,  1284,   511,   514,   515,     0,     0,   804,
     807,   805,   806,   836,     0,     0,     0,   533,     0,     0,
     180,     0,     0,   181,   179,     0,     0,   388,     0,   219,
     492,     0,     0,   796,   896,   899,   892,     0,   972,   974,
     944,     0,   850,   132,     0,     0,  1603,   603,     0,   586,
     582,   584,   583,   585,     0,   592,   387,     0,     0,   680,
     592,     0,   968,     0,     0,  1197,  1223,     0,     0,     0,
    1277,  1281,  1278,     0,     0,  1238,     0,  1253,  1216,  1438,
    1439,  1436,  1437,     0,     0,  1648,  1296,     0,   377,  1294,
    1014,     0,  1005,     0,  1007,  1298,   377,   377,   883,     0,
     793,     0,     0,     0,  1146,  1167,     0,  1163,     0,     0,
    1129,  1172,  1631,  1629,  1636,   678,     0,  1175,     0,  1130,
    1174,     0,     0,     0,     0,     0,  2164,  1872,     0,     0,
    2199,  2193,     0,  2024,  2165,     0,  2177,  2176,  1974,  2178,
       0,  1993,     0,     0,  1985,  1983,  1984,  1977,  1978,  1979,
    1980,  1981,  1982,  1986,  2187,  2186,  2180,  2181,     0,  2010,
    1892,  1890,     0,  2046,  2047,  2048,  2188,  2059,     0,     0,
    2305,  2087,  2063,  2080,  2079,     0,     0,     0,  2067,     0,
       0,  2076,     0,     0,     0,  2205,     0,  2125,  1878,  1911,
    1917,     0,     0,  1940,  2192,  1958,     0,     0,     0,  1936,
       0,     0,     0,     0,  1945,  2141,     0,     0,     0,     0,
    2105,  2100,  2101,     0,     0,     0,     0,  1691,  1690,  1696,
    1787,  1792,     0,     0,  1674,     0,  1774,     0,  1786,  1772,
    1785,     0,     0,  1798,  1796,     0,  1798,     0,  1798,     0,
    1769,     0,  1788,  1770,  1785,  1817,  1810,     0,  2238,  1819,
       0,  1749,     0,     0,     0,     0,  2155,     0,  2153,  2014,
       0,  2214,  1685,     0,  1713,  1723,  2336,  1821,  1620,     0,
       0,  1617,  1618,     0,     0,  1640,  1619,  1643,  1248,     0,
       0,  1240,     0,  1186,  1187,  1185,  1188,     0,     0,     0,
     915,     0,     0,   563,     0,  1204,  1204,     0,     0,   546,
     595,  1284,   918,     0,     0,     0,   916,   377,  1334,     0,
     833,     0,     0,   828,   826,   825,   827,   785,  1420,  1335,
       0,     0,     0,     0,  1255,     0,     0,  1352,   611,     0,
       0,     0,   624,   627,     0,     0,   620,     0,     0,     0,
       0,   645,     0,     0,   615,   639,     0,   610,   609,     0,
     406,  2158,     0,     0,   518,     0,   330,  1377,     0,     0,
       0,   329,     0,   377,   377,   377,   377,   855,   385,   390,
     391,   394,     0,   556,  1207,   596,     0,     0,   417,   658,
       0,   611,   618,   642,   642,   399,   396,  2929,   649,   650,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   999,   982,     0,     0,  1000,  1001,     0,
       0,     0,  1301,  1302,  1300,   169,     0,   166,   167,   170,
       0,   194,     0,     0,   191,   188,   187,   172,   171,  1362,
    1346,  1395,     0,     0,  1344,     0,  1389,  1359,  1355,     0,
       0,     0,     0,     0,  1419,  1371,  1393,  1418,  1369,  1391,
    1368,  1390,  1370,  1392,  1363,     0,  1828,   979,     0,     0,
       0,   377,   377,   885,  1348,  1397,   136,     0,   135,   137,
       0,  1049,     0,     0,  1050,  1052,   467,     0,   470,   477,
     445,   450,  1527,     0,  1527,     0,   447,   451,  1527,   446,
       0,  1527,     0,  1527,   443,   937,     0,     0,     0,  1831,
    1838,  1913,  1846,   914,     0,  1498,  1497,  1496,  1500,  1499,
    1502,  1501,  1493,  1492,  1505,  1504,  1491,  1490,  1495,  1494,
       0,   516,     0,   524,   528,   529,   527,   519,  1284,   552,
     594,     0,     0,   927,     0,   802,   494,     0,     0,   530,
       0,   498,   183,   182,     0,     0,     0,   223,     0,     0,
     901,   905,   946,     0,  1827,   879,   388,     0,   494,   680,
     602,   667,     0,   499,   505,   506,     0,   590,     0,   586,
       0,     0,   677,  1485,   726,   603,   749,   971,     0,   970,
       0,     0,  1226,  1243,  1244,     0,     0,  1284,  1283,     0,
     787,   377,   846,   377,   377,  1444,   924,     0,  1159,  1158,
    1157,   779,     0,  1161,   679,   377,     0,     0,     0,     0,
       0,  1106,  1085,  1105,     0,  2196,  2040,  2050,  2175,     0,
       0,  1994,     0,     0,  2011,  2045,  2931,     0,     0,  2064,
       0,     0,  2084,  2085,  2066,     0,  2452,  2071,     0,     0,
       0,  2057,     0,  2207,  2203,  2258,  1964,  1962,  1959,     0,
    1960,     0,     0,  1942,  1938,     0,  1944,  1969,  2091,     0,
    2107,  2104,  1695,  1694,  1693,  1692,  1773,  1771,     0,     0,
    1776,  1783,     0,  1768,     0,  1797,  1793,     0,  1794,     0,
       0,  1795,     0,     0,  1783,     0,  1709,     0,     0,  2096,
    2017,  2018,  2015,  1709,  2255,  1911,     0,     0,  1613,  1616,
       0,  1647,  1638,  1241,  1249,  1513,     0,     0,     0,   542,
       0,  1284,     0,     0,     0,  1207,  1207,     0,  1284,   594,
     920,   919,   922,   917,   921,  1524,     0,   820,   821,  1354,
       0,  1401,  1360,     0,  1635,   615,     0,   623,     0,     0,
     631,     0,     0,   401,     0,   631,     0,   648,     0,   647,
       0,   408,     0,     0,     0,  1836,     0,     0,   851,     0,
     509,   326,   327,   328,   331,   379,   339,   411,   410,   332,
       0,   597,     0,     0,  1205,   558,     0,   661,   416,     0,
     605,   611,   611,     0,     0,   414,     0,   418,   396,     0,
       0,  1350,     0,  1399,  1357,  1412,  1339,  1386,     0,     0,
     988,     0,     0,     0,     0,  1413,  1340,  1387,   163,   192,
       0,     0,     0,     0,   189,     0,  1635,     0,     0,     0,
       0,  1533,     0,   378,   978,   977,   379,   425,  1373,   143,
       0,  1053,  1054,   468,   157,     0,   442,     0,   475,     0,
     473,   472,   474,     0,   458,     0,     0,     0,     0,     0,
     461,     0,     0,     0,  1832,     0,  1315,  1315,     0,   915,
    1503,     0,     0,   513,   594,   562,     0,   521,     0,     0,
       0,     0,     0,   507,   508,     0,     0,   850,     0,     0,
       0,   218,   494,   850,   900,     0,     0,     0,   975,     0,
     496,     0,  1601,     0,   676,   495,     0,     0,   592,     0,
     590,     0,   587,     0,   591,     0,  1478,   730,     0,   725,
     727,   729,     0,   748,     0,     0,  1282,     0,  1286,     0,
    1237,  1214,  1820,     0,   791,  1316,  1006,  1008,   884,  1164,
    1171,   377,  1086,  1087,  1088,  1089,     0,  1989,     0,     0,
       0,     0,  2060,     0,  2061,  2089,  2088,  2068,  2072,     0,
    2069,  2070,  2206,  1961,  1965,  1963,  1946,  2093,     0,  1709,
    1813,     0,  1816,     0,  1775,     0,     0,  1777,     0,     0,
    1779,  1781,     0,     0,     0,     0,     0,  2241,     0,  2335,
    2901,  2919,     0,  1739,  1741,  1743,  1748,     0,  1675,     0,
     268,  2143,  1822,  1644,  1165,     0,   377,  1204,   594,   564,
    2463,   565,  1203,  1210,  1210,     0,   594,   915,   813,     0,
       0,   311,   407,     0,   625,   622,   630,   629,   633,   628,
    1709,  1709,   632,   643,     0,   646,   634,   608,   614,  2159,
     849,     0,   517,   381,   393,   598,   557,  1206,   662,   619,
     606,   615,   604,   605,   605,   397,   398,     0,   419,     0,
    1635,     0,     0,     0,   995,   983,     0,     0,  1002,   195,
     196,   186,   190,     0,   307,  1356,     0,     0,     0,     0,
       0,   377,  1056,   444,     0,   471,   480,     0,   478,   448,
     453,     0,   457,   455,   454,   449,   452,   459,   460,  1315,
       0,  1312,  1311,   913,     0,   550,   522,     0,   573,     0,
       0,   928,     0,     0,     0,   539,   538,   535,   534,   536,
     537,   532,   531,   875,   992,   388,  1485,   863,   902,   903,
     898,     0,     0,     0,   586,   582,   665,   500,   512,   603,
       0,   592,   588,   589,     0,     0,     0,     0,     0,   731,
    1535,     0,  1198,  1285,     0,     0,     0,   786,     0,     0,
     790,   781,  1131,  2198,  1990,     0,  1991,     0,     0,     0,
    2074,  2073,     0,  2110,  1818,     0,     0,  1812,     0,     0,
    1784,  1800,     0,  1780,  1778,  1789,     0,  1791,  2014,     0,
       0,     0,  1747,     0,  2095,  2097,     0,  2016,  1182,     0,
    1183,  1207,   568,     0,  1213,  1213,   552,   915,   543,  1361,
       0,     0,     0,     0,     0,     0,   852,     0,   334,   657,
     607,   615,   615,     0,     0,   319,  1358,     0,   986,     0,
     997,   995,     0,     0,     0,  1529,     0,  1530,  1531,  1534,
     427,   733,   466,   476,     0,   456,  1310,  1314,  1313,     0,
       0,   523,   559,   560,   561,     0,   525,   569,   570,     0,
     925,     0,   930,     0,     0,     0,     0,     0,  1479,     0,
       0,  1485,   590,   586,   663,   664,     0,   510,   667,   581,
     603,     0,  1482,     0,     0,     0,     0,   728,   388,     0,
    1284,  1287,  1442,   789,   788,  1992,  2077,  2062,  2090,  2075,
    2106,     0,     0,     0,  1811,  1814,     0,  1782,     0,  1790,
       0,     0,     0,  1742,     0,     0,     0,  1210,     0,   915,
       0,  1201,  1200,   562,   545,  1635,     0,   626,     0,     0,
     644,   380,   655,   656,     0,     0,     0,     0,   993,   996,
     984,   997,  1004,  1003,  1635,     0,     0,   437,     0,   479,
       0,   549,     0,     0,     0,   571,     0,   572,   593,     0,
     929,     0,   850,   991,     0,     0,   904,     0,  1480,   592,
     590,     0,   483,   667,  1483,  1484,   690,     0,     0,   592,
    1199,  1215,  1441,  1440,  1687,  2888,  2336,     0,     0,  2122,
    2111,  2122,  2103,     0,  1799,  1745,     0,  1744,  2098,  2099,
     377,  1213,     0,   547,   566,   573,   312,   621,   402,     0,
    1635,     0,     0,   985,   308,  1532,   735,     0,   430,     0,
     905,   578,     0,   577,     0,   575,   574,   926,   931,   876,
     981,  1485,   908,   603,   592,     0,   481,   688,     0,  1608,
    1610,   700,  1820,  1424,  1687,  1423,  1425,  1433,  1430,  1432,
    1431,  1429,     0,  2115,  2114,  2113,  2117,  2116,     0,  2108,
    2109,  1815,  1746,  1184,  1202,     0,   915,   395,   320,   987,
     994,     0,     0,     0,     0,   576,   580,   579,  1481,   910,
       0,   906,   909,   911,   912,   667,   603,   670,     0,   689,
     690,     0,     0,   719,  1189,     0,  1434,  1428,  1674,  1659,
       0,     0,  2119,     0,  2120,   567,   548,   734,   436,     0,
       0,   886,     0,   484,   667,     0,   613,   673,   669,   691,
     693,   694,     0,   696,   687,  1609,   709,  1527,  1527,  2382,
     710,  1527,  1527,  2379,  1527,   699,     0,     0,   703,   701,
       0,     0,   745,  1426,  1687,  2112,  2118,  2121,   743,     0,
     907,   482,   665,     0,   666,     0,   672,   674,   692,   695,
       0,     0,     0,     0,     0,     0,     0,     0,   709,  1527,
    1527,     0,   710,  1527,  1527,     0,  1527,   697,   702,   698,
       0,     0,     0,   718,   738,  1427,   741,   742,   732,     0,
       0,     0,     0,   654,     0,   611,   616,   642,   642,     0,
     675,   707,   712,     0,   715,   714,   708,   711,   716,   717,
     704,     0,   705,   721,     0,   722,     0,  1507,     0,   739,
     603,     0,   744,   908,     0,     0,   659,   612,     0,   605,
     611,   611,     0,   713,     0,   720,     0,   724,     0,   735,
     681,     0,     0,     0,   660,   617,   615,   605,   605,     0,
     706,   723,   747,   746,   740,     0,   887,   671,   653,   615,
     615,   668,     0,   651,   652,   743,   737
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5034, -5034, -5034,  3604, -5034,  2814, -5034, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034,  -862,   415,  2949, -5034, -2087,
   -5034, -5034, -5034, -5034, -3704, -5034,  1163, -5034,  -389, -5034,
   -5034,  1273, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  3549,
   -5034, -5034,  1783, -2549, -5034, -5034,   155,  3527, -1201,   149,
    3196,  1452, -5034, -1065, -5034, -5034,  -595,   150, -5034,  3534,
    1075, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -5034,  -813,
   -1976,  1268,  3167, -4323, -5034, -5034, -1335, -3333, -5034,   589,
    -350, -5034, -2289, -1350, -5034, -5034, -5034,  1881, -5034, -5034,
   -5034,  1080, -5034,   490,  -625, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034,  -394, -5034, -5034,  -785,     7,    34, -2550,  -438,
   -5034, -5034,   434,  -441, -3501, -1214, -5034, -3662, -5034, -5034,
     -61, -5034, -4360, -5034,  -407, -1325,  1404, -5034,  -704, -1085,
    1723, -5034,  -299,  -837, -5034,  -234, -5034,  -916,  -768,  -765,
    -859,  -639, -3886, -4375, -3919, -3632,  1416,  -282, -3130, -4399,
   -4824, -5034, -3702, -5034, -4182, -5034, -4195, -3625, -2405, -3562,
    -255,  1271, -2948,   686, -5034, -3715, -3089, -5034, -4130,   641,
   -5034, -1123,  -281, -5034, -5034, -5034, -5034, -1045, -3845, -5034,
   -5034, -5034, -5033,   184, -5034, -3282, -5034, -5034, -5034, -5034,
    -981, -5034, -5034, -5034, -5034, -1069, -1022, -5034, -5034, -5034,
   -1121, -5034, -5034,  -632, -5034, -5034, -1067, -5034, -5034, -1146,
   -5034, -5034,   185, -5034, -5034,   186,   190, -5034, -5034, -1423,
   -1337, -5034,  -793, -5034, -5034, -5034, -3033, -5034, -5034, -5034,
   -5034,   109, -5034, -5034, -5034, -5034,   501, -5034, -5034, -5034,
   -5034, -5034, -5034, -2765,  1877,  1878, -5034, -5034, -3308, -5034,
    -873, -5034,   677, -3080,  1324, -5034, -5034, -5034,  2936, -5034,
   -5034, -5034, -5034, -5034, -5034, -1495, -5034, -5034,   191, -5034,
    1889,  1087, -5034, -5034, -5034,  -889, -1094,  -980, -5034, -3087,
   -5034, -5034, -5034, -5034,  -346, -5034, -5034, -5034, -5034, -5034,
   -5034, -5034,  -891, -5034,  1150, -3727, -5034, -5034,   464, -5034,
   -5034, -5034, -5034, -5034,  -823,  -269,  2961, -5034,  -688,  -797,
   -5034, -5034, -5034,  -268, -5034, -5034, -5034, -5034, -5034, -5034,
   -1023,   -97, -1479, -5034, -5034, -5034, -5034, -2435, -5034, -5034,
   -5034, -2140, -5034,  4511,  2324,  2316,   193, -5034,   -16,    96,
    3480, -1055, -2733,   430,  -456, -5034, -1660, -5034, -5034, -5034,
   -2633, -5034, -5034, -5034, -5034, -3601,   195, -5034,  3427, -5034,
     477, -5034, -4664, -4100, -4477, -4631, -3588, -5034, -5034, -1027,
   -5034, -5034, -5034, -1317,  2212, -1238, -5034, -2283,   478,  1504,
    -955, -2832, -3903,  -630, -3365, -5034, -3846,  -601, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -1007,  -599, -5034, -5034,  3903,
   -5034, -4522, -5034, -5034, -5034, -5034,  1433, -5034, -5034, -5034,
   -1322,  1247, -5034, -5034, -5034, -5034, -5034,  -824,  -982, -5034,
   -5034, -5034,   197, -5034, -5034, -5034, -5034,  2374,  -879,  -698,
    3769,   198, -4793, -5034, -5034, -5034, -5034, -3237, -5034, -5034,
   -5034, -5034, -5034, -5034, -5034, -5034,  -951, -5034, -5034, -5034,
   -5034, -5034, -5034, -5034,  2288,  2298,    64,    11, -5034, -5034,
   -5034, -1163, -5034,  -848,  3478, -5034,  2884, -5034, -5034, -5034,
   -5034,  1574,   199,   517, -5034, -5034,  -915,     2, -5034, -5034,
     299, -3497,     3, -5034, -5034, -5034, -5034, -2271, -5034,     6,
   -5034,   851, -5034, -5034, -2871, -5034,   200,    21, -5034, -5034,
       1, -5034,    29,   -36,   -19,   -13,     4,  3768,  3293, -5034,
   -5034, -5034,    44,  1926, -5034,  -806,  -149,  -587,  1584,  -589,
    2261,  3270,  3283, -5034,  1573,  2291, -2092, -2101, -5034, -5034,
    -714,  -590, -5034,  -588,  2273, -5034,  3299, -5034, -5034, -5034,
    1568,  1580, -3492,   928, -3503, -3459,   383,   363, -1464,  -362,
      66,  3820,  1356,   957,  -535, -5034, -5034,  -533, -4699,   908,
   -5034, -4474, -2414,   515, -3637,  2026, -1487, -5034, -5034, -1083,
   12783, -5034, -5034, -5034, 13000, 13934, -5034, -5034, 14780, 15127,
   -5034,  -781,  1009, 15136,  9952, -1108, -1751, -1017, 13046, -2624,
    -941, -5034, -5034, -2831, -5034, -3630, -2703, -5034, -5034, -5034,
    -303,  1025,   793, -5034, -5034, -5034, -5034, -5034, -5034,  -664,
   -5034,  -663, -5034, -5034, -5034,  -649, -4106,  -737, -1716, -5034,
    -185, -5034, 16626,  1652, -5034,  -934, -2836, -2808, -3502, -5034,
   -1630, -5034, -5034, -5034, -5034, -5034, -5034, -5034, -1461, -3370,
    -480,  1727, -5034, -5034,  1822, -5034, -5034, -5034, -5034, -5034,
    1031, -5034, -5034, -1218,  -811, -2710,  1728, -2133, -5034,  -807,
   -5034,   931,  2520,  -762,  1237, -1219, 13109,  -507, -2423, -1159,
   -1426, -5034,   216, -3594,   -21,    -2,    18,   873,  -641,    10,
    3617,  5895,  -645, -1167,  7776, -5034, -5034, -4219,  3447, 10072,
   11244, -3297
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    50,    51,    52,    53,  2573,  3336,    54,    55,    56,
      57,    58,  3327,  3328,    59,  1336,  2637,  2508,  3255,  3412,
    3413,  3257,  3886,  4424,  3887,  4814,  3883,  4420,  4421,    60,
      61,  1426,    62,    63,    64,    65,    66,    67,    68,  1352,
      69,    70,   991,  1582,  2647,    71,  2351,   783,   784,   785,
    2159,  2160,  2579,  2161,  2149,  1245,  1678,  1377,   758,   759,
    1338,  1378,    73,    74,  1239,  2140,    75,    76,    77,  1408,
    1409,  1346,  1628,  4456,  5208,  3205,  2479,  3451,  3206,  3207,
    4787,  4785,  3815,  2470,  1410,    78,  1476,  1477,    79,    80,
    3360,  1523,  5408,  2606,  3954,  3955,  4494,   604,  2603,  4834,
    4835,  4477,  4478,  4841,  5077,  5078,   696,  1578,  3445,  4049,
    3402,  4562,  3403,  4563,  3404,  3405,  4564,  3388,  4004,  4760,
    4005,  4006,  3406,  4539,  5111,  3407,  2366,  5241,  1099,  1700,
    1698,  4372,  4373,  5098,  4292,  4293,  5309,  5246,  5247,  5248,
    5415,  4569,  3449,  4055,  4572,  4867,  3075,  3848,  2480,  4561,
    5041,  5042,  3810,  5544,  4350,  5584,  4380,  4332,  4333,  4334,
    5018,  3155,  3156,  3807,  3805,  3157,  3158,  4342,  4343,  3159,
    4390,  5586,  4382,  5587,  5588,  4383,  4384,  5266,  4894,  5546,
    5506,  5507,  5508,   697,  1604,  3527,    83,   638,  1608,  5276,
    5427,  5479,  5483,  5526,  5527,  5528,  5529,  5532,  5573,  5604,
    5605,  4908,  4909,  4910,  4911,  5337,  5338,  5610,  5611,  5578,
    5574,  5612,   698,  2687,   639,   699,  2649,    87,  2678,  1446,
    1447,  2516,  3977,  3508,    88,  1014,  3774,  4924,  5150,  5151,
      89,   221,    90,  1586,    91,    92,  2633,  3394,    93,  2383,
    3092,    94,    95,  3119,  3120,  3121,    96,    97,  3813,  4757,
    1411,  3193,  3194,  3195,  3196,  3837,    98,  1584,  1452,  2656,
      99,   100,   101,   102,   103,  2562,   104,   105,  2650,  1594,
    2668,  2669,  4551,  4885,  5120,  4887,  5470,  5471,  4859,  3753,
    4306,   107,   108,  4532,  4533,  5253,   109,  2381,   110,   111,
     112,   640,  1562,  2625,  2626,  3978,  2690,  3456,  3457,  4037,
    4038,   113,  3301,   114,  4403,  4404,   641,  5256,  5220,  5330,
     115,   116,  4407,  4408,   117,   118,   119,   120,   121,   690,
    1064,  1065,  1328,   122,  2264,   123,   965,  3351,   124,  1130,
    2814,  4612,   125,   722,  1079,  1080,  2651,   127,   731,  2792,
     733,  1714,  3510,  3511,  4110,  2760,   871,   128,   129,  2772,
    2795,   130,  1339,  2357,  2358,  4287,  2652,   642,  1613,  2693,
    3070,  5141,  4294,  4715,  4775,  2996,  3705,   132,   643,  1382,
    2433,  2696,  3462,  2329,  2330,  2964,  4074,  2332,  3464,  2333,
    1322,  2334,  3469,  3470,  3471,  4070,  4078,  4918,  4919,   133,
    1380,  2431,   134,   135,   136,  1423,   896,   137,   655,   656,
     138,  5091,   139,  1026,   140,   750,  1728,   141,   142,   143,
    2450,  3821,   144,   145,   146,  5435,  5485,  5486,  5487,  4083,
    5374,   147,  5437,  1109,   149,   150,   151,   188,   930,   931,
     932,  2653,  4906,   153,   154,  2629,  3387,  3986,   155,   156,
    2352,  3060,   157,   158,   159,   160,  5550,   161,   162,   163,
     164,  1500,   165,  1275,  1276,   166,   167,   599,  1295,   801,
    1279,  1287,   168,   701,  1070,  1073,  1074,  1075,  1680,   169,
    1112,  2783,   702,  1067,   171,  5428,  5429,   703,  3023,  3716,
    3717,  3720,   704,  3020,   174,  1720,  2777,  2780,  3523,   705,
    3027,  3028,  3029,  3030,  3031,  3722,   706,   724,  1017,  2702,
     707,   178,  1207,   180,   181,   182,   812,   805,   806,   184,
    2133,  2954,   739,  1299,   771,   820,  3690,  2284,  2285,  2309,
    2310,  1308,  1309,  2297,  2301,  2302,  3009,  3002,  2290,  4251,
    4983,  4984,  4689,  2305,  2306,  1311,  1312,  1313,  2314,   185,
    2957,  3671,  3672,  3673,  4228,  4229,  4243,  4239,  4676,  4970,
    3674,  1107,  1319,  3675,  4960,  4961,  5167,  4246,  3682,  3714,
    3434,  3435,  3436,  2335,  3163,  2612,  1547,  1208,  1548,  2623,
    1209,  1764,  1550,  1210,  1211,  1212,  1553,  1213,  1214,  1215,
    1216,  1747,  1812,  1217,  1218,  1784,  2620,  2621,  1669,  2854,
    1220,  3595,  2865,  1221,  1222,  3677,  1223,  4181,  4639,  4627,
    2883,  2884,  2156,  4177,  3611,  2129,  2944,  4988,  5184,  5185,
    3657,  4211,  4660,  4959,  5293,  5379,  5380,  5449,  1224,  2941,
    2122,   898,  1225,  3980,  2124,  2876,  2966,  2967,  1723,  4352,
    1745,  2820,  2838,  2839,  2851,  3568,  2858,  2863,  3591,  3592,
    2877,  2910,  1226,  2823,  2824,  3548,  3551,  1749,  1227,  3620,
    3621,  4186,  1228,  1268,  1269,  1742,  2905,  1282,  1283,   803,
    1229,  1230,  1231,  1715,   794,  4966,  2274,   860,  3232,  2255,
     934,   736,  1232,  1233,  1234,  1235,  1037,  1490,  1038,  1416,
     595,   854,   875,  3197,   596,  2125,  2126,  3160,  3161,   597,
     856,  2260
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     725,   177,   172,   173,   183,   725,   175,    81,  1635,  1020,
    1677,  1240,  1697,   811,   657,  2365,  1639,  1314,   763,   897,
     987,  1320,   737,  1566,   183,  1100,  1101,   725,   593,   179,
    1105,   726,   821,  1451,  1047,   647,   726,  1645,  2449,  1428,
     605,  2457,  1323,  3016,  1059,  2761,   637,  3038,  3040,   179,
    1076,  2261,  1498,  2481,  2609,  2483,  1481,  2487,   809,  1018,
    3530,  2856,  2443,  2898,  2434,  3803,  2473,  2273,  1625,  2458,
    1735,  1758,  1759,  2581,  1044,  3234,  1786,  3814,   810,  2622,
    3982,  3845,  1254,  2331,   700,  3780,  3401,   796,  4013,  1415,
    1774,  4033,  1445,   857,   859,  3420,  1576,   863,  1460,   865,
    2256,  4344,  2673,   973,  4077,  2261,  1596,  1486,   793,  2528,
    3832,  1564,  3834,  2819,  4264,  1569,  4370,  4295,   732,   915,
    1573,  4060,   921,  3683,  3684,  3676,   689,  1579,  2542,  2543,
     764,  1020,  1670,  2281,  4381,  3298,  2538,  1598,  2984,  3514,
    4198,  4576,  4289,  2331,  3987,  3988,  3989,  3990,  3991,  3992,
      72,  4354,  3154,  3685,  4754,  3721,  1028,  4530,  4777,  3166,
    2256,  4047,  4751,  4567,   823,  2732,  3356,  3166,  2343,  2424,
     824,  4587,  4242,  2442,  4351,  4341,  4913,  4225,   815,  2679,
    4423,  1247,   757,  3624,    82,    84,    85,  2694,  3676,   790,
      86,   106,  4898,   126,   782,   131,  4716,   148,   152,   170,
     176,  3014,  3727,  4336,  4336,  4336,  4336,  3804,  3011,  4974,
    4746,  4976,   822, -2381,  4907,  4240,  3415,  4268,   874,  5211,
    5212,  4156,  1671,  5146,   901,   653, -2421,  1595,  3570,  3571,
     653,  1307,  1310,  3586,  1565,   918,  4337,  4339,  5003,  5004,
    4068,  1379,   708,  2262, -2451,  1626,  4739,  4016,   603, -2485,
   -1887,  5142,  5219,  3678,  3572,     3,     4,  1349,  4336, -2274,
    1810,  1126,  1560,  1521, -1882,  2549,  4158, -2274, -1897,  4357,
   -1887, -1854,  1807,   799,  2670, -1897,  2373,  2794,   911,  1491,
    3630,  3631,  1679, -2302, -1867,  3021,  3528,  2903,  2773, -2384,
    4388,  2956,   708, -1894,   708,  3485, -2275,  3487,   708,  2920,
   -2945, -2248,   653, -1887, -2275,  1081,  1565,   653, -2945,   653,
     653,  1085,  1718,  2371,  4723,  2459,  3678, -1882,  1256,  5461,
     869,  1817,  3726,  5258,  1244,   653,  1349,   653,  3339,  1565,
    3549,  1626, -2245,  3114,  4577,  5092,  3086,  1626,  2554,  5607,
     818,  2447,   653,  2682,  1565,  -469,  2268,  5342,  4379,   653,
    1096,   923,  1513,  1412,  3515,  3781,  1491,  5016,   708,  2903,
    1350,  5372,  1751,  1752,   708,  2304,  1565,   714,  4016,   205,
   -1037,  5542,  5194,  5195, -2449,  1498,  1854,   808,  2556,  1000,
     714,  1626,  1271,  5160,  1272,  4901, -2129,   715,  1771,  2146,
    1412,   653,  1103, -2129,  2627,   708,  1808,  4902,   714, -1037,
     715,  3127,  5576,   714,  1646,   852,  5444,  2774,  3128,  3115,
    1257,   601,  4714,  4358,  2947,   872,  1491,  1020,   715,  5237,
    1002,  3256,  3073,   715,  2771,  2137,   825,  2921,  4007,  1350,
    1020,  2922,  1781,  -157,   897,  2671,  1786,   714,  -157,   769,
    2484,  2419,  5033,   714,  3131,  5491,  2645,  2452,  1758,  1759,
    1003,  3793,  1817,  3214,   186,  4719,  1774,   715,  4108,  2150,
    2154,  3808,  1716,   715,  2162,  2162,   907,  1665,  5358,  2923,
    2263,   818,  1725,  3167,  5547,  1431,  1249,  2268,  3256,  1004,
     598,  2588,  3572,  2756,  1020,  1736,  3572,  2762,   897,  2764,
    2147,   908,  2767,  1817,  2769,   186,   187,  2142,  2453,  2155,
    4282,  5176,  1627,  5071,   826,    38,  2592,  1854,  1432,  2448,
    3809,   971,  3225,  5590,  3794,   974,  4359,  1782,  2268,  4360,
    5492,  2646,  2485,  1005,  2816,  5131,  5373,  2420,  1257,  1637,
    3132,  1783,   997,   770,  1739,    42,  5445,   187,  1104,  1258,
    2403,  3329,  3074,  2408,  1060,   654,  3982,  2584,  1854,  1616,
    5577,   708,  3516,  5012,  1122,  1517,  4903,  5038,  5238, -1854,
    3118,  2938, -2145,  4109,  5509,  2410,  5161,  5236,  2939, -2145,
    3889,  1097,  5615,    46,  2856,  2418,  1327,   870,  1536,  2533,
    2524,  1266,  2526,  2531, -2449,  1267,    47,  2775,  1627,  3688,
    2261,  5644,  2924,  2557,  1627,  2460,  4724,  5493,  2683,   966,
    2372,  2469,  2148,  2904,  1020,  2776,  2496,  2461,  2822,  1422,
    1383,  2749,  1020,  1020,  1561,  5370,  3087,  1104,  2580,  2550,
    4833,  3215,  5343,  1351,   800,  1273,  4735,  1637,  5468,  4069,
    3781,  4557,  3340, -1854,  4381,   982,  1930,  1931,  1627,   989,
    1746,  2514,  1104,  2736,  2517,  2518,  3746,  3723,  1719,   978,
     999,  2672,  1019,   657,  2144,  2691,   924,  1258,  2462,   811,
    1746,  4776,  2901,  4299,  5608,  2555,  3574,  2604,  2605,  5017,
    1781,  3572,  1122,  1719,  1315,  3644,  5391,  1781,  2472,  4780,
    2757,  5589,  4864,  4900,  1001,  1963,  4159,  3022,   725,  2768,
     725,  -736,   725,  4008,  4546,  4649, -2348,   648,   725,  1092,
    1093,   827,  1561, -2129,  1667,  4737,  4738,  4328,  1811,   964,
      49,  1077,  4808, -2449,  5307,  4341,  2589,  1274,  4242,  1078,
    4252,  1083, -2381,  1087,   810,  2315,  2316,  1068, -2449,  1091,
    5268,  3101,  5398,  5484,  4555, -2421,  4336,  4336,  3960,  4673,
    1110,  4921,  5014,  4677,  1094,  3584,  4336,  4504,  1751,  1752,
    2430, -1887,  4336, -2451,  3729,  1782,  3730,  1771, -2485,  1072,
   -2274,  4666,  1782,  1127,  3982, -1882,   897,  4618, -2366,  1783,
    1237, -1887,  1757,  1246,  1019,  1248,  1785,  4575,  4907,  4702,
     720,   721,   720,   721,  4752,  1763,   720,   721,  1420,  1421,
   -1854, -3015, -2302,   823, -1894,  5636,  1637, -2275, -2384,   824,
    1266, -2945, -2248,  1813,  1267,  1106, -2492,  2815,  2135,  2818,
    2971,  4742,  2121,  5649,  5650,   177,   172,   173,   183,  2826,
     175,    81,  5383,  2830,  2740,  2503,  4744,  3129, -2450,   884,
    3130,  2842,  2843,  2742,  1335,  3676,  2855,  1495,  3676,  2609,
    4109,   822,  5494,   179,  2860,  2862,  1413,  1414,  4379,  1061,
    1266,  2881,   720,   721,  1267, -3016,  2878,  3045,  3796,  5209,
    1518,   725,  1106,  3439,  1277,  4998,  2891,  2758,  1520,  4495,
    4029,  5363,  5006,  3216,  1023,  3890,  2682,  3217,  2940, -2145,
    4258,  1032,  3332,  1413,  1414,  1035,  4558,  5359,  1574,  1575,
   -1735,  2447,  3210,  1318,  5205,  3321,  2445,  5191,  4051,  4280,
    3708,  2684,  2685,  4386,  3333,  2536,   979,  3941,  3011,  5010,
    3944,  3945,  1611,  1340,  3948,  3334,  3676,  4560,  3335,  2261,
    3951,  2447,  3042,  2447,  3946,  3947,  -157,  -157,  3149,  1243,
    3391,  4755,  2447,  1251,  1353,  2945,  1356,  2640,  2116,  2117,
    2118,  2119,  2120,  2121,  1641,  1643,  4756,  2765,  2766,  4139,
     926,   649,  4144,  4145,  4146,  4147,  4148,  4149,  4150,  4151,
    4152,  4153,   600,  3678,    72,  2373,  3678,  4021,  3579,  3580,
    3581,  3582,  3583,  3584,  3581,  3582,  3583,  3584,  3776,  5129,
    2447,  2118,  2119,  2120,  2121,  5424,  5411,  5510,  2846,  2847,
    2831,  1496,   653,  5511,  1808,  2713,  1506,  3099,    82,    84,
      85,   650,  3517,  3358,    86,   106,  2724,   126,  4271,   131,
    1337,   148,   152,   170,   176,  4526,  1341,  3398,  2731,  5512,
    4200,  4201, -1854,  2447,  5475,  1465,   653,   653,  1076,  5322,
    5323,   693,   651, -1854,   652,  1757, -1854,  1327,  4962, -1854,
    2641,   927,  2486,  5034,  3678,  2721,  1470,  3322,  3323,  3324,
      14,  4590,  1471,  4376,   725,  1135,   757,  1455,  3572,  2448,
    1019,  3398,  1618,  1466,  4381,  3329,  1030,  4869,  2445,  3212,
    2368,  3201,  1011,  1019,   183,  5264,  3149,  5504,  3700,  5043,
    5044,  5063,  4295,    19,  3124,   928,  2832,  5007,  1637,  2448,
    3264,  2448,  3037,   653,  3979,  3392,  2447,  4376,  2759,   179,
    2448,  1683,  2374,  1685,  2447,  1687,  1721,  1689,  5061,  1691,
    1692,  1693,  2788,  1619,  1817,  2990,  1695,  2991,  4022,  5029,
    3149,  4940,  3202,  1617,  2708,  5025,  2946,  1019,  2359,  2445,
    1135,  4882,  4115,  3572,  5466,   929,  2856,  2856,  1033,  2268,
    1778,  2856,  4336,  3801,  1561,  2360,  5105,  4336,  2448,  1472,
    2472,  2523,  1502,   653,  2833,  4527,  4336,  3579,  3580,  3581,
    3582,  3583,  3584,  1508,  1342,  2447,  1744,  4964,  3043,  1854,
     811,  3044,  3230,  3393,  5412,  4870,  2849,  2256,  2613,  2359,
    2375,  2568,  4967,  3795,  4075,  3052,  1761,  4971,  2856,  2856,
    4973,  2448,  2537,  3802,  5106,  2613,   738,  1343,  1031,  5148,
    3518,  2361,  5107,  4709,  1620,  3777,  1809,  4355,  2445,  3203,
    2448,  5630,  5270,  3359,  2664,  2834,  1814,  1789,  2835,  2362,
    1467,  3693,  4077,  4889,  1610,  3146,  1344,  1614,  2424,  5108,
    2136,   725,  5096,  1012,  5265,  1805,   725,   725,  5262,   897,
    3892,  5280,  3574,  5413,  2447,    30,  2614,  1019,  3325,  3326,
    2152,  2153,  2361,  1507,  3100,  1019,  1019,  1621,  1637,  3213,
    1637,  1781,   653,  2614,  2448,  4440,  5414,  3350,  3877,  5442,
    2362,    38,  2448,  4758,  4116,  1587,  5467,  4892,  4379,  5040,
    2282,  2283,   744,  2287,  1345,  4295,   824,   824,  1013,   824,
    2267,  3801,  2665,  2138,  4781,  4782,   653,  1473, -3016,  2466,
     708,    42,  5109,  1297,  3575,  3208,   653,  2615,  1468,  2836,
    2616,  4232,  2445,  1588,   887,   888,   889,  3574,   890,   891,
     892,   893,   894,   895,  2615,  1817,  3283,  2616,   822,   822,
    1474,   822,  3284,  2448,  4611,  3801,  1266,   725,  1622,    46,
    1267,  3802,  2528,  4620,  5242,  4621,  1782,   725,  2447,  3003,
    5149,  2363,    47,  3204,  1497,  2445,  3926,  2139,  3965,  1475,
    1785,  4508,  3398,  5616,  3123,  4079,  5192,  3073,  2544,  2545,
    2546,  2547,  4523,  4400,  5197,  3442,  5067,  5360,  3463,  3575,
    1854,  4233,  1318,  1318,  5535,  3802,  5214,  3330,  1653,  3331,
     746,  2447,  1092,  1093,  5189,  4505,  5634,  1298,  5581,  4341,
    3676,  2617,  2363,  4701,  3676,  4510,  3332,  1816,  2837,  4234,
    1817,  4686,  2448,   725,  2590,  2591,   725,   725,  2617,  4405,
    4441,  3149,  2600,  5362,  4235,  3229,  1654,  5639,  3333,  3285,
    4336,  4377,   653,  3114,  5371,  2268,  4236,  5155,   881,  3334,
    5423,  1837,  3335,  4080,  4258,  4560,   905,  2364,  2532,  4693,
    5432,  2331,  2617,    49,  5648,   920,  4378,  2331,  5558,   897,
    5243,  2401,  4237,  2624,  3389,  1854,  5267,  5653,  5654,   747,
    1589,  5110,  2595,  3982,  4401,  4377,  2666,  5068,  4622,  1623,
    5173,  4968,  5559,  3993,  4605,  1546,  2367,  3749,   725,  2667,
    2659,  2660,  2661,  2662,  1769,  1770,  4283,  2563,  2364,  5134,
    2618,  2574,  5560,   745,  3896,  5476,  2753,  5135,  4471,  3115,
    2596,  3962,   768,  2368,  4474,  4475,  2448,  2618,  5426,   816,
    4406,  2607,  5561,  2535,  3289,  5244,  3864,  3996,  3678,  -843,
    1135,  4512,  3678,  3572,  2575,  4962,  4365,  5562,  4238,  3374,
    3505,  5210,  5040,  5040,  3579,  3580,  3581,  3582,  3583,  3584,
    5217,  3015,  2726,  3816,  5222,  5223,  3728,  3290,  1590,  2448,
    3979,  2730,  3045,    38,  4402,  1637,  5582,  4646,  4647,  5113,
    2737,  1135,  3963,  1914,  3572,  5117,  1337,  3286,   817,  1337,
    4081,  2654,  2986,  1655,  3211,  2619,  3291,   791,  2377,  2648,
     897,  4191,  4277,    42,  1930,  1931,  2519,  5066,  2378,  2644,
    2116,  2117,  2118,  2119,  2120,  2121,  5311,  5312,  4320,  3769,
    3287,  5180,  4969,  1781,   616,  2563, -3016, -3016,  5563,  3579,
    3580,  3581,  3582,  3583,  3584,  3145,  1722,  4554,  1337,  3865,
    5503,    46,  1337,  2291,  4233,  3993,  3801,  1591,  1800,  3288,
    4082,  3994,  2686,  1963,    47,   748,   749,  3770,   818,  4295,
    2369,  4393,  3995,  5274,  3292,  2714,  2269,  1592,  4875,  5541,
    3118,  5564,  4234,  5136,  4862,  4284,  2617,  2597,  4593,  4000,
    4594,  1656,   618,  2292,  2288,  2754,   183,  4679,  2563,  3996,
    3061,  3997,  3884,  3114,  3482,   183,  3802,  2501,  2593,  4236,
    5291,  1397,  3483,   802,  4285,  3635,  3573,  3636,  1782,  4876,
    3263,   179,  2986,  2743,  2755,  2744,  4001,  2745,  2993,  2746,
     179,  2747,  3608,  4286,  3488,  2748,  5292,  3574,  2791,  3616,
    4002,  3637,  3276,  3265,  2520,  2787,  2784,  2785,   183,  2521,
    2786,  3268,  1303,  3270,  2828,  2829,  5275,  1072,  3817,  3885,
     926,   926,  2841,  2379,  3361,    49,  2844,  2845,  2594,  2502,
    3478,  -492,  3062,   179,  3316,  2598,  3998,  2906,  3574,  3115,
    2840,  1561,  2868,  3818,  2869,   819,  2289,  2294,  3425,  3426,
    3427,  3428,  5094,  2353,  5327,  3181,  2380,  3866,  3979,  3575,
    3433,  2864,  5257,  2354,  3438,  2778,   814,  3519,  2994,  3116,
    2896,  4238,  2897,   828,  3105,  3142,  2331,  3398,  2355,  2445,
    3458,  1305,  4003,  5454,  3771,  1593,  2331,  3473,  2446,   179,
    3867,  5565,  1425,   625,  4524,   626,  3999,  3696,  2295,  3894,
    3575,  4000,  3117,  3792,  1303,  3638,  3182,  5566,  5585,  2790,
    3639,   927,   927,  3399,  5328,  2447,   933,  3676,  1577,  3868,
    2705,   967,  3057,  3676,  5602,  3741,  4105,  1324,  3676,  2813,
    2711,  3676,    33,  4140,  -492,  4141,  3520,  2856,  4001,  4720,
    2856,  2856,  2856,  2856,  2856,  2856,  2856,  2856,  2856,  2856,
     793,  4302,  4002,  4931,  1600,   928,   928,  2505,  4525,  5567,
    1325,  3676,  3895,  5619,   616,   813,  2445,  3545,  4727,  4728,
    5147,  5552,  3772,  1305,  2856,  2454,  2116,  2117,  2118,  2119,
    2120,  2121,  2331,  5585,  3379,  1817,  5020,  4381,  5021,  1326,
    3118,  2855,  2855,  2519,  4126,  4077,  2855,  4391,  5637,  5638,
    5198,   872,  2455,  4721, -1674,   929,   929,  2528,  2856,  2856,
    2268,  3183,  3293,  1306,  1663,  2356, -1674,  2500,  3602,  5553,
    1427, -1674,   618,  2909,  -199,  5369,  4303,   714,  1397,  3640,
    2489,  5206,  3897,  3380,  4003,   708,  3295,  1660,  1448,  3641,
    1854,  3294,  3374,  2855,  2855,  3678,  2911,   715,  2912,  -199,
    3507,  3678,  1253,  4994,  3633,  4996,  3678,  1661,  4142,  3678,
    4392,    38,  3184, -1674,  3454,  3296,  4872,  1117,  4143,  3752,
     862,  1449,  2913,  4302,  2642,  4937,  2464,  3240,  4881,  4560,
    4099,     3,     4,  2448,  4304, -1674,  4305,  1329,  4891,  3678,
    1241,    42,  1807,  2674, -1674,  3576,  3577,  3578,  2585,  3579,
    3580,  3581,  3582,  3583,  3584,  1434, -1674,  4954,  4955,  1264,
    1425, -1674,   864,  3381,  3382,   653,  5239,  4831,  4832,   708,
    1330,  2520,  5583,  1335,  5419, -1674,  2521,  3383,  1816,    46,
    1303,  1817,  1296, -1674,  1020,  1304,  3576,  3577,  3578,   693,
    3579,  3580,  3581,  3582,  3583,  3584,   765,  2576,  4303,  1331,
     868,  1816,  1435, -1674,  1817, -1673,  2268,  4232,    14,  2577,
    4442,  2630,  1837,   625,  3676,   626,  1450, -1673, -1708,  1020,
    2456,  2914, -1673, -1708,  4855, -1674,  2915,  3384,  3768,  2268,
    4443,  2916,  5118,  2578,  3474,  1837,  1854,  4137,  1577,  2490,
    5314,    19,  4052,  4458,   708,  4056,  5284,  5583,  5040,  1305,
    1419,  4379,  4856,   882,  1135,   609,  4304,  3572,  4305,  1854,
    5119,  4157,  1332,  4459, -1673, -1674,  5040,  5040,  3760,  3496,
    4560,  3676,  1002, -1674,  4192,  2707,   913,  4233,  3310,  2972,
     186,  5336,  1436,    38,  1471,  2337, -1673, -1708,  1480,  1306,
    3689,  1135,  -199,    49,  3572,  1333,   980,  3843,   981,    33,
   -1674,  2291,  1003,   616,  1429,  4234,  1672,   883,  -736,  1673,
    2162,  4651,  3844,    42,  3385,  3861,  3386,  -199,  2338,  1478,
    4235,  1482,   187,  3632,  1334,  1816, -1673, -1708,  1817,   925,
    1437,  4031,  4236,   968, -1673,  1438,   616,   988,   897,  2627,
    1910,  2292,  3678,   972,  1914,  2527,  1572,  2339,  3862,  4502,
    2917,    46,  5393,  2268,   983, -1191,   984,  3542,  4237,  1837,
    2918,   618,  2739, -3016,    47,  1930,  1931,  1914,  -751,   970,
    1602,  1605,  1606,  2265,  1440,  1005,  2266,  3863,  3782,  3733,
    4279,  1472,  1939,  1854,  1757,  1757,  2344,  2344,  1930,  1931,
   -1674,  1335,  2270,  2293,   618,  2271,  3430,  1135,  1335,  3678,
    3572,  3431,  3691,    30,  3982, -3016,  4846,  3543,  3010,  3010,
    2856,  4847,  3544,  1442,  1963,  4104,  1743,  4652,    49,  3095,
    3096,  3097,  1757,  4560,  1327,  3820,  4317,  2269,  3107,    38,
    3109,  3706,  3111,  3112,  4238,  2294,   708,  1963,  3421,  3785,
    3983,  3574,   995,  2738,  5154,  3431,  2739,  3643,  1444,  3024,
    2269, -1673,  5433,    27,  4848,  4300,  3650,   975,  1020,    42,
    1277,  5013,  2899,  -750,  3676,    49,  5019,   816,  3063,  1241,
    3066,  2700,  1006,  2701,  4034,   723,  4560,   179,  3574, -1709,
     723,  3964,  3966,  3967, -1709,  4044,  2295, -3016,  3049,  3012,
    3013,  1914,  1241,  3053,  2525,  2750,  3056,    46,  2751,  5496,
    5628,   694,   625,  3575,   626,  2025, -1730, -1730,  2752,   222,
      47,  2751,  1930,  1931,   602,  1757,  1266,  2344,  3079,  1290,
    1267,  3601,   691,  3603,  3604,  5072,   817,   631, -3016, -3016,
    2781,  2474,  1007,  2782,    38,   625,  2816,   626,  1135,   766,
    3575,  3572,  3447,  1008,  3448,  3857,   628,  3924, -1709,  1248,
    3738,  3739,  1266,  1009, -2248,  3266,  1267,   630,  1010,  2985,
    1577,  1963,  2986,  3133,    42,  3658,  1025,  3659,  4645,  3935,
    3936,  3703,  3704,  2474,  2269,  4173,  1020,  3660,  3676,  3661,
    2475,  1461,  2476,  3141,  3574,  5114,  3139,  3236, -1709,  3140,
    3237,  4321,  3678,  5011, -1734, -1734,   818,  4932,  4933,  4934,
    4935,  3122,    46,  1039,  4118,  2856,  2856,  2477, -1733, -1733,
    4560,   695,  4356,  4361,  1462,    47,  3198,  3979,  1463,  3344,
    4160,  4161,  2475,  2331,  2476,   725,  3759,  3353,  5620,  5621,
    2166,  2506,  3354,   725,  2509,   725,  1029,  3375,  2816,  4122,
    3376,  3499,  1045,  1464,  2751,  2539,  3575,  3541,  2569,  2477,
    2739,  3553, -3016,  3557,  2739,  3241,  2739,  2478,  4009,  3259,
    2278,  2280,  1040,  4394, -3016, -3016,  1062,  2116,  2117,  2118,
    2119,  2120,  2121,  3561,  1054,  5064,  2739,  3271,  4043,  1729,
    1730,  2472,  2474,  2559,  1069,  2474,  3562,  2566,  3281,  2739,
    2116,  2117,  2118,  2119,  2120,  2121,  4497,  3588,  4498,  2478,
    2739,  3305,  3607,  5390,  3613,  2739,  3678,  3614,  4121,  1066,
     708,  3622,  3313,   819,  2739,  3444,  5434,  2885,  3125,  3320,
    2888,  3352,  1098,  2472,  4783,  3574,  4784,  1111,  3373,  3352,
    3093,  2475,  3835,  2476,  2475,  3836,  2476,   872,  3880,  3576,
    3577,  3578,  1102,  3579,  3580,  3581,  3582,  3583,  3584,  1108,
    3484,  3841,  3486,  2438,  3842,  2474,  4062,  1113,  2477,  4063,
    2463,  2477,  2855,  1114,  5143,  2855,  2855,  2855,  2855,  2855,
    2855,  2855,  2855,  2855,  2855,  3374,  3576,  3577,  3578,  1119,
    3579,  3580,  3581,  3582,  3583,  3584,  3424,  3575,  4066,  4127,
      27,  4067,  2739,  4297,  4298,  4167,  1120,  2510,  4168,  4171,
    2513,  4166,  2317,  2318,  2475,  3208,  2476,  4371,  2478,  3422,
    4178,  2478,  3443,  4179,  2116,  2117,  2118,  2119,  2120,  2121,
    3459,  1121,  1122,  4194,  3231,  4640,  2739,  1019,  1123,  1124,
   -2559,  2477,  2472,  2855,  2855,  2472,  2548,  5533,  4269,  5534,
     179,  4270,  3242,  4027,  1128,  4422,  4273,  3540,  4278,  4274,
    2567,  3044,  4301,  4565,  4556,  2751,  4650,  2751,  1290,  2782,
   -1660,  2474,  1019,  3242,  4704,  1125,  4711,  3044,  2583,  4712,
     897,    38,   725,  1300,  4123,  1302,  1020,  1129,  1020,  3408,
    3463,  2478,  3576,  3577,  3578,  1131,  3579,  3580,  3581,  3582,
    3583,  3584,  3893,  4717,  1252,  4718,  2751,  4020,  2751,  4023,
    4740,    42,  4678,  4741,  4681,  2472,  1255,  3898,  4743,  5215,
    2475,  4741,  2476,  1259, -2559,  3243,  4479,  4745,  3512,  4747,
    4741,  4749,  4748,  1260,  4750,  1265,  4010,  4771,  4012,  2474,
    4772,  4778,  4809,  1261,  4779,  4810,  3243,  2477,  1278,    46,
    3701,  3512,  1498,  4836,  2474,  4895,  4837,  4942,  4896,  1285,
    4943,  1020,    47,  1288,  4944,  4953,  1286,  2739,  2782,  2331,
    3244,  1289, -2559,  5023,  5026,  3245,  4750,  4741,  2677,  5028,
    5030,  1290,  4779,  5031, -2559,  1291,  2688,  1301,  2475, -2559,
    2476,  1316,  5115,  1317, -2559,  2751,  3245,  2478,  5144, -2559,
    1321,  5145, -2559,  2475, -2559,  2476,  1327,  5156,  1348,  4248,
    2782,  4072,   811,  5164,  1354,  2477,  5165,  4253,  4254,  4255,
    1386,  2472,  4598,  4599,  4600,  1385,  5170,  4117,  3246,  2986,
    2477, -2559,  1381,  3576,  3577,  3578,  1422,  3579,  3580,  3581,
    3582,  3583,  3584,  2856,  3409,  5175,  1425,  1430,  4041,  3246,
    3993,  1424,  5177, -2559,  2856,  4041,  3994, -2561,  4348,  5233,
    1433,  1456,  5234,    49, -1435,  2478, -1435,  3995,  5269,  5278,
    5285,  2141,  5279,  2782,  1457,  2856,  2856,  1805,  5286,  5287,
    2478,  3614,  2739,  1469,  4990,  5297,  1241,  1241,  2986,  2472,
    3692,  2909,   725, -2559,  3996,  5299,  3997,  5320,  4041,  3162,
    4750, -2559,  5326,  2789,  2472,  2782,  5332,  1479,  1483,  2782,
    3653,  1019, -2559,  5333,  5350,  4759,  2782,  5351,  3707,  3707,
    1487,  5384,  1488,  3247,  2986,  3670,   811,  1493,  2787,  2784,
    2785,   183,  1494,  2786,  1499,  3663,  3664,  3665,  1505,  5385,
    1509, -2561,  2739,  3764,  3247,  3765,  3766,  3767,  5387, -2559,
    1501,  2739,  5451,  3533,  5452,  4041,   179,  5183,  5477,  3536,
    5480,  2751,  1503,  5481,  1510,  3927,  1515,  1082,  1084,  1086,
    2261,  3998,  1088,  1089,  1090,  5501,  5569,  5617,  5502,  5570,
    5618,  1519,  1095,  3410,  5396,  1522,  1524,  5625,  3670, -2561,
    5626,   810,  4463,  2816,   738,  2855,  5640,  5646,  1335,  2751,
    5502, -2561,  2474,  5404,  3734,  5647, -2561,  5651,  2751,  1565,
    4779, -2561,  1570,  1568,  1561,  1580, -2561,  1581, -2559, -2561,
    4322, -2561,  3411,  -220,  1585,  1583,  3248,  1597,  1601,  1019,
    1607,  3999,  1816,  1609,  3249,  1817,  4000,  3250,  1612,  1624,
    1629,  1630, -2559,  1631, -2559, -2559,  3757,  3248, -2561,  1634,
    1632,  2475,  1828,  2476,  1636,  3249,  1633,  2474,  3250,  1637,
    2268,  1644,  1647,  1649,  1648,  3365,  1837,  4395,  1650,  5458,
   -2561,  1652, -2559,  4001,  1657,  1658,  1659,  3251,  2477,  1666,
    3252,  4466,  1004,  1696,  4468,  4469,  1724,  4002,  1727,  1733,
    1854,  1731,  1734,  1740,  1741, -1858, -1865,  1750,  3251,  1754,
    1753,  3252,  1755,  1756,  2474,  3253,  2475,  1760,  2476, -1855,
   -2561,    49,  3679,  1762,  1765, -1856, -2559,  1766, -2561,  1767,
    1768,  1773,  3254, -1859, -1857,  4588,  3253,  1775,  2478, -2561,
    1776,  1777,  3701,  2477,  3838,  5089,  2128,  1778,  1779,  1780,
    1787,  2130,  1788,  3254, -2559,  1790,  4480, -2559, -2559, -2559,
    1791,  2132,  2472,  2475,  1792,  2476,  1793,  2145,  2157,  2165,
    4818,  4819,  2856,  4821,  4624,  1794, -2561,  1795,  1796,  4003,
    1797,  1798,  1799,  1800,  4628,  3679,  2275,  1801,  2134,  2141,
    2477,  2276,  2277,  2478,  3853,  3878,  1304,  2311,  4481,  1306,
    2855,  2855,  2313,  2321,  1910,  2340,  3872,  2341,  1914,  2344,
    2342,  2345,  2347,  2346,  2348,  2349,  2370,  2472,  2376,  2382,
    2405,   738,  4482,  2413,  2409,  2411,  2412,  2414,  2415,  1930,
    1931,  2417,  2416,  2425,  2426,  2427,  2437,  4483,  3979,  2435,
    2478,  2436,  4484,  2465,  2471, -2561,  1939,  3524,  2451,  3918,
     725,   725,   725,   725,  2464,   725,  2467,  2472,  2468,  2482,
    2491,  2492,  4485,  4601,  2472,  4486,  2488,  2493,  2497, -2561,
    2498, -2561, -2561,  3932,  2504,  1960,  2515,  4487,  1963,  2507,
    2522,  3928,  3929,  3930,  3931,  2511,  3933,  2512,  2529, -2575,
    3352,  2269,  2530,  3352,  3352,  3959,  3961,  3352,  4917, -2561,
    3968,  1397,  2540,  3352,  2541,  3939,   725,  2551,  2552,  2553,
    2534,  2558,  2572,  2586,  2587,  2599,  2601,  2608,  1757,  2955,
    2564,  2570,  2602,  2571,  1746,  3981,  1763,  2610,  2969,  2611,
    4542,  4543,  2628,  2631,  2632,  2635,  2643,  2636,   611,  1019,
    4024,  1019,  4096, -2561,  1682,  4097,  2658,  1684,  2639,  1686,
    2663,  1688,  1450,  1690,  2680,  2681,  2692,  1694,  4488,  2689,
    2695,  2697,  2699,  2703,  4840,  2718,  4489,  4490,  2675,  2025,
    2704, -2561,  2715, -2575, -2561, -2561, -2561,  2648,  2717,  2719,
    4039,  2733,  2720,  2734,  2763,  2770,  2866,  2779,  2822,  2821,
    2793,  1816,  4124,  2827,  1817,  2867,  2879,  2886,  1817,  2890,
    2895,  4491,  2902,  2908,  4059,  2894,  2943,  2925,  2927,  2942,
    4879,  2956,  2970,  4071,  1019,  2987,  2973,  2974,  2977,  2268,
    2978, -2575,   817,  3004,  2992,  1837,  3005,  3006,  4085,  3007,
    3033,  3019,   179, -2575,  3034,  1323,  3046,  3036, -2575,  3059,
    3069,  3047,  3048, -2575,  3064,  3067,  3078,  3071, -2575,  1854,
    3072, -2575,  2980, -2575,  2983,  4208,   179,  3083,  3110,  3088,
    3089,  3091,  3126,  2563,  3102,  3113,   725,  3094,  3135,  1249,
    3098,  1253,  3137,  3138,  3147,  3165,  3176,  4107,  3221,  3200,
   -2575,  4843,  3218,  4845,  3223,  3224,  3222,  4849,  3227,  3239,
    4851,  3258,  4853,  3235,  3297,  3226,  3300,  3308,  3342,  4120,
    1241,  3312, -2575,  3238,  3337,  3341,  3343,  3338,  3345,  3346,
    3349,  1816,  3347,  3355,  1817,  3363,  3357,  3366,  3367,  3377,
    3368,  4565,  3369,  3370,  3348,  3397,  4829,  2113,  2114,  2115,
    3372,  2116,  2117,  2118,  2119,  2120,  2121,  3371,  3414,  2268,
    3441,  3423, -2575,  3416,  3429,  1837,  3437,  3432,  3452,  3450,
   -2575,  4492,  3453,  1910,  3477,  3440,  3460,  1914,  3475,  3761,
    3472, -2575,  3476,  3479,  3480,  3489,   811,  4493,  3494,  1854,
    3495,  3492,  3501,  3502,  3503,  3513,  4189,  2986,  1930,  1931,
    1667,  3504,  2794,   811,  3506,  3521,  3522,  3529,  3526,   734,
     735,  3531,  1104,  4422,   741,  1939,  4873,  4874, -2575,   752,
     760,   734,  3537,   767,  3538,  3534,   760,   760,  3701,   795,
    3535,   798,  3539,  3555,  4696,  3556,  3558,  3559,  3560,  3597,
    4479,  3610,  4313,  4314,  4315,  4316,  3563,  1963,  2855,  3564,
    3594,  1805,  3629,  4202,  4733,  3634,  4842,  3649,  3656,  4945,
    2269,  3681,  3687,   738, -1237,  4220,  3715,  5213,  4224, -1736,
    3709,  3189,  4213,  4214,  4215,  4216,  3566,  3569,  3587,  3642,
    2855,  2855,  2739,  3710,  3593,  3713,  3652, -2575,  3719,  3596,
    3731,  3654,   872, -3016,  3725,  3598,  3599,  1914,  3737,  3740,
    3228,  3606,  3627,  3742,  3628,  3655,  3751,  3686,  3743,  3754,
    2797, -2575,  3747, -2575, -2575,  3756,  5169,  3748,  1930,  1931,
    3869,  3763,  3871,  3778,  3779,  3789,  5169,  3790,  3791,  3149,
    3806,  3812,  5082,  5084,  3797, -3016,  3798,  3811,  2025,  3839,
    3822, -2575,  3825,  3799,  5076,  3800,  3826,  3840,  3846,  2477,
    3849,  3847,  3850,  3875,  3876,  3874,  3852,  2798,  3879,  3881,
    3901,  4815,  4427,  4428,  3882,  3891,  4318,  1963,  3899,  3900,
    3902,  3903,  3917,  3906,  3909,  3904,   853,   858,   858,   861,
    2269,   858,  3911,   867,  3916, -2575,   853,  2799,   795,  3913,
    3905,   899,   725,  3907,  3908,  4865,   795,  3910,  3912,   795,
    3914,  3921,  3919,   858,  1020,   795,   867,  3923,  2800,  2549,
    3934,  3981,  3937, -2575,  3938,  3943, -2575, -2575, -2575,  3949,
    2801,  5229,  3950,   725,  3953,  2617,  3969,  3958,  3942,  3984,
    3957,  3970,  3985,  4016,  4425,  4018,  4028,  4025,  5032,  4030,
    2802,  4032,  4053,  4048,  4417,  2803,  3701,  4418,  3417,  4419,
    4978,  4019,  3679,  4426,  4415,  3679,  4040,  4989, -3016,  4054,
    4050,  4057,  4061,  4993,  4041,  4084,  4064,  4521,  4106,  4111,
    4101,  4114,  4091,  4093,  4102,  4103,  4112,  4917,  4113,  4125,
    4128,  1743,  1357,   725,  4131,  4129,   725,   725,  3590,  3572,
    4180,  2804,  4444,  4163,  3589,  4447,  2113,  2114,  2115,  4184,
    2116,  2117,  2118,  2119,  2120,  2121,  4496,  4164,  1810,  4165,
    4196,  3352,  2805,   818,  4209,  1358,  4222,  3352,  3352,  4245,
    2607,  4250,  4172,  5298,  1092,  1093,  4265,  4197,  4288,  4205,
    4223,  3162,  4281,  3679,  4309,  4506,  4324,  4231,  4247,  4311,
    4312,  4263,  5073,  1816,  5399,  4259,  1817,  4260,  4323,  4325,
    4326,  4362,  4364,  4262,  4507,  4509,  4511,  4513,  4346,  4375,
    4396,  4397,  4349,  4353,  4087,  4398,  5235,  2855,  1359,  4399,
    4409,  2268,  1360,  4411,  4410,   205,  4416,  1837,  3885,  5158,
    4412,  4413,  4414,  4335,  4338,  4335,  4335,  4432,  4433,  4439,
    4455,  4457,  4357,  4467,  4460,  4470,  5218,  4472,  4473,  4499,
    4528,  1854,  2806,  4500,  1361,  4520,  2648,  4501,  2807,  4531,
     725,  4537,  4076,  5225,  2808,  5227,  4547,  5221,  1807,  4536,
    2116,  2117,  2118,  2119,  2120,  2121,  4540,  4538,  4573,  3981,
    2751,  4545,  4580,  4550,  4549,  4552,  4553,  4132,  4335,  4568,
    1362,  4570,  4571,  2809,  4574,  2810,  4578,  4585,   897,  4586,
    4602,  4589,  4591,  4597,  4604,   725,   179,  4138,  4606,  4607,
    4608,  4609,  2811,  4610,  4614,  4203,  4619,  4616,  4623,  4630,
    4631,  1363,  4625,  1364,  4632,  4633,  4634,  4638,  4644,  4674,
    4658,  4668,  4675,  4672,  5001,  4162,  4670,  2812,  4682,  4685,
    4687,  4688,  4690,  4613,  4697,  4706,  4691,  3512,  4692,  4703,
    4708,  1365,  4713,  4714,  4722, -3016,  4700,  5130,  4739,  1914,
    4753,  4770,  4786,  4761,  4736,  4762,  4789,  4790,  5049,  4811,
    4812,  4788,  4741,  5163,  4817,  4813,  4822,  1722,  4830,  4801,
    1930,  1931,  4804,  4850,  1366,  4852,  4854,  4857,    33,  5076,
    4858,  4866,  1367,  4871,  4878,  4880,  4884, -3016,  1368,  4886,
    4899,  4897,  4893,  4914,  4905,  1369,  4923,  3662,  4929,  4915,
    4936,  4938,  4948,  1370,  1020,  4939,  4941,  4946,  4950,  4949,
    5054,  4958,  1371,  4951,  4965,  4972,  4991,  4995,  4987,  1963,
    1372,  4975,  5005,  5008,  5203,  5204,   935,  5009,  1651,  5024,
    5045,   795,  2269,  5046,  5047,   858,  5056,   861,  5051,   858,
    5057,  1668,  5069,  5070,  5074,  5081,   899,  5087,  5090,   992,
    4527,  5099,  5097,  5100,  5122,  5300,   858,  5302,  5102,  5103,
    5123,  5104,  5121,  5126,  5125,  5474,  5128,  4694,  4695,  5132,
    3670,   725,  1373,  5133,  3670,  5137,  5159,  5138,  5162,  5166,
    4698,  5172,  4707,  5183,  5178,   853,  5425,  4774,  5179,  5200,
     861,  5201,  5202,  5181,  5224,  5240,   853,  1374,  5207,  5187,
     899,  5249,  4705,  5245,   936,  5252,  5254,  5255,   179,  5260,
   -3016,  5250,  5193,  5271,  5273,  5272,  5282,   858,  5283,  5288,
    5289,  5296,  5301,  5305,  5306,  5530,  1375,  5304,  5318,  5308,
    5319,  5329,  5324,  5325,  5219,  5340,  3162,   937,  5341,  5335,
    5344,  5346,  1376,  2136,  5354,  5474,  2136,  5355,   725,  5364,
     938,   939,  5349,  5361,  4820,  5365,  5367,  5368,  5382,  4210,
     940,  5394,  5392,  5402,   941,  5409,   795,  5397,  4823,  5407,
    5406,  5342,  5417,  5410,  5418,  5343,  5443,   795,  1118,  4763,
    5448,   942,  5422,  5461,  5459,  5457,  5462,  5463,  5465,  4798,
    4799,  5478,  5482,  5490,  4802,  4803,  5499,  5500,  1236,  5531,
     795,   760,   943,  5536,  5505,   760,  5537,  5539,  5542,  5498,
    5598,  5556,  5593,  5530,   944,  5606,  5543,  5629,  5652,   795,
    5572,  5613,   945,   795,  2676,  4795,  3888,  5645,  1292,  1236,
    5545,  5059,  5631,  1384,   946,  3694,  3418,  4805,  5614,   947,
    2565,  4369,   795, -2334, -2392,  1454,  3819,  5571,  5048,  3311,
    3952,  1453,  4476,  5075,   795,  5622,  5474,  3679,  5231,  5339,
     948,  3679,  5124,  4541,  2164,  5127,  4824,  4825,   725,  5606,
    4890,  4863,  2116,  2117,  2118,  2119,  2120,  2121,  5595,  5112,
    3352,  3352,  3745,  5036,  3500,   949,  5395,  1019,  4999,  5456,
    5347,  4844,  5345,   725,  5416,   795,  5263,   795,  3750,  5035,
    5022,  4345,  5313,  4389,  3851,  5635,   950,  5580,  5039,  5514,
     795,  5600,   858,   858,  5568,  5641,  5277,  5609,  5623,  5656,
    4535,  3395,  3396,  4367,  4860,  3833,  5624,  3378,  4036,  5632,
    2655,  5464,  5540,  5101,   760,   760,  3971,  4579,   897,  5633,
     951,  5420,  5055,  5331,  5403,  2638,  5058,   740,  5188,  4603,
    4544,  1726,  4581,  3039,  5281,  4582,  4335,  4335,  3732,  3920,
    5436,  4888,  5575,   853,  2981,  1681,  4335,  2741,  1021,   205,
    1262,  3698,  4335,  4559,   853,  2982,  5515,  5551,   899,  4699,
    5554,  5555,  1284,  5557,  4275,  5290,  3699,  3018,  2272,  2308,
    3711,  3001,   858,  4916,  1717,  3701,   952,  5386,  3017,  1020,
     953,  2307,   954,  5303,  5310,  3724,   795,  4226,   955,  3712,
    4680,   956,   858,   858,  4667,  4613,  4613,  4613,  4613,  5551,
    2312,  5174,  5554,  5555,   897,  5557,  1270,  5002,  4774,  4774,
     795,   795,   795,  4221,  3512,   853,   858,   957,   853,   958,
    5295,  5294,  4276,   959,  4014,  3364,  4188,  4017,  5157,  4174,
    5388,   960,  5389,  5381,  5450,  3550,   961,  3702,  3645,  3647,
    4272,  4185,     0,  4026,  2958,     0,   858,     0,   858,   858,
       0,     0,     0,     0,     0,     0,  2127,  4035,     0,     0,
       0,   962,     0,     0,     0,     0,  5037,     0,  4045,     0,
       0,     0,     0,  1236,  2384,     0,     0,     0,     0,  4058,
       0,     0,     0,     0,     0,     0,     0,  4065,     0,     0,
       0,     0,     0,  3670,  1816,     0,     0,  1817,  3670,     0,
       0,  3670,  1722,     0,  1699,  1699,     0,  2385,  4992,   795,
       0,   734,     0,     0,  3512,     0,  3512,     0,     0,     0,
    2386,     0,  2268,     0,     0,     0,     0,     0,  1837,  1732,
       0,     0,   795,     0,  2387,  1738,   963,  4868,     0,   725,
       0,     0,     0,     0,     0,     0,     0,     0,  1236,     0,
       0,     0,  1854,     0,     0,     0,  1241,     0,  3981,     0,
       0,     0,  1357,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2388,     0,     0,     0,     0,  1236,  3465,     0,
       0,     0,  2706,     0,  2389,     0,     0,     0,     0,     0,
       0,     0,  2712,     0,     0,  1358,  2716,  1357,     0,  5060,
       0,  5062,  2722,  2723,  2390,     0,     0,  5140,     0,  2391,
    1236,  1236,     0,  1236,  4726,     0,     0,     0,  3352,     0,
       0,     0,  2735,     0,     0,     0,     0,  1019,     0,     0,
    1358,  5079,  1236,  5080,     0,     0,     0,  5085,     0,  5086,
       0,  5088,     0,     0,     0,     0,     0,     0,  1359,     0,
       0,     0,  1360,     0,     0,     0,  1910,     0,     0,     0,
    1914,     0,     0,     0,     0,     0,     0,  4765,     0,     0,
     795,  5116,     0,  1236,  3679,     0,  2392,     0,  2648,     0,
    3679,  1930,  1931,  1359,  1361,  3679,     0,  1360,  3679,     0,
    4217,  4218,  4219,     0,     0,     0,     0,     0,  1939,   179,
     795,   795,     0,     0,     0,     0,     0,  4800,  1236,     0,
    2393,     0,  1236,  1236,     0,     0,     0,     0,  3679,  1361,
    1362,     0,     0,   795,   795,  2320,     0,  1960,     0,     0,
    1963,     0,     0,     0,     0,     0,   811,     0,     0,   205,
       0,   760,  4335,  2269,     0,     0,     0,  4335,  3466,     0,
       0,  1363,     0,  1364,     0,  1362,  4335,     0,     0,     0,
    5226,     0,  5228,     0,     0,  4826,     0,     0,     0,     0,
       0,     0,  2394,     0,     0,     0,     0,   760,  2395,     0,
       0,  2396,     0,     0,     0,     0,  1363,     0,  1364,     0,
       0,  3670,     0,   795,  2444,     0,     0,     0,   897,     0,
     795,  1805,     0,   858,  5053,     0,     0,  2397,     0,     0,
       0,  1816,     0,  2398,  1817,     0,     0,     0,    33,     0,
    2428,  2025,  1367,     0,     0,     0,  2399,     0,  1368,     0,
       0,   899,     0,     0,     0,  1369,     0,   795,     0,  2268,
     795,     0,     0,  2429,     0,  1837,     0,     0,     0,     0,
       0,  2400,  1371,    33,     0,     0,     0,  1367,     0,     0,
    1372,   872,  5232,  1368,   795,     0,     0,     0,     0,  1854,
    1369,     0,   858,   858,   858,   858,   795,  4385,  2429,     0,
       0,     0,     0,     0,  4774,     0,     0,  1371,     0,     0,
     795,     0,     0,     0,     0,  1372,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2582,     0,   795,     0,
       0,     0,  1373,     0,  5261,     0,     0,     0,   858,   858,
       0,  3679,     0,     0,     0,     0,   858,     0,  1722,     0,
       0,     0,     0,  4206,     0,     0,     0,  1374,     0,     0,
       0,     0,   179,     0,     0,     0,     0,  1373,  5353,     0,
       0,  3468,  4076,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1375,   858,     0,     0,
       0,     0,  1374, -3016,     0,     0,     0,  1914,  3679,  2113,
    2114,  2115,  1376,  2116,  2117,  2118,  2119,  2120,  2121,     0,
       0,     0,     0,     0,   858,   858,   858,   858,  1930,  1931,
       0,  1375,     0,     0,     0,     0,     0,     0,   795,     0,
    4503,     0,     0,     0,     0, -3016,   795,  1376,     0,     0,
    2582,     0,  1019,     0,     0,     0,     0,     0,  5405,  4529,
    4335,   853,     0,     0,     0,     0,     0,     0,   861,     0,
       0,   853,     0,     0,  5015,     0,     0,  1963,     0,     0,
       0,   899,     0,     0,     0,     0,   858,     0,  4548,     0,
    2269,  3162,  5366,     0,     0,   858,     0,     0,     0,     0,
       0,     0,     0,   858,   858,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5460,     0,     0,     0,     0,
       0,     0,     0,  1699,     0,     0,  4694,  4694,  5251,     0,
     858,     0,   853,     0,  3512,     0,   795,   795,     0,   858,
       0,     0,     0,     0,     0,     0,   795,     0,     0,     0,
       0,     0,     0,   795,     0,     0,     0,     0, -3016,     0,
     734,   734,     0,     0,  2796,     0,  5421,     0,  1236,     0,
    1236,     0,     0,     0,     0,  5430,  5431,  1236,     0,     0,
    1236,     0,     0,     0,  1236,  5441,  5438,  5439,   183,     0,
    5440,  3679,  1236,  1236,   179,     0,  3701,     0,     0,     0,
    1236,     0,   899,  1236,  1236,  1236,  1236,     0,  5489,     0,
       0,  5472,     0,   179,  1236,  1236,     0,  1236,     0,  1236,
    1236,     0,     0,  1236,     0,  1236,     0,  1236,  1236,     0,
    5473,   795,     0,     0,     0,     0,     0,  5139,     0,     0,
       0,  2979,     0,     0,     0,  5441,  5438,  5439,   183,     0,
    5440,     0,     0,     0,     0,  1236,     0,     0,     0,     0,
    4662,  4663,  4664,  4665,  1722,     0,     0,  5513,     0,     0,
       0,  -130,     0,  5488,     0,     0,     0,     0,     0,     0,
       0,   858,     0,     0,     0,     1,  5357,     0,  5538,  5430,
       0,  5472,     0,     0,     0,     2,     0,     3,     4,     0,
       0,  5549,  3916,     0,     0,  3679,     0,     0,     0,     0,
    5473,     0,     5,     0,     0,     0,     0,     0,  5548,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,     6,     0,     7,     8,     0,  1236,     0,     0,
       9,     0,    10,     0,     0,  5441,  5438,  5439,   183,     0,
    5440,     0,  5401,    11,     0,    12,     0,     0,  5591,  5592,
     725,     0,  5596,  5597,     0,  5599,  1236,     0,     0,     0,
       0,    13,     0,   179,    14,     0,     0,  1722,     0,  3981,
       0,  1722,  1722,     0,     0,     0,    15,     0,    16,     0,
       0,     0,    17,     0,     0,     0,     0,     0,    18,     0,
       0,  1236,  5472,     0,     0,     0,     0,    19,     0,    20,
       0,     0,     0,     0,  5627,    21,     0,  5642,     0,     0,
       0,  5473,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,  3178,     0,  5643,     0,     0,     0,
       0,  5655,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3219,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1387,  1816,
       0,     0,  1817,     0,  1388,    23,    24,     0,     0,     0,
       0,    25,     0,     0,     0,     0,     0,     0,     0,  1828,
       0,     0,  1816,    26,     0,  1817,     0,  2268,     0,     0,
       0,     0,     0,  1837,    27,     0,     0,     0,     0,     0,
       0,     0,  1828,     0,  1389,     0,  5316,  5317,     0,     0,
    2268,     0,     0,     0,     0,     0,  1837,  1854,     0,     0,
    1236,  1236,  1236,  1236,  1236,  1236,  1236,  1236,  1236,     0,
    1236,     0,    28,     0,     0,     0,     0,     0,     0,   795,
    1854,  1236,  1236,     0,    29,  5579,     0,     0,   795,    30,
      31,     0,    32,     0,  1390,     0,     0,    33,     0,     0,
       0,  1391,    34,     0,  1392,    35,     0,     0,     0,    36,
       0,     0,     0,     0,    37,    38,     0,     0,     0,     0,
       0,  1816,    39,     0,  1817,    40,     0,     0,     0,     0,
       0,     0,     0,    41,     0,     0,     0,     0,     0,     0,
       0,  1828,     0,     0,     0,    42,     0,     0,     0,  2268,
       0,     0,     0,     0,     0,  1837,  4922,     0,     0,  1393,
       0,  1910,    43,     0,     0,  1914,     0,     0,     0,     0,
       0,     0,    44,     0,     0,     0,     0,     0,    45,  1854,
       0,     0,     0,    46,  1910,     0,  1930,  1931,  1914,     0,
       0,     0,     0,     0,     0,     0,    47,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,  3481,     0,  1930,
    1931,     0,   795,     0,   795,     0,     0,     0,  1236,  1394,
       0,  1395,  1816,  3490,  3491,  1817,  1939,  3493,     0,     0,
       0,  1396,  1960,  3497,     0,  1963,     0,  1236,     0,  1397,
       0,     0,  1828,     0,     0,     0,  1236,  1236,  2269,  1398,
    2268,  1974,     0,    48,     0,  1960,  1837,     0,  1963,     0,
     795,     0,     0,     0,     0,     0,  3025,     0,  3032,     0,
       0,  2269,     0,     0,  1974,     0,     0,     0,     0,     0,
    1854,     0,  1399,  1910,     0,  1400,  1401,  1914,     0,     0,
       0,     0,  3532,     0,     0,     0,   861,    49,     0,     0,
    -130,   734,     0,   734,     0,     0,     0,     0,  1930,  1931,
       0,  1402,     0,     0,     0,     0,     0,     0,     0,     0,
    1236,     0,     0,     0,     0,  1939,  2025,     0,     0,     0,
       0,   853,     0,   858,   858,   858,     0,     0,   853,     0,
     899,     0,   858,     0,   858,     0,   858,   858,     0,  2025,
       0,  1403,   795,     0,  1960,     0,     0,  1963,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1404,
    2269,     0,     0,  1974,     0,     0,   760,     0,     0,     0,
       0,     0,     0,     0,  1910,     0,  2444,     0,  1914,     0,
       0,     0,     0,     0,     0,     0,     0,  3168,     0,     0,
       0,     0,     0,     0,     0,  3180,     0,     0,     0,  1930,
    1931,   795,     0,     0,     0,     0,  1405,  1406,     0,     0,
       0,     0,     0,     0,     0,  5093,  1939,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     795,     0,     0,     0,  3233,  3233,     0,     0,  2025,     0,
       0,   861,   760,     0,     0,  1960,     0,     0,  1963,     0,
    1407,     0,     0,     0,     0,     0,  1241,     0,     0,   858,
       0,  2269,     0,     0,  1974,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,     0,     0,  3299,     0,  3302,  3304,
       0,  3565,     0,     0,     0,     0,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,  2975,
       0,     0,     0,     0,     0,  2976,     0,     0,     0,     0,
       0,     0,     0,   858,     0,     0,     0,     0,     0,     0,
       0,   858,     0,     0,     0,     0,   858,     0,     0,  2025,
       0,     0,     0,     0,     0,  1236,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5196,     0,  3755,  1816,     0,     0,  1817,     0,
       0,     0,     0,  2444,     0,     0,  3233,     0,   795,     0,
    3419,     0,     0,   734,     0,  1828,     0,     0,  1816,     0,
       0,  1817,     0,  2268,     0,     0,  2113,  2114,  2115,  1837,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,  1828,  3299,
    4641,     0,     0,  4642,     0,     0,  2268,     0,     0,   858,
    3446,     0,  1837,  1854,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1854,     0,     0,     0,
       0,     0,   858,     0,   858,  3233,   858,  3233,     0,     0,
       0,     0,  3823,     0,     0,     0,     0,  3827,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1816,  1699,     0,
    1817,     0,     0,     0,     0,     0,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,  1828,     0,     0,
       0,     0,     0,     0,  3609,  2268,     0,     0,     0,     0,
       0,  1837,     0,     0,     0,     0,     0,  1910,     0,     0,
       0,  1914,     0,     0,   853,     0,     0,     0,     0,     0,
     853,     0,     0,     0,     0,  1854,     0,     0,     0,     0,
    1910,   858,  1930,  1931,  1914,     0,     0,     0,  1236,  1236,
       0,     0,     0,     0,  1236,     0,     0,     0,     0,  1939,
       0,     0,     0,     0,     0,  1930,  1931,     0,     0,     0,
       0,     0,  1387,     0,     0,  3915,     0,     0,  1388,  1236,
    1236,  3922,  1939,     0,  1236,     0,     0,     0,  1960,     0,
       0,  1963,     0,     0,     0,     0,     0,     0,  1236,  1236,
    1236,  1236,     0,     0,  2269,     0,     0,  1974,     0,     0,
       0,  1960,  1236,     0,  1963,  1236,     0,     0,  1389,     0,
       0,  1236,  3626,     0,     0,     0,     0,  2269,     0,     0,
    1974,  1236,  1236,     0,     0,  1236,     0,     0,     0,  1910,
       0,     0,     0,  1914,     0,     0,     0,     0,  1236,     0,
    1236,     0,   899,     0,  1236,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1930,  1931,     0,     0,  1390,     0,
       0,     0,     0,  1236,     0,  1391,     0,   795,  1392,     0,
       0,  1939,  2025,  3680,     0,     0,  1236,  1236,  1236,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1236,     0,  2025,     0,     0,     0,     0,
    1960,  1816,     0,  1963,  1817,     0,     0,     0,     0,  1236,
       0,     0,     0,     0,     0,     0,  2269,     0,     0,  1974,
       0,     0,     0,  1393,  1236,     0,     0,     0,     0,  2268,
       0,     0,     0,     0,     0,  1837,  3680,     0,     0,  3718,
       0,  1816,     0,  3032,  1817,  4086,     0,     0,     0,  4089,
    4090,     0,  4092,     0,  4094,  4095,     0,     0,     0,  1854,
       0,  1828,     0,  4100,     0,     0,     0,     0,     0,  2268,
       0,     0,     0,     0,     0,  1837,     0,     0,     0,     0,
       0,     0,     0,  1394,  1236,  1395,  3233,     0,     0,     0,
       0,  1699,     0,     0,  2025,  1396,     0,  4119,  5497,  1854,
       0,     0,     0,  1397,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1398,     0,     0,     0,   858,     0,   858,
     858,   858,     0,  4655,     0,     0,     0,     0,     0,     0,
    2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,
       0,     0,     0,     0,     0,     0,  1458,  3617,  1816,  1400,
    1401,  1817,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121, -3016,     0,     0,     0,  1914,  1828,     0,
    3619,     0,     0,     0,     0,  1459,  2268,     0,     0,     0,
       0,     0,  1837,     0,     0,     0,     0,     0,  1930,  1931,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1910,     0, -3016,  1854,  1914,     0,     0,
       0,     0,     0,     0,     0,  1403,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1930,  1931,
       0,     0,     0,  1404,     0,     0,     0,  1963,     0,     0,
       0,     0,     0,     0,     0,  1939,     0,     0,     0,     0,
    2269,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,
    2120,  2121,     0,     0,  1816,  1558,     0,  1817,     0,  4642,
       0,     0,     0,     0,  1960,     0,     0,  1963,     0,     0,
    1405,  1406,     0,     0,  1828,     0,     0,     0,     0,     0,
    2269,     0,  2268,  1974,     0,     0,     0,     0,  1837,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1910,     0,     0,     0,  1914,     0,     0,     0,     0,     0,
       0,     0,  1854,     0,  1407,     0,     0,     0, -3016,     0,
       0,     0,     0,     0,     0,  1930,  1931,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1939,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3233,  3233,     0,     0,  2025,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,     0,     0,  1963,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2269,     0,     0,
    1974,     0,     0,     0,     0,     0,  1558,     0,     0,     0,
    3465,     0,     0,     0,   795,  4015,     0,   795,     0,     0,
       0,     0,     0,     0,     0,     0,  1910,     0,     0,  1357,
    1914,     0,     0,   795,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1699,   795,     0,     0,
       0,  1930,  1931,     0,     0,     0,     0,  1699,   795,     0,
       0,     0,  1358,     0,     0,     0,     0,     0,  1939,   795,
       0,     0,     0,     0,     0,  2025,     0,   795,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,  1960,     0,     0,
    1963,     0,     0,     0,     0,     0,   858,     0,     0,   858,
       0,     0,     0,  2269,     0,  1359,  1974,     0,     0,  1360,
       0,     0,     0,   853,     0,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,     0,  4963,     0,     0,   795,     0,     0,     0,
       0,  1361,     0,     0,     0,     0,   858,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,     0,     0,     0,
    3466,     0,  1236,     0,  1236,     0,     0,  1362,     0,     0,
    1236,  2025,     0,  1236,  1236,  1236,  1236,  1236,  1236,  1236,
    1236,  1236,  1236,     0,     0,     0,  1236,  1236,     0,     0,
       0,     0,     0,     0,     0,     0,  2336,     0,  1363,     0,
    1364,     0,  1236,     0,     0,     0,  1236,  1236,     0,     0,
       0,  1236,     0,  2113,  2114,  2115,  1236,  2116,  2117,  2118,
    2119,  2120,  2121,     0,     0,     0,  1236,  2893,     0,  1236,
       0,  1236,     0,     0,     0,  4592,     0,     0,     0,     0,
    1236,  1236,  1236,  4595,  4596,     0,  1236,     0,     0,  1236,
       0,     0,     0,  4212,     0,     0,  2336,     0,     0,     0,
     795,   795,   795,   853,     0,    33,  3680,  4230,     0,  3467,
       0,  4230,  4244,     0,     0,  1368,     0,     0,  1236,     0,
       0,     0,  1369,     0,  1236,  1236,     0,     0,     0,     0,
    2429,     0,     0,  1816,     0,     0,  1817,  1558,     0,  1371,
       0,     0,     0,     0,     0,     0,     0,  1372,     0,     0,
    1236,     0,     0,  1828,     0,     0,  1236,     0,     0,     0,
    3032,  2268,  1236,     0,     0,     0,     0,  1837,     0,  2113,
    2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,
       0,     0,     0,  3623,  4296,  1699,  1699,     0,  2582,     0,
       0,  1854,     0,     0,     0,     0,     0,     0,     0,  1373,
       0,     0,     0,  3468,     0,     0,   858,   858,   858,   858,
       0,     0,     0,     0,     0,     0,     0,     0,  1558,     0,
       0,     0,     0,     0,  1374,     0,     0,     0,     0,     0,
    1816,     0,     0,  1817,   853,   853,   853,   853,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1816,     0,
    1828,  1817,     0,  1375,     0,     0,  1558,     0,  2268,     0,
       0,     0,     0,  4366,  1837,     0,     0,     0,  1828,  1376,
       0,     0,     0,     0,     0,     0,  2268,     0,     0,     0,
       0,  1558,  1837,  4374,     0,     0,     0,   795,  1854,   853,
       0,     0,     0,     0,  4725,  1910,     0,     0,     0,  1914,
       0,     0,     0,     0,     0,     0,  1854,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1930,  1931,     0,     0,     0,     0,   858,   858,     0,     0,
       0,     0,     0,     0,     0,     0,  1816,  1939,     0,  1817,
       0,     0,     0,     0,     0,  1558,     0,     0,     0,     0,
    4766,  4767,  4768,  4769,     0,     0,  1828,     0,  4461,     0,
       0,     0,     0,     0,  2268,     0,  1960,     0,     0,  1963,
    1837,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2269,     0,     0,  1974,     0,     0,     0,     0,
       0,     0,  1910,     0,  1854,     0,  1914,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1910,     0,     0,     0,  1914,     0,     0,  1930,  1931,     0,
     795,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   858,     0,  1236,  1939,  1930,  1931,     0,     0,   795,
       0,     0,     0,     0,     0,  4534,     0,     0,  4827,  4828,
       0,     0,  1939,     0,     0,     0,  2444,     0,     0,     0,
    2025,     0,     0,  1960,     0,     0,  1963,     0,   795,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3299,  2269,
       0,  1960,  1974,     0,  1963,  4566,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2269,  1910,     0,
    1974,     0,  1914,     0,     0,  1236,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1930,  1931,     0,     0,     0,  3233,     0,
    3233,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
    1939,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2025,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,     0,     0,  1960,
       0,     0,  1963,     0,     0,  2025,     0,     0,  4925,     0,
    4926,  4927,     0,     0,     0,  2269,     0,     0,  1974,     0,
       0,     0,  4930,     0,     0,  1236,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1236,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,  1236,  2113,  2114,
    2115,  1236,  2116,  2117,  2118,  2119,  2120,  2121,  1236,  1236,
       0,     0,  3956,  1236,     0,     0,     0,     0,     0,  1236,
    1236,     0,     0,  1236,     0,     0,  1236,  4661,     0,     0,
     795,   795,   795,   795,     0,     0,     0,  4230,  4244,     0,
    1236,  4230,     0,  2025,  4671,     0,     0,     0,  3680,     0,
       0,     0,  3680,     0,     0,     0,     0,     0,  4684,     0,
       0,     0,     0,     0,  1236,     0,     0,     0,     0,  1236,
       0,     0,     0,     0,  1236,     0,     0,     0,     0,     0,
     899,     0,     0,     0,     0,     0,     0,  3718,     0,     0,
       0,  3032,     0,     0,     0,  2113,  2114,  2115,     0,  2116,
    2117,  2118,  2119,  2120,  2121,   734,     0,     0,  1236,  4133,
       0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121,     0,     0,     0,     0,  4187,  3233,  3233,
       0,     0,     0,     0,  1816,     0,     0,  1817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   853,   853,     0,
       0,     0,     0,     0,  1828,     0,     0,   853,     0,     0,
       0,     0,  2268,   853,     0,   855,     0,  1387,  1837,     0,
       0,     0,     0,  1388,     0,   855,   876,  4764,     0,     0,
       0,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,   858,  1854,   876,     0,     0,     0,     0,     0,     0,
       0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,
    2121,     0,     0,  1389,     0,  4290,     0,     0,     0,     0,
       0,     0,     0,  1387,     0,     0,     0,     0,     0,  1388,
    2968,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1434,     0,     0,     0,   858,     0,
       0,     0,     0,  1390,     0,     0,     0,     0,     0,  1389,
    1391,     0,   858,  1392,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1910,     0,  5152,     0,
    1914,  1435,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1390,
       0,  1930,  1931,     0,     0,     0,  1391,     0,  1393,  1392,
       0,     0,     0,     0,     0,     0,     0,  1236,  1939,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   853,     0,
       0,     0,     0,  2444,     0,     0,     0,     0,     0,     0,
       0,     0,  1699,  5190,     0,     0,     0,  1960,     0,     0,
    1963,     0,     0,     0,   858,  2444,     0,     0,     0,     0,
       0,  1436,     0,  2269,  1393,     0,  1974,     0,  1394,     0,
    1395,  4912,     0,     0,     0,     0,     0,     0,     0,     0,
    1396,     0,     0,     0,     0,     0,   795,     0,  1397,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1398,     0,
       0,  3035,     0,     0,     0,  2336,  3041,     0,     0,  1437,
       0,     0,     0,     0,  1438,     0,  1236,     0,  5230,     0,
       0,     0,     0,     0,  1439,     0,  1395,  1236,     0,     0,
       0,  1484,     0,     0,  1400,  1401,  1396,     0,     0,  1236,
       0,  2025,     0,     0,  1397,     0,     0,     0,  1236,  1236,
       0,     0,  1236,  1440,  1398,     0,     0,     0,     0,     0,
    1485,     0,     0,     0,     0,   853,     0,  4230,     0,     0,
       0,  3680,     0,     0,     0,     0,  3680,     0,     0,  3680,
    3299,     0,  4977,     0,  1236,  1236,     0,  1441,     0,     0,
    1400,  1401,  1442,     0,     0,     0,     0,     0,     0,     0,
    1403,     0,     0,     0,     0,     0,     0,     0,     0,  4296,
     899,   858,   858,   858,     0,     0,  1443,     0,  1404,  1558,
       0,     0,     0,     0,     0,     0,     0,  1444,     0,     0,
       0,  3465,     0,   853,     0,     0,     0,     0,   853,  1236,
       0,  1236,     0,     0,     0,     0,     0,   853,     0,     0,
    1357,     0,     0,     0,     0,     0,  1403,     0,     0,     0,
       0,     0,     0,     0,     0,  1405,  1406,     0,     0,  4374,
     858,     0,     0,   876,  1404,     0,     0,   876,     0,     0,
       0,     0,     0,  1358,  1387,     0,     0,     0,   876,     0,
    1388,     0,     0,     0,     0,   853,   899,     0,     0,  2113,
    2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,  1407,
     876,     0,     0,  4617,   855,     0,     0,     0,     0,     0,
       0,  1405,  1406,     0,     0,   855,   876,     0,     0,     0,
    1389,   876,     0,     0,     0,     0,  1359,     0,     0,     0,
    1360,   876,     0,     0,  1699,  1699,     0,     0,     0,     0,
       0,   876,   853,     0,     0,   795,     0,     0,  1816,     0,
       0,  1817,     0,     0,     0,  1407,  4534,     0,     0,     0,
       0,     0,  1361,     0,     0,  3233,     0,     0,  1828,  2444,
    1390,     0,     0,     0,     0,  1558,  2268,  1391,     0,     0,
    1392,     0,  1837,  4566,     0,     0,   795,     0,     0,     0,
       0,  3466,     0,     0,     0,     0,     0,     0,  1362,     0,
       0,   858,  4296,     0,     0,     0,  1854,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   855,     0,     0,
       0,     0,   876,  1236,     0,  1236,     0,  5453,  1236,  1363,
    1236,  1364,     0,     0,     0,  1393,  1816,     0,     0,  1817,
       0,     0,     0,     0,     0,     0,     0,     0,   855,     0,
    1236,     0,     0,     0,  2336,  1236,  1828,     0,     0,  3680,
    2336,     0,  4977,     0,  2268,     0,     0,     0,     0,  1236,
    1837,     0,     0,     0,  5186,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   795,     0,  1854,  1394,    33,  1395,     0,  1816,
    1367,     0,  1817,     0,     0,     0,  1368,  1396,     0,     0,
    1910,   853,     0,  1369,  1914,  1397,     0,     0,     0,  1828,
       0,  2429,     0,     0,     0,  1398,     0,  2268,     0,     0,
    1371,     0,     0,  1837,     0,  1930,  1931,     0,  1372,     0,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
       0,     0,  1939,   858,   858,   858,   858,  1854,  2402,     0,
       0,  1400,  1401,     0,     0,     0,     0,     0,  1699,     0,
     876,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1960,   855,     0,  1963,     0,     0,  1402,     0,   853,
    1373,     0,     0,   855,  3468,     0,     0,  2269,  1910,     0,
    1974,     0,  1914,     0,     0,     0,     0,     0,  1236,     0,
       0,     0,     0,     0,     0,  1374,  1559,     0,     0,     0,
       0,     0,     0,  1930,  1931,  4912,     0,  1403,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1939,     0,     0,     0,  1375,  1404,     0,   876,     0,  1236,
       0,     0,   853,     0,   855,     0,     0,   855,     0,     0,
    1376,  1910,     0,     0,     0,  1914,  1236,     0,  1236,  1960,
    1236,     0,  1963,     0,     0,  2025,     0,     0,   858,     0,
     899,     0,     0,     0,     0,  2269,  1930,  1931,  1974,     0,
       0,   876,  1405,  1406,  1236,     0,     0,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,   876,   876,     0,
    1816,     0,   855,  1817,     0,     0,     0,     0,     0,     0,
       0,   876,     0,     0,  2968,  2968,  2968,     0,     0,     0,
    1828,     0,  1960,     0,     0,  1963,  1407,     0,  2268,     0,
       0,     0,   858,     0,  1837,     0,     0,   853,  2269,   876,
       0,  1974,     0,     0,     0,     0,     0,  1559,     0,   876,
       0,     0,     0,  2025,     0,     0,  4296,     0,  1854,     0,
       0,     0,   876,     0,     0,   876,     0,     0,  1236,  1236,
       0,     0,     0,  3299,     0,     0,     0,   855,  1236,     0,
       0,  5186,     0,     0,     0,     0,     0,     0,     0,  2336,
       0,     0,  3041,     0,  3041,     0,     0,     0,     0,  2336,
       0,     0,     0,   853,     0,     0,   855,     0,     0,     0,
       0,     0,   858,     0,     0,     0,  2025,     0,     0,     0,
       0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121,     0,     0,     0,     0,  4629,  1699,   855,
     855,     0,   855,     0,     0,     0,     0,     0,     0,  1558,
       0,     0,  1236,     0,     0,     0,     0,     0,     0,     0,
       0,   855,  1910,     0,     0,     0,  1914,     0,     0,  1236,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   858,
       0,     0,     0,     0,     0,   876,     0,  1930,  1931,     0,
       0,     0,     0,   876,   876,  2336,     0,     0,     0,     0,
       0,     0,   855,  2257,  1939,     0,     0,     0,     0,     0,
       0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,
    2121,     0,     0,     0,     0,  4657,     0,     0,     0,     0,
       0,     0,     0,  1960,     0,     0,  1963,   855,   795,     0,
       0,   855,   855,     0,     0,     0,     0,     0,     0,  2269,
       0,     0,  1974,     0,     0,     0,     0,  1559,     0,     0,
       0,     0,     0,  2257,     0,     0,     0,  1236,     0,     0,
       0,     0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,     0,     0,     0,     0,  4947,     0,
    1558,  1816,  1558,     0,  1817,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1828,     0,     0,     0,     0,   853,  1559,     0,  2268,
       0,     0,     0,     0,     0,  1837,     0,  2025,     0,     0,
    1699,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1816,     0,     0,  1817,     0,     0,     0,     0,  1854,
       0,     0,     0,     0,  1558,     0,     0,     0,  1559,     0,
       0,  1828,     0,     0,     0,     0,     0,     0,     0,  2268,
    1699,     0,     0,     0,     0,  1837,     0,     0,  1699,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1699,     0,  1816,     0,     0,  1817,     0,  1558,  1854,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1828,     0,   876,     0,     0,     0,     0,
       0,  2268,     0,     0,     0,     0,     0,  1837,     0,     0,
       0,     0,  3041,     0,     0,     0,     0,     0,     0,  1559,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1854,     0,  1910,     0,     0,     0,  1914,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1559,  1930,  1931,
       0,     0,     0,     0,     0,  2113,  2114,  2115,     0,  2116,
    2117,  2118,  2119,  2120,  2121,  1939,     0,  2257,     0,  4957,
       0,  1558,  1559,  1910,     0,     0,     0,  1914,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   876,  1816,     0,
       0,  1817,  3041,     0,  1960,     0,     0,  1963,  1930,  1931,
       0,     0,     0,   876,  1558,     0,     0,     0,  1828,     0,
    2269,     0,     0,  1974,     0,  1939,  2268,     0,     0,     0,
       0,     0,  1837,     0,     0,  1910,     0,     0,     0,  1914,
     855,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
     855,     0,   876,   876,  1960,     0,  1854,  1963,     0,     0,
    1930,  1931,     0,   876,     0,     0,     0,     0,     0,     0,
    2269,     0,     0,  1974,     0,   876,   876,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,   876,
       0,     0,     0,     0,     0,     0,     0,     0,  2025,     0,
       0,     0,     0,     0,     0,     0,  1960,  1558,     0,  1963,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   855,  2269,     0,     0,  1974,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1558,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2025,     0,
       0,     0,     0,     0,     0,     0,     0,   855,     0,   855,
    1910,     0,     0,     0,  1914,     0,   855,     0,     0,   855,
       0,     0,     0,   855,     0,     0,     0,  1558,     0,     0,
       0,   855,   855,     0,     0,  1930,  1931,     0,     0,   855,
       0,     0,   855,   855,   855,   855,     0,     0,     0,     0,
    2025,     0,  1939,   855,   855,     0,   855,     0,   855,   855,
       0,     0,   855,     0,   855,     0,   855,   855,     0,     0,
       0,     0,     0,  2968,     0,     0,     0,     0,     0,     0,
       0,  1960,     0,  1559,  1963,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   855,  2257,     0,  2269,     0,     0,
    1974,     0,     0,     0,     0,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,  2336,     0,     0,     0,
    4997,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
    5095,     0,     0,     0,     0,  2025,   855,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1558,     0,     0,     0,
       0,     0,     0,     0,     0,   855,     0,     0,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,
       0,     0,  4641,     0,     0,     0,  1816,     0,  3041,  1817,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     855,     0,     0,     0,     0,     0,  1828,  1387,     0,     0,
       0,     0,     0,  1388,  2268,     0,     0,     0,     0,     0,
    1837,     0,     0,  1816,     0,     0,  1817,     0,     0,     0,
    1387,     0,     0,     0,     0,     0,  1388,     0,  1434,     0,
       0,     0,     0,  1828,  1854,     0,     0,     0,     0,     0,
       0,  2268,     0,  1389,     0,     0,     0,  1837,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1389,     0,     0,     0,
       0,  1854,     0,     0,     0,  1435,     0,     0,     0,     0,
       0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121,  1390,     0,     0,     0,  5356,     0,     0,
    1391,     0,     0,  1392,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1390,     0,     0,     0,
       0,     0,     0,  1391,     0,     0,  1392,     0,     0,   855,
     855,   855,   855,   855,   855,   855,   855,   855,  1910,   855,
       0,     0,  1914,     0,     0,     0,     0,     0,     0,     0,
     855,   855,     0,     0,     0,  1436,     0,     0,  1393,     0,
    1558,     0,     0,  1930,  1931,  1816,     0,     0,  1817,     0,
       0,     0,     0,     0,     0,  1910,     0,     0,     0,  1914,
    1939,  1393,     0,     0,     0,  1828,     0,     0,     0,  2993,
       0,     0,     0,  2268,     0,     0,  3041,     0,     0,  1837,
    1930,  1931,  2336,  1437,     0,     0,     0,     0,  1438,  1960,
       0,     0,  1963,     0,     0,     0,     0,  1939,  1439,     0,
    1395,     0,     0,  1854,     0,  2269,     0,     0,  1974,     0,
    1396,     0,     0,     0,     0,     0,     0,     0,  1397,     0,
       0,  1394,     0,  1395,     0,     0,  1960,  1440,  1398,  1963,
       0,     0,     0,  1396,     0,     0,     0,     0,     0,     0,
       0,  1397,  2269,     0,     0,  1974,     0,     0,     0,  2994,
       0,  1398,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3261,     0,     0,  1400,  1401,  1442,   855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2025,  2406,     0,   855,  1400,  1401,     0,
    3262,     0,     0,     0,     0,   855,   855,  1558,     0,     0,
       0,  1444,     0,     0,     0,     0,     0,  1910,     0,     0,
       0,  1914,  1558,  2407,     0,     0,     0,     0,     0,     0,
    2025,     0,  1559,     0,     0,     0,  1559,  1559,     0,     0,
    1403,     0,  1930,  1931,     0,     0,   876,     0,     0,     0,
    2257,   876,     0,     0,   876,     0,     0,     0,  1404,  1939,
       0,     0,     0,  1403,     0,     0,     0,     0,     0,     0,
       0,     0,  2968,     0,     0,     0,   876,  2968,     0,   855,
       0,  1404,  2968,     0,     0,     0,     0,     0,  1960,     0,
     855,  1963,     0,     0,     0,     0,     0,   855,     0,     0,
       0,     0,     0,     0,  2269,  1405,  1406,  1974,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   876,     0,     0,     0,     0,     0,     0,  1405,  1406,
       0,     0,     0,     0,  1558,     0,     0,     0,     0,     0,
       0,   876,   876,     0,     0,     0,     0,     0,     0,  1407,
    1559,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,
    2121,     0,     0,     0,     0,  5495,     0,     0,     0,     0,
       0,     0,  1407,  2257,   876,     0,     0,     0,  2257,     0,
       0,     0,  2025,     0,     0,     0,     0,  1558,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,
    4261,     0,   877,     0,     0,     0,     0,     0,   877,     0,
       0,     0,     0,   876,     0,     0,     0,   876,     0,   877,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
       0,     0,     0,  2995,     0,   876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   876,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   876,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1816,
     876,     0,  1817,     0,     0,     0,     0,   876,     0,     0,
       0,     0,     0,     0,     0,  1558,     0,     0,     0,  1828,
       0,     0,     0,     0,     0,     0,     0,  2268,     0,     0,
       0,     0,     0,  1837,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   855,     0,  1559,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1854,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2257,     0,     0,
    2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1816,     0,
       0,  1817,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1828,     0,
       0,     0,     0,     0,     0,  1559,  2268,     0,     0,     0,
       0,  1559,  1837,     0,     0,   876,     0,     0,     0,     0,
    3589,  4920,     0,     0,     0,  3590,     0,     0,     0,     0,
       0,  1816,     0,     0,  1817,     0,  1854,     0,     0,     0,
       0,  1910,     0,     0,     0,  1914,     0,     0,     0,     0,
     876,  1828,     0,     0,     0,   855,     0,     0,  1558,  2268,
       0,     0,     0,     0,     0,  1837,  1930,  1931,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,   876,     0,     0,  1854,
       0,     0,     0,     0,     0,     0,     0,     0,  1559,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   876,
       0,     0,  1960,   855,     0,  1963,     0,     0,     0,   855,
       0,     0,     0,     0,     0,     0,     0,     0,  2269,     0,
       0,  1974,     0,     0,     0,     0,     0,   855,   855,     0,
    1910,     0,     0,   855,  1914,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1930,  1931,     0,   855,   855,
       0,  5446,     0,   855,  1558,     0,     0,  2968,     0,  2968,
       0,     0,  1939,     0,     0,     0,     0,   855,   855,   855,
     855,  1558,     0,  1910,     0,  2257,     0,  1914,     0,     0,
       0,   855,  2257,     0,   855,  3041,  2025,     0,     0,     0,
     855,  1960,     0,     0,  1963,     0,     0,     0,  1930,  1931,
     855,   855,     0,     0,   855,     0,     0,  2269,     0,   877,
    1974,     0,     0,   877,     0,  1939,     0,   855,     0,   855,
       0,     0,     0,   855,   877,     0,     0,     0,     0,     0,
    4175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   855,     0,  1960,     0,   877,  1963,     0,     0,
       0,     0,   855,     0,     0,   855,   855,   855,     0,     0,
    2269,     0,   877,  1974,     0,     0,     0,   877,     0,   876,
       0,     0,   855,     0,     0,     0,     0,   877,     0,     0,
       0,  5447,     0,     0,     0,  2025,     0,   877,   855,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4176,
       0,     0,     0,   855,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   855,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
    1559,     0,  3041,  1559,     0,  1559,     0,     0,  2025,     0,
    1559,     0,   876,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,  1558,     0,     0,   876,   876,     0,
       0,     0,     0,   855,     0,     0,     0,     0,   877,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   876,     0,     0,   876,     0,     0,
    1559,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
       0,     0,  1557,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
       0,  1558,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2257,  2257,  2257,     0,
       0,     0,     0,     0,     0,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,  1816,     0,     0,  1817,   877,     0,     0,     0,
       0,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,  1559,  1828,  1559,   876,  3552,     0,     0,     0,     0,
    2268,     0,     0,     0,     0,   876,  1837,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4920,     0,     0,     0,  1816,     0,     0,  1817,     0,     0,
    1854,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1557,  1828,     0,     0,     0,     0,     0,
       0,     0,  2268,   877,     0,  1559,     0,     0,  1837,     0,
       0,     0,     0,     0,     0,  1387,     0,     0,     0,     0,
       0,  1388,     0,     0,     0,     0,  1558,  1558,     0,     0,
       0,     0,  1854,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   876,     0,     0,     0,   877,     0,  1559,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1389,     0,   877,   877,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   877,     0,     0,
       0,     0,  2257,  1559,  1910,     0,     0,     0,  1914,     0,
       0,     0,     0,     0,     0,     0,     0,   876,     0,   876,
       0,     0,     0,     0,     0,   877,     0,     0,     0,  1930,
    1931,  1390,     0,     0,   876,   877,   876,     0,  1391,     0,
       0,  1392,     0,     0,     0,     0,  1939,     0,   877,     0,
       0,   877,     0,     0,  2151,     0,  1910,     0,     0,     0,
    1914,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1559,     0,     0,  1960,     0,     0,  1963,     0,
       0,  1930,  1931,     0,     0,     0,     0,     0,     0,     0,
       0,  2269,   876,  1559,  1974,     0,  1393,     0,  1939,     0,
       0,     0,     0,     0,     0,  1559,     0,     0,     0,     0,
       0,     0,     0,     0,  1816,     0,     0,  1817,     0,     0,
       0,   876,     0,  1557,     0,     0,     0,  1960,     0,     0,
    1963,     0,   855,     0,  1828,   876,     0,  3600,     0,     0,
       0,     0,  2268,  2269,     0,     0,  1974,     0,  1837,     0,
       0,     0,     0,     0,   876,     0,  1394,   876,  1395,     0,
       0,  3567,     0,     0,     0,     0,     0,     0,  1396,  2025,
       0,   877,  1854,     0,     0,   855,  1397,     0,  1559,   877,
     877,     0,     0,  1557,     0,   855,  1398,     0,     0,  2258,
       0,   855,     0,   855,     0,     0,     0,     0,  1559,   855,
       0,     0,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   855,     0,     0,     0,   855,   855,     0,     0,  2494,
       0,  2025,  1400,  1401,  1557,     0,  1559,     0,     0,     0,
       0,   855,     0,     0,     0,   855,   855,     0,  2257,     0,
     855,     0,     0,     0,     0,   855,     0,     0,  2495,  2258,
       0,     0,     0,     0,     0,   855,     0,     0,   855,     0,
     855,     0,     0,     0,     0,     0,     0,     0,  1559,   855,
     855,   855,     0,     0,     0,   855,  1910,     0,   855,     0,
    1914,     0,     0,     0,     0,     0,     0,     0,  1403,     0,
       0,     0,   855,     0,   878,   855,     0,     0,     0,     0,
     878,  1930,  1931,     0,     0,  1557,  1404,   855,     0,     0,
       0,   878,     0,   855,   855,     0,  3041,     0,  1939,     0,
       0,     0,     0,     0,     0,     0,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,   855,
       0,     0,     0,  1557,     0,   855,     0,  1960,     0,     0,
    1963,   855,     0,  1405,  1406,     0,     0,  1559,     0,     0,
       0,     0,     0,  2269,     0,     0,  1974,     0,  1557,     0,
       0,     0,     0,   855,     0,     0,     0,     0,     0,  2113,
    2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,
       0,     0,     0,     0,     0,     0,     0,  1407,     0,     0,
       0,   877,     0,     0,   876,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   855,   855,   855,   855,     0,     0,     0,
       0,     0,  1557,     0,     0,     0,     0,  1559,     0,     0,
       0,  2025,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2257,     0,     0,     0,     0,     0,  2257,  1559,
    2257,     0,     0,     0,     0,     0,     0,     0,   855,     0,
       0,     0,     0,  2258,  1816,     0,     0,  1817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   877,  1828,     0,     0,     0,  2257,     0,
       0,     0,  2268,     0,     0,     0,     0,     0,  1837,   877,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     876,     0,     0,   876,     0,     0,     0,     0,     0,     0,
       0,     0,  1854,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1816,     0,     0,  1817,     0,     0,   877,   877,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   877,
       0,     0,  1828,     0,     0,  3612,     0,     0,     0,  2257,
    2268,   877,   877,     0,     0,     0,  1837,     0,     0,     0,
       0,     0,     0,     0,     0,   877,     0,     0,     0,  2113,
    2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,
    1854,     0,     0,     0,     0,     0,     0,     0,     0,  1557,
       0,     0,   855,     0,     0,     0,     0,     0,     0,     0,
    3605,     0,     0,  1816,     0,     0,  1817,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1910,   876,   876,     0,
    1914,  1559,     0,  1828,   876,     0,  4182,     0,     0,     0,
       0,  2268,     0,     0,     0,     0,     0,  1837,     0,     0,
       0,  1930,  1931,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1559,  1939,     0,
       0,  1854,     0,  1559,   855,   855,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1816,
       0,   878,  1817,     0,  1910,   878,     0,  1960,  1914,     0,
    1963,     0,     0,     0,     0,     0,   878,     0,     0,  1828,
       0,     0,     0,  2269,     0,   876,  1974,  2268,     0,  1930,
    1931,     0,     0,  1837,     0,     0,     0,     0,   878,     0,
       0,  2258,     0,     0,     0,   855,  1939,     0,     0,     0,
       0,     0,     0,     0,   878,     0,     0,  1854,     0,   878,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,     0,     0,   855,  1960,     0,     0,  1963,   878,
       0,     0,     0,     0,   855,  1910,     0,     0,     0,  1914,
       0,  2269,     0,     0,  1974,   855,   855,     0,  1559,     0,
     855,  2025,     0,     0,     0,     0,     0,   855,   855,     0,
    1930,  1931,   855,  1559,     0,     0,     0,     0,   855,   855,
       0,     0,   855,     0,     0,   855,     0,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   855,
       0,     0,     0,     0,     0,     0,     0,   855,     0,     0,
       0,   855,     0,     0,     0,     0,  1960,     0,     0,  1963,
     878,  1910,     0,   855,     0,  1914,     0,     0,   855,  2025,
       0,     0,  2269,   855,     0,  1974,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1930,  1931,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,   855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1559,     0,     0,     0,     0,
       0,     0,  1960,     0,     0,  1963,     0,     0,     0,     0,
       0,   876,     0,     0,     0,     0,   855,   855,  2269,     0,
    2025,  1974,     0,     0,     0,     0,   855,     0,     0,  2113,
    2114,  2115,   855,  2116,  2117,  2118,  2119,  2120,  2121,  2257,
       0,     0,     0,     0,     0,     0,     0,     0,  1559,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   878,     0,
       0,     0,     0,   876,     0,     0,     0,     0,  1559,     0,
       0,     0,     0,     0,     0,   876,  2025,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   876,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
       0,     0,     0,     0,     0,   878,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,  1557,     0,
       0,     0,  1557,  1557,     0,     0,     0,     0,     0,   878,
       0,     0,     0,     0,     0,     0,   855,     0,     0,     0,
       0,     0,     0,     0,     0,   878,   878,   855,  1387,     0,
       0,     0,     0,     0,  1388,     0,     0,     0,     0,   878,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2113,  2114,  2115,   878,  2116,  2117,
    2118,  2119,  2120,  2121,  1389,     0,     0,   878,     0,     0,
       0,     0,  1559,     0,     0,     0,     0,     0,     0,     0,
     878,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   855,  1557,     0,     0,  1559,
       0,     0,     0,     0,  1390,     0,   855,     0,     0,     0,
       0,  1391,   877,     0,  1392,     0,  2258,   877,   855,     0,
     877,     0,     0,     0,     0,     0,     0,   855,   855,     0,
       0,   855,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   877,     0,   855,     0,     0,     0,     0,     0,
     855,     0,     0,     0,     0,   855,     0,     0,   855,     0,
       0,     0,     0,   855,   855,     0,     0,     0,     0,  1393,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   876,     0,   876,     0,     0,   877,   855,     0,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,   878,   878,     0,     0,     0,     0,   877,   877,     0,
       0,  2259,   855,     0,     0,  1559,     0,   855,   855,     0,
     855,     0,     0,     0,     0,     0,   855,     0,     0,  1394,
       0,  1395,  1559,     0,     0,     0,     0,     0,     0,  2258,
     877,  1396,     0,     0,  2258,     0,  1559,     0,     0,  1397,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1398,
       0,  1387,  1557,     0,     0,   876,     0,  1388,     0,     0,
       0,  2259,     0,     0,   855,     0,     0,     0,     0,   877,
       0,     0,     0,   877,     0,     0,  2257,     0,     0,     0,
       0,     0,  3144,     0,     0,  1400,  1401,     0,     0,     0,
       0,   877,     0,     0,     0,     0,     0,  1389,     0,     0,
       0,     0,   877,  2257,     0,   876,     0,     0,     0,     0,
       0,  1402,     0,     0,     0,   877,     0,     0,     0,     0,
       0,   855,     0,     0,     0,     0,   877,     0,     0,     0,
       0,  1557,     0,   877,     0,     0,     0,  1557,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1390,     0,     0,
       0,  1403,     0,     0,  1391,     0,     0,  1392,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1404,
       0,     0,     0,     0,     0,     0,     0,     0,  1559,     0,
       0,   855,     0,  1559,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2258,     0,     0,     0,     0,     0,     0,
       0,     0,   855,     0,   855,  1559,     0,   855,     0,   855,
       0,     0,  1393,   878,     0,     0,  1405,  1406,     0,     0,
       0,     0,     0,     0,  1557,     0,     0,     0,     0,   855,
       0,     0,     0,     0,   855,     0,     0,     0,   855,     0,
       0,     0,     0,  1559,     0,     0,     0,     0,   855,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1407,   877,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1394,     0,  1395,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1396,     0,     0,     0,     0,     0,
     855,     0,  1397,     0,     0,  2259,   877,  2257,     0,     0,
       0,     0,  1398,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   878,     0,     0,  1559,     0,
       0,     0,  1559,  1559,     0,     0,     0,     0,     0,     0,
       0,   878,   877,     0,     0,  3274,     0,     0,  1400,  1401,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   877,     0,     0,     0,     0,
       0,     0,     0,     0,  3275,     0,     0,     0,   855,     0,
     878,   878,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   878,     0,     0,     0,     0,     0,   855,     0,     0,
       0,     0,     0,   878,   878,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1403,     0,     0,   878,     0,     0,
       0,  1559,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1404,     0,     0,     0,     0,     0,   855,     0,
       0,   855,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2258,     0,     0,     0,   855,     0,   855,  2258,   855,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1559,  1559,  1405,
    1406,     0,     0,   855,     0,     0,  1557,     0,     0,  1557,
       0,  1557,     0,     0,     0,     0,  1557,     0,  1387,     0,
       0,     0,  -955,     0,  1388,     0,     0,     0,     0,     0,
     876,     0,     0,     0,   606,     0,     0,     0,     0,     0,
       0,     0,     0,  1407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   607,   855,     0,     0,     0,
       0,     0,     0,     0,  1389,   877,  1557,     0,   608,     0,
       0,     0,     0,     0,     0,   855,     0,     0,   609,     0,
       0,     0,  -990,     0,     0,     0,     0,   855,   855,     0,
       0,     0,     0,  2259,     0,     0,     0,   855,     0,   610,
       0,     0,   876,     0,     0,   611,     0,     0,     0,     0,
       0,     0,  1557,     0,  1390,     0,     0,     0,     0,     0,
     612,  1391,   855,     0,  1392,     0,     0,     0,     0,     0,
       0,     0,   613,     0,     0,     0,   594,     0,   877,     0,
     614,  -684,   646,   594,     0,     0,     0,     0,   692,     0,
     594,     0,   615,   877,   877,   594,     0,   743,     0,   616,
       0,     0,     0,   617,     0,     0,     0,     0,     0,     0,
       0,   855,     0,     0,     0,     0,   807,     0, -1191,  1393,
     877,     0,     0,   877,     0,     0,     0,     0,   855,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1557,     0,  1557,
       0,     0,     0,     0,     0,     0,     0,   618,  2257,     0,
       0,  1387,     0,     0,  -751,     0,     0,  1388,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1394,
       0,  1395,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1396,     0,     0,     0,     0,     0,     0,   619,  1397,
       0,   620,     0,     0,     0,     0,     0,  1389,     0,  1398,
       0,  1557,     0,     0,     0,     0,     0,     0,  2257,     0,
       0,     0,  2258,  2258,  2258,     0,   855,     0,     0,     0,
       0,     0,     0,     0,  1387,     0,  -492,     0,  2257,     0,
    1388,     0,  3314,     0,     0,  1400,  1401,     0,     0,     0,
       0,     0,     0,     0,   621,  1557,     0,  1390,   877,     0,
     622,     0,     0,     0,  1391,   866,  -492,  1392,     0,   623,
     877,  3315,     0,     0,     0,   855,   902,   903,     0,   906,
    1389,   877,   912,     0,   914,     0,     0,     0,   922,  1557,
       0,     0,     0,     0,     0,  -492,     0,   624,   625,     0,
     626,   627,     0,     0,     0,     0,  2257,  1559,  2257,   628,
       0,  1403,     0,     0,   629,     0,     0,     0,     0,     0,
     630,     0,  1393,   631,     0,     0,   632,     0,     0,  1404,
    1390,     0,     0,     0,     0,     0,     0,  1391,     0,  -492,
    1392,     0,     0,     0,     0,     0,     0,     0,     0,  2257,
       0,     0,     0,     0,     0,     0,     0,     0,  1557,     0,
       0,     0,  2257,     0,     0,     0,     0,     0,     0,   877,
       0,     0,     0,     0,     0,     0,  1405,  1406,     0,  1557,
       0,     0,  1394,     0,  1395,     0,     0,     0,     0,     0,
       0,  1557,     0,     0,  1396,  1393,     0,     0,     0,   633,
       0,     0,  1397,     0,     0,     0,     0,     0,  2258,     0,
     634,     0,  1398,     0,   635,     0,     0,     0,     0,     0,
    1407,     0,     0,   877,     0,   877,     0,     0,   636,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     877,     0,   877,     0,     0,  3783,     0,     0,  1400,  1401,
       0,     0,     0,     0,     0,  1394,     0,  1395,     0,     0,
       0,     0,     0,     0,  1557,     0,     0,  1396,     0,     0,
       0,     0,     0,     0,  3784,  1397,     0,     0,     0,     0,
       0,     0,     0,     0,  1557,  1398,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   877,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1557,     0,  1403,     0,     0,     0,  3855,     0,
       0,  1400,  1401,     0,     0,     0,     0,   877,     0,     0,
       0,     0,  1404,     0,     0,     0,     0,     0,     0,     0,
       0,   877,     0,     0,   878,     0,     0,  3856,  2259,   878,
       0,     0,   878,     0,  1557,     0,     0,     0,     0,     0,
     877,     0,     0,   877,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   878,     0,     0,     0,     0,  1405,
    1406,     0,     0,     0,     0,     0,     0,  1403,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1404,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,     0,  1407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
     878,     0,     0,  1557,  2258,     0,     0,     0,   189,     0,
       0,     0,  1405,  1406,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2259,   878,     0,     0,   969,  2259,     0,     0,     0,
       0,     0,     0,   977,     0,     0,     0,     0,     0,     0,
       0,     0,   993,   994,   190,     0,  1407,   996,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   191,     0,
       0,   878,     0,  1549,  1016,   878,     0,     0,     0,     0,
       0,     0,     0,  1557,     0,   192,     0,     0,  1024,     0,
       0,   193,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   878,  1049,   194,     0,  1051,     0,
    1053,     0,  1056,     0,     0,  1557,     0,   878,   195,     0,
       0,     0,     0,     0,     0,     0,   196,   197,   878,     0,
       0,     0,     0,     0,     0,   878,     0,  1219,   198,     0,
       0,     0,     0,   199,     0,     0,     0,     0,     0,   200,
       0,     0,   594,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   201,     0,     0,     0,  1281,     0,
     877,     0,     0,     0,     0,  1115,     0,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   202,
       0,     0,     0,     0,     0,  2259,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     203,     0,     0,     0,  1549,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2258,     0,
       0,     0,     0,   807,  2258,     0,  2258,     0,     0,     0,
       0,     0,     0,     0,   204,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   205,  2258,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,  1347,     0,     0,   877,  1557,   878,   877,
     206,     0,     0,     0,   207,     0,   208,     0,     0,     0,
       0,     0,   209,     0,     0,   210,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1557,   878,     0,     0,     0,     0,  1557,
     211,   212,     0,   213,     0,  2258,     0,   214,     0,     0,
       0,     0,  1489,     0,  1492,   215,     0,   878,     0,     0,
     216,     0,     0,     0,     0,     0,     0,     0,     0,  1504,
       0,     0,   217,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1514,     0,     0,   218,     0,     0,     0,  1516,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1563,     0,     0,  1567,     0,     0,     0,     0,     0,
       0,     0,     0,   877,   877,     0,     0,     0,     0,     0,
     877,     0,     0,     0,  1549,     0,     0,     0,     0,  1599,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1615,     0,  2259,     0,   658,     0,     0,     0,     0,
    2259,     0,     0,   219,  1557,     0,     0,   659,     0,     0,
     220,     0,     0,     0,     0,     0,     0,     0,     0,  1557,
       0,     0,     0,     0,     0,     0,     0,     0,   660,     0,
       0,     0,     0,     0,  1549,     0,     0,     0,     0,  1662,
       0,   661,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,     0,     0,     0,   662,     0,  1748,     0,   594,
       0,   594,     0,   594,     0,   594,     0,   594,   594,   594,
       0,     0,   663,     0,   594,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1772,   878,     0,     0,
       0,     0,     0,   664,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   665,     0,     0,     0,     0,
       0,     0,     0,   666,   667,     0,     0,     0,     0,  1802,
    1803,     0,  1806,     0,     0,   668,     0,     0,     0,     0,
     669,  1557,     0,     0,     0,     0,   670,     0,     0,     0,
       0,  2131,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   671,     0,     0,     0,     0,  1549,     0,     0,     0,
     878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   878,   878,     0,     0,     0,
       0,     0,  2167,     0,  1557,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,  1549,     0,     0,   672,     0,     0,
       0,     0,   878,     0,     0,   878,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2286,     0,  1549,
       0,  2298,  2303,     0,  1557,     0,     0,     0,     0,     0,
       0,   673,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   674,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
     205,     0,     0,     0,   807,     0,     0,   877,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1557,  1549,     0,     0,     0,   675,     0,     0,
       0,   676,  1551,   677,     0,  2258,     0,     0,     0,   678,
       0,     0,   679,     0,  2259,  2259,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   680,     0,
     681,     0,     0,  2404,   682,     0,     0,     0,     0,   877,
     878,     0,   683,     0,     0,     0,     0,   684,     0,     0,
       0,   877,   878,     0,     0,     0,     0,     0,     0,   685,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,   686,  1551,   877,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,     0,     0,     0,
     687,     0,     0,     0,     0,  1557,     0,   688,     0,     0,
       0,   878,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2259,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,   878,     0,   878,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   878,     0,   878,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   877,  2634,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1557,     0,     0,  2657,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1557,     0,
     878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1557,     0,     0,  2698,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,  2710,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,     0,     0,     0,  2725,     0,  2727,
       0,  2728,     0,     0,     0,     0,  2729,     0,     0,     0,
       0,     0,   878,     0,     0,   878,     0,     0,   877,     0,
     877,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   594,     0,   594,     0,   594,  2825,   594,     0,   594,
       0,     0,     0,   594,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,     0,  2848,
       0,     0,  2850,     0,     0,  2861,     0,     0,     0,     0,
       0,     0,     0,  2870,  2875,     0,     0,     0,  2880,  2882,
       0,     0,  2887,     0,  2889,     0,     0,  2892,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,     0,     0,     0,
       0,   877,     0,     0,  1557,     0,     0,     0,     0,  1557,
       0,     0,     0,     0,  2900,     0,     0,     0,     0,     0,
       0,     0,  2258,     0,     0,     0,     0,     0,     0,     0,
       0,  1557,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,     0,  2258,
       0,   877,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1557,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2907,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2919,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1557,     0,     0,     0,  1557,  1557,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2926,     0,   878,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2259,     0,     0,     0,     0,     0,  2259,     0,  2259,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2258,     0,     0,     0,     0,     0,  1549,
       0,     0,     0,  1549,  1549,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   878,     0,
       0,   878,     0,  1557,  1557,     0,     0,     0,     0,  2928,
    2929,  2930,  2931,  2932,  2933,  2934,  2935,  2936,     0,  2937,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1219,  2965,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2259,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   878,   878,     0,     0,     0,
       0,     0,   878,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   877,     0,     0,     0,
       0,     0,     0,     0,     0,  1552,     0,  1281,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,     0,     0,     0,
    1551,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1802,  1803,     0,     0,     0,
       0,     0,     0,   878,     0,     0,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   877,     0,
       0,     0,     0,     0,     0,  2988,  2989,     0,     0,     0,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3082,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,  1551,     0,     0,     0,     0,     0,
    3050,  3051,     0,     0,     0,  3054,  3055,     0,     0,  3058,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3068,
       0,     0,  1549,     0,     0,  1552,  3077,     0,  1549,     0,
    3080,  3081,     0,     0,  3084,  3085,     0,     0,     0,     0,
       0,  3090,     0,     0,  2258,     0,     0,     0,     0,     0,
    1552,     0,     0,  3106,     0,  3108,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1557,     0,  3134,     0,     0,     0,     0,
    3136,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3143,     0,     0,     0,
       0,     0,     0,     0,  2258,  3164,     0,     0,     0,     0,
    3169,  3170,  3173,  3175,  1552,  1549,     0,     0,     0,   878,
    3185,  3188,     0,     0,  2258,     0,     0,     0,  3199,     0,
       0,     0,     0,  3209,     0,     0,     0,     0,     0,     0,
       0,  3220,     0,     0,     0,     0,     0,  2259,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3260,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3267,     0,  3269,     0,     0,     0,     0,  3272,
       0,   878,  2258,  3273,  2258,  3277,  3278,  3279,  3280,     0,
    3282,     0,     0,   878,  3362,     0,     0,     0,     0,     0,
       0,     0,     0,  3306,  3307,     0,  3309,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   878,  3317,  3318,  3319,
       0,     0,     0,     0,     0,  2258,     0,     0,     0,  1551,
       0,     0,     0,     0,     0,  1551,     0,     0,  2258,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3390,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,  3498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1549,     0,     0,
    1549,     0,  1549,     0,     0,     0,     0,  1549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3547,     0,
       0,     0,     0,  3554,     0,     0,     0,  1549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,     0,  3525,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2875,     0,  2875,
    2875,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,  3615,     0,     0,  3618,     0,     0,     0,     0,     0,
    3625,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     878,     0,   878,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3646,     0,  3648,
       0,     0,     0,  3651,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2965,  2965,  2965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1549,     0,
    1549,     0,  3695,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,  1551,     0,     0,  1551,  2286,  1551,
       0,     0,     0,     0,  1551,     0,     0,     0,     0,     0,
       0,     0,     0,  2303,  2259,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2259,  1549,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1551,  3697,     0,  1555,     0,     0,
       0,  1554,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,  3744,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1549,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3735,  3736,     0,     0,
    1549,  1554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3758,     0,
       0,     0,  1554,     0,     0,     0,     0,  3762,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3773,  3775,     0,     0,     0,  3775,     0,  1549,
       0,     0,  3786,  3787,  3788,  1551,     0,  1551,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1552,     0,  1549,     0,  1552,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2259,     0,     0,     0,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
    3828,  3829,  3830,  3831,     0,     0,     0,     0,     0,  1551,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1549,  3854,     0,  3858,  3859,
    3860,     0,     0,  1551,     0,     0,  1554,     0,  3873,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,  1552,     0,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3925,     0,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,  3940,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   878,  1551,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4011,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,  1549,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,  4042,     0,     0,  1555,
     878,  4046,  1551,     0,     0,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4088,
       0,     0,     0,     0,  1549,  4130,     0,  1554,     0,     0,
    1551,     0,     0,  4098,     0,  4134,     0,     0,     0,     0,
       0,  4135,     0,  4136,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,  1549,     0,     0,  1552,
    1555,     0,     0,     0,     0,  4154,  4155,     0,     0,  1556,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4169,     0,     0,     0,     0,
    2882,     0,     0,     0,     0,  4183,  2259,     0,  1555,     0,
       0,     0,     0,     0,     0,  4190,     0,  1556,  4193,     0,
    4195,     0,     0,     0,     0,     0,     0,     0,     0,  4199,
       0,     0,     0,  1555,     0,  4204,     0,     0,  4207,     0,
       0,     0,  1556,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,  4249,     0,     0,
       0,  1551,     0,  4256,  2965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,  4267,
       0,     0,     0,     0,     0,  1219,  1556,     0,     0,     0,
       0,  1281,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1549,     0,
       0,  1551,     0,     0,  2259,     0,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1551,  1549,     0,     0,     0,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,  2259,     0,     0,
       0,     0,     0,  4307,     0,  4308,     0,     0,     0,     0,
    2259,     0,  4310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4319,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4363,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,  4368,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,  1552,     0,
       0,  1552,     0,  1552,     0,     0,     0,     0,  1552,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4429,  4430,  4431,     0,     0,  4434,  4435,  4436,  4437,  4438,
       0,     0,     0,     0,  4445,  4446,     0,  4448,  4449,  4450,
    4451,  4452,  4453,  4454,     0,  1551,     0,     0,  1552,     0,
       0,     0,  4462,     0,     0,  4464,  4465,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,  1551,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1549,     0,     0,     0,     0,     0,     0,  4515,
    4517,  4519,     0,     0,  4522,     0,  1554,     0,     0,     0,
    1554,  1554,     0,     0,  4583,  4584,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1552,
       0,  1552,     0,     0,     0,  4615,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,  3775,     0,     0,     0,  1551,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1554,  4635,  4637,     0,     0,     0,
    4643,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,  4648,  1549,     0,     0,     0,     0,  4653,  4654,
       0,     0,  4656,     0,     0,  4659,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4669,
       0,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2965,     0,     0,     0,     0,  2965,     0,
       0,     0,     0,  2965,     0,     0,     0,     0,     0,  1551,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4710,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1552,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1552,  1551,     0,     0,     0,  1549,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4729,
    4730,  4731,  4732,     0,     0,  4734,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1555,     0,     0,     0,  1555,  1555,     0,
    1551,     0,  1556,     0,     0,     0,  1556,  1556,     0,  1554,
       0,     0,     0,     0,     0,  1554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4791,  4792,  4793,  4794,  1552,  4796,  4797,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4806,
    4807,     0,  1549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,     0,  1549,
       0,     0,  4816,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,  4861,     0,     0,     0,
       0,  1555,     0,     0,     0,     0,  1552,     0,     0,     0,
    1556,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1551,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4877,
       0,     0,     0,     0,     0,     0,     0,     0,  4883,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4904,     0,     0,     0,     0,     0,     0,     0,  4952,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,     0,     0,
    1549,  4956,     0,     0,     0,     0,  4928,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4985,  4986,     0,     0,  1555,     0,  1551,
       0,     0,     0,     0,     0,  1552,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,     0,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2965,     0,
    2965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   594,     0,     0,     0,
       0,     0,     0,     0,  1554,     0,  1555,  1554,     0,  1554,
       0,     0,  1555,     0,  1554,  1556,     0,     0,     0,     0,
       0,  1556,     0,     0,     0,  1549,     0,     0,     0,  1549,
    1549,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5027,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1554,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5050,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,  1555,
       0,     0,  1551,     0,     0,     0,     0,  1551,  1556,     0,
    1554,     0,     0,     0,     0,     0,  5065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1551,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1552,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,     0,     0,
       0,     0,  5153,     0,  1549,  1549,     0,  2882,     0,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,  5168,
       0,     0,     0,     0,  5171,  1554,     0,  1554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1806,     0,
       0,     0,  3775,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,  1551,  1551,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1552,     0,  5199,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1554,     0,     0,
    5216,  1555,     0,     0,  1555,     0,  1555,  5259,     0,     0,
    1556,  1555,     0,  1556,     0,  1556,     0,     0,     0,     0,
    1556,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,  1551,     0,     0,     0,     0,     0,  2286,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1555,     0,     0,     0,     0,  1554,     0,     0,  4985,
    1556,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,  1554,     0,     0,
       0,     0,     0,  5321,     0,     0,     0,     0,  3775,  1554,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,  5334,     0,     0,  1552,  5378,  5378,     0,
       0,     0,     0,     0,     0,     0,     0,  4985,     0,     0,
       0,     0,  1554,     0,  1549,     0,     0,     0,  5348,     0,
       0,     0,  1555,  5352,  1555,     0,     0,     0,     0,     0,
       0,  1556,     0,  1556,  2123,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,  2123,     0,
       0,     0,     0,  2857,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5378,  1554,     0,     0,     0,  1555,     0,  2123,  2123,
       0,     0,  2123,     0,  5400,  1556,     0,     0,  5455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1555,     0,     0,     0,     0,     0,     0,     0,     0,  1556,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,  1554,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5378,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,  1555,     0,     0,     0,     0,     0,     0,
       0,     0,  1556,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,     0,
    1552,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,  1552,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,  1552,  1554,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1552,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,     0,     0,  2123,
       0,     0,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,     0,     0,
    1555,     0,     0,     0,     0,     0,     0,  1554,     0,  1556,
       0,     0,     0,     0,     0,     0,  1552,     0,     0,     0,
    1552,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1552,  1552,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1555,     0,     0,     0,     0,     0,     0,     0,
       0,  1556,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,  1555,     0,     0,  1556,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,  2123,     0,  2857,  2857,
    3585,     0,     0,  2857,     0,     0,     0,  2123,     0,  1555,
       0,     0,     0,     0,     0,     0,  2123,     0,  1556,     0,
       0,  2123,     0,     0,     0,  1552,  2123,     0,  2123,     0,
       0,     0,     0,  2123,     0,  2123,     0,     0,  2123,  1554,
       0,     0,     0,     0,     0,     0,  2123,     0,     0,  1555,
    2857,  2857,     0,  2123,     0,     0,  1554,     0,  1556,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
    1554,     0,  2123,     0,  2123,  2123,  2123,  2123,  2123,  2123,
    2123,  2123,  2123,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,     0,
       0,  2123,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,  1554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2123,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1555,     0,     0,     0,     0,     0,     0,  1554,     0,  1556,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,  1554,  1554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,  1555,     0,     0,     0,     0,     0,     0,
       0,     0,  1556,     0,     0,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,  1554,     0,     0,     0,     0,     0,  2123,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,  1555,     0,     0,     0,  1556,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2123,     0,     0,     0,     0,     0,  1555,
    2123,     0,     0,  1555,  1555,     0,     0,     0,  1556,     0,
       0,     0,  1556,  1556,     0,     0,  3585,  3585,     0,  2857,
       0,     0,  2857,  2857,  2857,  2857,  2857,  2857,  2857,  2857,
    2857,  2857,  3585,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,  2123,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,     0,  3585,  3585,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2857,  2857,  2123,     0,  2123,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,     0,     0,     0,  1555,  1555,
       0,     0,     0,     0,     0,     0,     0,  1556,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2123,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2857,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2123,     0,     0,     0,
    2123,  2123,  2123,     0,     0,  3585,     0,     0,     0,     0,
    3585,  3585,  3585,  3585,  3585,  3585,  3585,  3585,  3585,  3585,
    2123,  2123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2123,
       0,     0,     0,     0,     0,     0,  2123,  2857,  2857,  2123,
       0,  2123,     0,     0,     0,  2123,  3585,  3585,     0,     0,
    2123,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3585,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2123,
    2123,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,  2857,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,  2123,     0,     0,     0,     0,     0,  2123,
       0,     0,  3585,  3585,  2123,     0,     0,  2857,  2857,  2123,
    2123,     0,  2123,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2123,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3585,  2857,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2123,     0,
    3585,  3585,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2123,
    3585,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2168,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,   224,   225,   226,   227,   228,   229,   230,   231,
    2169,   233,   234,   235,  2170,  2171,  2172,  2173,  2174,  2175,
    2176,   236,   237,  2177,   238,   239,   830,   240,   241,   242,
     243,   244,   831,   245,   246,  2178,   247,   248,   249,   250,
     251,  2179,  2180,   252,   253,   254,   255,   256,  2181,   257,
     258,   259,   260,   261,  2182,   832,  2183,   262,   263,   264,
     265,   266,   833,   267,   268,  2184,   269,   270,   271,   272,
     273,   274,  2185,   834,  5516,   276,  2186,  2187,  2188,   835,
    2189,  2190,  2191,   277,   278,   279,   280,   281,   282,   283,
     284,   285,  2192,   286,  2193,   287,   288,   289,  5517,   291,
    2194,   292,   293,   294,  2195,  2196,   295,   296,   297,   298,
     299,  2197,   300,   301,   302,  2198,   303,   304,  5518,   306,
    2199,  2200,   307,   308,   309,   310,   311,   312,   313,   314,
    2201,   315,  2202,   316,   317,   318,  2203,  2204,  5519,  2205,
     320,   836,  2206,   837,   321,   322,   323,  2207,   324,   325,
    2208,   326,  2209,  5520,   328,   329,   330,   331,   838,   332,
     333,   334,  2210,   335,   336,   337,   338,   339,   340,  2211,
     341,   839,   342,   343,   344,   345,   346,   347,   348,  2212,
     349,  2213,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,  2214,   357,   358,  2215,   359,   360,   843,   361,
     844,  2216,   362,   363,   364,  2217,  2218,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   845,   382,   383,   384,   385,  2219,
     386,   387,   846,   388,  5521,   389,   390,   391,   392,   393,
     394,  2221,   395,  2222,  2223,   396,   397,   398,  2224,  2225,
     399,   400,   847,   401,   848,   402,   403,   404,   405,   406,
    2226,   407,   408,  2227,   409,   410,  2228,   411,   412,   413,
     414,  2229,   415,   416,   417,   418,   419,  5522,   421,   422,
     423,   424,   425,   426,   427,  2230,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,  2231,   439,   440,
     849,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,  2232,   452,   453,   454,   455,   456,  2233,   457,
     458,   459,   460,   850,   461,   462,   463,  2234,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  2235,
     475,   476,  2236,   477,   478,   479,   480,   481,   482,  2237,
     483,   484,  2238,  2239,   485,   486,   487,   488,  2240,   489,
     490,   491,   492,  2241,   493,   494,  2242,  2243,   495,   496,
     497,   498,   499,  2244,  2245,   500,   501,   502,   503,   504,
     505,   506,  2246,   507,   851,   508,   509,   510,   511,  2247,
    2248,   512,  2249,  2250,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  2251,   537,
    2252,   538,   539,   540,   541,   542,   543,  5523,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,  5524,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,  2253,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,  2168,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5525,   224,   225,   226,   227,
     228,   229,   230,   231,  2169,   233,   234,   235,  2170,  2171,
    2172,  2173,  2174,  2175,  2176,   236,   237,  2177,   238,   239,
     830,   240,   241,   242,   243,   244,   831,   245,   246,  2178,
     247,   248,   249,   250,   251,  2179,  2180,   252,   253,   254,
     255,   256,  2181,   257,   258,   259,   260,   261,  2182,   832,
    2183,   262,   263,   264,   265,   266,   833,   267,   268,  2184,
     269,   270,   271,   272,   273,   274,  2185,   834,   275,   276,
    2186,  2187,  2188,   835,  2189,  2190,  2191,   277,   278,   279,
     280,   281,   282,   283,   284,   285,  2192,   286,  2193,   287,
     288,   289,   290,   291,  2194,   292,   293,   294,  2195,  2196,
     295,   296,   297,   298,   299,  2197,   300,   301,   302,  2198,
     303,   304,   305,   306,  2199,  2200,   307,   308,   309,   310,
     311,   312,   313,   314,  2201,   315,  2202,   316,   317,   318,
    2203,  2204,   319,  2205,   320,   836,  2206,   837,   321,   322,
     323,  2207,   324,   325,  2208,   326,  2209,   327,   328,   329,
     330,   331,   838,   332,   333,   334,  2210,   335,   336,   337,
     338,   339,   340,  2211,   341,   839,   342,   343,   344,   345,
     346,   347,   348,  2212,   349,  2213,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,  2214,   357,   358,  2215,
     359,   360,   843,   361,   844,  2216,   362,   363,   364,  2217,
    2218,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   845,   382,
     383,   384,   385,  2219,   386,   387,   846,   388,  2220,   389,
     390,   391,   392,   393,   394,  2221,   395,  2222,  2223,   396,
     397,   398,  2224,  2225,   399,   400,   847,   401,   848,   402,
     403,   404,   405,   406,  2226,   407,   408,  2227,   409,   410,
    2228,   411,   412,   413,   414,  2229,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,  2230,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,  2231,   439,   440,   849,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,  2232,   452,   453,   454,
     455,   456,  2233,   457,   458,   459,   460,   850,   461,   462,
     463,  2234,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,  2235,   475,   476,  2236,   477,   478,   479,
     480,   481,   482,  2237,   483,   484,  2238,  2239,   485,   486,
     487,   488,  2240,   489,   490,   491,   492,  2241,   493,   494,
    2242,  2243,   495,   496,   497,   498,   499,  2244,  2245,   500,
     501,   502,   503,   504,   505,   506,  2246,   507,   851,   508,
     509,   510,   511,  2247,  2248,   512,  2249,  2250,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  2251,   537,  2252,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,  2253,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,   829,
    1132,   653,  1133,  1134,  1135,   708,  1136,     0,     0,  5603,
     224,   225,   226,   227,   228,   229,   230,   231,  2959,   233,
     234,   235,     0,     0,     0,     0,  1137,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,   243,  1138,
     831,  1139,  1140,     0,   247,   248,   249,   250,   251,  1141,
    1142,   252,   253,  1143,  1144,   256,     0,   257,   258,   259,
     260,  1145,     0,  1146,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,
    1153,   277,   278,   279,   280,   281,   282,  1154,  1155,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,  2960,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,  1157,   311,   312,   313,  1158,  1159,   315,
       0,   316,   317,  1160,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,  1161,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,     0,   341,   839,
     342,   343,   344,   345,   346,  1162,  1163,     0,  1164,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,  1165,   843,   361,   844,     0,
     362,   363,   364,  1166,  1167,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1168,   845,  1169,   383,   384,   385,  1170,   386,   387,
     846,   388,  1171,  1172,   390,  1173,   392,   393,   394,     0,
     395,     0,     0,  1174,   397,   398,     0,     0,   399,   400,
     847,   401,   848,  1175,   403,   404,   405,   406,     0,   407,
     408,     0,   409,  1176,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1177,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,  1178,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,  1179,   457,   458,   459,
     460,   850,   461,  1180,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,  1181,     0,   475,   476,
    1182,   477,   478,   479,   480,   481,   482,     0,  1183,  1184,
       0,     0,   485,  1185,   487,  1186,  1187,   489,   490,   491,
     492,     0,   493,   494,     0,  1188,   495,   496,   497,   498,
     499,  1189,     0,   500,   501,   502,   503,   504,   505,  1190,
    2961,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,   519,  1191,
    1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,
     531,   532,   533,   534,   535,   536,  1199,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,  1200,  1201,
     549,   550,   551,   552,   553,   554,   555,   556,  1202,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,     0,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,     0,
       0,     0,     0,  1203,  1204,  2962,     0,     0,     0,     0,
       0,     0,  1206,  2963,   829,  1132,   653,  1133,  1134,  1135,
     708,  1136,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,  1137,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,   247,
     248,   249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,  1157,   311,
     312,   313,  1158,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
     384,   385,  1170,   386,   387,   846,   388,  1171,  1172,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,  1174,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,  1178,   444,   445,   446,
     447,   448,   449,   450,   451,    38,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,  1804,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,  1185,   487,
    1186,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
    1188,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,  1071,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,    47,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  1199,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
       0,     0,     0,     0,     0,     0,     0,     0,  1203,  1204,
       0,     0,     0,     0,     0,     0,     0,  1206,  5182,   829,
    1132,   653,  1133,  1134,  1135,   708,  1136,     0,     0,     0,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   233,
     234,   235,     0,     0,     0,     0,  1137,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,   243,  1138,
     831,  1139,  1140,     0,   247,   248,   249,   250,   251,  1141,
    1142,   252,   253,  1143,  1144,   256,     0,   257,   258,   259,
     260,  1145,     0,  1146,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,
    1153,   277,   278,   279,   280,   281,   282,  1154,  1155,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,  1157,   311,   312,   313,  1158,  1159,   315,
       0,   316,   317,  1160,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,  1161,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,     0,   341,   839,
     342,   343,   344,   345,   346,  1162,  1163,     0,  1164,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,  1165,   843,   361,   844,     0,
     362,   363,   364,  1166,  1167,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1168,   845,  1169,   383,   384,   385,  1170,   386,   387,
     846,   388,  1171,  1172,   390,  1173,   392,   393,   394,     0,
     395,     0,     0,  1174,   397,   398,     0,     0,   399,   400,
     847,   401,   848,  1175,   403,   404,   405,   406,     0,   407,
     408,     0,   409,  1176,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1177,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,  1178,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,  1179,   457,   458,   459,
     460,   850,   461,  1180,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,  1181,     0,   475,   476,
    1182,   477,   478,   479,   480,   481,   482,     0,  1183,  1184,
       0,     0,   485,  1185,   487,  1186,  1187,   489,   490,   491,
     492,     0,   493,   494,     0,  1188,   495,   496,   497,   498,
     499,  1189,     0,   500,   501,   502,   503,   504,   505,  1190,
       0,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,   519,  1191,
    1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,
     531,   532,   533,   534,   535,   536,  1199,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,  1200,  1201,
     549,   550,   551,   552,   553,   554,   555,   556,  1202,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,     0,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,     0,
       0,     0,     0,  1203,  1204,   223,     0,     0,     0,     0,
       0,     0,  1206,  2859,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,  4227,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0, -1787,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0, -1787,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341, -1787,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
   -1787,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360, -1787,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381, -1787,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440, -1787,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,  1525,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1290,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   233,
     234,   235,     0,     0,     0,     0,     0,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,     0,  1526,
     831,  1527,  1528,     0,   247,   248,   249,   250,   251,     0,
       0,   252,   253,  1529,  1530,   256,     0,   257,   258,   259,
     260,     0,     0,   832,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,   276,     0,     0,     0,   835,     0,     0,
       0,   277,   278,   279,   280,   281,   282,  1531,  1532,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,     0,   311,   312,   313,     0,     0,   315,
       0,   316,   317,  1533,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,     0,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
    2322,   335,   336,   337,   338,   339,   340,     0,   341,   839,
    2323,   343,   344,   345,   346,  1534,  1535,     0,  1536,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,     0,   843,   361,   844,     0,
     362,   363,   364,     0,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1537,   845,  1538,   383,   384,     0,     0,   386,   387,
     846,   388,     0,     0,   390,  1539,   392,   393,   394,     0,
     395,     0,     0,   396,   397,   398,     0,     0,   399,  2325,
     847,   401,   848,     0,   403,   404,   405,   406,     0,   407,
     408,     0,   409,     0,     0,     0,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1540,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,     0,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,     0,   457,  2326,   459,
     460,   850,   461,  1542,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     0,     0,   475,   476,
       0,   477,   478,   479,   480,   481,   482,     0,  1543,  1544,
       0,     0,   485,     0,   487,     0,     0,   489,   490,   491,
     492,     0,   493,   494,     0,     0,   495,   496,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,     0,  1545,
    2327,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,     0,     0,
     549,   550,   551,   552,   553,   554,   555,   556,     0,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
       0,   580,     0,   581,   582,  1525,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,  2432,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,     0,  1526,   831,  1527,  1528,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,  1529,
    1530,   256,     0,   257,   258,   259,   260,     0,     0,   832,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,   276,
       0,     0,     0,   835,     0,     0,     0,   277,   278,   279,
     280,   281,   282,  1531,  1532,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,     0,
     311,   312,   313,     0,     0,   315,     0,   316,   317,  1533,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,     0,     0,   326,     0,   327,   328,   329,
     330,   331,   838,   332,   333,   334,  2322,   335,   336,   337,
     338,   339,   340,     0,   341,   839,  2323,   343,   344,   345,
     346,  1534,  1535,     0,  1536,     0,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,     0,   843,   361,   844,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1537,   845,  1538,
     383,   384,     0,     0,   386,   387,   846,   388,     0,     0,
     390,  1539,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,  2325,   847,   401,   848,     0,
     403,   404,   405,   406,     0,   407,   408,     0,   409,     0,
       0,     0,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1540,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,     0,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,  2326,   459,   460,   850,   461,  1542,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     0,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,  1543,  1544,     0,     0,   485,     0,
     487,     0,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,     0,  1545,  2327,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,     0,     0,   549,   550,   551,   552,
     553,   554,   555,   556,     0,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,     0,   580,     0,   581,
     582,     0,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,  1525,
    1412,   653,     0,     0,   884,   708,     0,     0,     0,  3461,
     224,   225,   226,   227,   228,   229,   230,   231,  2169,   233,
     234,   235,  2170,  2171,  2172,  2173,  2174,  2175,  2176,   236,
     237,  2177,   238,   239,   830,   240,   241,   242,     0,  1526,
     831,  1527,  1528,  2178,   247,   248,   249,   250,   251,  2179,
    2180,   252,   253,  1529,  1530,   256,  2181,   257,   258,   259,
     260,     0,  2182,   832,  2183,   262,   263,   264,   265,   266,
     833,   267,   268,  2184,   269,   270,   271,   272,   273,   274,
    2185,   834,   275,   276,  2186,  2187,  2188,   835,  2189,  2190,
    2191,   277,   278,   279,   280,   281,   282,  1531,  1532,   285,
    2192,   286,  2193,   287,   288,   289,   290,   291,  2194,   292,
     293,   294,  2195,  2196,   295,   296,  1156,   298,   299,  2197,
     300,   301,   302,  2198,   303,   304,   305,   306,  2199,  2200,
     307,   308,   309,     0,   311,   312,   313,     0,  2201,   315,
    2202,   316,   317,  1533,  2203,  2204,   319,  2205,   320,   836,
    2206,   837,   321,   322,   323,  2207,   324,     0,  2208,   326,
    2209,   327,   328,   329,   330,   331,   838,   332,   333,   334,
    2210,   335,   336,   337,   338,   339,   340,  2211,   341,   839,
       0,   343,   344,   345,   346,  1534,  1535,  2212,  1536,  2213,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
    2214,   357,   358,  2215,   359,     0,   843,   361,   844,  2216,
     362,   363,   364,  2217,  2218,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1537,   845,  1538,   383,   384,  3972,  2219,   386,   387,
     846,   388,  2220,     0,   390,  1539,   392,   393,   394,  2221,
     395,  2222,  2223,  3973,   397,   398,  2224,  2225,   399,     0,
     847,   401,   848,     0,   403,   404,   405,   406,  2226,   407,
     408,  2227,   409,     0,  2228,     0,   412,   413,   414,  2229,
     415,   416,   417,   418,   419,   420,   421,   422,  1540,   424,
     425,   426,   427,  2230,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,  2231,   439,   440,   849,   441,
     442,  3974,   444,   445,   446,   447,   448,   449,   450,   451,
    2232,   452,   453,   454,   455,   456,  2233,   457,  2326,   459,
     460,   850,   461,  1542,   463,  2234,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     0,  2235,   475,   476,
    2236,   477,   478,   479,   480,   481,   482,  2237,  1543,  1544,
    2238,  2239,   485,     0,   487,     0,  2240,   489,   490,   491,
     492,  2241,   493,   494,  2242,  2243,   495,   496,   497,   498,
     499,  2244,  2245,   500,   501,   502,   503,   504,     0,  1545,
    2246,   507,   851,   508,   509,   510,   511,  2247,  2248,   512,
    2249,  2250,   513,   514,   515,   516,   517,   518,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   528,   529,   530,
     531,   532,   533,   534,   535,   536,  2251,   537,  2252,   538,
     539,   540,   541,   542,   543,   544,   545,   546,     0,     0,
     549,   550,   551,   552,   553,   554,   555,   556,     0,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
       0,   580,  2253,   581,   582,     0,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,   887,
     888,   889,     0,  3975,  3976,   892,   893,   894,   895,     0,
       0,     0,  5601,   829,  1132,   653,  1133,  1134,  1135,   708,
    1136,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
    1137,     0,     0,   236,   237,     0,   238,   239,   830,   240,
     241,   242,   243,  1138,   831,  1139,  1140,  2871,   247,   248,
     249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,
       0,   257,   258,   259,   260,  1145,     0,  1146,     0,   262,
     263,   264,   265,   266,   833,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,   834,   275,   276,  1147,  1148,
    1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,
     282,  1154,  1155,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
    1156,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,  1157,   311,   312,
     313,  1158,  1159,   315,     0,   316,   317,  1160,     0,     0,
     319,     0,   320,   836,  2872,   837,   321,   322,   323,     0,
     324,  1161,     0,   326,     0,   327,   328,   329,   330,   331,
     838,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,   839,   342,   343,   344,   345,   346,  1162,
    1163,     0,  1164,     0,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,     0,   357,   358,  2873,   359,  1165,
     843,   361,   844,     0,   362,   363,   364,  1166,  1167,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1168,   845,  1169,   383,   384,
     385,  1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,
     392,   393,   394,     0,   395,     0,     0,  1174,   397,   398,
       0,     0,   399,   400,   847,   401,   848,  1175,   403,   404,
     405,   406,     0,   407,   408,     0,   409,  1176,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,  1177,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   849,   441,   442,  1178,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
    1179,   457,   458,   459,   460,   850,   461,  1180,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
    1181,     0,   475,   476,  1182,   477,   478,   479,   480,   481,
     482,     0,  1183,  1184,     0,  2874,   485,  1185,   487,  1186,
    1187,   489,   490,   491,   492,     0,   493,   494,     0,  1188,
     495,   496,   497,   498,   499,  1189,     0,   500,   501,   502,
     503,   504,   505,  1190,     0,   507,   851,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    1199,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,  1200,  1201,   549,   550,   551,   552,   553,   554,
     555,   556,  1202,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,     0,  1203,  1204,     0,
       0,     0,     0,     0,     0,     0,  1206,   829,  1132,   653,
    1133,  1134,  1135,   708,  1136,     0,     0,     0,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,  1137,     0,     0,   236,   237,     0,
     238,   239,   830,   240,   241,   242,   243,  1138,   831,  1139,
    1140,     0,   247,   248,   249,   250,   251,  1141,  1142,   252,
     253,  1143,  1144,   256,     0,   257,   258,   259,   260,  1145,
       0,  1146,     0,   262,   263,   264,   265,   266,   833,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,   834,
     275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,
     278,   279,   280,   281,   282,  1154,  1155,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,  1156,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,  1157,   311,   312,   313,  1158,  1159,   315,     0,   316,
     317,  1160,     0,     0,   319,     0,   320,   836,     0,   837,
     321,   322,   323,     0,   324,  1161,     0,   326,     0,   327,
     328,   329,   330,   331,   838,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,   839,   342,   343,
     344,   345,   346,  1162,  1163,     0,  1164,     0,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,  1165,   843,   361,   844,     0,   362,   363,
     364,  1166,  1167,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,  1168,
     845,  1169,   383,   384,   385,  1170,   386,   387,   846,   388,
    1171,  1172,   390,  1173,   392,   393,   394,     0,   395,     0,
       0,  1174,   397,   398,     0,     0,   399,   400,   847,   401,
     848,  1175,   403,   404,   405,   406,     0,   407,   408,     0,
     409,  1176,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,  1177,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,   849,   441,   442,  1178,
     444,   445,   446,   447,   448,   449,   450,   451,    38,   452,
     453,   454,   455,   456,  1179,   457,   458,   459,   460,   850,
     461,  1180,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,  1181,     0,   475,   476,  1804,   477,
     478,   479,   480,   481,   482,     0,  1183,  1184,     0,     0,
     485,  1185,   487,  1186,  1187,   489,   490,   491,   492,     0,
     493,   494,     0,  1188,   495,   496,   497,   498,   499,  1189,
       0,   500,   501,   502,   503,   504,  1071,  1190,     0,   507,
     851,   508,   509,   510,   511,     0,     0,   512,     0,    47,
     513,   514,   515,   516,   517,   518,   519,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  1199,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,  1200,  1201,   549,   550,
     551,   552,   553,   554,   555,   556,  1202,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
       0,  1203,  1204,     0,     0,     0,     0,     0,     0,     0,
    1206,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,     0,
       0,     0,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     0,     0,     0,     0,  1137,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
     243,  1138,   831,  1139,  1140,     0,   247,   248,   249,   250,
     251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,
     258,   259,   260,  1145,     0,  1146,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,   277,   278,   279,   280,   281,   282,  1154,
    1155,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,  1156,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
       0,     0,   307,   308,   309,  1157,   311,   312,   313,  1158,
    1159,   315,     0,   316,   317,  1160,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,  1161,
       0,   326,     0,   327,   328,   329,   330,   331,   838,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,  1162,  1163,     0,
    1164,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   359,  1165,   843,   361,
     844,     0,   362,   363,   364,  1166,  1167,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,  1168,   845,  1169,   383,   384,   385,  1170,
     386,   387,   846,   388,  1171,  1172,   390,  1173,   392,   393,
     394,     0,   395,     0,     0,  1174,   397,   398,     0,     0,
     399,   400,   847,   401,   848,  1175,   403,   404,   405,   406,
       0,   407,   408,     0,   409,  1176,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
    1177,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,  1178,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,   453,   454,   455,   456,  1179,   457,
     458,   459,   460,   850,   461,  1180,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,  1181,     0,
     475,   476,  1182,   477,   478,   479,   480,   481,   482,     0,
    1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,
     490,   491,   492,     0,   493,   494,     0,  1188,   495,   496,
     497,   498,   499,  1189,     0,   500,   501,   502,   503,   504,
     505,  1190,     0,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,     0,   513,   514,   515,   516,   517,   518,
     519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  1199,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
    1200,  1201,   549,   550,   551,   552,   553,   554,   555,   556,
    1202,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,  1203,  1204,     0,     0,     0,
       0,     0,  1743,  2817,  1206,   829,  1132,   653,  1133,  1134,
    1135,   708,  1136,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,  1137,     0,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,   243,  1138,   831,  1139,  1140,     0,
     247,   248,   249,   250,   251,  1141,  1142,   252,   253,  1143,
    1144,   256,     0,   257,   258,   259,   260,  1145,     0,  1146,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,   276,
    1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,
     280,   281,   282,  1154,  1155,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,  1157,
     311,   312,   313,  1158,  1159,   315,     0,   316,   317,  1160,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,  1161,     0,   326,     0,   327,   328,   329,
     330,   331,   838,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   839,   342,   343,   344,   345,
     346,  1162,  1163,     0,  1164,     0,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,  1165,   843,   361,   844,     0,   362,   363,   364,  1166,
    1167,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1168,   845,  1169,
     383,   384,   385,  1170,   386,   387,   846,   388,  1171,  1172,
     390,  1173,   392,   393,   394,     0,   395,     0,     0,  1174,
     397,   398,     0,     0,   399,   400,   847,   401,   848,  1175,
     403,   404,   405,   406,     0,   407,   408,     0,   409,  1176,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1177,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,  1178,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,  1179,   457,   458,   459,   460,   850,   461,  1180,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,  1181,     0,   475,   476,  1182,   477,   478,   479,
     480,   481,   482,     0,  1183,  1184,     0,     0,   485,  1185,
     487,  1186,  1187,   489,   490,   491,   492,     0,   493,   494,
       0,  1188,   495,   496,   497,   498,   499,  1189,     0,   500,
     501,   502,   503,   504,   505,  1190,     0,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  1199,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,  1200,  1201,   549,   550,   551,   552,
     553,   554,   555,   556,  1202,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,  1203,
    1204,  1205,     0,     0,     0,     0,     0,     0,  1206,   829,
    1132,   653,  1133,  1134,  1135,   708,  1136,     0,     0,     0,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   233,
     234,   235,     0,     0,     0,     0,  1137,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,   243,  1138,
     831,  1139,  1140,     0,   247,   248,   249,   250,   251,  1141,
    1142,   252,   253,  1143,  1144,   256,     0,   257,   258,   259,
     260,  1145,     0,  1146,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,
    1153,   277,   278,   279,   280,   281,   282,  1154,  1155,   285,
    1280,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,  1157,   311,   312,   313,  1158,  1159,   315,
       0,   316,   317,  1160,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,  1161,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,     0,   341,   839,
     342,   343,   344,   345,   346,  1162,  1163,     0,  1164,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,  1165,   843,   361,   844,     0,
     362,   363,   364,  1166,  1167,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1168,   845,  1169,   383,   384,   385,  1170,   386,   387,
     846,   388,  1171,  1172,   390,  1173,   392,   393,   394,     0,
     395,     0,     0,  1174,   397,   398,     0,     0,   399,   400,
     847,   401,   848,  1175,   403,   404,   405,   406,     0,   407,
     408,     0,   409,  1176,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1177,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,  1178,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,  1179,   457,   458,   459,
     460,   850,   461,  1180,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,  1181,     0,   475,   476,
    1182,   477,   478,   479,   480,   481,   482,     0,  1183,  1184,
       0,     0,   485,  1185,   487,  1186,  1187,   489,   490,   491,
     492,     0,   493,   494,     0,  1188,   495,   496,   497,   498,
     499,  1189,     0,   500,   501,   502,   503,   504,   505,  1190,
       0,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,   519,  1191,
    1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,
     531,   532,   533,   534,   535,   536,  1199,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,  1200,  1201,
     549,   550,   551,   552,   553,   554,   555,   556,  1202,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,     0,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,     0,
       0,     0,     0,  1203,  1204,     0,     0,     0,     0,     0,
       0,     0,  1206,   829,  1132,   653,  1133,  1134,  1135,   708,
    1136,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,  2296,   233,   234,   235,     0,     0,     0,     0,
    1137,     0,     0,   236,   237,     0,   238,   239,   830,   240,
     241,   242,   243,  1138,   831,  1139,  1140,     0,   247,   248,
     249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,
       0,   257,   258,   259,   260,  1145,     0,  1146,     0,   262,
     263,   264,   265,   266,   833,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,   834,   275,   276,  1147,  1148,
    1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,
     282,  1154,  1155,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
    1156,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,  1157,   311,   312,
     313,  1158,  1159,   315,     0,   316,   317,  1160,     0,     0,
     319,     0,   320,   836,     0,   837,   321,   322,   323,     0,
     324,  1161,     0,   326,     0,   327,   328,   329,   330,   331,
     838,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,   839,   342,   343,   344,   345,   346,  1162,
    1163,     0,  1164,     0,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,  1165,
     843,   361,   844,     0,   362,   363,   364,  1166,  1167,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1168,   845,  1169,   383,   384,
     385,  1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,
     392,   393,   394,     0,   395,     0,     0,  1174,   397,   398,
       0,     0,   399,   400,   847,   401,   848,  1175,   403,   404,
     405,   406,     0,   407,   408,     0,   409,  1176,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,  1177,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   849,   441,   442,  1178,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
    1179,   457,   458,   459,   460,   850,   461,  1180,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
    1181,     0,   475,   476,  1182,   477,   478,   479,   480,   481,
     482,     0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,
    1187,   489,   490,   491,   492,     0,   493,   494,     0,  1188,
     495,   496,   497,   498,   499,  1189,     0,   500,   501,   502,
     503,   504,   505,  1190,     0,   507,   851,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    1199,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,  1200,  1201,   549,   550,   551,   552,   553,   554,
     555,   556,  1202,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,     0,  1203,  1204,     0,
       0,     0,     0,     0,     0,     0,  1206,   829,  1132,   653,
    1133,  1134,  1135,   708,  1136,     0,     0,     0,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,  1137,     0,     0,   236,   237,     0,
     238,   239,   830,   240,   241,   242,   243,  1138,   831,  1139,
    1140,     0,   247,   248,   249,   250,   251,  1141,  1142,   252,
     253,  1143,  1144,   256,     0,   257,   258,   259,   260,  1145,
       0,  1146,     0,   262,   263,   264,   265,   266,   833,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,   834,
     275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,
     278,   279,   280,   281,   282,  1154,  1155,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,  1156,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,  1157,   311,   312,   313,  1158,  1159,   315,     0,   316,
     317,  1160,     0,     0,   319,     0,   320,   836,  2872,   837,
     321,   322,   323,     0,   324,  1161,     0,   326,     0,   327,
     328,   329,   330,   331,   838,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,   839,   342,   343,
     344,   345,   346,  1162,  1163,     0,  1164,     0,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,  1165,   843,   361,   844,     0,   362,   363,
     364,  1166,  1167,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,  1168,
     845,  1169,   383,   384,   385,  1170,   386,   387,   846,   388,
    1171,  1172,   390,  1173,   392,   393,   394,     0,   395,     0,
       0,  1174,   397,   398,     0,     0,   399,   400,   847,   401,
     848,  1175,   403,   404,   405,   406,     0,   407,   408,     0,
     409,  1176,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,  1177,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,   849,   441,   442,  1178,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
     453,   454,   455,   456,  1179,   457,   458,   459,   460,   850,
     461,  1180,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,  1181,     0,   475,   476,  1182,   477,
     478,   479,   480,   481,   482,     0,  1183,  1184,     0,     0,
     485,  1185,   487,  1186,  1187,   489,   490,   491,   492,     0,
     493,   494,     0,  1188,   495,   496,   497,   498,   499,  1189,
       0,   500,   501,   502,   503,   504,   505,  1190,     0,   507,
     851,   508,   509,   510,   511,     0,     0,   512,     0,     0,
     513,   514,   515,   516,   517,   518,   519,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  1199,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,  1200,  1201,   549,   550,
     551,   552,   553,   554,   555,   556,  1202,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
       0,  1203,  1204,     0,     0,     0,     0,     0,     0,     0,
    1206,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,     0,
       0,     0,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     0,     0,     0,     0,  1137,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
     243,  1138,   831,  1139,  1140,     0,   247,   248,   249,   250,
     251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,
     258,   259,   260,  1145,     0,  1146,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,   277,   278,   279,   280,   281,   282,  1154,
    1155,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,  1156,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
       0,     0,   307,   308,   309,  1157,   311,   312,   313,  1158,
    1159,   315,     0,   316,   317,  1160,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,  1161,
       0,   326,     0,   327,   328,   329,   330,   331,   838,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,  1162,  1163,     0,
    1164,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   359,  1165,   843,   361,
     844,     0,   362,   363,   364,  1166,  1167,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,  1168,   845,  1169,   383,   384,   385,  1170,
     386,   387,   846,   388,  1171,  1172,   390,  1173,   392,   393,
     394,     0,   395,     0,     0,  1174,   397,   398,     0,     0,
     399,   400,   847,   401,   848,  1175,   403,   404,   405,   406,
       0,   407,   408,     0,   409,  1176,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
    1177,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,  1178,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,   453,   454,   455,   456,  1179,   457,
     458,   459,   460,   850,   461,  1180,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,  1181,     0,
     475,   476,  1182,   477,   478,   479,   480,   481,   482,     0,
    1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,
     490,   491,   492,     0,   493,   494,     0,  1188,   495,   496,
     497,   498,   499,  1189,     0,   500,   501,   502,   503,   504,
     505,  1190,  4257,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,     0,   513,   514,   515,   516,   517,   518,
     519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  1199,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
    1200,  1201,   549,   550,   551,   552,   553,   554,   555,   556,
    1202,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,  1203,  1204,     0,     0,     0,
       0,     0,     0,     0,  1206,   829,  1132,   653,  1133,  1134,
    1135,   708,  1136,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,  1137,     0,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,  5375,  1138,   831,  1139,  1140,     0,
     247,   248,   249,   250,   251,  1141,  1142,   252,   253,  1143,
    1144,   256,     0,   257,   258,   259,   260,  1145,     0,  1146,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,  5376,
    1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,
     280,   281,   282,  1154,  1155,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,  1157,
     311,   312,   313,  1158,  1159,   315,     0,   316,   317,  1160,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,  1161,     0,   326,     0,   327,   328,   329,
     330,   331,   838,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   839,   342,   343,   344,   345,
     346,  1162,  1163,     0,  1164,     0,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,  1165,   843,   361,   844,     0,   362,   363,   364,  1166,
    1167,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1168,   845,  1169,
     383,   384,   385,  1170,   386,   387,   846,   388,  1171,  1172,
     390,  1173,   392,   393,   394,     0,   395,     0,     0,  1174,
     397,   398,     0,     0,   399,   400,   847,   401,   848,  1175,
     403,   404,   405,   406,     0,   407,   408,     0,   409,  1176,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1177,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,  1178,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,  1179,   457,   458,   459,   460,   850,   461,  1180,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,  1181,     0,   475,   476,  1182,   477,   478,   479,
     480,   481,   482,     0,  1183,  1184,     0,     0,   485,  1185,
     487,  1186,  1187,   489,   490,   491,   492,  5377,   493,   494,
       0,  1188,   495,   496,   497,   498,   499,  1189,     0,   500,
     501,   502,   503,   504,   505,  1190,     0,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  1199,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,  1200,  1201,   549,   550,   551,   552,
     553,   554,   555,   556,  1202,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,  1203,
    1204,     0,     0,     0,     0,     0,     0,     0,  1206,   829,
    1132,   653,  1133,  1134,  1135,   708,  1136,     0,     0,     0,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   233,
     234,   235,     0,     0,     0,     0,  1137,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,   243,  1138,
     831,  1139,  1140,     0,   247,   248,   249,   250,   251,  1141,
    1142,   252,   253,  1143,  1144,   256,     0,   257,   258,   259,
     260,  1145,     0,  1146,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,  5376,  1147,  1148,  1149,  1150,  1151,  1152,
    1153,   277,   278,   279,   280,   281,   282,  1154,  1155,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,  1157,   311,   312,   313,  1158,  1159,   315,
       0,   316,   317,  1160,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,  1161,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,     0,   341,   839,
     342,   343,   344,   345,   346,  1162,  1163,     0,  1164,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,  1165,   843,   361,   844,     0,
     362,   363,   364,  1166,  1167,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1168,   845,  1169,   383,   384,   385,  1170,   386,   387,
     846,   388,  1171,  1172,   390,  1173,   392,   393,   394,     0,
     395,     0,     0,  1174,   397,   398,     0,     0,   399,   400,
     847,   401,   848,  1175,   403,   404,   405,   406,     0,   407,
     408,     0,   409,  1176,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1177,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,  1178,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,  1179,   457,   458,   459,
     460,   850,   461,  1180,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,  1181,     0,   475,   476,
    1182,   477,   478,   479,   480,   481,   482,     0,  1183,  1184,
       0,     0,   485,  1185,   487,  1186,  1187,   489,   490,   491,
     492,  5377,   493,   494,     0,  1188,   495,   496,   497,   498,
     499,  1189,     0,   500,   501,   502,   503,   504,   505,  1190,
       0,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,   519,  1191,
    1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,
     531,   532,   533,   534,   535,   536,  1199,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,  1200,  1201,
     549,   550,   551,   552,   553,   554,   555,   556,  1202,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,     0,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,     0,
       0,     0,     0,  1203,  1204,     0,     0,     0,     0,     0,
       0,     0,  1206,   829,  1132,   653,  1133,  1134,  1135,   708,
    1136,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
    1137,     0,     0,   236,   237,     0,   238,   239,   830,   240,
     241,   242,   243,  1138,   831,  1139,  1140,     0,   247,   248,
     249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,
       0,   257,   258,   259,   260,  1145,     0,  1146,     0,   262,
     263,   264,   265,   266,   833,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,   834,   275,   276,  1147,  1148,
    1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,
     282,  1154,  1155,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
    1156,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,  1157,   311,   312,
     313,  1158,  1159,   315,     0,   316,   317,  1160,     0,     0,
     319,     0,   320,   836,     0,   837,   321,   322,   323,     0,
     324,  1161,     0,   326,     0,   327,   328,   329,   330,   331,
     838,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,   839,   342,   343,   344,   345,   346,  1162,
    1163,     0,  1164,     0,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,  1165,
     843,   361,   844,     0,   362,   363,   364,  1166,  1167,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1168,   845,  1169,   383,   384,
     385,  1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,
     392,   393,   394,     0,   395,     0,     0,  1174,   397,   398,
       0,     0,   399,   400,   847,   401,   848,  1175,   403,   404,
     405,   406,     0,   407,   408,     0,   409,  1176,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,  1177,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   849,   441,   442,  1178,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
    1179,   457,   458,   459,   460,   850,   461,  1180,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
    1181,     0,   475,   476,  1182,   477,   478,   479,   480,   481,
     482,     0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,
    1187,   489,   490,   491,   492,     0,   493,   494,     0,  1188,
     495,   496,   497,   498,   499,  1189,     0,   500,   501,   502,
     503,   504,   505,  1190,     0,   507,   851,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    1199,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,  1200,  1201,   549,   550,   551,   552,   553,   554,
     555,   556,  1202,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,     0,  1203,  1204,     0,
       0,     0,     0,     0,     0,     0,  1206,   829,  1132,   653,
    1133,  1134,  1135,   708,  1136,     0,     0,     0,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,  1137,     0,     0,   236,   237,     0,
     238,   239,   830,   240,   241,   242,   243,  1138,   831,  1139,
    1140,     0,   247,   248,   249,   250,   251,  1141,  1142,   252,
     253,  1143,  1144,   256,     0,   257,   258,   259,   260,  1145,
       0,  1146,     0,   262,   263,   264,   265,   266,   833,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,   834,
     275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,
     278,   279,   280,   281,   282,  1154,  1155,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,  1156,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,  1157,   311,   312,   313,  1158,  1159,   315,     0,   316,
     317,  1160,     0,     0,   319,     0,   320,   836,     0,   837,
     321,   322,   323,     0,   324,  1161,     0,   326,     0,   327,
     328,   329,   330,   331,   838,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,   839,   342,   343,
     344,   345,   346,  1162,  1163,     0,  1164,     0,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,  1165,   843,   361,   844,     0,   362,   363,
     364,  1166,  1167,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,  1168,
     845,  1169,   383,   384,   385,  1170,   386,   387,   846,   388,
    1171,  1172,   390,  1173,   392,   393,   394,     0,   395,     0,
       0,  1174,   397,   398,     0,     0,   399,   400,   847,   401,
     848,  1175,   403,   404,   405,   406,     0,   407,   408,     0,
     409,  1176,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,  1177,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,   849,   441,   442,  1178,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
     453,   454,   455,   456,  1179,   457,   458,   459,   460,   850,
     461,  1180,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,  1181,     0,   475,   476,  1182,   477,
     478,   479,   480,   481,   482,     0,  1183,  1184,     0,     0,
     485,  1185,   487,  1186,  1187,   489,   490,   491,   492,     0,
     493,   494,     0,  1188,   495,   496,   497,   498,   499,  1189,
       0,   500,   501,   502,   503,   504,   505,  1190,     0,   507,
     851,   508,   509,   510,   511,     0,     0,   512,     0,     0,
     513,   514,   515,   516,   517,   518,   519,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  1199,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,  1200,  1201,   549,   550,
     551,   552,   553,   554,   555,   556,  1202,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
       0,  2299,  2300,     0,     0,     0,     0,     0,     0,     0,
    1206,   829,  3008,   653,  1133,  1134,  1135,   708,  1136,     0,
       0,     0,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     0,     0,     0,     0,  1137,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
     243,  1138,   831,  1139,  1140,     0,   247,   248,   249,   250,
     251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,
     258,   259,   260,  1145,     0,  1146,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,   277,   278,   279,   280,   281,   282,  1154,
    1155,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,  1156,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
       0,     0,   307,   308,   309,  1157,   311,   312,   313,  1158,
    1159,   315,     0,   316,   317,  1160,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,  1161,
       0,   326,     0,   327,   328,   329,   330,   331,   838,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,  1162,  1163,     0,
    1164,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   359,  1165,   843,   361,
     844,     0,   362,   363,   364,  1166,  1167,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,  1168,   845,  1169,   383,   384,   385,  1170,
     386,   387,   846,   388,  1171,  1172,   390,  1173,   392,   393,
     394,     0,   395,     0,     0,  1174,   397,   398,     0,     0,
     399,   400,   847,   401,   848,  1175,   403,   404,   405,   406,
       0,   407,   408,     0,   409,  1176,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
    1177,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,  1178,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,   453,   454,   455,   456,  1179,   457,
     458,   459,   460,   850,   461,  1180,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,  1181,     0,
     475,   476,  1182,   477,   478,   479,   480,   481,   482,     0,
    1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,
     490,   491,   492,     0,   493,   494,     0,  1188,   495,   496,
     497,   498,   499,  1189,     0,   500,   501,   502,   503,   504,
     505,  1190,     0,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,     0,   513,   514,   515,   516,   517,   518,
     519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  1199,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
    1200,  1201,   549,   550,   551,   552,   553,   554,   555,   556,
    1202,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,  1203,  1204,     0,     0,     0,
       0,     0,     0,     0,  1206,   829,  1132,   653,  1133,  1134,
    1135,   708,  1136,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,  1137,     0,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,   243,  1138,   831,  1139,  1140,     0,
     247,   248,   249,   250,   251,  1141,  1142,   252,   253,  1143,
    1144,   256,     0,   257,   258,   259,   260,  1145,     0,  1146,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,   276,
    1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,
     280,   281,   282,  1154,  1155,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,  1157,
     311,   312,   313,  1158,  1159,   315,     0,   316,   317,  1160,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,  1161,     0,   326,     0,   327,   328,   329,
     330,   331,   838,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   839,   342,   343,   344,   345,
     346,  1162,  1163,     0,  1164,     0,   350,  3546,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,  1165,   843,   361,   844,     0,   362,   363,   364,  1166,
    1167,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1168,   845,  1169,
     383,   384,   385,  1170,   386,   387,   846,   388,  1171,  1172,
     390,  1173,   392,   393,   394,     0,   395,     0,     0,  1174,
     397,   398,     0,     0,   399,   400,   847,   401,   848,  1175,
     403,   404,   405,   406,     0,   407,   408,     0,   409,  1176,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1177,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,  1178,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,  1179,   457,   458,   459,   460,   850,   461,  1180,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,  1181,     0,   475,   476,  1182,   477,   478,   479,
     480,   481,   482,     0,  1183,  1184,     0,     0,   485,  1185,
     487,  1186,  1187,   489,   490,   491,   492,     0,   493,   494,
       0,  1188,   495,   496,   497,   498,   499,  1189,     0,   500,
     501,   502,   503,   504,   505,  1190,     0,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  1199,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,  1200,  1201,   549,   550,   551,   552,
     553,   554,   555,   556,  1202,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,  1203,
    1204,     0,     0,     0,     0,     0,     0,     0,  1206,   829,
    1132,   653,  1133,  1134,  1135,   708,  1136,     0,     0,     0,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   233,
     234,   235,     0,     0,     0,     0,  1137,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,   243,  1138,
     831,  1139,  1140,     0,   247,   248,   249,   250,   251,  1141,
    1142,   252,   253,  1143,  1144,   256,     0,   257,   258,   259,
     260,  1145,     0,  1146,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,  4266,  1147,  1148,  1149,  1150,  1151,  1152,
    1153,   277,   278,   279,   280,   281,   282,  1154,  1155,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,  1157,   311,   312,   313,  1158,  1159,   315,
       0,   316,   317,  1160,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,  1161,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,     0,   341,   839,
     342,   343,   344,   345,   346,  1162,  1163,     0,  1164,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,  1165,   843,   361,   844,     0,
     362,   363,   364,  1166,  1167,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1168,   845,  1169,   383,   384,   385,  1170,   386,   387,
     846,   388,  1171,  1172,   390,  1173,   392,   393,   394,     0,
     395,     0,     0,  1174,   397,   398,     0,     0,   399,   400,
     847,   401,   848,  1175,   403,   404,   405,   406,     0,   407,
     408,     0,   409,  1176,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1177,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,  1178,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,  1179,   457,   458,   459,
     460,   850,   461,  1180,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,  1181,     0,   475,   476,
    1182,   477,   478,   479,   480,   481,   482,     0,  1183,  1184,
       0,     0,   485,  1185,   487,  1186,  1187,   489,   490,   491,
     492,     0,   493,   494,     0,  1188,   495,   496,   497,   498,
     499,  1189,     0,   500,   501,   502,   503,   504,   505,  1190,
       0,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,   519,  1191,
    1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,
     531,   532,   533,   534,   535,   536,  1199,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,  1200,  1201,
     549,   550,   551,   552,   553,   554,   555,   556,  1202,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,     0,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,     0,
       0,     0,     0,  1203,  1204,     0,     0,     0,     0,     0,
       0,     0,  1206,   829,  1132,   653,  1133,  1134,  1135,   708,
    1136,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
    1137,     0,     0,   236,   237,     0,   238,   239,   830,   240,
     241,   242,   243,  1138,   831,  1139,  1140,     0,   247,   248,
     249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,
       0,   257,   258,   259,   260,  1145,     0,  1146,     0,   262,
     263,   264,   265,   266,   833,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,   834,   275,   276,  1147,  1148,
    1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,
     282,  1154,  1155,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
    1156,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,  1157,   311,   312,
     313,  1158,  1159,   315,     0,   316,   317,  1160,     0,     0,
     319,     0,   320,   836,     0,   837,   321,   322,   323,     0,
     324,  1161,     0,   326,     0,   327,   328,   329,   330,   331,
     838,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,   839,   342,   343,   344,   345,   346,  1162,
    1163,     0,  1164,     0,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,  1165,
     843,   361,   844,     0,   362,   363,   364,  1166,  1167,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1168,   845,  1169,   383,   384,
     385,  1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,
     392,   393,   394,     0,   395,     0,     0,  1174,   397,   398,
       0,     0,   399,   400,   847,   401,   848,  1175,   403,   404,
     405,   406,     0,   407,   408,     0,   409,  1176,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,  1177,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   849,   441,   442,  1178,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
    1179,   457,   458,   459,   460,   850,   461,  1180,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
    1181,     0,   475,   476,  1182,   477,   478,   479,   480,   481,
     482,     0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,
    1187,   489,   490,   491,   492,     0,   493,   494,     0,  1188,
     495,   496,   497,   498,   499,  1189,     0,   500,   501,   502,
     503,   504,   505,  1190,     0,   507,   851,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,  4626,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    1199,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,  1200,  1201,   549,   550,   551,   552,   553,   554,
     555,   556,  1202,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,     0,  1203,  1204,     0,
       0,     0,     0,     0,     0,     0,  1206,   829,  1132,   653,
    1133,  1134,  1135,   708,  1136,     0,     0,     0,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,  1137,     0,     0,   236,   237,     0,
     238,   239,   830,   240,   241,   242,   243,  1138,   831,  1139,
    1140,     0,   247,   248,   249,   250,   251,  1141,  1142,   252,
     253,  1143,  1144,   256,     0,   257,   258,   259,   260,  1145,
       0,  1146,     0,   262,   263,   264,   265,   266,   833,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,   834,
     275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,
     278,   279,   280,   281,   282,  1154,  1155,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,  1156,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,  1157,   311,   312,   313,  1158,  1159,   315,     0,   316,
     317,  1160,     0,     0,   319,     0,   320,   836,     0,   837,
     321,   322,   323,     0,   324,  1161,     0,   326,     0,   327,
     328,   329,   330,   331,   838,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,   839,   342,   343,
     344,   345,   346,  1162,  1163,     0,  1164,     0,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,  1165,   843,   361,   844,     0,   362,   363,
     364,  1166,  1167,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,  1168,
     845,  1169,   383,  4636,   385,  1170,   386,   387,   846,   388,
    1171,  1172,   390,  1173,   392,   393,   394,     0,   395,     0,
       0,  1174,   397,   398,     0,     0,   399,   400,   847,   401,
     848,  1175,   403,   404,   405,   406,     0,   407,   408,     0,
     409,  1176,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,  1177,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,   849,   441,   442,  1178,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
     453,   454,   455,   456,  1179,   457,   458,   459,   460,   850,
     461,  1180,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,  1181,     0,   475,   476,  1182,   477,
     478,   479,   480,   481,   482,     0,  1183,  1184,     0,     0,
     485,  1185,   487,  1186,  1187,   489,   490,   491,   492,     0,
     493,   494,     0,  1188,   495,   496,   497,   498,   499,  1189,
       0,   500,   501,   502,   503,   504,   505,  1190,     0,   507,
     851,   508,   509,   510,   511,     0,     0,   512,     0,     0,
     513,   514,   515,   516,   517,   518,   519,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  1199,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,  1200,  1201,   549,   550,
     551,   552,   553,   554,   555,   556,  1202,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
       0,  1203,  1204,     0,     0,     0,     0,     0,     0,     0,
    1206,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,     0,
       0,     0,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     0,     0,     0,     0,  1137,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
     243,  1138,   831,  1139,  1140,     0,   247,   248,   249,   250,
     251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,
     258,   259,   260,  1145,     0,  1146,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,   277,   278,   279,   280,   281,   282,  1154,
    1155,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,  1156,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
       0,     0,   307,   308,   309,  1157,   311,   312,   313,  1158,
    1159,   315,     0,   316,   317,  1160,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,  1161,
       0,   326,     0,   327,   328,   329,   330,   331,   838,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,  1162,  1163,     0,
    1164,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   359,  1165,   843,   361,
     844,     0,   362,   363,   364,  1166,  1167,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,  1168,   845,  1169,   383,   384,   385,  1170,
     386,   387,   846,   388,  1171,  1172,   390,  1173,   392,   393,
     394,     0,   395,     0,     0,  1174,   397,   398,     0,     0,
     399,   400,   847,   401,   848,  1175,   403,   404,   405,   406,
       0,   407,   408,     0,   409,  1176,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
    1177,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,  1178,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,   453,   454,   455,   456,  1179,   457,
     458,   459,   460,   850,   461,  1180,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,  1181,     0,
     475,   476,  1182,   477,   478,   479,   480,   481,   482,     0,
    1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,
     490,   491,   492,     0,   493,   494,     0,  1188,   495,   496,
     497,   498,   499,  1189,     0,   500,   501,   502,   503,   504,
     505,  1190,     0,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,     0,   513,   514,   515,   516,   517,   518,
     519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,
     529,   530,   531,   532,   533,   534,   535,  4979,  1199,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
    1200,  4980,   549,   550,   551,   552,   553,   554,   555,   556,
    1202,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,  4981,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,  1203,  1204,     0,     0,     0,
       0,     0,     0,     0,  4982,   829,  1132,   653,  1133,  1134,
    1135,   708,  1136,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,  1137,     0,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,   243,  1138,   831,  1139,  1140,     0,
     247,   248,   249,   250,   251,  1141,  1142,   252,   253,  1143,
    1144,   256,     0,   257,   258,   259,   260,  1145,     0,  1146,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,   276,
    1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,
     280,   281,   282,  1154,  1155,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,  1157,
     311,   312,   313,  1158,  1159,   315,     0,   316,   317,  1160,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,  1161,     0,   326,     0,   327,   328,   329,
     330,   331,   838,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   839,   342,   343,   344,   345,
     346,  1162,  1163,     0,  1164,     0,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,  1165,   843,   361,   844,     0,   362,   363,   364,  1166,
    1167,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1168,   845,  1169,
     383,   384,   385,     0,   386,   387,   846,   388,  1171,  1172,
     390,  1173,   392,   393,   394,     0,   395,     0,     0,  1174,
     397,   398,     0,     0,   399,   400,   847,   401,   848,  1175,
     403,   404,   405,   406,     0,   407,   408,     0,   409,  1176,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1177,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,  1178,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,  1179,   457,   458,   459,   460,   850,   461,  1180,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,  1181,     0,   475,   476,  1182,   477,   478,   479,
     480,   481,   482,     0,  1183,  1184,     0,     0,   485,  1185,
     487,  1186,  1187,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,  1189,     0,   500,
     501,   502,   503,   504,   505,  1190,     0,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  1199,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,  1200,  1201,   549,   550,   551,   552,
     553,   554,   555,   556,  1202,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,     0,  2852,
    2853,     0,     0,   829,  1132,   653,  1133,  1134,  1206,   708,
    1136,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
    1137,     0,     0,   236,   237,     0,   238,   239,   830,   240,
     241,   242,   243,  1138,   831,  1139,  1140,     0,   247,   248,
     249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,
       0,   257,   258,   259,   260,  1145,     0,  1146,     0,   262,
     263,   264,   265,   266,   833,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,   834,   275,   276,  1147,  1148,
    1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,
     282,  1154,  1155,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
    1156,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,  1157,   311,   312,
     313,  1158,  1159,   315,     0,   316,   317,  1160,     0,     0,
     319,     0,   320,   836,     0,   837,   321,   322,   323,     0,
     324,  1161,     0,   326,     0,   327,   328,   329,   330,   331,
     838,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,   839,   342,   343,   344,   345,   346,  1162,
    1163,     0,  1164,     0,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,  1165,
     843,   361,   844,     0,   362,   363,   364,  1166,  1167,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1168,   845,  1169,   383,   384,
     385,     0,   386,   387,   846,   388,  1171,  1172,   390,  1173,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,   847,   401,   848,  1175,   403,   404,
     405,   406,     0,   407,   408,     0,   409,  1176,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,  1177,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   849,   441,   442,  2997,  2998,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
    1179,   457,   458,   459,   460,   850,   461,  1180,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
    1181,     0,   475,   476,  1182,   477,   478,   479,   480,   481,
     482,     0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,
    1187,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,  1189,     0,   500,   501,   502,
     503,   504,   505,  1190,     0,   507,   851,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    1199,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,  1200,  1201,   549,   550,   551,   552,   553,   554,
     555,   556,  1202,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,     0,  2999,  3000,     0,
       0,     0,     0,     0,     0,     0,  1206,   829,  1132,   653,
    1133,  1134,  1135,   708,  1136,     0,     0,     0,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,  1137,     0,     0,   236,   237,     0,
     238,   239,   830,   240,   241,   242, -3016,  1138,   831,  1139,
    1140,     0,   247,   248,   249,   250,   251,  1141,  1142,   252,
     253,  1143,  1144,   256,     0,   257,   258,   259,   260,  1145,
       0,  1146,     0,   262,   263,   264,   265,   266,   833,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,   834,
     275,  5376,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,
     278,   279,   280,   281,   282,  1154,  1155,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,  1156,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,  1157,   311,   312,   313,  1158,  1159,   315,     0,   316,
     317,  1160,     0,     0,   319,     0,   320,   836,     0,   837,
     321,   322,   323,     0,   324,  1161,     0,   326,     0,   327,
     328,   329,   330,   331,     0,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,   839,   342,   343,
     344,   345,   346,  1162,  1163,     0,  1164,     0,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,  1165,   843,   361,     0,     0,   362,   363,
     364,  1166,  1167,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,  1168,
     845,  1169,   383,   384,   385,     0,   386,   387,   846,   388,
    1171,  1172,   390,  1173,   392,   393,   394,     0,   395,     0,
       0,  1174,   397,   398,     0,     0,   399,   400,   847,   401,
     848,  1175,   403,   404,   405,   406,     0,   407,   408,     0,
     409,  1176,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,  1177,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,   849,   441,   442,  1178,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
     453,   454,   455,   456,  1179,   457,   458,   459,   460,     0,
     461,  1180,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,  1181,     0,   475,   476,  1182,   477,
     478,   479,   480,   481,   482,     0,  1183,  1184,     0,     0,
     485,  1185,   487,  1186,  1187,   489,   490,   491,   492,  5377,
     493,   494,     0,  1188,   495,   496,   497,   498,   499,  1189,
       0,   500,   501,   502,   503,   504,   505,  1190,     0,   507,
     851,   508,   509,   510,   511,     0,     0,   512,     0,     0,
     513,   514,   515,   516,   517,   518,   519,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  1199,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,  1200,  1201,   549,   550,
     551,   552,   553,   554,   555,   556,  1202,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
       0,  1203,  1204,     0,     0,   829,  1132,   653,  1133,  1134,
    1206,   708,  1136,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,  1137,     0,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,   243,  1138,   831,  1139,  1140,     0,
    4170,   248,   249,   250,   251,  1141,  1142,   252,   253,  1143,
    1144,   256,     0,   257,   258,   259,   260,  1145,     0,  1146,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,   276,
    1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,
     280,   281,   282,  1154,  1155,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,  1157,
     311,   312,   313,  1158,  1159,   315,     0,   316,   317,  1160,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,  1161,     0,   326,     0,   327,   328,   329,
     330,   331,   838,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   839,   342,   343,   344,   345,
     346,  1162,  1163,     0,  1164,     0,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,  1165,   843,   361,   844,     0,   362,   363,   364,  1166,
    1167,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1168,   845,  1169,
     383,   384,   385,     0,   386,   387,   846,   388,  1171,  1172,
     390,  1173,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,   847,   401,   848,  1175,
     403,   404,   405,   406,     0,   407,   408,     0,   409,  1176,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1177,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,  1178,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,  1179,   457,   458,   459,   460,   850,   461,  1180,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,  1181,     0,   475,   476,  1182,   477,   478,   479,
     480,   481,   482,     0,  1183,  1184,     0,     0,   485,  1185,
     487,  1186,  1187,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,  1189,     0,   500,
     501,   502,   503,   504,   505,  1190,     0,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  1199,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,  1200,  1201,   549,   550,   551,   552,
     553,   554,   555,   556,  1202,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,   829,  1132,
     653,  1133,  1134,     0,   708,  1136,     0,     0,  1206,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,  1137,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,  1141,  1142,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,  1157,   311,   312,   313,  1158,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,     0,   386,   387,   846,
     388,  1171,  1172,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
    1178,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,  1182,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,  1185,   487,  1186,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  1199,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,     0,     0,     0,     0,     0,
       0,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,     0,
       0,  1206,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     0,     0,     0,     0,  1137,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
       0,  1138,   831,  1139,  1140,     0,   247,   248,   249,   250,
     251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,
     258,   259,   260,  1145,     0,  1146,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,   277,   278,   279,   280,   281,   282,  1154,
    1155,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,  1156,   298,
     299,     0,   300,   301,   302,     0,   303,   304,     0,   306,
       0,     0,   307,   308,   309,  1157,   311,   312,   313,  1158,
    1159,   315,     0,   316,   317,  1160,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,  1161,
       0,   326,     0,   327,   328,   329,   330,   331,     0,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,  1162,  1163,     0,
    1164,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   359,  1165,   843,   361,
       0,     0,   362,   363,   364,  1166,  1167,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,  1168,   845,  1169,   383,   384,   385,     0,
     386,   387,   846,   388,  1171,  1172,   390,  1173,   392,   393,
     394,     0,   395,     0,     0,  1174,   397,   398,     0,     0,
     399,   400,   847,   401,   848,  1175,   403,   404,   405,   406,
       0,   407,   408,     0,   409,  1176,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
    1177,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,  1178,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,   453,   454,   455,   456,  1179,     0,
     458,   459,   460,     0,   461,  1180,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,  1181,     0,
     475,   476,  1182,   477,   478,   479,   480,   481,   482,     0,
    1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,
     490,   491,   492,     0,   493,   494,     0,  1188,   495,   496,
     497,   498,   499,  1189,     0,   500,   501,   502,   503,   504,
     505,  1190,     0,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,     0,   513,   514,   515,   516,   517,   518,
     519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  1199,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
    1200,  1201,   549,   550,   551,   552,   553,   554,   555,   556,
    1202,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,  1203,  1204,     0,     0,     0,
       0,     0,     0,     0,  1206,   829,  1132,   653,  1133,  1134,
    1135,   708,  1136,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,  1137,     0,     0,   236,   237,     0,   238,   239,
     830,   240,   241,   242,     0,  1138,   831,  1139,  1140,     0,
     247,   248,   249,   250,   251,  1141,  1142,   252,   253,  1143,
    1144,   256,     0,   257,   258,   259,   260,  1145,     0,  1146,
       0,   262,   263,   264,   265,   266,   833,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,   834,   275,   276,
    1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,
     280,   281,   282,  1154,  1155,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,  1156,   298,   299,     0,   300,   301,   302,     0,
     303,   304,     0,   306,     0,     0,   307,   308,   309,  1157,
     311,   312,   313,  1158,  1159,   315,     0,   316,   317,  1160,
       0,     0,   319,     0,   320,   836,     0,   837,   321,   322,
     323,     0,   324,  1161,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,   839,   342,   343,   344,   345,
     346,  1162,  1163,     0,  1164,     0,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,  1165,   843,   361,     0,     0,   362,   363,   364,  1166,
    1167,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1168,   845,  1169,
     383,   384,   385,     0,   386,   387,   846,   388,  1171,  1172,
     390,  1173,   392,   393,   394,     0,   395,     0,     0,  1174,
     397,   398,     0,     0,   399,   400,   847,   401,   848,  1175,
     403,   404,   405,   406,     0,   407,   408,     0,   409,  1176,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,  1177,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   849,   441,   442,  1178,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,  1179,     0,   458,   459,   460,     0,   461,  1180,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,  1181,     0,   475,   476,  1182,   477,   478,   479,
     480,   481,   482,     0,  1183,  1184,     0,     0,   485,  1185,
     487,  1186,  1187,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,  1189,     0,   500,
     501,   502,   503,   504,   505,  1190,     0,   507,   851,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  1199,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,  1200,  1201,   549,   550,   551,   552,
     553,   554,   555,   556,  1202,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,     0,     0,     0,   829,  2852,
    2853,     0,     0,     0,     0,     0,     0,     0,  1206,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,  1142,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,  1158,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,  3666,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,  1172,   390,   391,   392,   393,   394,     0,   395,
       0,   792,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,  3667,   445,   446,   447,   448,   449,   450,   451,    38,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,    42,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,  1185,   487,  1186,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,  1071,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
      47,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  3668,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,     0,     0,     0,     0,     0,
       0,   829,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3669,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     0,     0,     0,     0,     0,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
     243,   244,   831,   245,   246,     0,   247,   248,   249,   250,
     251,     0,  1142,   252,   253,   254,   255,   256,     0,   257,
     258,   259,   260,  1145,     0,  1146,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
       0,     0,   307,   308,   309,   310,   311,   312,   313,  1158,
       0,   315,     0,   316,   317,   318,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,  1161,
       0,   326,     0,   327,   328,   329,   330,   331,   838,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,   347,   348,     0,
     349,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,  3666,   357,   358,     0,   359,  1165,   843,   361,
     844,     0,   362,   363,   364,  1166,  1167,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   845,   382,   383,   384,   385,     0,
     386,   387,   846,   388,     0,  1172,   390,   391,   392,   393,
     394,     0,   395,     0,   792,   396,   397,   398,     0,     0,
     399,   400,   847,   401,   848,  1175,   403,   404,   405,   406,
       0,   407,   408,     0,   409,  1176,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,   443,  3667,   445,   446,   447,   448,   449,
     450,   451,     0,   452,   453,   454,   455,   456,  1179,   457,
     458,   459,   460,   850,   461,   462,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,  1181,     0,
     475,   476,     0,   477,   478,   479,   480,   481,   482,     0,
     483,   484,     0,     0,   485,  1185,   487,  1186,     0,   489,
     490,   491,   492,     0,   493,   494,     0,     0,   495,   496,
     497,   498,   499,  1189,     0,   500,   501,   502,   503,   504,
     505,   506,     0,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,     0,   513,   514,   515,   516,   517,   518,
     519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  3668,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
    1200,  1201,   549,   550,   551,   552,   553,   554,   555,   556,
    1202,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,   829,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3669,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,  1142,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,  1158,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,  1172,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,  3667,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,  1185,   487,
    1186,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  3668,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
       0,     0,     0,     0,     0,     0,     0,   829,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    49,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,     0,     0,     0,   236,   237,     0,
     238,   239,   830,   240,   241,   242,   243,   244,   831,   245,
     246,     0,   247,   248,   249,   250,   251,     0,  1142,   252,
     253,   254,   255,   256,     0,   257,   258,   259,   260,  1145,
       0,  1146,     0,   262,   263,   264,   265,   266,   833,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,   834,
     275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,   310,   311,   312,   313,  1158,     0,   315,     0,   316,
     317,   318,     0,     0,   319,     0,   320,   836,     0,   837,
     321,   322,   323,     0,   324,  1161,     0,   326,     0,   327,
     328,   329,   330,   331,   838,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,   839,   342,   343,
     344,   345,   346,   347,   348,     0,   349,     0,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,  1165,   843,   361,   844,     0,   362,   363,
     364,  1166,  1167,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     845,   382,   383,   384,   385,     0,   386,   387,   846,   388,
       0,  1172,   390,   391,   392,   393,   394,     0,   395,     0,
       0,   396,   397,   398,     0,     0,   399,   400,   847,   401,
     848,  1175,   403,   404,   405,   406,     0,   407,   408,     0,
     409,  1176,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,   849,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
     453,   454,   455,   456,  1179,   457,   458,   459,   460,   850,
     461,   462,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,  1181,     0,   475,   476,     0,   477,
     478,   479,   480,   481,   482,     0,   483,   484,     0,     0,
     485,  1185,   487,  1186,     0,   489,   490,   491,   492,     0,
     493,   494,     0,     0,   495,   496,   497,   498,   499,  1189,
       0,   500,   501,   502,   503,   504,   505,   506,     0,   507,
     851,   508,   509,   510,   511,     0,     0,   512,     0,     0,
     513,   514,   515,   516,   517,   518,   519,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  3668,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,  1200,  1201,   549,   550,
     551,   552,   553,   554,   555,   556,  1202,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
     829,  1132,   653,  1133,  1134,     0,   708,     0,     0,     0,
    4291,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
       0,  4329,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,     0,   386,
     387,   846,   388,  1171,   389,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,   486,   487,   488,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4330,   829,  1132,   653,  1133,
    1134,     0,   708,  4331,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,     0,  4329,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,     0,   386,   387,   846,   388,  1171,
     389,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
     486,   487,   488,  1187,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4330,   829,  1132,   653,  1133,  1134,     0,   708,  4340,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,     0,  4329,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
       0,   386,   387,   846,   388,  1171,   389,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,   486,   487,   488,  1187,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,  4387,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4330,   873,  1412,
     653,     0,     0,     0,   708,  4331,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,  1674,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
    1675,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,  1676,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,     0,     0,     0,     0,     0,
       0,   873,  1413,  1414,  4838,     0,     0,     0,     0,     0,
       0,  4839,   224,   225,   226,   227,   228,   229,   230,   231,
       0,   233,   234,   235,     3,     4,     0,     0,     0,     0,
       0,   236,   237,     0,   238,   239,   830,   240,   241,   242,
     243,   244,   831,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,   252,   253,   254,   255,   256,     0,   257,
     258,   259,   260,   261,     0,   832,     0,   262,   263,   264,
     265,   266,   833,   267,   268,     0,   269,   270,   271,   272,
     273,   274,     0,   834,   275,   276,     0,     0,     0,   835,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   286,     0,   287,   288,   289,   290,   291,
       0,   292,   293,   294,     0,     0,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
       0,     0,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,     0,   316,   317,   318,     0,     0,   319,     0,
     320,   836,     0,   837,   321,   322,   323,     0,   324,   325,
       0,   326,     0,   327,   328,   329,   330,   331,   838,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,     0,
     341,   839,   342,   343,   344,   345,   346,   347,   348,     0,
     349,     0,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,     0,   357,   358,     0,   359,   360,   843,   361,
     844,     0,   362,   363,   364,     0,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   845,   382,   383,   384,   385,     0,
     386,   387,   846,   388,     0,   389,   390,   391,   392,   393,
     394,     0,   395,     0,     0,   396,   397,   398,     0,     0,
     399,   400,   847,   401,   848,   402,   403,   404,   405,   406,
       0,   407,   408,     0,   409,   410,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     849,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    38,   452,   453,   454,   455,   456,     0,   457,
     458,   459,   460,   850,   461,   462,   463,     0,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     0,
     475,   476,    42,   477,   478,   479,   480,   481,   482,     0,
     483,   484,     0,     0,   485,   486,   487,   488,     0,   489,
     490,   491,   492,     0,   493,   494,     0,     0,   495,   496,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
    1071,   506,     0,   507,   851,   508,   509,   510,   511,     0,
       0,   512,     0,    47,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,   537,
       0,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,     0,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,   829,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    49,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
       0,     0,     0,     0,     0,     0,     0,   223,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5052,   224,   225,
     226,   227,   228,   229,   230,   231,     0,   233,   234,   235,
       0,     0,     0,     0,     0,     0,     0,   236,   237,     0,
     238,   239,     0,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,     0,   257,   258,   259,   260,   261,
       0,     0,     0,   262,   263,   264,   265,   266,     0,   267,
     268,     0,   269,   270,   271,   272,   273,   274,     0,     0,
     275,   276,     0,     0,     0,     0,     0,     0,     0,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   286,
       0,   287,   288,   289,   290,   291,     0,   292,   293,   294,
       0,     0,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,     0,     0,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,     0,   316,
     317,   318,     0,     0,   319,     0,   320,     0,     0,     0,
     321,   322,   323,     0,   324,   325,     0,   326,     0,   327,
     328,   329,   330,   331,     0,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,     0,   341,     0,   342,   343,
     344,   345,   346,   347,   348,     0,   349,     0,   350,     0,
       0,   351,     0,   352,   353,   354,   355,   356,     0,   357,
     358,     0,   359,   360,     0,   361,     0,     0,   362,   363,
     364,     0,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,     0,   386,   387,     0,   388,
       0,   389,   390,   391,   392,   393,   394,     0,   395,     0,
       0,   396,   397,   398,     0,     0,   399,   400,     0,   401,
       0,   402,   403,   404,   405,   406,     0,   407,   408,     0,
     409,   410,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,     0,   439,   440,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    38,   452,
     453,   454,   455,   456,     0,   457,   458,   459,   460,     0,
     461,   462,   463,     0,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     0,   475,   476,    42,   477,
     478,   479,   480,   481,   482,     0,   483,   484,     0,     0,
     485,   486,   487,   488,     0,   489,   490,   491,   492,     0,
     493,   494,     0,     0,   495,   496,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,  1071,   506,     0,   507,
       0,   508,   509,   510,   511,     0,     0,   512,     0,    47,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,   537,     0,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
       0,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      49,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,   792,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,     0,     0,     0,
       0,     0,     0,   223,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1780,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1263,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,     0,     0,     0,     0,     0,     0,   223,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3026,
     224,   225,   226,   227,   228,   229,   230,   231,     0,   233,
     234,   235,     0,     0,     0,     0,     0,     0,     0,   236,
     237,     0,   238,   239,     0,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,   252,   253,   254,   255,   256,     0,   257,   258,   259,
     260,   261,     0,     0,     0,   262,   263,   264,   265,   266,
       0,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,     0,   275,   276,     0,     0,     0,     0,     0,     0,
       0,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
       0,   316,   317,   318,     0,     0,   319,     0,   320,     0,
       0,     0,   321,   322,   323,     0,   324,   325,     0,   326,
       0,   327,   328,   329,   330,   331,     0,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,     0,   341,     0,
     342,   343,   344,   345,   346,   347,   348,     0,   349,     0,
     350,     0,     0,   351,     0,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,   360,     0,   361,     0,     0,
     362,   363,   364,     0,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,     0,   386,   387,
       0,   388,     0,   389,   390,   391,   392,   393,   394,     0,
     395,     0,     0,   396,   397,   398,     0,     0,   399,   400,
       0,   401,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,   409,   410,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,     0,   457,   458,   459,
     460,     0,   461,   462,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,   480,   481,   482,     0,   483,   484,
       0,     0,   485,   486,   487,   488,     0,   489,   490,   491,
     492,     0,   493,   494,     0,     0,   495,   496,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,     0,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,     0,     0,     0,     0,
       0,     0,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4210,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,     0,
       0,     0,     0,     0,     0,  1525,  1412,   653,     0,     0,
     884,   708,     0,     0,     0,  4683,   224,   225,   226,   227,
     228,   229,   230,   231,  2169,   233,   234,   235,  2170,  2171,
    2172,  2173,  2174,  2175,  2176,   236,   237,  2177,   238,   239,
     830,   240,   241,   242,     0,  1526,   831,  1527,  1528,  2178,
     247,   248,   249,   250,   251,  2179,  2180,   252,   253,  1529,
    1530,   256,  2181,   257,   258,   259,   260,     0,  2182,   832,
    2183,   262,   263,   264,   265,   266,   833,   267,   268,  2184,
     269,   270,   271,   272,   273,   274,  2185,   834,   275,   276,
    2186,  2187,  2188,   835,  2189,  2190,  2191,   277,   278,   279,
     280,   281,   282,  1531,  1532,   285,  2192,   286,  2193,   287,
     288,   289,   290,   291,  2194,   292,   293,   294,  2195,  2196,
     295,   296,  1156,   298,   299,  2197,   300,   301,   302,  2198,
     303,   304,   305,   306,  2199,  2200,   307,   308,   309,     0,
     311,   312,   313,     0,  2201,   315,  2202,   316,   317,  1533,
    2203,  2204,   319,  2205,   320,   836,  2206,   837,   321,   322,
     323,  2207,   324,     0,  2208,   326,  2209,   327,   328,   329,
     330,   331,   838,   332,   333,   334,  2210,   335,   336,   337,
     338,   339,   340,  2211,   341,   839,     0,   343,   344,   345,
     346,  1534,  1535,  2212,  1536,  2213,   350,   840,   841,   351,
     842,   352,   353,   354,   355,   356,  2214,   357,   358,  2215,
     359,     0,   843,   361,   844,  2216,   362,   363,   364,  2217,
    2218,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1537,   845,  1538,
     383,   384,  3972,  2219,   386,   387,   846,   388,  2220,     0,
     390,  1539,   392,   393,   394,  2221,   395,  2222,  2223,  3973,
     397,   398,  2224,  2225,   399,     0,   847,   401,   848,     0,
     403,   404,   405,   406,  2226,   407,   408,  2227,   409,     0,
    2228,     0,   412,   413,   414,  2229,   415,   416,   417,   418,
     419,   420,   421,   422,  1540,   424,   425,   426,   427,  2230,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,  2231,   439,   440,   849,   441,   442,  3974,   444,   445,
     446,   447,   448,   449,   450,   451,  2232,   452,   453,   454,
     455,   456,  2233,   457,  2326,   459,   460,   850,   461,  1542,
     463,  2234,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,     0,  2235,   475,   476,  2236,   477,   478,   479,
     480,   481,   482,  2237,  1543,  1544,  2238,  2239,   485,     0,
     487,     0,  2240,   489,   490,   491,   492,  2241,   493,   494,
    2242,  2243,   495,   496,   497,   498,   499,  2244,  2245,   500,
     501,   502,   503,   504,     0,  1545,  2246,   507,   851,   508,
     509,   510,   511,  2247,  2248,   512,  2249,  2250,   513,   514,
     515,   516,   517,   518,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   528,   529,   530,   531,   532,   533,   534,
     535,   536,  2251,   537,  2252,   538,   539,   540,   541,   542,
     543,   544,   545,   546,     0,     0,   549,   550,   551,   552,
     553,   554,   555,   556,     0,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,     0,   580,  2253,   581,
     582,     0,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,  3975,
    3976,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,   885,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   886,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,   985,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   986,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,  1041,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,  1042,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,  1043,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,  1511,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,  1512,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,  3103,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,  3104,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,   396,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,   223,     0,     0,     0,     0,
     884,     0,     0,     0,     0,     0,   224,   225,   226,   227,
     228,   229,   230,   231,     0,   233,   234,   235,     0,     0,
       0,     0,     0,     0,     0,   236,   237,     0,   238,   239,
       0,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,     0,
       0,   262,   263,   264,   265,   266,     0,   267,   268,     0,
     269,   270,   271,   272,   273,   274,     0,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,     0,   287,
     288,   289,   290,   291,     0,   292,   293,   294,     0,     0,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,     0,   316,   317,   318,
       0,     0,   319,     0,   320,     0,     0,     0,   321,   322,
     323,     0,   324,   325,     0,   326,     0,   327,   328,   329,
     330,   331,     0,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,     0,   349,     0,   350,     0,     0,   351,
       0,   352,   353,   354,   355,   356,     0,   357,   358,     0,
     359,   360,     0,   361,     0,     0,   362,   363,   364,     0,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,     0,   386,   387,     0,   388,     0,   389,
     390,   391,   392,   393,   394,     0,   395,     0,     0,  5000,
     397,   398,     0,     0,   399,   400,     0,   401,     0,   402,
     403,   404,   405,   406,     0,   407,   408,     0,   409,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,   453,   454,
     455,   456,     0,   457,   458,   459,   460,     0,   461,   462,
     463,     0,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
     480,   481,   482,     0,   483,   484,     0,     0,   485,   486,
     487,   488,     0,   489,   490,   491,   492,     0,   493,   494,
       0,     0,   495,   496,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,   510,   511,     0,     0,   512,     0,     0,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,   537,     0,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,     0,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,     0,     0,     0,     0,   887,   888,   889,     0,   890,
     891,   892,   893,   894,   895,  1815,     0,     0,     0,     0,
    1816,     0,     0,  1817,     0,     0,  1818,  1819,  1820,  1821,
    1822,  1823,  1824,  1825,     0,  1826,  1827,     0,     0,     0,
    1828,     0,     0,  1829,     0,  1830,  1831,     0,  1832,     0,
    1833,  1834,  1835,  1836,  1837,  1838,  1839,  1840,  1841,     0,
    1842,  1843,  1844,  1845,  1846,     0,     0,     0,  1847,     0,
       0,  1848,     0,  1849,  1850,  1851,  1852,  1853,  1854,     0,
       0,  1855,     0,  1856,  1857,  1858,     0,     0,  1859,     0,
    1860,  1861,     0,  1862,  1863,  1864,     0,     0,  1865,     0,
       0,     0,     0,     0,     0,     0,     0,  1866,  1867,     0,
    1868,     0,  1869,  1870,  1871,  1872,     0,  1873,     0,  1874,
    1875,  1876,  1877,  1878,     0,     0,  1879,     0,     0,     0,
       0,  1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,     0,
    1887,  1888,  1889,     0,     0,     0,  1890,  1891,  1892,  1893,
    1894,     0,  1895,  1896,     0,     0,     0,     0,  1897,  1898,
       0,     0,  1899,     0,  1900,  1901,     0,     0,  1902,     0,
    1903,     0,  1904,  1905,     0,  1906,     0,  1907,  1908,     0,
       0,  1909,  1910,  1911,  1912,  1913,  1914,  1915,  1916,  1917,
    1918,  1919,  1920,     0,     0,     0,  1921,  1922,  1923,  1924,
    1925,  1926,  1927,     0,  1928,     0,  1929,  1930,  1931,  1932,
       0,  1933,     0,  1934,  1935,  1936,     0,     0,     0,     0,
       0,  1937,     0,  1938,  1939,     0,  1940,  1941,  1942,     0,
       0,  1943,  1944,     0,  1945,     0,  1946,  1947,  1948,  1949,
       0,  1950,  1951,     0,  1952,  1953,  1954,  1955,     0,  1956,
    1957,  1958,  1959,  1960,  1961,  1962,  1963,  1964,     0,  1965,
    1966,  1967,  1968,  1969,     0,     0,  1970,     0,     0,  1971,
    1972,  1973,  1974,     0,     0,  1975,  1976,     0,     0,  1977,
    1978,  1979,     0,  1980,     0,     0,  1981,     0,     0,  1982,
       0,  1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,  1990,
       0,  1991,  1992,  1993,  1994,  1995,  1996,     0,     0,     0,
       0,  1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,  2004,
    2005,     0,  2006,  2007,     0,  2008,  2009,  2010,  2011,  2012,
    2013,  2014,  2015,  2016,     0,  2017,     0,  2018,     0,  2019,
       0,  2020,     0,  2021,  2022,  2023,  2024,  2025,  2026,  2027,
       0,     0,  2028,     0,  2029,  2030,  2031,  2032,  2033,  2034,
    2035,     0,  2036,     0,  2037,  2038,     0,     0,  2039,  2040,
    2041,  2042,     0,     0,  2043,  2044,     0,     0,  2045,  2046,
    2047,  2048,     0,  2049,  2050,  2051,     0,     0,  2052,  2053,
       0,     0,  2054,  2055,     0,  2056,  2057,     0,     0,  2058,
    2059,     0,  2060,  2061,  2062,  2063,     0,     0,  2064,  2065,
    2066,     0,  2067,     0,     0,     0,     0,     0,     0,     0,
    2068,     0,  2069,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2070,  2071,  2072,  2073,  2074,
    2075,  2076,     0,     0,     0,     0,  2077,  2078,  2079,     0,
    2080,  2081,  2082,     0,  2083,  2084,  2085,  2086,     0,  2087,
       0,  2088,  2089,  2090,     0,  2091,  2092,  2093,     0,  2094,
       0,  2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,  2102,
       0,     0,     0,     0,     0,  2103,  2104,     0,     0,  2105,
    2106,  2107,  2108,  2109,  2110,  2111,  2112,     0,     0,     0,
       0,     0,     0,     0,  2168,  2113,  2114,  2115,     0,  2116,
    2117,  2118,  2119,  2120,  2121,   224,   225,   226,   227,   228,
     229,   230,   231,  2169,   233,   234,   235,  2170,  2171,  2172,
    2173,  2174,  2175,  2176,   236,   237,  2177,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,  2178,   247,
     248,   249,   250,   251,  2179,  2180,   252,   253,   254,   255,
     256,  2181,   257,   258,   259,   260,   261,  2182,   832,  2183,
     262,   263,   264,   265,   266,   833,   267,   268,  2184,   269,
     270,   271,   272,   273,   274,  2185,   834,   275,   276,  2186,
    2187,  2188,   835,  2189,  2190,  2191,   277,   278,   279,   280,
     281,   282,   283,   284,   285,  2192,   286,  2193,   287,   288,
     289,   290,   291,  2194,   292,   293,   294,  2195,  2196,   295,
     296,   297,   298,   299,  2197,   300,   301,   302,  2198,   303,
     304,   305,   306,  2199,  2200,   307,   308,   309,   310,   311,
     312,   313,   314,  2201,   315,  2202,   316,   317,   318,  2203,
    2204,   319,  2205,   320,   836,  2206,   837,   321,   322,   323,
    2207,   324,   325,  2208,   326,  2209,   327,   328,   329,   330,
     331,   838,   332,   333,   334,  2210,   335,   336,   337,   338,
     339,   340,  2211,   341,   839,   342,   343,   344,   345,   346,
     347,   348,  2212,   349,  2213,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,  2214,   357,   358,  2215,   359,
     360,   843,   361,   844,  2216,   362,   363,   364,  2217,  2218,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,  2219,   386,   387,   846,   388,  2220,   389,   390,
     391,   392,   393,   394,  2221,   395,  2222,  2223,   396,   397,
     398,  2224,  2225,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,  2226,   407,   408,  2227,   409,   410,  2228,
     411,   412,   413,   414,  2229,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  2230,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
    2231,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,  2232,   452,   453,   454,   455,
     456,  2233,   457,   458,   459,   460,   850,   461,   462,   463,
    2234,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,  2235,   475,   476,  2236,   477,   478,   479,   480,
     481,   482,  2237,   483,   484,  2238,  2239,   485,   486,   487,
     488,  2240,   489,   490,   491,   492,  2241,   493,   494,  2242,
    2243,   495,   496,   497,   498,   499,  2244,  2245,   500,   501,
     502,   503,   504,   505,   506,  2246,   507,   851,   508,   509,
     510,   511,  2247,  2248,   512,  2249,  2250,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  2251,   537,  2252,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,  2253,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2254,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   797,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5083,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,  1525,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5594,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,     0,  1526,   831,
    1527,  1528,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,  1529,  1530,   256,     0,   257,   258,   259,   260,
       0,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,  1531,  1532,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,     0,   311,   312,   313,     0,     0,   315,     0,
     316,   317,  1533,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,     0,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,  2322,
     335,   336,   337,   338,   339,   340,     0,   341,   839,  2323,
     343,   344,   345,   346,  1534,  1535,     0,  1536,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,     0,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1537,   845,  1538,   383,   384,     0,     0,   386,   387,   846,
     388,     0,     0,   390,  1539,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,  2324,   399,  2325,   847,
     401,   848,     0,   403,   404,   405,   406,     0,   407,   408,
       0,   409,     0,     0,     0,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1540,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
       0,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,  2326,   459,   460,
     850,   461,  1542,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     0,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,  1543,  1544,     0,
       0,   485,     0,   487,     0,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,     0,  1545,  2327,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,     0,     0,   549,
     550,   551,   552,   553,   554,   555,   556,     0,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,     0,
     580,     0,   581,   582,     0,   584,   585,   586,   587,   588,
     589,   590,   591,   592,  3455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2328,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,     0,  1526,   831,  1527,  1528,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,  1529,  1530,
     256,     0,   257,   258,   259,   260,     0,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,  1531,  1532,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,     0,   311,
     312,   313,     0,     0,   315,     0,   316,   317,  1533,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,     0,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,  2322,   335,   336,   337,   338,
     339,   340,     0,   341,   839,  2323,   343,   344,   345,   346,
    1534,  1535,     0,  1536,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
       0,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1537,   845,  1538,   383,
     384,     0,     0,   386,   387,   846,   388,     0,     0,   390,
    1539,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,  2324,   399,  2325,   847,   401,   848,     0,   403,
     404,   405,   406,     0,   407,   408,     0,   409,     0,     0,
       0,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1540,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,     0,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,  2326,   459,   460,   850,   461,  1542,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     0,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,  1543,  1544,     0,     0,   485,     0,   487,
       0,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,     0,  1545,  2327,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,     0,     0,   549,   550,   551,   552,   553,
     554,   555,   556,     0,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,     0,   580,     0,   581,   582,
       0,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,  1132,   653,  1133,  1134,     0,   708,     0,     0,     0,
    2328,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
       0,  4329,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,     0,   386,
     387,   846,   388,  1171,   389,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,   486,   487,   488,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,  1412,   653,     0,
       0,     0,   708,     0,     0,  4330,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,  2158,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,  1674,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,  1675,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,  1676,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,  1412,   653,     0,     0,     0,   708,     0,
    1413,  1414,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,  2163,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,  1674,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,  1675,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,  1676,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,  1412,
     653,     0,     0,     0,   708,     0,  1413,  1414,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,  1674,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
    1675,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,  1676,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
     708,     0,  1413,  1414,     0,   224,   709,   226,   227,   228,
     229,   230,   231,   710,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     711,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   712,   318,     0,
       0,   319,     0,   713,     0,   714,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   715,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   716,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   717,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   718,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   719,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
    2168,  5469,   653,     0,     0,     0,   708,     0,   720,   721,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  2169,
     233,   234,   235,  2170,  2171,  2172,  2173,  2174,  2175,  2176,
     236,   237,  2177,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,  2178,   247,   248,   249,   250,   251,
    2179,  2180,   252,   253,   254,   255,   256,  2181,   257,   258,
     259,   260,   261,  2182,   832,  2183,   262,   263,   264,   265,
     266,   833,   267,   268,  2184,   269,   270,   271,   272,   273,
     274,  2185,   834,   275,   276,  2186,  2187,  2188,   835,  2189,
    2190,  2191,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  2192,   286,  2193,   287,   288,   289,   290,   291,  2194,
     292,   293,   294,  2195,  2196,   295,   296,   297,   298,   299,
    2197,   300,   301,   302,  2198,   303,   304,   305,   306,  2199,
    2200,   307,   308,   309,   310,   311,   312,   313,   314,  2201,
     315,  2202,   316,   317,   318,  2203,  2204,   319,  2205,   320,
     836,  2206,   837,   321,   322,   323,  2207,   324,   325,  2208,
     326,  2209,   327,   328,   329,   330,   331,   838,   332,   333,
     334,  2210,   335,   336,   337,   338,   339,   340,  2211,   341,
     839,   342,   343,   344,   345,   346,   347,   348,  2212,   349,
    2213,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,  2214,   357,   358,  2215,   359,   360,   843,   361,   844,
    2216,   362,   363,   364,  2217,  2218,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,  2219,   386,
     387,   846,   388,  2220,   389,   390,   391,   392,   393,   394,
    2221,   395,  2222,  2223,   396,   397,   398,  2224,  2225,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,  2226,
     407,   408,  2227,   409,   410,  2228,   411,   412,   413,   414,
    2229,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,  2230,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,  2231,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,  2232,   452,   453,   454,   455,   456,  2233,   457,   458,
     459,   460,   850,   461,   462,   463,  2234,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,  2235,   475,
     476,  2236,   477,   478,   479,   480,   481,   482,  2237,   483,
     484,  2238,  2239,   485,   486,   487,   488,  2240,   489,   490,
     491,   492,  2241,   493,   494,  2242,  2243,   495,   496,   497,
     498,   499,  2244,  2245,   500,   501,   502,   503,   504,   505,
     506,  2246,   507,   851,   508,   509,   510,   511,  2247,  2248,
     512,  2249,  2250,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  2251,   537,  2252,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,  2253,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,  2168,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  2169,   233,   234,   235,  2170,
    2171,  2172,  2173,  2174,  2175,  2176,   236,   237,  2177,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
    2178,   247,   248,   249,   250,   251,  2179,  2180,   252,   253,
     254,   255,   256,  2181,   257,   258,   259,   260,   261,  2182,
     832,  2183,   262,   263,   264,   265,   266,   833,   267,   268,
    2184,   269,   270,   271,   272,   273,   274,  2185,   834,   275,
     276,  2186,  2187,  2188,   835,  2189,  2190,  2191,   277,   278,
     279,   280,   281,   282,   283,   284,   285,  2192,   286,  2193,
     287,   288,   289,   290,   291,  2194,   292,   293,   294,  2195,
    2196,   295,   296,   297,   298,   299,  2197,   300,   301,   302,
    2198,   303,   304,   305,   306,  2199,  2200,   307,   308,   309,
     310,   311,   312,   313,   314,  2201,   315,  2202,   316,   317,
     318,  2203,  2204,   319,  2205,   320,   836,  2206,   837,   321,
     322,   323,  2207,   324,   325,  2208,   326,  2209,   327,   328,
     329,   330,   331,   838,   332,   333,   334,  2210,   335,   336,
     337,   338,   339,   340,  2211,   341,   839,   342,   343,   344,
     345,   346,   347,   348,  2212,   349,  2213,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,  2214,   357,   358,
    2215,   359,   360,   843,   361,   844,  2216,   362,   363,   364,
    2217,  2218,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,  2219,   386,   387,   846,   388,  2220,
     389,   390,   391,   392,   393,   394,  2221,   395,  2222,  2223,
     396,   397,   398,  2224,  2225,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,  2226,   407,   408,  2227,   409,
     410,  2228,   411,   412,   413,   414,  2229,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
    2230,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,  2231,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,  2232,   452,   453,
     454,   455,   456,  2233,   457,   458,   459,   460,   850,   461,
     462,   463,  2234,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,  2235,   475,   476,  2236,   477,   478,
     479,   480,   481,   482,  2237,   483,   484,  2238,  2239,   485,
     486,   487,   488,  2240,   489,   490,   491,   492,  2241,   493,
     494,  2242,  2243,   495,   496,   497,   498,   499,  2244,  2245,
     500,   501,   502,   503,   504,   505,   506,  2246,   507,   851,
     508,   509,   510,   511,  2247,  2248,   512,  2249,  2250,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  2251,   537,  2252,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,  2253,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,  2168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,  3190,   229,   230,
     231,  2169,   233,   234,   235,  2170,  2171,  2172,  2173,  2174,
    2175,  2176,   236,   237,  2177,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,  2178,   247,   248,   249,
     250,   251,  2179,  2180,   252,   253,   254,   255,   256,  2181,
     257,   258,   259,   260,   261,  2182,   832,  2183,   262,   263,
     264,   265,   266,   833,   267,   268,  2184,   269,   270,   271,
     272,   273,   274,  2185,   834,   275,   276,  2186,  2187,  2188,
     835,  2189,  2190,  2191,   277,   278,   279,   280,   281,   282,
     283,   284,   285,  2192,   286,  2193,   287,   288,   289,   290,
     291,  2194,   292,   293,   294,  2195,  2196,   295,   296,   297,
    3191,   299,  2197,   300,   301,   302,  2198,   303,   304,   305,
     306,  2199,  2200,   307,   308,   309,   310,   311,   312,   313,
     314,  2201,   315,  2202,   316,   317,   318,  2203,  2204,   319,
    2205,   320,   836,  2206,   837,   321,   322,   323,  2207,   324,
     325,  2208,   326,  2209,   327,   328,   329,   330,   331,   838,
     332,   333,   334,  2210,   335,   336,   337,   338,   339,   340,
    2211,   341,   839,   342,   343,   344,   345,   346,   347,   348,
    2212,   349,  2213,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,  2214,   357,   358,  2215,   359,   360,   843,
     361,   844,  2216,   362,   363,   364,  2217,  2218,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
    2219,   386,   387,   846,   388,  2220,   389,   390,   391,   392,
     393,   394,  2221,   395,  2222,  2223,   396,   397,   398,  2224,
    2225,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,  2226,   407,   408,  2227,   409,   410,  2228,   411,   412,
     413,   414,  2229,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  2230,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,  2231,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,  2232,   452,   453,   454,   455,   456,  2233,
    3192,   458,   459,   460,   850,   461,   462,   463,  2234,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    2235,   475,   476,  2236,   477,   478,   479,   480,   481,   482,
    2237,   483,   484,  2238,  2239,   485,   486,   487,   488,  2240,
     489,   490,   491,   492,  2241,   493,   494,  2242,  2243,   495,
     496,   497,   498,   499,  2244,  2245,   500,   501,   502,   503,
     504,   505,   506,  2246,   507,   851,   508,   509,   510,   511,
    2247,  2248,   512,  2249,  2250,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  2251,
     537,  2252,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,  2253,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,  1142,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,  1158,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,  1172,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,  1185,   487,  1186,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  3668,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,     0,   653,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,  1674,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,  1675,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,  1676,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,     0,   653,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  2143,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,  2560,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,  2561,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     3,     4,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   900,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   916,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   917,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,     0,   653,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,     0,   653,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1664,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,  3509,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   998,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1022,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1034,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1036,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1046,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1057,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,  1058,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,  2359,   257,   258,   259,   260,   261,     0,
       0,  2439,   262,   263,   264,   265,   266,     0,   267,   268,
    2360,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,  2440,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,  2361,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,  2362,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,  2441,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,  2363,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,  2364,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,  2359,
     257,   258,   259,   260,   261,     0,     0,  3398,   262,   263,
     264,   265,   266,     0,   267,   268,  2360,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,  3399,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,  2361,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
    2362,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,  3400,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,  2363,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,  2364,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,  2359,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,  2360,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,  2361,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,  2362,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,  2363,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,  2364,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     761,   230,   231,   727,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,   728,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
     762,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   729,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   730,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,   727,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,   728,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,  3065,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   729,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   730,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,   727,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,   728,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     729,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   730,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  1701,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,  1702,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,  1703,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
    1704,   320,     0,     0,     0,  1705,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
    1706,  1707,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,  1708,   448,
     449,   450,   451,     0,  1709,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,  1710,   477,  1711,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,  1712,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,  1713,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,   728,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   729,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   730,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   909,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     910,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,   792,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     3,     4,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  3171,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,  3172,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  3186,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,  3187,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   644,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   645,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,   753,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   754,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   755,
     484,     0,     0,   756,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,   786,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   787,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   788,   484,     0,     0,   789,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,   792,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   879,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   880,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  1015,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1238,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,  1249,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   772,   253,
     254,   255,  1250,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   775,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   776,   442,   443,   444,
     445,   446,   777,   448,   449,   450,   451,     0,   452,   453,
     454,   455,  1242,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   779,   484,     0,     0,   780,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   781,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1355,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,   792,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  1417,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1418,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   753,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  2279,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,  2948,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,  2949,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,  2950,   477,   478,
    2951,   480,  2952,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,  2953,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,   653,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,  4227,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,  4241,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  4514,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,  4516,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,  4518,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,  4773,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,  3400,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   742,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   751,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     772,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   773,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   774,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   775,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   776,   442,
     443,   444,   445,   446,   777,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   778,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   779,   484,     0,
       0,   780,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   781,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   804,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   904,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   919,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   976,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   990,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1027,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1048,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1050,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1052,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1055,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1063,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   772,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   775,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     776,   442,   443,   444,   445,   446,   777,   448,   449,   450,
     451,     0,   452,   453,   454,   455,  1242,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   779,
     484,     0,     0,   780,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   781,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,  1293,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,  1294,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1571,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1603,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1638,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1640,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1642,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,  1737,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     772,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   775,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   776,   442,
     443,   444,   445,   446,   777,   448,   449,   450,   451,     0,
     452,   453,   454,   455,  1242,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,  2350,   479,   480,   481,   482,     0,   779,   484,     0,
       0,   780,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   781,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   772,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   775,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   776,   442,   443,   444,   445,   446,
    2421,   448,   449,   450,   451,     0,   452,   453,   454,   455,
    2422,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   779,   484,     0,     0,  2423,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   781,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  2709,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  3076,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   772,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   775,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   776,   442,   443,   444,   445,   446,   777,   448,
     449,   450,   451,     0,   452,   453,   454,   455,  2422,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   779,   484,     0,     0,  2423,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     781,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  3174,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    3179,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  3303,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,  2319,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,     0,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,     0,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,     0,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,     0,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,  1525,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,     0,  1526,   831,
    1527,  1528,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,  1529,  1530,   256,     0,   257,   258,   259,   260,
       0,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,  1531,  1532,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,     0,   311,   312,   313,     0,     0,   315,     0,
     316,   317,  1533,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,     0,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,  2322,
     335,   336,   337,   338,   339,   340,     0,   341,   839,  2323,
     343,   344,   345,   346,  1534,  1535,     0,  1536,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,     0,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1537,   845,  1538,   383,   384,     0,     0,   386,   387,   846,
     388,     0,     0,   390,  1539,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,  2325,   847,
     401,   848,     0,   403,   404,   405,   406,     0,   407,   408,
       0,   409,     0,     0,     0,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1540,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
       0,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,  2326,   459,   460,
     850,   461,  1542,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     0,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,  1543,  1544,     0,
       0,   485,     0,   487,     0,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,     0,  1545,  2327,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,     0,     0,   549,
     550,   551,   552,   553,   554,   555,   556,     0,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,     0,
     580,     0,   581,   582,  1525,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,     0,  1526,   831,  1527,  1528,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,  1529,  1530,
     256,     0,   257,   258,   259,   260,     0,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,  1531,  1532,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,     0,   311,
     312,   313,     0,     0,   315,     0,   316,   317,  1533,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,     0,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,     0,   343,   344,   345,   346,
    1534,  1535,     0,  1536,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
       0,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1537,   845,  1538,   383,
     384,     0,     0,   386,   387,   846,   388,  2417,     0,   390,
    1539,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,     0,   847,   401,   848,     0,   403,
     404,   405,   406,     0,   407,   408,     0,   409,     0,     0,
       0,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1540,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,     0,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,  2326,   459,   460,   850,   461,  1542,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     0,     0,   475,   476,  4073,   477,   478,   479,   480,
     481,   482,     0,  1543,  1544,     0,     0,   485,     0,   487,
       0,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,     0,  1545,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,     0,     0,   549,   550,   551,   552,   553,
     554,   555,   556,     0,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,     0,   580,     0,   581,   582,
    1525,   584,   585,   586,   587,   588,   589,   590,   591,   592,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,     0,
    1526,   831,  1527,  1528,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,  1529,  1530,   256,     0,   257,   258,
     259,   260,     0,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,  1531,  1532,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,     0,   311,   312,   313,     0,     0,
     315,     0,   316,   317,  1533,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,     0,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,     0,   343,   344,   345,   346,  1534,  1535,     0,  1536,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,     0,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1537,   845,  1538,   383,   384,  2499,     0,   386,
     387,   846,   388,     0,     0,   390,  1539,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
       0,   847,   401,   848,     0,   403,   404,   405,   406,     0,
     407,   408,     0,   409,     0,     0,     0,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1540,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,     0,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,  1541,
     459,   460,   850,   461,  1542,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     0,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,  1543,
    1544,     0,     0,   485,     0,   487,     0,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,     0,
    1545,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,     0,
       0,   549,   550,   551,   552,   553,   554,   555,   556,     0,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,     0,   580,     0,   581,   582,  1525,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,     0,  1526,   831,  1527,  1528,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
    1529,  1530,   256,     0,   257,   258,   259,   260,     0,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,  1531,  1532,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
       0,   311,   312,   313,     0,     0,   315,     0,   316,   317,
    1533,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,     0,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,     0,   343,   344,
     345,   346,  1534,  1535,     0,  1536,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,     0,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1537,   845,
    1538,   383,   384,  3870,     0,   386,   387,   846,   388,     0,
       0,   390,  1539,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,     0,   847,   401,   848,
       0,   403,   404,   405,   406,     0,   407,   408,     0,   409,
       0,     0,     0,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1540,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,     0,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,  1541,   459,   460,   850,   461,
    1542,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     0,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,  1543,  1544,     0,     0,   485,
       0,   487,     0,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,     0,  1545,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,     0,     0,   549,   550,   551,
     552,   553,   554,   555,   556,     0,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,     0,   580,     0,
     581,   582,  1525,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,     0,  1526,   831,  1527,  1528,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,  1529,  1530,   256,     0,
     257,   258,   259,   260,     0,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
    1531,  1532,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,     0,   311,   312,   313,
       0,     0,   315,     0,   316,   317,  1533,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
       0,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,     0,   343,   344,   345,   346,  1534,  1535,
       0,  1536,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,     0,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1537,   845,  1538,   383,   384,     0,
       0,   386,   387,   846,   388,     0,     0,   390,  1539,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,     0,   847,   401,   848,     0,   403,   404,   405,
     406,     0,   407,   408,     0,   409,     0,     0,     0,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1540,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,     0,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,  1541,   459,   460,   850,   461,  1542,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     0,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,  1543,  1544,     0,     0,   485,     0,   487,     0,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,     0,  1545,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,     0,     0,   549,   550,   551,   552,   553,   554,   555,
     556,     0,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,     0,   580,     0,   581,   582,  1525,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,     0,  1526,   831,
    1527,  1528,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,  1529,  1530,   256,     0,   257,   258,   259,   260,
       0,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,  1531,  1532,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,     0,   311,   312,   313,     0,     0,   315,     0,
     316,   317,  1533,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,     0,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,     0,
     343,   344,   345,   346,  1534,  1535,     0,  1536,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,     0,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1537,   845,  1538,   383,   384,     0,     0,   386,   387,   846,
     388,     0,     0,   390,  1539,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,     0,   847,
     401,   848,     0,   403,   404,   405,   406,     0,   407,   408,
       0,   409,     0,     0,     0,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1540,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
       0,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,  2326,   459,   460,
     850,   461,  1542,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     0,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,  1543,  1544,     0,
       0,   485,     0,   487,     0,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,     0,  1545,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,     0,     0,   549,
     550,   551,   552,   553,   554,   555,   556,     0,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,     0,
     580,     0,   581,   582,  1525,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,     0,  1526,   831,  1527,  1528,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,  1529,  1530,
     256,     0,   257,   258,   259,   260,     0,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,  1531,  1532,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,     0,   311,
     312,   313,     0,     0,   315,     0,   316,   317,  1533,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,     0,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,     0,   343,   344,   345,   346,
    1534,  1535,     0,  1536,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
       0,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1537,   845,  1538,   383,
     384,     0,     0,   386,   387,   846,   388,     0,     0,   390,
    1539,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,     0,   847,   401,   848,     0,   403,
     404,   405,   406,     0,   407,   408,     0,   409,     0,     0,
       0,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1540,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,     0,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,     0,   459,   460,   850,   461,  1542,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     0,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,  1543,  1544,     0,     0,   485,     0,   487,
       0,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,     0,  1545,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,     0,     0,   549,   550,   551,   552,   553,
     554,   555,   556,     0,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,     0,   580,     0,   581,   582,
    1525,   584,   585,   586,   587,   588,   589,   590,   591,   592,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,     0,
       0,   831,     0,     0,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,     0,     0,   256,     0,   257,   258,
     259,   260,     0,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,     0,     0,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,     0,   311,   312,   313,     0,     0,
     315,     0,   316,   317,     0,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,     0,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,     0,   343,   344,   345,   346,     0,     0,     0,     0,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,     0,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,     0,   845,     0,   383,   384,     0,     0,   386,
     387,   846,   388,     0,     0,   390,     0,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
       0,   847,   401,   848,     0,   403,   404,   405,   406,     0,
     407,   408,     0,   409,     0,     0,     0,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,     0,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,     0,
     459,   460,   850,   461,     0,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     0,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,     0,
       0,     0,     0,   485,     0,   487,     0,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,     0,
       0,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,     0,
       0,   549,   550,   551,   552,   553,   554,   555,   556,     0,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,     0,   580,     0,   581,   582,  3148,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,  1818,  1819,  1820,
    1821,     0,  1823,  1824,  1825,     0,  1826,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1830,  1831,     0,     0,
       0,  1833,  1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,
       0,  1842,  1843,  1844,  1845,  1846,     0,     0,     0,  1847,
       0,     0,  1848,     0,  1849,  1850,  1851,  1852,  1853,     0,
       0,     0,  1855,     0,  1856,  1857,  1858,     0,     0,  1859,
       0,  1860,  1861,     0,  1862,  1863,  1864,     0,     0,  1865,
       0,     0,     0,     0,     0,     0,     0,     0,  1866,  1867,
       0,  1868,     0,  1869,  1870,  1871,  1872,     0,  1873,     0,
    1874,  1875,  1876,  1877,  1878,     0,     0,  1879,     0,     0,
       0,     0,  1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,
    3149,  1887,  1888,  1889,     0,     0,     0,  1890,  1891,  1892,
    1893,  1894,     0,  1895,  1896,     0,     0,     0,     0,  1897,
    1898,     0,  3150,  1899,     0,  1900,  1901,     0,     0,  1902,
       0,  1903,     0,  1904,  1905,     0,  1906,     0,  1907,  1908,
       0,     0,  1909,     0,  1911,  1912,  1913,     0,  1915,  1916,
    1917,  1918,  1919,  1920,     0,     0,     0,  1921,  1922,  1923,
    1924,  1925,  1926,  1927,     0,  1928,     0,  1929,     0,     0,
    1932,     0,  1933,     0,  1934,  1935,  1936,     0,     0,     0,
       0,     0,  1937,     0,  1938,     0,     0,  1940,  1941,  1942,
       0,     0,  1943,  1944,     0,  1945,     0,  1946,  1947,  1948,
    1949,     0,  1950,  1951,     0,  1952,  1953,  1954,  1955,     0,
    1956,  1957,  1958,  1959,     0,  1961,  1962,     0,  1964,     0,
    1965,  1966,  1967,  1968,  1969,     0,     0,  1970,     0,     0,
    3151,  1972,  1973,     0,     0,     0,  1975,  1976,     0,     0,
    1977,  1978,  1979,     0,  1980,     0,     0,  1981,     0,     0,
    1982,     0,  1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,
    1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,     0,     0,
       0,     0,  1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,
    2004,  2005,     0,  2006,  2007,     0,  2008,  2009,  2010,  2011,
    2012,  2013,  2014,  2015,  2016,     0,  2017,     0,  2018,     0,
    2019,     0,  2020,     0,  2021,  2022,  2023,  2024,     0,  2026,
    2027,     0,     0,  2028,     0,  3152,  2030,  2031,  2032,  2033,
    2034,  2035,     0,  2036,     0,  2037,  2038,     0,     0,     0,
    2040,  2041,  2042,     0,     0,  2043,  2044,     0,     0,  2045,
    2046,  2047,  2048,     0,  2049,  2050,  2051,     0,     0,  2052,
    2053,     0,     0,  2054,  2055,     0,  2056,  2057,     0,     0,
    2058,  2059,     0,  2060,  2061,  3153,  2063,     0,     0,  2064,
    2065,  2066,     0,  2067,     0,     0,     0,     0,     0,     0,
       0,  2068,     0,  2069,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2070,  2071,  2072,  2073,
    2074,  2075,  2076,     0,     0,     0,     0,  2077,  2078,  2079,
       0,  2080,  2081,  2082,     0,  2083,  2084,  2085,  2086,     0,
    2087,     0,  2088,  2089,  2090,     0,  2091,  2092,  2093,     0,
    2094,     0,  2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,
    2102,     0,     0,     0,     0,     0,  2103,  2104,  3148,     0,
    2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112,     0,  1818,
    1819,  1820,  1821,     0,  1823,  1824,  1825,     0,  1826,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1830,  1831,
       0,     0,     0,  1833,  1834,  1835,  1836,     0,  1838,  1839,
    1840,  1841,     0,  1842,  1843,  1844,  1845,  1846,     0,     0,
       0,  1847,     0,     0,  1848,     0,  1849,  1850,  1851,  1852,
    1853,     0,     0,     0,  1855,     0,  1856,  1857,  1858,     0,
       0,  1859,     0,  1860,  1861,     0,  1862,  1863,  1864,     0,
       0,  1865,     0,     0,     0,     0,     0,     0,     0,     0,
    1866,  1867,     0,  1868,     0,  1869,  1870,  1871,  1872,     0,
    1873,     0,  1874,  1875,  1876,  1877,  1878,     0,     0,  1879,
       0,     0,     0,     0,  1880,  1881,  1882,  1883,     0,  1884,
    1885,  1886,     0,  1887,  1888,  1889,     0,     0,     0,  1890,
    1891,  1892,  1893,  1894,     0,  1895,  1896,     0,     0,     0,
       0,  1897,  1898,     0,  3150,  1899,     0,  1900,  1901,     0,
       0,  1902,     0,  1903,     0,  1904,  1905,     0,  1906,     0,
    1907,  1908,     0,     0,  1909,     0,  1911,  1912,  1913,     0,
    1915,  1916,  1917,  1918,  1919,  1920,     0,     0,     0,  1921,
    1922,  1923,  1924,  1925,  1926,  1927,     0,  1928,     0,  1929,
       0,     0,  1932,     0,  1933,     0,  1934,  1935,  1936,     0,
       0,     0,     0,     0,  1937,     0,  1938,     0,     0,  1940,
    1941,  1942,     0,     0,  1943,  1944,     0,  1945,     0,  1946,
    1947,  1948,  1949,     0,  1950,  1951,     0,  1952,  1953,  1954,
    1955,     0,  1956,  1957,  1958,  1959,     0,  1961,  1962,     0,
    1964,     0,  1965,  1966,  1967,  1968,  1969,     0,     0,  1970,
       0,     0,  3151,  1972,  1973,     0,     0,     0,  1975,  1976,
       0,     0,  1977,  1978,  1979,     0,  1980,     0,     0,  1981,
       0,     0,  1982,     0,  1983,  1984,  1985,  1986,     0,  1987,
    1988,  1989,  1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,
       0,     0,     0,     0,  1997,  1998,  1999,  2000,  2001,  2002,
       0,  2003,  2004,  2005,     0,  2006,  2007,     0,  2008,  2009,
    2010,  2011,  2012,  2013,  2014,  2015,  2016,     0,  2017,     0,
    2018,     0,  2019,     0,  2020,     0,  2021,  2022,  2023,  2024,
       0,  2026,  2027,     0,     0,  2028,     0,  2029,  2030,  2031,
    2032,  2033,  2034,  2035,     0,  2036,     0,  2037,  2038,     0,
       0,     0,  2040,  2041,  2042,     0,     0,  2043,  2044,     0,
       0,  2045,  2046,  2047,  2048,     0,  2049,  2050,  2051,     0,
       0,  2052,  2053,     0,     0,  2054,  2055,     0,  2056,  2057,
       0,     0,  2058,  2059,     0,  2060,  2061,  2062,  2063,     0,
       0,  2064,  2065,  2066,     0,  2067,     0,     0,     0,     0,
       0,     0,     0,  2068,     0,  2069,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2070,  2071,
    2072,  2073,  2074,  2075,  2076,     0,     0,     0,     0,  2077,
    2078,  2079,     0,  2080,  2081,  2082,     0,  2083,  2084,  2085,
    2086,     0,  2087,     0,  2088,  2089,  2090,     0,  2091,  2092,
    2093,     0,  2094,     0,  2095,  2096,  2097,     0,  2098,  2099,
    2100,  2101,  2102,     0,     0,     0,     0,     0,  2103,  2104,
    3148,     0,  2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112,
       0,  1818,  1819,  1820,  1821,     0,  1823,  1824,  1825,     0,
    1826,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1830,  1831,     0,     0,     0,  1833,  1834,  1835,  1836,     0,
    1838,  1839,  1840,  1841,     0,  1842,  1843,  1844,  1845,  1846,
       0,     0,     0,  1847,     0,     0,  1848,     0,  1849,  1850,
    1851,  1852,  1853,     0,     0,     0,  1855,     0,  1856,  1857,
    1858,     0,     0,  1859,     0,  1860,  1861,     0,  1862,  1863,
    1864,     0,     0,  1865,     0,     0,     0,     0,     0,     0,
       0,     0,  1866,  1867,     0,  1868,     0,  1869,  1870,  1871,
    1872,     0,  1873,     0,  1874,  1875,  1876,  1877,  1878,     0,
       0,  1879,     0,     0,     0,     0,  1880,  1881,  1882,  1883,
       0,  1884,  1885,  1886,     0,  1887,  1888,  1889,     0,     0,
       0,  1890,  1891,  1892,  1893,  1894,     0,  1895,  1896,     0,
       0,     0,     0,  1897,  1898,     0,  3150,  1899,     0,  1900,
    1901,     0,     0,  1902,     0,  1903,     0,  1904,  1905,     0,
    1906,     0,  1907,  1908,     0,     0,  3177,     0,  1911,  1912,
    1913,     0,  1915,  1916,  1917,  1918,  1919,  1920,     0,     0,
       0,  1921,  1922,  1923,  1924,  1925,  1926,  1927,     0,  1928,
       0,  1929,     0,     0,  1932,     0,  1933,     0,  1934,  1935,
    1936,     0,     0,     0,     0,     0,  1937,     0,  1938,     0,
       0,  1940,  1941,  1942,     0,     0,  1943,  1944,     0,  1945,
       0,  1946,  1947,  1948,  1949,     0,  1950,  1951,     0,  1952,
    1953,  1954,  1955,     0,  1956,  1957,  1958,  1959,     0,  1961,
    1962,     0,  1964,     0,  1965,  1966,  1967,  1968,  1969,     0,
       0,  1970,     0,     0,  3151,  1972,  1973,     0,     0,     0,
    1975,  1976,     0,     0,  1977,  1978,  1979,     0,  1980,     0,
       0,  1981,     0,     0,  1982,     0,  1983,  1984,  1985,  1986,
       0,  1987,  1988,  1989,  1990,     0,  1991,  1992,  1993,  1994,
    1995,  1996,     0,     0,     0,     0,  1997,  1998,  1999,  2000,
    2001,  2002,     0,  2003,  2004,  2005,     0,  2006,  2007,     0,
    2008,  2009,  2010,  2011,  2012,  2013,  2014,  2015,  2016,     0,
    2017,     0,  2018,     0,  2019,     0,  2020,     0,  2021,  2022,
    2023,  2024,     0,  2026,  2027,     0,     0,  2028,     0,  2029,
    2030,  2031,  2032,  2033,  2034,  2035,     0,  2036,     0,  2037,
    2038,     0,     0,     0,  2040,  2041,  2042,     0,     0,  2043,
    2044,     0,     0,  2045,  2046,  2047,  2048,     0,  2049,  2050,
    2051,     0,     0,  2052,  2053,     0,     0,  2054,  2055,     0,
    2056,  2057,     0,     0,  2058,  2059,     0,  2060,  2061,  2062,
    2063,     0,     0,  2064,  2065,  2066,     0,  2067,     0,     0,
       0,     0,     0,     0,     0,  2068,     0,  2069,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2070,  2071,  2072,  2073,  2074,  2075,  2076,     0,     0,     0,
       0,  2077,  2078,  2079,     0,  2080,  2081,  2082,     0,  2083,
    2084,  2085,  2086,     0,  2087,     0,  2088,  2089,  2090,     0,
    2091,  2092,  2093,     0,  2094,     0,  2095,  2096,  2097,     0,
    2098,  2099,  2100,  2101,  2102,     0,     0,     0,     0,     0,
    2103,  2104,  3148,     0,  2105,  2106,  2107,  2108,  2109,  2110,
    2111,  2112,     0,  1818,  1819,  1820,  1821,     0,  1823,  1824,
    1825,     0,  1826,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1830,  1831,     0,     0,     0,  1833,  1834,  1835,
    1836,     0,  1838,  1839,  1840,  1841,     0,  1842,  1843,  1844,
    1845,  1846,     0,     0,     0,  1847,     0,     0,  1848,     0,
    1849,  1850,  1851,  1852,  1853,     0,     0,     0,  1855,     0,
    1856,  1857,  1858,     0,     0,  1859,     0,  1860,  1861,     0,
    1862,  1863,  1864,     0,     0,  1865,     0,     0,     0,     0,
       0,     0,     0,     0,  1866,  1867,     0,  1868,     0,  1869,
    1870,  1871,  1872,     0,  1873,     0,  1874,  1875,  1876,  1877,
    1878,     0,     0,  1879,     0,     0,     0,     0,  1880,  1881,
    1882,  1883,     0,  1884,  1885,  1886,     0,  1887,  1888,  1889,
       0,     0,     0,  1890,  1891,  1892,  1893,  1894,     0,  1895,
    1896,     0,     0,     0,     0,  1897,  1898,     0,  3150,  1899,
       0,  1900,  1901,     0,     0,  1902,     0,  1903,     0,  1904,
    1905,     0,  1906,     0,  1907,  1908,     0,     0,  3824,     0,
    1911,  1912,  1913,     0,  1915,  1916,  1917,  1918,  1919,  1920,
       0,     0,     0,  1921,  1922,  1923,  1924,  1925,  1926,  1927,
       0,  1928,     0,  1929,     0,     0,  1932,     0,  1933,     0,
    1934,  1935,  1936,     0,     0,     0,     0,     0,  1937,     0,
    1938,     0,     0,  1940,  1941,  1942,     0,     0,  1943,  1944,
       0,  1945,     0,  1946,  1947,  1948,  1949,     0,  1950,  1951,
       0,  1952,  1953,  1954,  1955,     0,  1956,  1957,  1958,  1959,
       0,  1961,  1962,     0,  1964,     0,  1965,  1966,  1967,  1968,
    1969,     0,     0,  1970,     0,     0,  3151,  1972,  1973,     0,
       0,     0,  1975,  1976,     0,     0,  1977,  1978,  1979,     0,
    1980,     0,     0,  1981,     0,     0,  1982,     0,  1983,  1984,
    1985,  1986,     0,  1987,  1988,  1989,  1990,     0,  1991,  1992,
    1993,  1994,  1995,  1996,     0,     0,     0,     0,  1997,  1998,
    1999,  2000,  2001,  2002,     0,  2003,  2004,  2005,     0,  2006,
    2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,  2014,  2015,
    2016,     0,  2017,     0,  2018,     0,  2019,     0,  2020,     0,
    2021,  2022,  2023,  2024,     0,  2026,  2027,     0,     0,  2028,
       0,  2029,  2030,  2031,  2032,  2033,  2034,  2035,     0,  2036,
       0,  2037,  2038,     0,     0,     0,  2040,  2041,  2042,     0,
       0,  2043,  2044,     0,     0,  2045,  2046,  2047,  2048,     0,
    2049,  2050,  2051,     0,     0,  2052,  2053,     0,     0,  2054,
    2055,     0,  2056,  2057,     0,     0,  2058,  2059,     0,  2060,
    2061,  2062,  2063,     0,     0,  2064,  2065,  2066,     0,  2067,
       0,     0,     0,     0,     0,     0,     0,  2068,     0,  2069,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2070,  2071,  2072,  2073,  2074,  2075,  2076,     0,
       0,     0,     0,  2077,  2078,  2079,     0,  2080,  2081,  2082,
       0,  2083,  2084,  2085,  2086,     0,  2087,     0,  2088,  2089,
    2090,     0,  2091,  2092,  2093,     0,  2094,     0,  2095,  2096,
    2097,     0,  2098,  2099,  2100,  2101,  2102,     0,     0,     0,
       0,     0,  2103,  2104,  3148,     0,  2105,  2106,  2107,  2108,
    2109,  2110,  2111,  2112,     0,  1818,  1819,  1820,  1821,     0,
    1823,  1824,  1825,     0,  1826,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1830,  1831,     0,     0,     0,  1833,
    1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,     0,  1842,
    1843,  1844,  1845,  1846,     0,     0,     0,  1847,     0,     0,
    1848,     0,  1849,  1850,  1851,  1852,  1853,     0,     0,     0,
    1855,     0,  1856,  1857,  1858,     0,     0,  1859,     0,  1860,
    1861,     0,  1862,  1863,  1864,     0,     0,  1865,     0,     0,
       0,     0,     0,     0,     0,     0,  1866,  1867,     0,  1868,
       0,  1869,  1870,  1871,  1872,     0,  1873,     0,  1874,  1875,
    1876,  1877,  1878,     0,     0,  1879,     0,     0,     0,     0,
    1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,     0,  1887,
    1888,  1889,     0,     0,     0,  1890,  1891,  1892,  1893,  1894,
       0,  1895,  1896,     0,     0,     0,     0,  1897,  1898,     0,
    3150,  1899,     0,  1900,  1901,     0,     0,  1902,     0,  1903,
       0,  1904,  1905,     0,  1906,     0,  1907,  1908,     0,     0,
    1909,     0,  1911,  1912,  1913,     0,  1915,  1916,  1917,  1918,
    1919,  1920,     0,     0,     0,  1921,  1922,  1923,  1924,  1925,
    1926,  1927,     0,  1928,     0,  1929,     0,     0,  1932,     0,
    1933,     0,  1934,  1935,  1936,     0,     0,     0,     0,     0,
    1937,     0,  1938,     0,     0,  1940,  1941,  1942,     0,     0,
    1943,  1944,     0,  1945,     0,  1946,  1947,  1948,  1949,     0,
    1950,  1951,     0,  1952,  1953,  1954,  1955,     0,  1956,  1957,
    1958,  1959,     0,  1961,  1962,     0,  1964,     0,  1965,  1966,
    1967,  1968,  1969,     0,     0,  1970,     0,     0,  3151,  1972,
    1973,     0,     0,     0,  1975,  1976,     0,     0,  1977,  1978,
    1979,     0,  1980,     0,     0,  1981,     0,     0,  1982,     0,
    1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,  1990,     0,
    1991,  1992,  1993,  1994,  1995,  1996,     0,     0,     0,     0,
    1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,  2004,  2005,
       0,  2006,  2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,
    2014,  2015,  2016,     0,  2017,     0,  2018,     0,  2019,     0,
    2020,     0,  2021,  2022,  2023,  2024,     0,  2026,  2027,     0,
       0,  2028,     0,  3152,  2030,  2031,  2032,  2033,  2034,  2035,
       0,  2036,     0,  2037,  2038,     0,     0,     0,  2040,  2041,
    2042,     0,     0,  2043,  2044,     0,     0,  2045,  2046,  2047,
    2048,     0,  2049,  2050,  2051,     0,     0,  2052,  2053,     0,
       0,  2054,  2055,     0,  2056,  2057,     0,     0,  2058,  2059,
       0,  2060,  2061,  2062,  2063,     0,     0,  2064,  2065,  2066,
       0,  2067,     0,     0,     0,     0,     0,     0,     0,  2068,
       0,  2069,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2070,  2071,  2072,  2073,  2074,  2075,
    2076,     0,     0,     0,     0,  2077,  2078,  2079,     0,  2080,
    2081,  2082,     0,  2083,  2084,  2085,  2086,     0,  2087,     0,
    2088,  2089,  2090,     0,  2091,  2092,  2093,     0,  2094,     0,
    2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,  2102,     0,
       0,     0,     0,     0,  2103,  2104,  3148,     0,  2105,  2106,
    2107,  2108,  2109,  2110,  2111,  2112,     0,  1818,  1819,  1820,
    1821,     0,  1823,  1824,  1825,     0,  1826,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1830,  1831,     0,     0,
       0,  1833,  1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,
       0,  1842,  1843,  1844,  1845,  1846,     0,     0,     0,  1847,
       0,     0,  1848,     0,  1849,  1850,  1851,  1852,  1853,     0,
       0,     0,  1855,     0,  1856,  1857,  1858,     0,     0,  1859,
       0,  1860,  1861,     0,  1862,  1863,  1864,     0,     0,  1865,
       0,     0,     0,     0,     0,     0,     0,     0,  1866,  1867,
       0,  1868,     0,  1869,  1870,  1871,  1872,     0,  1873,     0,
    1874,  1875,  1876,  1877,  1878,     0,     0,  1879,     0,     0,
       0,     0,  1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,
       0,  1887,  1888,  1889,     0,     0,     0,  1890,  1891,  1892,
    1893,  1894,     0,  1895,  1896,     0,     0,     0,     0,  1897,
    1898,     0,  3150,  1899,     0,  1900,  1901,     0,     0,  1902,
       0,  1903,     0,  1904,  1905,     0,  1906,     0,  1907,  1908,
       0,     0,  1909,     0,  1911,  1912,  1913,     0,  1915,  1916,
    1917,  1918,  1919,  1920,     0,     0,     0,  1921,  1922,  1923,
    1924,  1925,  1926,  1927,     0,  1928,     0,  1929,     0,     0,
    1932,     0,  1933,     0,  1934,  1935,  1936,     0,     0,     0,
       0,     0,  1937,     0,  1938,     0,     0,  1940,  1941,  1942,
       0,     0,  1943,  1944,     0,  1945,     0,  1946,  1947,  1948,
    1949,     0,  1950,  1951,     0,  1952,  1953,  1954,  1955,     0,
    1956,  1957,  1958,  1959,     0,  1961,  1962,     0,  1964,     0,
    1965,  1966,  1967,  1968,  1969,     0,     0,  1970,     0,     0,
    3151,  1972,  1973,     0,     0,     0,  1975,  1976,     0,     0,
    1977,  1978,  1979,     0,  1980,     0,     0,  1981,     0,     0,
    1982,     0,  1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,
    1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,     0,     0,
       0,     0,  1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,
    2004,  2005,     0,  2006,  2007,     0,  2008,  2009,  2010,  2011,
    2012,  2013,  2014,  2015,  2016,     0,  2017,     0,  2018,     0,
    2019,     0,  2020,     0,     0,  2022,  2023,  2024,     0,  2026,
    2027,     0,     0,  2028,     0,  2029,  2030,  2031,  2032,  2033,
    2034,  2035,     0,  2036,     0,  2037,  2038,     0,     0,     0,
    2040,  2041,  2042,     0,     0,  2043,  2044,     0,     0,  2045,
    2046,  2047,  2048,     0,  2049,  2050,  2051,     0,     0,  2052,
    2053,     0,     0,  2054,  2055,     0,  2056,  2057,     0,     0,
    2058,  2059,     0,  2060,  2061,  2062,  2063,     0,     0,  2064,
    2065,  2066,     0,  2067,     0,     0,     0,     0,     0,     0,
       0,  2068,     0,  2069,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2070,  2071,  2072,  2073,
    2074,  2075,  2076,     0,     0,     0,     0,  2077,  2078,  2079,
       0,  2080,  2081,  2082,     0,  2083,  2084,  2085,  2086,     0,
    2087,     0,  2088,  2089,  2090,     0,  2091,  2092,  2093,     0,
    2094,     0,  2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,
    2102,     0,     0,     0,     0,     0,  2103,  2104,  3148,     0,
    2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112,     0,  1818,
    1819,  1820,  1821,     0,  1823,  1824,  1825,     0,  1826,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1830,  1831,
       0,     0,     0,  1833,  1834,  1835,  1836,     0,  1838,  1839,
    1840,  1841,     0,  1842,  1843,  1844,  1845,  1846,     0,     0,
       0,  1847,     0,     0,  1848,     0,  1849,  1850,  1851,  1852,
    1853,     0,     0,     0,  1855,     0,  1856,  1857,  1858,     0,
       0,  1859,     0,  1860,  1861,     0,  1862,  1863,  1864,     0,
       0,  1865,     0,     0,     0,     0,     0,     0,     0,     0,
    1866,  1867,     0,  1868,     0,  1869,  1870,  1871,  1872,     0,
    1873,     0,  1874,  1875,  1876,  1877,  1878,     0,     0,  1879,
       0,     0,     0,     0,  1880,  1881,  1882,  1883,     0,  1884,
    1885,  1886,     0,  1887,  1888,  1889,     0,     0,     0,  1890,
    1891,  1892,  1893,  1894,     0,  1895,  1896,     0,     0,     0,
       0,  1897,  1898,     0,     0,  1899,     0,  1900,  1901,     0,
       0,  1902,     0,  1903,     0,  1904,  1905,     0,  1906,     0,
    1907,  1908,     0,     0,  1909,     0,  1911,  1912,  1913,     0,
    1915,  1916,  1917,  1918,  1919,  1920,     0,     0,     0,  1921,
    1922,  1923,  1924,  1925,  1926,  1927,     0,  1928,     0,  1929,
       0,     0,  1932,     0,  1933,     0,  1934,  1935,  1936,     0,
       0,     0,     0,     0,  1937,     0,  1938,     0,     0,  1940,
    1941,  1942,     0,     0,  1943,  1944,     0,  1945,     0,  1946,
    1947,  1948,  1949,     0,  1950,  1951,     0,  1952,  1953,  1954,
    1955,     0,  1956,  1957,  1958,  1959,     0,  1961,  1962,     0,
    1964,     0,  1965,  1966,  1967,  1968,  1969,     0,     0,  1970,
       0,     0,  3151,  1972,  1973,     0,     0,     0,  1975,  1976,
       0,     0,  1977,  1978,  1979,     0,  1980,     0,     0,  1981,
       0,     0,  1982,     0,  1983,  1984,  1985,  1986,     0,  1987,
    1988,  1989,  1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,
       0,     0,     0,     0,  1997,  1998,  1999,  2000,  2001,  2002,
       0,  2003,  2004,  2005,     0,  2006,  2007,     0,  2008,  2009,
    2010,  2011,  2012,  2013,  2014,  2015,  2016,     0,  2017,     0,
    2018,     0,  2019,     0,  2020,     0,  2021,  2022,  2023,  2024,
       0,  2026,  2027,     0,     0,  2028,     0,  2029,  2030,  2031,
    2032,  2033,  2034,  2035,     0,  2036,     0,  2037,  2038,     0,
       0,     0,  2040,  2041,  2042,     0,     0,  2043,  2044,     0,
       0,  2045,  2046,  2047,  2048,     0,  2049,  2050,  2051,     0,
       0,  2052,  2053,     0,     0,  2054,  2055,     0,  2056,  2057,
       0,     0,  2058,  2059,     0,  2060,  2061,  2062,  2063,     0,
       0,  2064,  2065,  2066,     0,  2067,     0,     0,     0,     0,
       0,     0,     0,  2068,     0,  2069,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2070,  2071,
    2072,  2073,  2074,  2075,  2076,     0,     0,     0,     0,  2077,
    2078,  2079,     0,  2080,  2081,  2082,     0,  2083,  2084,  2085,
    2086,     0,  2087,     0,  2088,  2089,  2090,     0,  2091,  2092,
    2093,     0,  2094,     0,  2095,  2096,  2097,     0,  2098,  2099,
    2100,  2101,  2102,     0,     0,     0,     0,     0,  2103,  2104,
       0,     0,  2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112
};

static const yytype_int16 yycheck[] =
{
      21,     0,     0,     0,     0,    26,     0,     0,  1035,   654,
    1075,   773,  1097,    49,    16,  1340,  1039,   823,    34,   204,
     619,   828,    24,   974,    20,   729,   730,    48,     7,     0,
     734,    21,   181,   906,   675,    14,    26,  1044,  1388,   901,
      11,  1391,   853,  2314,   685,  1705,    12,  2330,  2331,    20,
     695,  1269,   931,  1403,  1541,  1405,   918,  1407,    48,   654,
    2793,  1777,  1387,  1814,  1381,  3154,  1401,  1286,  1023,  1391,
    1125,  1154,  1155,  1499,   673,  2498,  1184,  3164,    49,  1558,
    3377,  3211,   780,  1321,    20,  3118,  2636,    43,  3396,   882,
    1173,  3424,   905,   190,   191,  2644,   987,   194,   911,   196,
    1267,  3803,  1597,   610,  3469,  1323,   997,   920,    42,  1446,
    3190,   973,  3192,  1743,  3702,   977,  3843,  3747,    22,   216,
     982,  3454,   219,  2959,  2960,  2956,    17,   989,  1463,  1464,
      34,   776,  1066,  1296,  3849,  2549,  1458,   999,  2271,  2772,
    3642,  4060,  3743,  1381,  3381,  3382,  3383,  3384,  3385,  3386,
       0,  3813,  2441,  2961,  4349,  3026,   663,  4003,  4377,  2448,
    1327,  3443,  4344,  4049,   183,  1660,  2601,  2456,  1327,  1370,
     183,  4074,  3675,  1387,  3811,  3800,  4575,  3669,   167,  1602,
    3884,   776,    33,  2893,     0,     0,     0,  1613,  3019,    40,
       0,     0,  4567,     0,    39,     0,  4296,     0,     0,     0,
       0,  2302,  3034,  3797,  3798,  3799,  3800,  3155,  2300,  4683,
    4340,  4685,   183,     0,  4574,  3674,  2639,  3714,   200,  5043,
    5044,  3591,  1070,  4922,   206,     5,     0,    31,  2852,  2853,
       5,   820,   820,  2857,    31,   217,  3798,  3799,  4715,  4716,
     104,   871,     9,    80,     0,    51,    11,    68,    44,     0,
       5,  4915,   149,  2956,    11,    26,    27,    18,  3852,     5,
      58,   154,   154,   967,     5,    37,    48,    13,     5,    97,
       5,     5,  1206,   155,   129,     5,   104,   160,   212,   924,
    2904,  2905,  1075,     0,     5,   104,   154,    35,    16,     0,
    3852,   154,     9,     5,     9,  2718,     5,  2720,     9,    42,
       5,     5,     5,    58,    13,    22,    31,     5,    13,     5,
       5,    22,   174,    77,   106,    25,  3019,    58,   154,   193,
      97,    11,  3032,  5116,   104,     5,    18,     5,    72,    31,
     123,    51,   255,   163,  4061,  4857,    25,    51,    37,   125,
     261,   104,     5,   251,    31,   111,    36,   109,  3849,     5,
     285,   162,   951,     4,   135,  3120,  1001,   135,     9,    35,
     121,    23,  1143,  1144,     9,  1306,    31,   154,    68,   286,
     302,    48,  5003,  5004,   154,  1254,    66,    22,   104,   162,
     154,    51,   153,   239,   155,   109,    22,   174,  1169,     3,
       4,     5,   364,    29,  1561,     9,  1207,   121,   154,   331,
     174,    22,   316,   154,  1045,   189,   148,   135,    29,   239,
     364,   282,    66,   241,  2130,   199,  1061,  1062,   174,    34,
     295,  2508,   386,   174,   405,  1236,   109,   170,   136,   121,
    1075,   174,   407,     4,   619,   290,  1544,   154,     9,    22,
     272,   108,  4765,   154,   108,    87,    84,   317,  1531,  1532,
     325,   268,    11,    48,   366,  4301,  1539,   174,   405,  1252,
      79,   356,  1103,   174,  1257,  1258,   306,  1062,  5261,   212,
     307,   261,  1113,  2449,  5507,   269,    38,    36,  2565,   354,
     396,  1508,    11,  1702,  1129,  1126,    11,  1706,   673,  1708,
     104,   331,  1711,    11,  1713,   366,   408,    59,   368,   118,
    3737,  4975,   308,  4826,   187,   324,  1513,    66,   302,   272,
     405,   608,  2488,  5546,   331,   612,   344,   492,    36,   347,
     162,   159,   354,   398,  1742,  4900,   188,   194,   364,   510,
     194,   506,   629,   116,  1129,   354,   278,   408,   510,   493,
    1353,    83,   506,  1356,   162,   201,  3843,  1502,    66,   466,
     464,     9,   333,  4735,   508,   162,   280,  4776,   173,    30,
     390,    22,    22,   510,    22,  1358,   422,  5089,    29,    29,
     162,   506,   272,   392,  2290,  1368,   508,   354,   192,  1452,
    1442,   504,  1444,   246,   364,   508,   405,   315,   308,   510,
    1808,   465,   335,   319,   308,   305,   388,   239,   506,   601,
     364,   364,   216,   351,  1249,   333,  1419,   317,   401,   506,
     302,  1696,  1257,  1258,   506,  5279,   305,   510,  1497,   391,
     386,   216,   384,   384,   506,   396,  4328,   510,  5421,   493,
    3395,   251,   376,   104,  4349,   617,   195,   196,   308,   621,
     395,  1434,   510,  1666,  1437,  1438,  3069,   510,   510,    97,
     632,   506,   654,   655,  1249,  1610,   467,   493,   368,   695,
     395,   482,  1829,  3750,   450,   364,   195,   345,   346,   447,
     407,    11,   508,   510,   823,   351,  5307,   407,   506,  4381,
    1703,   358,  4528,  4569,   467,   244,   468,   506,   709,  1712,
     711,   477,   713,   401,  4027,  4197,   493,    22,   719,   720,
     721,   384,   506,   339,   510,  4330,  4331,  3796,   506,   600,
     506,   700,  4416,   493,  5191,  4340,  1509,   488,  4221,   709,
     510,   711,   509,   713,   695,  1314,  1314,   693,   508,   719,
    5129,  2391,   507,  5432,  4042,   509,  4330,  4331,   505,  4231,
     742,  4587,   507,  4235,   723,   502,  4340,  3984,  1529,  1530,
    1380,   506,  4346,   509,  3037,   492,  3039,  1538,   509,   695,
     506,  4220,   492,   765,  4061,   506,   951,  4137,   493,   506,
     772,   506,   506,   775,   776,   777,   506,  4059,  5138,  4276,
     497,   498,   497,   498,  4346,   506,   497,   498,   885,   886,
     261,   493,   509,   812,   506,  5619,   510,   506,   509,   812,
     504,   506,   506,   506,   508,   739,   493,  1741,   506,  1743,
     506,   506,   502,  5637,  5638,   814,   814,   814,   814,  1753,
     814,   814,  5296,  1757,  1672,  1424,   506,   448,   493,     8,
     451,  1765,  1766,  1681,   405,  3666,  1777,   256,  3669,  2326,
     510,   812,   484,   814,  1778,  1779,   497,   498,  4349,   467,
     504,  1792,   497,   498,   508,   195,  1790,  2336,  3147,  5041,
     467,   882,   796,   405,   800,  4711,  1800,    97,   965,  3956,
    3419,  5270,  4718,   468,   658,   467,   251,   472,   339,   339,
    3688,    97,   424,   497,   498,   669,   506,  5262,   985,   986,
     256,   104,   254,   827,  5024,    73,    68,  4997,   254,  3731,
    3001,  1605,  1606,  3851,   446,    77,   354,  3342,  3000,   331,
    3345,  3346,  1009,    18,  3349,   457,  3747,  4047,   460,  2137,
    3355,   104,   261,   104,  3347,  3348,   497,   498,   127,   774,
     154,   495,   104,   778,   868,   315,   870,   295,   497,   498,
     499,   500,   501,   502,  1041,  1042,   510,  1709,  1710,  3573,
     106,   276,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,   255,  3666,   814,   104,  3669,   162,   497,   498,
     499,   500,   501,   502,   499,   500,   501,   502,   163,  4898,
     104,   499,   500,   501,   502,  5360,    51,   445,  1769,  1770,
       3,   410,     5,   451,  1805,  1636,    97,    97,   814,   814,
     814,   326,   135,   154,   814,   814,  1647,   814,  3718,   814,
     860,   814,   814,   814,   814,   106,   121,    68,  1659,   477,
    3644,  3645,   493,   104,  5423,    75,     5,     5,  1673,  5211,
    5212,    84,   357,   504,   359,   506,   507,   508,  4668,   510,
     398,   197,   104,  4770,  3747,  1644,    18,   225,   226,   227,
     103,  4084,    24,   104,  1075,     8,   907,   908,    11,   272,
    1062,    68,    44,   113,  4779,    83,   354,    28,    68,    64,
     104,   104,   156,  1075,  1070,   290,   127,  5476,   257,  4781,
    4782,   331,  4712,   136,  2406,   241,    99,  4719,   510,   272,
    2513,   272,  2330,     5,  3377,   319,   104,   104,   328,  1070,
     272,  1080,   241,  1082,   104,  1084,  1108,  1086,  4812,  1088,
    1089,  1090,   364,    95,    11,  2278,  1095,  2280,   313,  4756,
     127,  4623,   155,  1014,  1631,  4750,   506,  1129,    60,    68,
       8,   506,    97,    11,   104,   291,  2852,  2853,   354,    36,
     506,  2857,  4736,   342,   506,    77,    22,  4741,   272,   121,
     506,   364,   936,     5,   167,   246,  4750,   497,   498,   499,
     500,   501,   502,   947,   269,   104,  1137,  4670,   507,    66,
    1206,   510,  2494,   397,   239,   136,  1775,  2344,    99,    60,
     319,   364,  4674,   364,  3467,  2344,  1157,  4679,  2904,  2905,
    4682,   272,   364,   392,    70,    99,   354,   302,   486,   239,
     333,   133,    78,  4290,   186,   390,  1208,   241,    68,   242,
     272,  5610,  5131,   364,   109,   228,  1218,  1188,   231,   151,
     270,  2972,  4587,  4556,  1008,  2439,   331,  1011,  2429,   105,
    1232,  1252,  4864,   317,   449,  1206,  1257,  1258,  5124,  1424,
     364,  5144,   195,   308,   104,   298,   167,  1249,   426,   427,
    1252,  1253,   133,   354,   354,  1257,  1258,   239,   510,   254,
     510,   407,     5,   167,   272,   149,   331,   246,   246,  5375,
     151,   324,   272,  4353,   239,    75,   246,  4559,  4779,  4780,
    1299,  1300,   268,  1302,   389,  4915,  1299,  1300,   372,  1302,
    1279,   342,   187,   107,  4383,  4384,     5,   269,   195,  1396,
       9,   354,   178,    22,   257,  2472,     5,   228,   358,   322,
     231,    85,    68,   113,   493,   494,   495,   195,   497,   498,
     499,   500,   501,   502,   228,    11,    18,   231,  1299,  1300,
     302,  1302,    24,   272,   246,   342,   504,  1358,   320,   392,
     508,   392,  2679,   116,   155,   118,   492,  1368,   104,  2290,
     390,   283,   405,   386,   510,    68,   364,   171,   228,   331,
     506,   104,    68,  5582,   364,   109,  4998,   386,  1465,  1466,
    1467,  1468,  3996,   156,  5006,   136,   304,  5263,  2695,   257,
      66,   155,  1316,  1317,  5490,   392,   331,   405,    75,   407,
      98,   104,  1413,  1414,  4995,   104,  5615,   116,   104,  5024,
    4231,   322,   283,  4274,  4235,   104,   424,     8,   421,   183,
      11,  4247,   272,  1434,  1511,  1512,  1437,  1438,   322,   156,
     304,   127,  1519,  5268,   198,   364,   113,  5622,   446,   121,
    5024,   482,     5,   163,  5280,    36,   210,  4939,   201,   457,
    5359,    42,   460,   187,  4252,  4575,   209,   379,  1450,  4257,
    5369,  2689,   322,   506,  5636,   218,   507,  2695,    86,  1644,
     271,  1352,   236,  1560,  2631,    66,  5128,  5649,  5650,   177,
     270,   347,    75,  4770,   257,   482,   371,   405,   251,   461,
    4972,   255,   110,    60,  4117,   970,    77,   506,  1509,   384,
    1587,  1588,  1589,  1590,    57,    58,   157,  1479,   379,    52,
     421,   269,   130,   223,   364,  5424,   157,    60,  3943,   239,
     113,   167,   200,   104,  3949,  3950,   272,   421,  5363,   132,
     257,  1523,   150,  1457,   269,   336,    18,   104,  4231,   259,
       8,   104,  4235,    11,   302,  5165,  3825,   165,   312,  2622,
    2759,  5042,  5043,  5044,   497,   498,   499,   500,   501,   502,
    5052,  2313,  1649,   121,  5056,  5057,  3035,   302,   358,   272,
    3843,  1658,  3041,   324,   347,   510,   272,  4191,  4192,  4877,
    1667,     8,   228,   174,    11,  4883,  1426,   269,   191,  1429,
     324,  1583,   510,   270,  2475,   506,   331,   366,   114,  1582,
    1775,    28,  3725,   354,   195,   196,    96,   405,   124,  1581,
     497,   498,   499,   500,   501,   502,  5194,  5195,   364,    75,
     302,   479,   386,   407,   158,  1597,   494,   495,   246,   497,
     498,   499,   500,   501,   502,  2438,  1111,  4041,  1478,   121,
    5475,   392,  1482,   199,   155,    60,   342,    20,   506,   331,
     384,    66,  1608,   244,   405,   353,   354,   113,   261,  5279,
     241,   364,    77,   136,  2545,  1637,   257,    40,   134,  5504,
     390,   289,   183,   216,   241,   326,   322,   270,  4091,   246,
    4093,   358,   216,   239,   146,   326,  1672,   198,  1660,   104,
     313,   106,    42,   163,  2711,  1681,   392,   269,   195,   210,
     290,   259,  2715,   506,   355,   116,   174,   118,   492,   175,
    2513,  1672,   510,  1682,   355,  1684,   283,  1686,    32,  1688,
    1681,  1690,  2879,   374,  2721,  1694,   316,   195,  1734,  2886,
     297,   142,  2535,  2516,   224,  1724,  1724,  1724,  1724,   229,
    1724,  2524,   144,  2526,  1755,  1756,   219,  1673,   306,    99,
     106,   106,  1763,   269,  2606,   506,  1767,  1768,   255,   331,
    2705,   295,   385,  1724,  2567,   358,   181,  1854,   195,   239,
    1762,   506,  1783,   331,  1785,   378,   238,   333,  2659,  2660,
    2661,  2662,  4859,   149,   261,   317,   302,   269,  4061,   257,
    2671,  1780,  5115,   159,  2675,  1719,   509,   315,   112,   269,
    1811,   312,  1813,   510,  2393,  2436,  3034,    68,   174,    68,
    2691,   213,   379,  5391,   270,   188,  3044,  2698,    77,  1780,
     302,   439,   174,   357,   107,   359,   241,  2980,   384,   268,
     257,   246,   302,  3140,   144,   246,   368,   455,  5543,  1733,
     251,   197,   197,   104,   321,   104,   599,  4668,   382,   331,
    1624,   604,  2349,  4674,  5571,  3064,  3506,   269,  4679,  1740,
    1634,  4682,   306,   116,   398,   118,   384,  3573,   283,   107,
    3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,  3584,  3585,
    1804,   106,   297,  4606,  1001,   241,   241,   331,   171,   507,
     302,  4712,   331,  5585,   158,     0,    68,  2821,  4311,  4312,
    4923,   241,   358,   213,  3610,    77,   497,   498,   499,   500,
     501,   502,  3140,  5618,    76,    11,  4742,  5622,  4744,   331,
     390,  2852,  2853,    96,  3544,  5280,  2857,   268,  5620,  5621,
    5007,  1705,   104,   171,   132,   291,   291,  3264,  3644,  3645,
      36,   317,   302,   253,  1061,   311,   144,  1422,  2872,   289,
     302,   149,   216,  1914,   306,  5278,   181,   154,   259,   370,
       4,  5031,  3274,   125,   379,     9,   302,   149,   269,   380,
      66,   331,  3045,  2904,  2905,  4668,   116,   174,   118,   331,
    2763,  4674,   338,  4706,  2908,  4708,  4679,   169,   241,  4682,
     331,   324,   368,   191,  2688,   331,  4536,   750,   251,  3074,
     285,   302,   142,   106,  1579,  4619,   179,  2504,  4547,  5129,
    3495,    26,    27,   272,   239,   213,   241,   269,  4558,  4712,
     773,   354,  2946,  1598,   132,   493,   494,   495,  1503,   497,
     498,   499,   500,   501,   502,    49,   144,  4651,  4652,   792,
     174,   149,   368,   205,   206,     5,   149,  4472,  4473,     9,
     302,   224,  5543,   405,  5352,   253,   229,   219,     8,   392,
     144,    11,   815,   261,  2699,   149,   493,   494,   495,    84,
     497,   498,   499,   500,   501,   502,   282,   291,   181,   331,
     354,     8,    96,   191,    11,   132,    36,    85,   103,   303,
     149,  1566,    42,   357,  4915,   359,   397,   144,   144,  2734,
     272,   241,   149,   149,   156,   213,   246,   269,  3105,    36,
     169,   251,   315,   327,  2699,    42,    66,  3568,   382,     4,
    5197,   136,  3447,    20,     9,  3450,  5149,  5618,  5619,   213,
     883,  5622,   184,   250,     8,    77,   239,    11,   241,    66,
     343,  3592,   269,    40,   191,   253,  5637,  5638,  3093,  2734,
    5270,  4972,   295,   261,    28,  1630,   321,   155,    18,  2151,
     366,   450,   176,   324,    24,   269,   213,   213,   302,   253,
    2966,     8,   306,   506,    11,   302,   357,   493,   359,   306,
     378,   199,   325,   158,   901,   183,   507,   398,   477,   510,
    2973,    28,   508,   354,   356,   269,   358,   331,   302,   916,
     198,   918,   408,   130,   331,     8,   253,   253,    11,   201,
     224,   354,   210,   364,   261,   229,   158,   304,  2393,  3376,
     170,   239,  4915,   368,   174,   239,   979,   331,   302,  3970,
     370,   392,  5309,    36,   357,   177,   359,   505,   236,    42,
     380,   216,   510,   170,   405,   195,   196,   174,   223,   506,
    1003,  1004,  1005,   507,   268,   398,   510,   331,  3121,   501,
     501,   121,   212,    66,   506,   506,   508,   508,   195,   196,
     378,   405,   507,   291,   216,   510,   255,     8,   405,  4972,
      11,   260,  2970,   298,  5571,   212,   241,   505,  2299,  2300,
    3996,   246,   510,   307,   244,  3504,   504,    28,   506,  2386,
    2387,  2388,   506,  5423,   508,  3168,  3775,   257,  2395,   324,
    2397,     4,  2399,  2400,   312,   333,     9,   244,   260,  3122,
     255,   195,   321,   507,  4938,   260,   510,   130,   342,  2318,
     257,   378,   242,   243,   289,  3751,  2925,   368,  2973,   354,
    2266,  4736,  1817,   223,  5165,   506,  4741,   132,  2354,  1102,
    2356,   405,   140,   407,  3429,    21,  5476,  2318,   195,   144,
      26,  3368,  3369,  3370,   149,  3440,   384,   170,  2340,   315,
     316,   174,  1125,  2345,   319,   507,  2348,   392,   510,  5456,
    5607,   396,   357,   257,   359,   335,   315,   316,   507,     5,
     405,   510,   195,   196,    10,   506,   504,   508,  2370,   507,
     508,  2871,    18,  2873,  2874,  4830,   191,   382,   335,   212,
     507,   356,   223,   510,   324,   357,  3624,   359,     8,    35,
     257,    11,   405,    21,   407,  3228,   368,  3308,   213,  2421,
    3061,  3062,   504,    81,   506,  2522,   508,   379,   177,   507,
     382,   244,   510,  2415,   354,   357,   169,   359,  4189,  3330,
    3331,   489,   490,   356,   257,  3612,  3091,   357,  5279,   359,
     405,   269,   407,  2435,   195,  4878,   507,   507,   253,   510,
     510,  3783,  5165,  4734,   315,   316,   261,  4607,  4608,  4609,
    4610,  2405,   392,    74,  3529,  4191,  4192,   432,   315,   316,
    5610,   506,  3817,  3818,   302,   405,  2468,  4770,   306,  2586,
    3598,  3599,   405,  3731,   407,  2516,  3091,  2594,  5587,  5588,
    1263,  1426,  2599,  2524,  1429,  2526,   368,   507,  3726,  3536,
     510,   507,    48,   331,   510,   319,   257,   507,   319,   432,
     510,   507,   335,   507,   510,  2507,   510,   482,  3390,  2511,
    1293,  1294,   398,  3855,   494,   495,   201,   497,   498,   499,
     500,   501,   502,   507,   321,  4816,   510,  2529,  3439,  1116,
    1117,   506,   356,  1478,   433,   356,   507,  1482,  2540,   510,
     497,   498,   499,   500,   501,   502,   405,   507,   407,   482,
     510,  2553,   507,  5306,   507,   510,  5279,   510,  3533,   506,
       9,   507,  2564,   378,   510,  2682,   506,  1794,   319,  2571,
    1797,  2593,   506,   506,   405,   195,   407,   506,  2619,  2601,
    2384,   405,   507,   407,   405,   510,   407,  2391,  3249,   493,
     494,   495,   255,   497,   498,   499,   500,   501,   502,   510,
    2717,   507,  2719,  1386,   510,   356,   507,    48,   432,   510,
    1393,   432,  3573,   398,  4917,  3576,  3577,  3578,  3579,  3580,
    3581,  3582,  3583,  3584,  3585,  3728,   493,   494,   495,    38,
     497,   498,   499,   500,   501,   502,  2658,   257,   507,   507,
     243,   510,   510,  3748,  3749,   507,   423,  1430,   510,  3610,
    1433,  3605,  1316,  1317,   405,  3842,   407,  3844,   482,  2645,
     507,   482,  2681,   510,   497,   498,   499,   500,   501,   502,
    2692,   197,   508,   507,   319,  4182,   510,  2699,   258,   258,
       0,   432,   506,  3644,  3645,   506,  1469,   507,   507,   509,
    2681,   510,     3,  3417,   364,  3882,   507,  2814,   507,   510,
    1483,   510,   507,  4048,   507,   510,   507,   510,   507,   510,
     509,   356,  2734,     3,   507,   255,   507,   510,  1501,   510,
    2925,   324,  2763,   817,  3537,   819,  3391,   149,  3393,    19,
    4067,   482,   493,   494,   495,   255,   497,   498,   499,   500,
     501,   502,   319,   507,   423,   507,   510,  3408,   510,  3410,
     507,   354,  4236,   510,  4238,   506,   258,   319,   507,  5050,
     405,   510,   407,    38,    84,    76,  3953,   507,  2770,   507,
     510,   507,   510,   423,   510,   499,  3391,   507,  3393,   356,
     510,   507,   507,   197,   510,   510,    76,   432,   153,   392,
    2995,  2793,  3691,   507,   356,   507,   510,   507,   510,   510,
     510,  3466,   405,   154,   507,   507,   506,   510,   510,  4067,
     121,   154,   132,   507,   507,   126,   510,   510,  1601,   507,
     507,   507,   510,   510,   144,   507,  1609,    48,   405,   149,
     407,   154,   507,   193,   154,   510,   126,   482,   507,   159,
     506,   510,   162,   405,   164,   407,   508,   507,   331,  3680,
     510,  3466,  2908,   507,   409,   432,   510,  3683,  3684,  3685,
     137,   506,  4101,  4102,  4103,   174,   507,  3528,   179,   510,
     432,   191,   506,   493,   494,   495,   506,   497,   498,   499,
     500,   501,   502,  4619,   174,   507,   174,   255,   510,   179,
      60,   508,   507,   213,  4630,   510,    66,     0,  3809,   507,
     137,   174,   510,   506,   507,   482,   509,    77,   507,   507,
     507,   510,   510,   510,   137,  4651,  4652,  2908,   507,   507,
     482,   510,   510,   255,  4695,   507,  1709,  1710,   510,   506,
    2971,  2922,  2973,   253,   104,   507,   106,   507,   510,  2444,
     510,   261,   507,  1726,   506,   510,   507,   149,   137,   510,
    2941,  2973,   272,   507,   507,   125,   510,   510,  2999,  3000,
     302,   507,   269,   274,   510,  2956,  3022,   211,  2987,  2987,
    2987,  2987,   106,  2987,   386,  2951,  2952,  2953,   368,   507,
     250,    84,   510,  3100,   274,  3102,  3103,  3104,   507,   309,
     255,   510,   507,  2797,   507,   510,  2987,   510,   507,  2803,
     507,   510,   506,   510,   398,   319,   321,   711,   712,   713,
    4248,   181,   716,   717,   718,   507,   507,   507,   510,   510,
     510,   201,   726,   313,  5315,   288,    60,   507,  3019,   132,
     510,  3022,  3925,  4271,   354,  3996,   507,   507,   405,   510,
     510,   144,   356,  5334,  3046,   507,   149,   507,   510,    31,
     510,   154,   409,   241,   506,   241,   159,    38,   378,   162,
     319,   164,   352,    38,   269,   373,   377,   149,   398,  3091,
     486,   241,     8,   398,   385,    11,   246,   388,    74,   137,
     137,   506,   402,   137,   404,   405,  3088,   377,   191,   137,
     354,   405,    28,   407,   137,   385,   409,   356,   388,   510,
      36,   137,   137,   255,   137,  2610,    42,   319,   137,  5400,
     213,   137,   432,   283,   137,   255,   137,   428,   432,   137,
     431,  3934,   354,   506,  3937,  3938,    31,   297,   150,   149,
      66,   211,   149,   255,   506,     5,     5,   506,   428,   149,
     506,   431,   506,   506,   356,   456,   405,   279,   407,     5,
     253,   506,  2956,   506,   506,     5,   476,   506,   261,   506,
     506,   506,   473,     5,     5,  4076,   456,   506,   482,   272,
     506,   506,  3377,   432,  3196,  4855,   406,   506,   506,   506,
     506,   266,   506,   473,   504,   506,    44,   507,   508,   509,
     506,   193,   506,   405,   506,   407,   506,    31,    87,   211,
    4439,  4440,  4938,  4442,  4158,   506,   309,   506,   506,   379,
     506,   506,   506,   506,  4168,  3019,    31,   506,   510,   510,
     432,   128,   128,   482,  3226,  3247,   149,   149,    86,   253,
    4191,  4192,   251,   331,   170,   364,  3238,   364,   174,   508,
     319,   364,   319,   364,   364,   364,   364,   506,    77,   319,
     137,   354,   110,   481,   255,   255,   323,   208,   364,   195,
     196,   246,   364,   481,   481,   481,   356,   125,  5571,   364,
     482,   385,   130,   251,   168,   378,   212,  2782,   255,  3301,
    3321,  3322,  3323,  3324,   179,  3326,   506,   506,   364,    77,
     269,   174,   150,  4106,   506,   153,   510,   137,   386,   402,
     386,   404,   405,  3325,    98,   241,    48,   165,   244,   364,
      48,  3321,  3322,  3323,  3324,   364,  3326,   364,   364,     0,
    3342,   257,   364,  3345,  3346,  3366,  3367,  3349,  4586,   432,
    3371,   259,   364,  3355,   364,  3337,  3377,    37,    37,   364,
     356,   510,   331,   255,   409,   255,   195,   506,   506,  2132,
     364,   364,   405,   364,   395,  3377,   506,    31,  2141,    30,
    4021,  4022,    20,   255,   137,   241,   137,   506,   104,  3391,
    3411,  3393,  3489,   476,  1078,  3492,   219,  1081,   386,  1083,
     251,  1085,   397,  1087,   241,    31,   149,  1091,   246,   506,
     506,    31,   201,   320,  4479,   386,   254,   255,   405,   335,
     462,   504,   137,    84,   507,   508,   509,  3420,   137,   137,
    3432,   137,   386,   137,   250,   364,   362,   245,   401,   506,
     154,     8,  3539,   506,    11,   423,   233,   233,    11,   507,
     331,   289,   362,   506,  3453,   510,   145,   506,   364,   162,
    4545,   154,   366,  3465,  3466,   506,   510,   507,   168,    36,
     168,   132,   191,   333,   510,    42,   199,   256,  3477,   510,
     263,   386,  3453,   144,    48,  4296,   364,   507,   149,    76,
     386,   364,   319,   154,   319,   506,   246,   199,   159,    66,
     199,   162,  2265,   164,  2267,  3654,  3477,   246,   321,   364,
     364,   364,   246,  3495,   398,   201,  3537,   506,   255,    38,
     368,   338,    97,    97,   272,   272,   272,  3509,   405,   364,
     191,  4482,   358,  4484,   272,    36,   281,  4488,   356,   319,
    4491,   302,  4493,   510,   302,   364,   169,   125,   195,  3531,
    2313,   328,   213,   364,   364,   291,    31,   364,   195,   195,
     195,     8,   386,   195,    11,    30,   254,   504,   504,   493,
     364,  4896,   364,   364,   386,   137,  4467,   493,   494,   495,
     364,   497,   498,   499,   500,   501,   502,   506,   149,    36,
     137,   151,   253,   398,   251,    42,   328,   506,   354,   405,
     261,   439,    31,   170,   149,   506,   255,   174,   166,  3094,
     255,   272,   166,    31,   137,   255,  3652,   455,   328,    66,
     149,   255,   174,   174,   174,    19,  3628,   510,   195,   196,
     510,   409,   160,  3669,   510,   230,   451,   255,   405,    22,
      23,    48,   510,  4810,    27,   212,  4537,  4538,   309,    32,
      33,    34,   250,    36,   398,   368,    39,    40,  3843,    42,
     354,    44,   201,   507,  4263,   507,   507,   154,   507,   423,
    4837,   273,  3769,  3770,  3771,  3772,   507,   244,  4619,   507,
     476,  3652,   423,   130,  4325,   154,  4479,   364,   265,  4630,
     257,   402,    13,   354,    13,  3666,   392,  5047,  3669,   256,
     256,  2464,  3658,  3659,  3660,  3661,   507,   507,   507,   506,
    4651,  4652,   510,   384,   507,   402,   506,   378,   309,   507,
      48,   506,  3506,   170,   493,   507,   507,   174,   213,   255,
    2493,   507,   507,   258,   507,   506,   177,   507,   255,   137,
      21,   402,   506,   404,   405,   364,  4965,   506,   195,   196,
    3235,   409,  3237,   364,   364,   185,  4975,   478,   246,   127,
     435,   259,  4847,  4848,   506,   212,   506,   494,   335,     3,
     137,   432,   137,   506,  4839,   506,   137,   177,   506,   432,
     506,   478,   354,   431,   274,   213,   506,    68,   274,   383,
     221,  4432,  3889,  3890,   506,   364,  3778,   244,   364,   364,
     221,   221,   241,   319,   319,   364,   189,   190,   191,   192,
     257,   194,   319,   196,  3299,   476,   199,    98,   201,   319,
     364,   204,  3843,   364,   364,  4529,   209,   364,   364,   212,
     364,   137,   331,   216,  4479,   218,   219,   364,   119,    37,
     483,  3843,   483,   504,   483,   195,   507,   508,   509,   195,
     131,  5070,   195,  3874,   506,   322,   231,   507,  3343,   213,
     504,   507,   493,    68,  3885,   507,    38,   373,  4759,   304,
     151,    97,   254,   506,  3876,   156,  4061,  3879,  2641,  3881,
    4686,   510,  3666,  3885,  3874,  3669,   507,  4693,   335,   255,
     507,    31,   493,  4700,   510,   163,   364,  3994,   510,   258,
     319,   256,   386,   386,   319,   319,   135,  5145,   135,   195,
     241,   504,    50,  3934,   127,   361,  3937,  3938,   154,    11,
     397,   202,  3904,   507,   149,  3907,   493,   494,   495,   510,
     497,   498,   499,   500,   501,   502,  3957,   507,    58,   507,
     154,  3943,   223,   261,   402,    83,   154,  3949,  3950,   491,
    3952,   162,   507,  5172,  3975,  3976,   256,   506,   149,   507,
     506,  3446,   373,  3747,    31,  3986,   185,   510,   506,   386,
     386,   506,  4834,     8,  5324,   507,    11,   507,   364,    48,
     356,   373,   137,   507,  3986,  3987,  3988,  3989,   506,     9,
     364,   364,   506,   506,  3479,   364,  5081,  4938,   136,   319,
     364,    36,   140,   319,   364,   286,   149,    42,    99,  4943,
     507,   507,   507,  3797,  3798,  3799,  3800,    48,   356,   149,
      66,   137,    97,   407,   373,   507,  5053,   195,   195,   505,
     199,    66,   313,   505,   172,   506,  4029,   507,   319,   287,
    4061,   125,   405,  5066,   325,  5068,  4028,  5054,  4982,   506,
     497,   498,   499,   500,   501,   502,   328,   125,  4057,  4061,
     510,   506,  4064,   149,   409,   507,   510,  3552,  3852,   180,
     208,    71,   356,   354,   506,   356,     3,   510,  4263,   506,
     159,   364,   507,   328,    97,  4106,  4057,  3572,   154,   195,
     195,   195,   373,   195,   116,   130,   154,   507,   506,   296,
      48,   239,   507,   241,   403,   403,   507,   510,   507,   198,
     507,   506,   264,   506,  4713,  3600,   507,   398,   198,   506,
      48,   164,   507,  4125,   251,   364,   507,  4109,   507,   373,
     154,   269,   405,    66,   179,   170,   493,  4899,    11,   174,
     356,   493,   193,   246,   506,   246,    48,   356,  4789,   493,
      28,   507,   510,  4959,   364,   362,   137,  3642,   195,   510,
     195,   196,   510,   477,   302,   453,   505,   156,   306,  5234,
     154,   386,   310,   174,   386,    31,   122,   212,   316,   401,
     506,   405,   272,   154,   405,   323,   182,  2950,   258,   506,
     154,   154,   391,   331,  4839,   506,   506,   296,   507,   341,
    4799,   272,   340,   507,   506,   198,   507,   255,   404,   244,
     348,   506,   297,   507,  5020,  5021,   599,   364,  1051,   506,
     485,   604,   257,   485,   506,   608,   506,   610,   364,   612,
     506,  1064,   405,   149,   111,   246,   619,   438,    31,   622,
     246,   177,   222,   506,   136,  5179,   629,  5181,   287,   506,
      31,   507,   506,    48,   507,  5422,   259,  4259,  4260,   316,
    4231,  4282,   400,   316,  4235,   507,    48,   510,    48,    31,
    4269,   506,  4288,   510,   507,   658,  5361,  4374,   506,   356,
     663,    31,    11,   506,   356,   239,   669,   425,   386,   507,
     673,   356,  4282,   255,    21,     5,   328,   143,  4269,   287,
     335,   507,   506,    60,    60,   258,   117,   690,   390,   296,
     391,   506,   506,    31,   154,  5482,   454,   510,   507,   402,
     507,   294,   510,   356,   149,   122,  3811,    54,   179,   405,
     255,   255,   470,  4335,    31,  5502,  4338,    31,  4359,   258,
      67,    68,   506,   506,  4441,   258,   506,   440,   507,   506,
      77,   507,   506,    48,    81,   477,   739,   507,  4455,   446,
     434,   109,   507,   315,     5,   384,   315,   750,   751,  4359,
     133,    98,   506,   193,  5401,   507,   140,   471,    17,  4400,
    4401,   255,   506,    28,  4405,  4406,   213,   136,   771,   259,
     773,   774,   119,   315,   482,   778,   459,   287,    48,   463,
     438,   453,   246,  5570,   131,  5572,   506,   434,   213,   792,
     506,   506,   139,   796,  1600,  4397,  3253,   471,   814,   802,
     482,  4810,   477,   874,   151,  2973,  2643,  4409,   506,   156,
    1481,  3842,   815,   493,   493,   908,  3168,   493,  4788,  2558,
    3360,   907,  3952,  4837,   827,   506,  5613,  4231,  5073,  5234,
     177,  4235,  4890,  4019,  1258,  4896,  4458,  4459,  4479,  5626,
    4557,  4522,   497,   498,   499,   500,   501,   502,  5553,  4876,
    4472,  4473,  3068,  4772,  2751,   202,  5313,  4479,  4712,  5395,
    5248,  4483,  5247,  4504,  5343,   868,  5125,   870,  3072,  4771,
    4745,  3805,  5196,  3852,  3223,  5618,   223,  5542,  4779,  5480,
     883,  5570,   885,   886,  5526,  5626,  5138,  5574,  5593,  5655,
    4009,  2634,  2634,  3836,  4504,  3191,  5601,  2628,  3431,  5613,
    1584,  5410,  5502,  4869,   907,   908,  3376,  4063,  4713,  5614,
     257,  5354,  4801,  5221,  5331,  1574,  4804,    26,  4994,  4109,
    4025,  1114,  4065,  2331,  5145,  4067,  4330,  4331,  3044,  3302,
    5374,  4553,  5534,   936,  2266,  1077,  4340,  1673,   655,   286,
     791,  2987,  4346,  4046,   947,  2267,  5481,  5518,   951,  4270,
    5521,  5522,   804,  5524,  3723,  5162,  2992,  2316,  1285,  1309,
    3007,  2290,   965,  4585,  1104,  4770,   313,  5301,  2315,  5234,
     317,  1308,   319,  5183,  5193,  3027,   979,  3669,   325,  3019,
    4237,   328,   985,   986,  4221,  4607,  4608,  4609,  4610,  5560,
    1311,  4973,  5563,  5564,  4799,  5566,   796,  4714,  4715,  4716,
    1003,  1004,  1005,  3666,  4606,  1008,  1009,   354,  1011,   356,
    5165,  5164,  3724,   360,  3397,  2609,  3627,  3400,  4941,  3614,
    5304,   368,  5305,  5292,  5381,  2823,   373,  2995,  2920,  2922,
    3719,  3620,    -1,  3416,  2134,    -1,  1039,    -1,  1041,  1042,
      -1,    -1,    -1,    -1,    -1,    -1,  1219,  3430,    -1,    -1,
      -1,   398,    -1,    -1,    -1,    -1,  4773,    -1,  3441,    -1,
      -1,    -1,    -1,  1066,    21,    -1,    -1,    -1,    -1,  3452,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3460,    -1,    -1,
      -1,    -1,    -1,  4674,     8,    -1,    -1,    11,  4679,    -1,
      -1,  4682,  4197,    -1,  1097,  1098,    -1,    54,  4697,  1102,
      -1,  1104,    -1,    -1,  4706,    -1,  4708,    -1,    -1,    -1,
      67,    -1,    36,    -1,    -1,    -1,    -1,    -1,    42,  1122,
      -1,    -1,  1125,    -1,    81,  1128,   473,  4531,    -1,  4770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1141,    -1,
      -1,    -1,    66,    -1,    -1,    -1,  3529,    -1,  4770,    -1,
      -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   119,    -1,    -1,    -1,    -1,  1170,    31,    -1,
      -1,    -1,  1625,    -1,   131,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1635,    -1,    -1,    83,  1639,    50,    -1,  4811,
      -1,  4813,  1645,  1646,   151,    -1,    -1,  4914,    -1,   156,
    1203,  1204,    -1,  1206,  4309,    -1,    -1,    -1,  4830,    -1,
      -1,    -1,  1665,    -1,    -1,    -1,    -1,  4839,    -1,    -1,
      83,  4843,  1225,  4845,    -1,    -1,    -1,  4849,    -1,  4851,
      -1,  4853,    -1,    -1,    -1,    -1,    -1,    -1,   136,    -1,
      -1,    -1,   140,    -1,    -1,    -1,   170,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,  4362,    -1,    -1,
    1263,  4880,    -1,  1266,  4668,    -1,   223,    -1,  4881,    -1,
    4674,   195,   196,   136,   172,  4679,    -1,   140,  4682,    -1,
    3663,  3664,  3665,    -1,    -1,    -1,    -1,    -1,   212,  4880,
    1293,  1294,    -1,    -1,    -1,    -1,    -1,  4402,  1301,    -1,
     257,    -1,  1305,  1306,    -1,    -1,    -1,    -1,  4712,   172,
     208,    -1,    -1,  1316,  1317,  1318,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,  4982,    -1,    -1,   286,
      -1,  1334,  4736,   257,    -1,    -1,    -1,  4741,   201,    -1,
      -1,   239,    -1,   241,    -1,   208,  4750,    -1,    -1,    -1,
    5067,    -1,  5069,    -1,    -1,  4460,    -1,    -1,    -1,    -1,
      -1,    -1,   319,    -1,    -1,    -1,    -1,  1370,   325,    -1,
      -1,   328,    -1,    -1,    -1,    -1,   239,    -1,   241,    -1,
      -1,  4972,    -1,  1386,  1387,    -1,    -1,    -1,  5193,    -1,
    1393,  4982,    -1,  1396,  4798,    -1,    -1,   354,    -1,    -1,
      -1,     8,    -1,   360,    11,    -1,    -1,    -1,   306,    -1,
     308,   335,   310,    -1,    -1,    -1,   373,    -1,   316,    -1,
      -1,  1424,    -1,    -1,    -1,   323,    -1,  1430,    -1,    36,
    1433,    -1,    -1,   331,    -1,    42,    -1,    -1,    -1,    -1,
      -1,   398,   340,   306,    -1,    -1,    -1,   310,    -1,    -1,
     348,  4855,  5074,   316,  1457,    -1,    -1,    -1,    -1,    66,
     323,    -1,  1465,  1466,  1467,  1468,  1469,  3850,   331,    -1,
      -1,    -1,    -1,    -1,  5191,    -1,    -1,   340,    -1,    -1,
    1483,    -1,    -1,    -1,    -1,   348,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1499,    -1,  1501,    -1,
      -1,    -1,   400,    -1,  5123,    -1,    -1,    -1,  1511,  1512,
      -1,  4915,    -1,    -1,    -1,    -1,  1519,    -1,  4623,    -1,
      -1,    -1,    -1,   130,    -1,    -1,    -1,   425,    -1,    -1,
      -1,    -1,  5123,    -1,    -1,    -1,    -1,   400,  5255,    -1,
      -1,   404,   405,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   454,  1560,    -1,    -1,
      -1,    -1,   425,   170,    -1,    -1,    -1,   174,  4972,   493,
     494,   495,   470,   497,   498,   499,   500,   501,   502,    -1,
      -1,    -1,    -1,    -1,  1587,  1588,  1589,  1590,   195,   196,
      -1,   454,    -1,    -1,    -1,    -1,    -1,    -1,  1601,    -1,
    3983,    -1,    -1,    -1,    -1,   212,  1609,   470,    -1,    -1,
    1613,    -1,  5234,    -1,    -1,    -1,    -1,    -1,  5335,  4002,
    5024,  1624,    -1,    -1,    -1,    -1,    -1,    -1,  1631,    -1,
      -1,  1634,    -1,    -1,  4739,    -1,    -1,   244,    -1,    -1,
      -1,  1644,    -1,    -1,    -1,    -1,  1649,    -1,  4031,    -1,
     257,  4756,  5274,    -1,    -1,  1658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1666,  1667,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1696,    -1,    -1,  5318,  5319,  5102,    -1,
    1703,    -1,  1705,    -1,  5306,    -1,  1709,  1710,    -1,  1712,
      -1,    -1,    -1,    -1,    -1,    -1,  1719,    -1,    -1,    -1,
      -1,    -1,    -1,  1726,    -1,    -1,    -1,    -1,   335,    -1,
    1733,  1734,    -1,    -1,  1737,    -1,  5355,    -1,  1741,    -1,
    1743,    -1,    -1,    -1,    -1,  5367,  5368,  1750,    -1,    -1,
    1753,    -1,    -1,    -1,  1757,  5374,  5374,  5374,  5374,    -1,
    5374,  5165,  1765,  1766,  5355,    -1,  5571,    -1,    -1,    -1,
    1773,    -1,  1775,  1776,  1777,  1778,  1779,    -1,  5434,    -1,
      -1,  5422,    -1,  5374,  1787,  1788,    -1,  1790,    -1,  1792,
    1793,    -1,    -1,  1796,    -1,  1798,    -1,  1800,  1801,    -1,
    5422,  1804,    -1,    -1,    -1,    -1,    -1,  4912,    -1,    -1,
      -1,  2264,    -1,    -1,    -1,  5434,  5434,  5434,  5434,    -1,
    5434,    -1,    -1,    -1,    -1,  1828,    -1,    -1,    -1,    -1,
    4213,  4214,  4215,  4216,  4939,    -1,    -1,  5478,    -1,    -1,
      -1,     0,    -1,  5434,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1854,    -1,    -1,    -1,    14,  5260,    -1,  5499,  5481,
      -1,  5502,    -1,    -1,    -1,    24,    -1,    26,    27,    -1,
      -1,  5512,  4977,    -1,    -1,  5279,    -1,    -1,    -1,    -1,
    5502,    -1,    41,    -1,    -1,    -1,    -1,    -1,  5510,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    63,    64,    -1,  1910,    -1,    -1,
      69,    -1,    71,    -1,    -1,  5534,  5534,  5534,  5534,    -1,
    5534,    -1,  5326,    82,    -1,    84,    -1,    -1,  5550,  5551,
    5571,    -1,  5554,  5555,    -1,  5557,  1939,    -1,    -1,    -1,
      -1,   100,    -1,  5534,   103,    -1,    -1,  5052,    -1,  5571,
      -1,  5056,  5057,    -1,    -1,    -1,   115,    -1,   117,    -1,
      -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,   127,    -1,
      -1,  1974,  5613,    -1,    -1,    -1,    -1,   136,    -1,   138,
      -1,    -1,    -1,    -1,  5606,   144,    -1,  5628,    -1,    -1,
      -1,  5613,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,  2457,    -1,  5628,    -1,    -1,    -1,
      -1,  5652,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2481,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,     8,
      -1,    -1,    11,    -1,    24,   214,   215,    -1,    -1,    -1,
      -1,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    -1,     8,   232,    -1,    11,    -1,    36,    -1,    -1,
      -1,    -1,    -1,    42,   243,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    28,    -1,    64,    -1,  5201,  5202,    -1,    -1,
      36,    -1,    -1,    -1,    -1,    -1,    42,    66,    -1,    -1,
    2113,  2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,    -1,
    2123,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,  2132,
      66,  2134,  2135,    -1,   293,  5539,    -1,    -1,  2141,   298,
     299,    -1,   301,    -1,   114,    -1,    -1,   306,    -1,    -1,
      -1,   121,   311,    -1,   124,   314,    -1,    -1,    -1,   318,
      -1,    -1,    -1,    -1,   323,   324,    -1,    -1,    -1,    -1,
      -1,     8,   331,    -1,    11,   334,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   342,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    28,    -1,    -1,    -1,   354,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    42,  4589,    -1,    -1,   179,
      -1,   170,   371,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,   387,    66,
      -1,    -1,    -1,   392,   170,    -1,   195,   196,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   405,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,  2710,    -1,   195,
     196,    -1,  2265,    -1,  2267,    -1,    -1,    -1,  2271,   239,
      -1,   241,     8,  2726,  2727,    11,   212,  2730,    -1,    -1,
      -1,   251,   241,  2736,    -1,   244,    -1,  2290,    -1,   259,
      -1,    -1,    28,    -1,    -1,    -1,  2299,  2300,   257,   269,
      36,   260,    -1,   462,    -1,   241,    42,    -1,   244,    -1,
    2313,    -1,    -1,    -1,    -1,    -1,  2319,    -1,  2321,    -1,
      -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
      66,    -1,   302,   170,    -1,   305,   306,   174,    -1,    -1,
      -1,    -1,  2795,    -1,    -1,    -1,  2349,   506,    -1,    -1,
     509,  2354,    -1,  2356,    -1,    -1,    -1,    -1,   195,   196,
      -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2373,    -1,    -1,    -1,    -1,   212,   335,    -1,    -1,    -1,
      -1,  2384,    -1,  2386,  2387,  2388,    -1,    -1,  2391,    -1,
    2393,    -1,  2395,    -1,  2397,    -1,  2399,  2400,    -1,   335,
      -1,   371,  2405,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   389,
     257,    -1,    -1,   260,    -1,    -1,  2429,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,  2439,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2450,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2458,    -1,    -1,    -1,   195,
     196,  2464,    -1,    -1,    -1,    -1,   436,   437,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4858,   212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2493,    -1,    -1,    -1,  2497,  2498,    -1,    -1,   335,    -1,
      -1,  2504,  2505,    -1,    -1,   241,    -1,    -1,   244,    -1,
     480,    -1,    -1,    -1,    -1,    -1,  4899,    -1,    -1,  2522,
      -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,    -1,    -1,  2549,    -1,  2551,  2552,
      -1,   510,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,   505,
      -1,    -1,    -1,    -1,    -1,   511,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2586,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2594,    -1,    -1,    -1,    -1,  2599,    -1,    -1,   335,
      -1,    -1,    -1,    -1,    -1,  2608,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5005,    -1,  3077,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,  2636,    -1,    -1,  2639,    -1,  2641,    -1,
    2643,    -1,    -1,  2646,    -1,    28,    -1,    -1,     8,    -1,
      -1,    11,    -1,    36,    -1,    -1,   493,   494,   495,    42,
     497,   498,   499,   500,   501,   502,    -1,    -1,    28,  2672,
     507,    -1,    -1,   510,    -1,    -1,    36,    -1,    -1,  2682,
    2683,    -1,    42,    66,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    66,    -1,    -1,    -1,
      -1,    -1,  2715,    -1,  2717,  2718,  2719,  2720,    -1,    -1,
      -1,    -1,  3175,    -1,    -1,    -1,    -1,  3180,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2739,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,  2751,    -1,
      11,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    28,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    36,    -1,    -1,    -1,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,   174,    -1,    -1,  2797,    -1,    -1,    -1,    -1,    -1,
    2803,    -1,    -1,    -1,    -1,    66,    -1,    -1,    -1,    -1,
     170,  2814,   195,   196,   174,    -1,    -1,    -1,  2821,  2822,
      -1,    -1,    -1,    -1,  2827,    -1,    -1,    -1,    -1,   212,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,    -1,
      -1,    -1,    18,    -1,    -1,  3298,    -1,    -1,    24,  2852,
    2853,  3304,   212,    -1,  2857,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,  2871,  2872,
    2873,  2874,    -1,    -1,   257,    -1,    -1,   260,    -1,    -1,
      -1,   241,  2885,    -1,   244,  2888,    -1,    -1,    64,    -1,
      -1,  2894,  2895,    -1,    -1,    -1,    -1,   257,    -1,    -1,
     260,  2904,  2905,    -1,    -1,  2908,    -1,    -1,    -1,   170,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,  2921,    -1,
    2923,    -1,  2925,    -1,  2927,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   114,    -1,
      -1,    -1,    -1,  2946,    -1,   121,    -1,  2950,   124,    -1,
      -1,   212,   335,  2956,    -1,    -1,  2959,  2960,  2961,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2976,    -1,   335,    -1,    -1,    -1,    -1,
     241,     8,    -1,   244,    11,    -1,    -1,    -1,    -1,  2992,
      -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,   260,
      -1,    -1,    -1,   179,  3007,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    42,  3019,    -1,    -1,  3022,
      -1,     8,    -1,  3026,    11,  3478,    -1,    -1,    -1,  3482,
    3483,    -1,  3485,    -1,  3487,  3488,    -1,    -1,    -1,    66,
      -1,    28,    -1,  3496,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   239,  3067,   241,  3069,    -1,    -1,    -1,
      -1,  3074,    -1,    -1,   335,   251,    -1,  3530,  5461,    66,
      -1,    -1,    -1,   259,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   269,    -1,    -1,    -1,  3100,    -1,  3102,
    3103,  3104,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,
     493,   494,   495,    -1,   497,   498,   499,   500,   501,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   302,   510,     8,   305,
     306,    11,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,   170,    -1,    -1,    -1,   174,    28,    -1,
     510,    -1,    -1,    -1,    -1,   331,    36,    -1,    -1,    -1,
      -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   170,    -1,   212,    66,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,    -1,   389,    -1,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,
     257,    -1,   493,   494,   495,    -1,   497,   498,   499,   500,
     501,   502,    -1,    -1,     8,   970,    -1,    11,    -1,   510,
      -1,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
     436,   437,    -1,    -1,    28,    -1,    -1,    -1,    -1,    -1,
     257,    -1,    36,   260,    -1,    -1,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    66,    -1,   480,    -1,    -1,    -1,   335,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3347,  3348,    -1,    -1,   335,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,
     260,    -1,    -1,    -1,    -1,    -1,  1111,    -1,    -1,    -1,
      31,    -1,    -1,    -1,  3397,  3398,    -1,  3400,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,    50,
     174,    -1,    -1,  3416,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3429,  3430,    -1,    -1,
      -1,   195,   196,    -1,    -1,    -1,    -1,  3440,  3441,    -1,
      -1,    -1,    83,    -1,    -1,    -1,    -1,    -1,   212,  3452,
      -1,    -1,    -1,    -1,    -1,   335,    -1,  3460,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,   498,   499,   500,   501,   502,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,  3489,    -1,    -1,  3492,
      -1,    -1,    -1,   257,    -1,   136,   260,    -1,    -1,   140,
      -1,    -1,    -1,  3506,    -1,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,    -1,  3529,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,  3539,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3549,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3559,    -1,    -1,    -1,
     201,    -1,  3565,    -1,  3567,    -1,    -1,   208,    -1,    -1,
    3573,   335,    -1,  3576,  3577,  3578,  3579,  3580,  3581,  3582,
    3583,  3584,  3585,    -1,    -1,    -1,  3589,  3590,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1321,    -1,   239,    -1,
     241,    -1,  3605,    -1,    -1,    -1,  3609,  3610,    -1,    -1,
      -1,  3614,    -1,   493,   494,   495,  3619,   497,   498,   499,
     500,   501,   502,    -1,    -1,    -1,  3629,   507,    -1,  3632,
      -1,  3634,    -1,    -1,    -1,  4088,    -1,    -1,    -1,    -1,
    3643,  3644,  3645,  4096,  4097,    -1,  3649,    -1,    -1,  3652,
      -1,    -1,    -1,  3656,    -1,    -1,  1381,    -1,    -1,    -1,
    3663,  3664,  3665,  3666,    -1,   306,  3669,  3670,    -1,   310,
      -1,  3674,  3675,    -1,    -1,   316,    -1,    -1,  3681,    -1,
      -1,    -1,   323,    -1,  3687,  3688,    -1,    -1,    -1,    -1,
     331,    -1,    -1,     8,    -1,    -1,    11,  1422,    -1,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   348,    -1,    -1,
    3713,    -1,    -1,    28,    -1,    -1,  3719,    -1,    -1,    -1,
    3723,    36,  3725,    -1,    -1,    -1,    -1,    42,    -1,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,    -1,
      -1,    -1,    -1,   507,  3747,  3748,  3749,    -1,  3751,    -1,
      -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,
      -1,    -1,    -1,   404,    -1,    -1,  3769,  3770,  3771,  3772,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1503,    -1,
      -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,  3797,  3798,  3799,  3800,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      28,    11,    -1,   454,    -1,    -1,  1541,    -1,    36,    -1,
      -1,    -1,    -1,  3826,    42,    -1,    -1,    -1,    28,   470,
      -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      -1,  1566,    42,  3846,    -1,    -1,    -1,  3850,    66,  3852,
      -1,    -1,    -1,    -1,  4307,   170,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    66,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,    -1,    -1,  3889,  3890,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,   212,    -1,    11,
      -1,    -1,    -1,    -1,    -1,  1630,    -1,    -1,    -1,    -1,
    4363,  4364,  4365,  4366,    -1,    -1,    28,    -1,  3921,    -1,
      -1,    -1,    -1,    -1,    36,    -1,   241,    -1,    -1,   244,
      42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,   170,    -1,    66,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,   174,    -1,    -1,   195,   196,    -1,
    3983,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3994,    -1,  3996,   212,   195,   196,    -1,    -1,  4002,
      -1,    -1,    -1,    -1,    -1,  4008,    -1,    -1,  4461,  4462,
      -1,    -1,   212,    -1,    -1,    -1,  4019,    -1,    -1,    -1,
     335,    -1,    -1,   241,    -1,    -1,   244,    -1,  4031,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4041,   257,
      -1,   241,   260,    -1,   244,  4048,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,   170,    -1,
     260,    -1,   174,    -1,    -1,  4068,  4069,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,    -1,    -1,  4091,    -1,
    4093,    -1,  1817,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4129,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,   335,    -1,    -1,  4591,    -1,
    4593,  4594,    -1,    -1,    -1,   257,    -1,    -1,   260,    -1,
      -1,    -1,  4605,    -1,    -1,  4158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4168,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4179,  4180,   493,   494,
     495,  4184,   497,   498,   499,   500,   501,   502,  4191,  4192,
      -1,    -1,   507,  4196,    -1,    -1,    -1,    -1,    -1,  4202,
    4203,    -1,    -1,  4206,    -1,    -1,  4209,  4210,    -1,    -1,
    4213,  4214,  4215,  4216,    -1,    -1,    -1,  4220,  4221,    -1,
    4223,  4224,    -1,   335,  4227,    -1,    -1,    -1,  4231,    -1,
      -1,    -1,  4235,    -1,    -1,    -1,    -1,    -1,  4241,    -1,
      -1,    -1,    -1,    -1,  4247,    -1,    -1,    -1,    -1,  4252,
      -1,    -1,    -1,    -1,  4257,    -1,    -1,    -1,    -1,    -1,
    4263,    -1,    -1,    -1,    -1,    -1,    -1,  4270,    -1,    -1,
      -1,  4274,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,  4288,    -1,    -1,  4291,   507,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,    -1,    -1,    -1,    -1,   507,  4311,  4312,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4330,  4331,    -1,
      -1,    -1,    -1,    -1,    28,    -1,    -1,  4340,    -1,    -1,
      -1,    -1,    36,  4346,    -1,   189,    -1,    18,    42,    -1,
      -1,    -1,    -1,    24,    -1,   199,   200,  4360,    -1,    -1,
      -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4374,    66,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   493,   494,   495,    -1,   497,   498,   499,   500,   501,
     502,    -1,    -1,    64,    -1,   507,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    -1,    24,
    2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,  4441,    -1,
      -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,    64,
     121,    -1,  4455,   124,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,  4931,    -1,
     174,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   114,
      -1,   195,   196,    -1,    -1,    -1,   121,    -1,   179,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4520,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4531,    -1,
      -1,    -1,    -1,  4536,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4545,  4996,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,  4557,  4558,    -1,    -1,    -1,    -1,
      -1,   176,    -1,   257,   179,    -1,   260,    -1,   239,    -1,
     241,  4574,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,    -1,    -1,    -1,    -1,  4589,    -1,   259,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,    -1,
      -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,  4619,    -1,  5071,    -1,
      -1,    -1,    -1,    -1,   239,    -1,   241,  4630,    -1,    -1,
      -1,   302,    -1,    -1,   305,   306,   251,    -1,    -1,  4642,
      -1,   335,    -1,    -1,   259,    -1,    -1,    -1,  4651,  4652,
      -1,    -1,  4655,   268,   269,    -1,    -1,    -1,    -1,    -1,
     331,    -1,    -1,    -1,    -1,  4668,    -1,  4670,    -1,    -1,
      -1,  4674,    -1,    -1,    -1,    -1,  4679,    -1,    -1,  4682,
    4683,    -1,  4685,    -1,  4687,  4688,    -1,   302,    -1,    -1,
     305,   306,   307,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4712,
    4713,  4714,  4715,  4716,    -1,    -1,   331,    -1,   389,  2444,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   342,    -1,    -1,
      -1,    31,    -1,  4736,    -1,    -1,    -1,    -1,  4741,  4742,
      -1,  4744,    -1,    -1,    -1,    -1,    -1,  4750,    -1,    -1,
      50,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   436,   437,    -1,    -1,  4772,
    4773,    -1,    -1,   617,   389,    -1,    -1,   621,    -1,    -1,
      -1,    -1,    -1,    83,    18,    -1,    -1,    -1,   632,    -1,
      24,    -1,    -1,    -1,    -1,  4798,  4799,    -1,    -1,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,   480,
     654,    -1,    -1,   507,   658,    -1,    -1,    -1,    -1,    -1,
      -1,   436,   437,    -1,    -1,   669,   670,    -1,    -1,    -1,
      64,   675,    -1,    -1,    -1,    -1,   136,    -1,    -1,    -1,
     140,   685,    -1,    -1,  4847,  4848,    -1,    -1,    -1,    -1,
      -1,   695,  4855,    -1,    -1,  4858,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,   480,  4869,    -1,    -1,    -1,
      -1,    -1,   172,    -1,    -1,  4878,    -1,    -1,    28,  4882,
     114,    -1,    -1,    -1,    -1,  2610,    36,   121,    -1,    -1,
     124,    -1,    42,  4896,    -1,    -1,  4899,    -1,    -1,    -1,
      -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,  4914,  4915,    -1,    -1,    -1,    66,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,   776,  4936,    -1,  4938,    -1,  5390,  4941,   239,
    4943,   241,    -1,    -1,    -1,   179,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   802,    -1,
    4963,    -1,    -1,    -1,  2689,  4968,    28,    -1,    -1,  4972,
    2695,    -1,  4975,    -1,    36,    -1,    -1,    -1,    -1,  4982,
      42,    -1,    -1,    -1,  4987,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5005,    -1,    66,   239,   306,   241,    -1,     8,
     310,    -1,    11,    -1,    -1,    -1,   316,   251,    -1,    -1,
     170,  5024,    -1,   323,   174,   259,    -1,    -1,    -1,    28,
      -1,   331,    -1,    -1,    -1,   269,    -1,    36,    -1,    -1,
     340,    -1,    -1,    42,    -1,   195,   196,    -1,   348,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,    -1,
      -1,    -1,   212,  5066,  5067,  5068,  5069,    66,   302,    -1,
      -1,   305,   306,    -1,    -1,    -1,    -1,    -1,  5081,    -1,
     924,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,   936,    -1,   244,    -1,    -1,   331,    -1,  5102,
     400,    -1,    -1,   947,   404,    -1,    -1,   257,   170,    -1,
     260,    -1,   174,    -1,    -1,    -1,    -1,    -1,  5121,    -1,
      -1,    -1,    -1,    -1,    -1,   425,   970,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,  5138,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,    -1,    -1,    -1,   454,   389,    -1,  1001,    -1,  5162,
      -1,    -1,  5165,    -1,  1008,    -1,    -1,  1011,    -1,    -1,
     470,   170,    -1,    -1,    -1,   174,  5179,    -1,  5181,   241,
    5183,    -1,   244,    -1,    -1,   335,    -1,    -1,  5191,    -1,
    5193,    -1,    -1,    -1,    -1,   257,   195,   196,   260,    -1,
      -1,  1045,   436,   437,  5207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,  1061,  1062,    -1,
       8,    -1,  1066,    11,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1075,    -1,    -1,  2959,  2960,  2961,    -1,    -1,    -1,
      28,    -1,   241,    -1,    -1,   244,   480,    -1,    36,    -1,
      -1,    -1,  5255,    -1,    42,    -1,    -1,  5260,   257,  1103,
      -1,   260,    -1,    -1,    -1,    -1,    -1,  1111,    -1,  1113,
      -1,    -1,    -1,   335,    -1,    -1,  5279,    -1,    66,    -1,
      -1,    -1,  1126,    -1,    -1,  1129,    -1,    -1,  5291,  5292,
      -1,    -1,    -1,  5296,    -1,    -1,    -1,  1141,  5301,    -1,
      -1,  5304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3034,
      -1,    -1,  3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,
      -1,    -1,    -1,  5326,    -1,    -1,  1170,    -1,    -1,    -1,
      -1,    -1,  5335,    -1,    -1,    -1,   335,    -1,    -1,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,    -1,    -1,    -1,    -1,   507,  5361,  1203,
    1204,    -1,  1206,    -1,    -1,    -1,    -1,    -1,    -1,  3094,
      -1,    -1,  5375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1225,   170,    -1,    -1,    -1,   174,    -1,    -1,  5392,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5402,
      -1,    -1,    -1,    -1,    -1,  1249,    -1,   195,   196,    -1,
      -1,    -1,    -1,  1257,  1258,  3140,    -1,    -1,    -1,    -1,
      -1,    -1,  1266,  1267,   212,    -1,    -1,    -1,    -1,    -1,
      -1,   493,   494,   495,    -1,   497,   498,   499,   500,   501,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,  1301,  5461,    -1,
      -1,  1305,  1306,    -1,    -1,    -1,    -1,    -1,    -1,   257,
      -1,    -1,   260,    -1,    -1,    -1,    -1,  1321,    -1,    -1,
      -1,    -1,    -1,  1327,    -1,    -1,    -1,  5490,    -1,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,    -1,    -1,    -1,    -1,   507,    -1,
    3235,     8,  3237,    -1,    11,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    28,    -1,    -1,    -1,    -1,  5539,  1381,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    42,    -1,   335,    -1,    -1,
    5553,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    66,
      -1,    -1,    -1,    -1,  3299,    -1,    -1,    -1,  1422,    -1,
      -1,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    36,
    5593,    -1,    -1,    -1,    -1,    42,    -1,    -1,  5601,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5614,    -1,     8,    -1,    -1,    11,    -1,  3343,    66,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    28,    -1,  1479,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,    -1,  3377,    -1,    -1,    -1,    -1,    -1,    -1,  1503,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    66,    -1,   170,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1541,   195,   196,
      -1,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,   212,    -1,  1561,    -1,   507,
      -1,  3446,  1566,   170,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1581,     8,    -1,
      -1,    11,  3467,    -1,   241,    -1,    -1,   244,   195,   196,
      -1,    -1,    -1,  1597,  3479,    -1,    -1,    -1,    28,    -1,
     257,    -1,    -1,   260,    -1,   212,    36,    -1,    -1,    -1,
      -1,    -1,    42,    -1,    -1,   170,    -1,    -1,    -1,   174,
    1624,    -1,    -1,    -1,    -1,    -1,  1630,    -1,    -1,    -1,
    1634,    -1,  1636,  1637,   241,    -1,    66,   244,    -1,    -1,
     195,   196,    -1,  1647,    -1,    -1,    -1,    -1,    -1,    -1,
     257,    -1,    -1,   260,    -1,  1659,  1660,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,  1673,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,  3572,    -1,   244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1705,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3600,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1741,    -1,  1743,
     170,    -1,    -1,    -1,   174,    -1,  1750,    -1,    -1,  1753,
      -1,    -1,    -1,  1757,    -1,    -1,    -1,  3642,    -1,    -1,
      -1,  1765,  1766,    -1,    -1,   195,   196,    -1,    -1,  1773,
      -1,    -1,  1776,  1777,  1778,  1779,    -1,    -1,    -1,    -1,
     335,    -1,   212,  1787,  1788,    -1,  1790,    -1,  1792,  1793,
      -1,    -1,  1796,    -1,  1798,    -1,  1800,  1801,    -1,    -1,
      -1,    -1,    -1,  3688,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,  1817,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1828,  1829,    -1,   257,    -1,    -1,
     260,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,  3731,    -1,    -1,    -1,
     507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,    -1,    -1,   335,  1910,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3811,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1939,    -1,    -1,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,    -1,     8,    -1,  3843,    11,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1974,    -1,    -1,    -1,    -1,    -1,    28,    18,    -1,    -1,
      -1,    -1,    -1,    24,    36,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      18,    -1,    -1,    -1,    -1,    -1,    24,    -1,    49,    -1,
      -1,    -1,    -1,    28,    66,    -1,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    64,    -1,    -1,    -1,    42,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,
      -1,    66,    -1,    -1,    -1,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,   114,    -1,    -1,    -1,   507,    -1,    -1,
     121,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,
      -1,    -1,    -1,   121,    -1,    -1,   124,    -1,    -1,  2113,
    2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,   170,  2123,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2134,  2135,    -1,    -1,    -1,   176,    -1,    -1,   179,    -1,
    4025,    -1,    -1,   195,   196,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,   174,
     212,   179,    -1,    -1,    -1,    28,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,  4061,    -1,    -1,    42,
     195,   196,  4067,   224,    -1,    -1,    -1,    -1,   229,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,   212,   239,    -1,
     241,    -1,    -1,    66,    -1,   257,    -1,    -1,   260,    -1,
     251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   259,    -1,
      -1,   239,    -1,   241,    -1,    -1,   241,   268,   269,   244,
      -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   259,   257,    -1,    -1,   260,    -1,    -1,    -1,   112,
      -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   302,    -1,    -1,   305,   306,   307,  2271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   335,   302,    -1,  2290,   305,   306,    -1,
     331,    -1,    -1,    -1,    -1,  2299,  2300,  4182,    -1,    -1,
      -1,   342,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,   174,  4197,   331,    -1,    -1,    -1,    -1,    -1,    -1,
     335,    -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,    -1,
     371,    -1,   195,   196,    -1,    -1,  2340,    -1,    -1,    -1,
    2344,  2345,    -1,    -1,  2348,    -1,    -1,    -1,   389,   212,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4247,    -1,    -1,    -1,  2370,  4252,    -1,  2373,
      -1,   389,  4257,    -1,    -1,    -1,    -1,    -1,   241,    -1,
    2384,   244,    -1,    -1,    -1,    -1,    -1,  2391,    -1,    -1,
      -1,    -1,    -1,    -1,   257,   436,   437,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2415,    -1,    -1,    -1,    -1,    -1,    -1,   436,   437,
      -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,    -1,    -1,
      -1,  2435,  2436,    -1,    -1,    -1,    -1,    -1,    -1,   480,
    2444,   493,   494,   495,    -1,   497,   498,   499,   500,   501,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,    -1,    -1,
      -1,    -1,   480,  2467,  2468,    -1,    -1,    -1,  2472,    -1,
      -1,    -1,   335,    -1,    -1,    -1,    -1,  4362,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,    -1,    -1,
     505,    -1,   200,    -1,    -1,    -1,    -1,    -1,   206,    -1,
      -1,    -1,    -1,  2507,    -1,    -1,    -1,  2511,    -1,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4402,    -1,    -1,
      -1,    -1,    -1,   386,    -1,  2529,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2540,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2553,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
    2564,    -1,    11,    -1,    -1,    -1,    -1,  2571,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2608,    -1,  2610,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    66,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2631,    -1,    -1,
     493,   494,   495,    -1,   497,   498,   499,   500,   501,   502,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,    -1,
      -1,    -1,    -1,    -1,    -1,  2689,    36,    -1,    -1,    -1,
      -1,  2695,    42,    -1,    -1,  2699,    -1,    -1,    -1,    -1,
     149,  4586,    -1,    -1,    -1,   154,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    66,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
    2734,    28,    -1,    -1,    -1,  2739,    -1,    -1,  4623,    36,
      -1,    -1,    -1,    -1,    -1,    42,   195,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,  2770,    -1,    -1,    66,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2793,
      -1,    -1,   241,  2797,    -1,   244,    -1,    -1,    -1,  2803,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,
      -1,   260,    -1,    -1,    -1,    -1,    -1,  2821,  2822,    -1,
     170,    -1,    -1,  2827,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,  2852,  2853,
      -1,   148,    -1,  2857,  4739,    -1,    -1,  4742,    -1,  4744,
      -1,    -1,   212,    -1,    -1,    -1,    -1,  2871,  2872,  2873,
    2874,  4756,    -1,   170,    -1,  2879,    -1,   174,    -1,    -1,
      -1,  2885,  2886,    -1,  2888,  4770,   335,    -1,    -1,    -1,
    2894,   241,    -1,    -1,   244,    -1,    -1,    -1,   195,   196,
    2904,  2905,    -1,    -1,  2908,    -1,    -1,   257,    -1,   617,
     260,    -1,    -1,   621,    -1,   212,    -1,  2921,    -1,  2923,
      -1,    -1,    -1,  2927,   632,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2946,    -1,   241,    -1,   654,   244,    -1,    -1,
      -1,    -1,  2956,    -1,    -1,  2959,  2960,  2961,    -1,    -1,
     257,    -1,   670,   260,    -1,    -1,    -1,   675,    -1,  2973,
      -1,    -1,  2976,    -1,    -1,    -1,    -1,   685,    -1,    -1,
      -1,   278,    -1,    -1,    -1,   335,    -1,   695,  2992,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   349,
      -1,    -1,    -1,  3007,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3019,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4912,    -1,    -1,
    3034,    -1,  4917,  3037,    -1,  3039,    -1,    -1,   335,    -1,
    3044,    -1,  3046,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,  4939,    -1,    -1,  3061,  3062,    -1,
      -1,    -1,    -1,  3067,    -1,    -1,    -1,    -1,   776,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3088,    -1,    -1,  3091,    -1,    -1,
    3094,    -1,  4977,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,
      -1,    -1,   970,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5052,    -1,    -1,
      -1,  5056,  5057,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3190,  3191,  3192,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,   924,    -1,    -1,    -1,
      -1,    -1,  3226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3235,    28,  3237,  3238,    31,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    -1,  3249,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5145,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1111,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    36,  1001,    -1,  3299,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,
      -1,    24,    -1,    -1,    -1,    -1,  5201,  5202,    -1,    -1,
      -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3337,    -1,    -1,    -1,  1045,    -1,  3343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    64,    -1,  1061,  1062,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1075,    -1,    -1,
      -1,    -1,  3376,  3377,   170,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3391,    -1,  3393,
      -1,    -1,    -1,    -1,    -1,  1103,    -1,    -1,    -1,   195,
     196,   114,    -1,    -1,  3408,  1113,  3410,    -1,   121,    -1,
      -1,   124,    -1,    -1,    -1,    -1,   212,    -1,  1126,    -1,
      -1,  1129,    -1,    -1,  1252,    -1,   170,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3446,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   257,  3466,  3467,   260,    -1,   179,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,  3479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,  3495,    -1,  1321,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,  3506,    -1,    28,  3509,    -1,    31,    -1,    -1,
      -1,    -1,    36,   257,    -1,    -1,   260,    -1,    42,    -1,
      -1,    -1,    -1,    -1,  3528,    -1,   239,  3531,   241,    -1,
      -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,   251,   335,
      -1,  1249,    66,    -1,    -1,  3549,   259,    -1,  3552,  1257,
    1258,    -1,    -1,  1381,    -1,  3559,   269,    -1,    -1,  1267,
      -1,  3565,    -1,  3567,    -1,    -1,    -1,    -1,  3572,  3573,
      -1,    -1,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,    -1,    -1,    -1,  3589,  3590,    -1,    -1,   302,
      -1,   335,   305,   306,  1422,    -1,  3600,    -1,    -1,    -1,
      -1,  3605,    -1,    -1,    -1,  3609,  3610,    -1,  3612,    -1,
    3614,    -1,    -1,    -1,    -1,  3619,    -1,    -1,   331,  1327,
      -1,    -1,    -1,    -1,    -1,  3629,    -1,    -1,  3632,    -1,
    3634,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3642,  3643,
    3644,  3645,    -1,    -1,    -1,  3649,   170,    -1,  3652,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,  3666,    -1,   200,  3669,    -1,    -1,    -1,    -1,
     206,   195,   196,    -1,    -1,  1503,   389,  3681,    -1,    -1,
      -1,   217,    -1,  3687,  3688,    -1,  5571,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,  3713,
      -1,    -1,    -1,  1541,    -1,  3719,    -1,   241,    -1,    -1,
     244,  3725,    -1,   436,   437,    -1,    -1,  3731,    -1,    -1,
      -1,    -1,    -1,   257,    -1,    -1,   260,    -1,  1566,    -1,
      -1,    -1,    -1,  3747,    -1,    -1,    -1,    -1,    -1,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,    -1,
      -1,  1479,    -1,    -1,  3778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3797,  3798,  3799,  3800,    -1,    -1,    -1,
      -1,    -1,  1630,    -1,    -1,    -1,    -1,  3811,    -1,    -1,
      -1,   335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3836,    -1,    -1,    -1,    -1,    -1,  3842,  3843,
    3844,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3852,    -1,
      -1,    -1,    -1,  1561,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1581,    28,    -1,    -1,    -1,  3882,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    42,  1597,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3904,    -1,    -1,  3907,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,  1636,  1637,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1647,
      -1,    -1,    28,    -1,    -1,    31,    -1,    -1,    -1,  3953,
      36,  1659,  1660,    -1,    -1,    -1,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1673,    -1,    -1,    -1,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,    -1,
      66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1817,
      -1,    -1,  3996,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     154,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   170,  4021,  4022,    -1,
     174,  4025,    -1,    28,  4028,    -1,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4061,   212,    -1,
      -1,    66,    -1,  4067,  4068,  4069,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,   617,    11,    -1,   170,   621,    -1,   241,   174,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   632,    -1,    -1,    28,
      -1,    -1,    -1,   257,    -1,  4109,   260,    36,    -1,   195,
     196,    -1,    -1,    42,    -1,    -1,    -1,    -1,   654,    -1,
      -1,  1829,    -1,    -1,    -1,  4129,   212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   670,    -1,    -1,    66,    -1,   675,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   685,
      -1,    -1,    -1,    -1,  4158,   241,    -1,    -1,   244,   695,
      -1,    -1,    -1,    -1,  4168,   170,    -1,    -1,    -1,   174,
      -1,   257,    -1,    -1,   260,  4179,  4180,    -1,  4182,    -1,
    4184,   335,    -1,    -1,    -1,    -1,    -1,  4191,  4192,    -1,
     195,   196,  4196,  4197,    -1,    -1,    -1,    -1,  4202,  4203,
      -1,    -1,  4206,    -1,    -1,  4209,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4231,    -1,    -1,
      -1,  4235,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,
     776,   170,    -1,  4247,    -1,   174,    -1,    -1,  4252,   335,
      -1,    -1,   257,  4257,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,  4291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,  4325,    -1,    -1,    -1,    -1,  4330,  4331,   257,    -1,
     335,   260,    -1,    -1,    -1,    -1,  4340,    -1,    -1,   493,
     494,   495,  4346,   497,   498,   499,   500,   501,   502,  4353,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4362,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   924,    -1,
      -1,    -1,    -1,  4397,    -1,    -1,    -1,    -1,  4402,    -1,
      -1,    -1,    -1,    -1,    -1,  4409,   335,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4432,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1001,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,  2326,    -1,
      -1,    -1,  2330,  2331,    -1,    -1,    -1,    -1,    -1,  1045,
      -1,    -1,    -1,    -1,    -1,    -1,  4520,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1061,  1062,  4531,    18,    -1,
      -1,    -1,    -1,    -1,    24,    -1,    -1,    -1,    -1,  1075,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,  1103,   497,   498,
     499,   500,   501,   502,    64,    -1,    -1,  1113,    -1,    -1,
      -1,    -1,  4586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1126,    -1,    -1,  1129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4619,  2444,    -1,    -1,  4623,
      -1,    -1,    -1,    -1,   114,    -1,  4630,    -1,    -1,    -1,
      -1,   121,  2340,    -1,   124,    -1,  2344,  2345,  4642,    -1,
    2348,    -1,    -1,    -1,    -1,    -1,    -1,  4651,  4652,    -1,
      -1,  4655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2370,    -1,  4668,    -1,    -1,    -1,    -1,    -1,
    4674,    -1,    -1,    -1,    -1,  4679,    -1,    -1,  4682,    -1,
      -1,    -1,    -1,  4687,  4688,    -1,    -1,    -1,    -1,   179,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4706,    -1,  4708,    -1,    -1,  2415,  4712,    -1,
      -1,    -1,    -1,  1249,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1257,  1258,    -1,    -1,    -1,    -1,  2435,  2436,    -1,
      -1,  1267,  4736,    -1,    -1,  4739,    -1,  4741,  4742,    -1,
    4744,    -1,    -1,    -1,    -1,    -1,  4750,    -1,    -1,   239,
      -1,   241,  4756,    -1,    -1,    -1,    -1,    -1,    -1,  2467,
    2468,   251,    -1,    -1,  2472,    -1,  4770,    -1,    -1,   259,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,
      -1,    18,  2610,    -1,    -1,  4789,    -1,    24,    -1,    -1,
      -1,  1327,    -1,    -1,  4798,    -1,    -1,    -1,    -1,  2507,
      -1,    -1,    -1,  2511,    -1,    -1,  4810,    -1,    -1,    -1,
      -1,    -1,   302,    -1,    -1,   305,   306,    -1,    -1,    -1,
      -1,  2529,    -1,    -1,    -1,    -1,    -1,    64,    -1,    -1,
      -1,    -1,  2540,  4837,    -1,  4839,    -1,    -1,    -1,    -1,
      -1,   331,    -1,    -1,    -1,  2553,    -1,    -1,    -1,    -1,
      -1,  4855,    -1,    -1,    -1,    -1,  2564,    -1,    -1,    -1,
      -1,  2689,    -1,  2571,    -1,    -1,    -1,  2695,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   114,    -1,    -1,
      -1,   371,    -1,    -1,   121,    -1,    -1,   124,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   389,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4912,    -1,
      -1,  4915,    -1,  4917,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2631,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4936,    -1,  4938,  4939,    -1,  4941,    -1,  4943,
      -1,    -1,   179,  1479,    -1,    -1,   436,   437,    -1,    -1,
      -1,    -1,    -1,    -1,  2782,    -1,    -1,    -1,    -1,  4963,
      -1,    -1,    -1,    -1,  4968,    -1,    -1,    -1,  4972,    -1,
      -1,    -1,    -1,  4977,    -1,    -1,    -1,    -1,  4982,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     480,  2699,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   239,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
    5024,    -1,   259,    -1,    -1,  1561,  2734,  5031,    -1,    -1,
      -1,    -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1581,    -1,    -1,  5052,    -1,
      -1,    -1,  5056,  5057,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1597,  2770,    -1,    -1,   302,    -1,    -1,   305,   306,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2793,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,  5102,    -1,
    1636,  1637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1647,    -1,    -1,    -1,    -1,    -1,  5121,    -1,    -1,
      -1,    -1,    -1,  1659,  1660,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   371,    -1,    -1,  1673,    -1,    -1,
      -1,  5145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   389,    -1,    -1,    -1,    -1,    -1,  5162,    -1,
      -1,  5165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2879,    -1,    -1,    -1,  5179,    -1,  5181,  2886,  5183,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,   436,
     437,    -1,    -1,  5207,    -1,    -1,  3034,    -1,    -1,  3037,
      -1,  3039,    -1,    -1,    -1,    -1,  3044,    -1,    18,    -1,
      -1,    -1,    21,    -1,    24,    -1,    -1,    -1,    -1,    -1,
    5234,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   480,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    54,  5260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    64,  2973,  3094,    -1,    67,    -1,
      -1,    -1,    -1,    -1,    -1,  5279,    -1,    -1,    77,    -1,
      -1,    -1,    81,    -1,    -1,    -1,    -1,  5291,  5292,    -1,
      -1,    -1,    -1,  1829,    -1,    -1,    -1,  5301,    -1,    98,
      -1,    -1,  5306,    -1,    -1,   104,    -1,    -1,    -1,    -1,
      -1,    -1,  3140,    -1,   114,    -1,    -1,    -1,    -1,    -1,
     119,   121,  5326,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   131,    -1,    -1,    -1,     7,    -1,  3046,    -1,
     139,   140,    13,    14,    -1,    -1,    -1,    -1,    19,    -1,
      21,    -1,   151,  3061,  3062,    26,    -1,    28,    -1,   158,
      -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5375,    -1,    -1,    -1,    -1,    47,    -1,   177,   179,
    3088,    -1,    -1,  3091,    -1,    -1,    -1,    -1,  5392,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3235,    -1,  3237,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,  5422,    -1,
      -1,    18,    -1,    -1,   223,    -1,    -1,    24,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   239,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,    -1,    -1,    -1,    -1,    -1,   257,   259,
      -1,   260,    -1,    -1,    -1,    -1,    -1,    64,    -1,   269,
      -1,  3299,    -1,    -1,    -1,    -1,    -1,    -1,  5482,    -1,
      -1,    -1,  3190,  3191,  3192,    -1,  5490,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    -1,   295,    -1,  5502,    -1,
      24,    -1,   302,    -1,    -1,   305,   306,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,  3343,    -1,   114,  3226,    -1,
     319,    -1,    -1,    -1,   121,   196,   325,   124,    -1,   328,
    3238,   331,    -1,    -1,    -1,  5539,   207,   208,    -1,   210,
      64,  3249,   213,    -1,   215,    -1,    -1,    -1,   219,  3377,
      -1,    -1,    -1,    -1,    -1,   354,    -1,   356,   357,    -1,
     359,   360,    -1,    -1,    -1,    -1,  5570,  5571,  5572,   368,
      -1,   371,    -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,
     379,    -1,   179,   382,    -1,    -1,   385,    -1,    -1,   389,
     114,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,   398,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5613,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3446,    -1,
      -1,    -1,  5626,    -1,    -1,    -1,    -1,    -1,    -1,  3337,
      -1,    -1,    -1,    -1,    -1,    -1,   436,   437,    -1,  3467,
      -1,    -1,   239,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,  3479,    -1,    -1,   251,   179,    -1,    -1,    -1,   458,
      -1,    -1,   259,    -1,    -1,    -1,    -1,    -1,  3376,    -1,
     469,    -1,   269,    -1,   473,    -1,    -1,    -1,    -1,    -1,
     480,    -1,    -1,  3391,    -1,  3393,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3408,    -1,  3410,    -1,    -1,   302,    -1,    -1,   305,   306,
      -1,    -1,    -1,    -1,    -1,   239,    -1,   241,    -1,    -1,
      -1,    -1,    -1,    -1,  3552,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,    -1,   331,   259,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3572,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3466,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3600,    -1,   371,    -1,    -1,    -1,   302,    -1,
      -1,   305,   306,    -1,    -1,    -1,    -1,  3495,    -1,    -1,
      -1,    -1,   389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3509,    -1,    -1,  2340,    -1,    -1,   331,  2344,  2345,
      -1,    -1,  2348,    -1,  3642,    -1,    -1,    -1,    -1,    -1,
    3528,    -1,    -1,  3531,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2370,    -1,    -1,    -1,    -1,   436,
     437,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   389,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2415,
      -1,    -1,    -1,   480,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2435,
    2436,    -1,    -1,  3731,  3612,    -1,    -1,    -1,    21,    -1,
      -1,    -1,   436,   437,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2467,  2468,    -1,    -1,   606,  2472,    -1,    -1,    -1,
      -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   623,   624,    67,    -1,   480,   628,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,
      -1,  2507,    -1,   970,   645,  2511,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3811,    -1,    98,    -1,    -1,   659,    -1,
      -1,   104,    -1,  2529,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2540,   676,   119,    -1,   679,    -1,
     681,    -1,   683,    -1,    -1,  3843,    -1,  2553,   131,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   139,   140,  2564,    -1,
      -1,    -1,    -1,    -1,    -1,  2571,    -1,   771,   151,    -1,
      -1,    -1,    -1,   156,    -1,    -1,    -1,    -1,    -1,   162,
      -1,    -1,   723,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,   802,    -1,
    3778,    -1,    -1,    -1,    -1,   746,    -1,   748,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   202,
      -1,    -1,    -1,    -1,    -1,  2631,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     223,    -1,    -1,    -1,  1111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3836,    -1,
      -1,    -1,    -1,   804,  3842,    -1,  3844,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2699,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   286,  3882,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     970,    -1,    -1,   864,    -1,    -1,  3904,  4025,  2734,  3907,
     313,    -1,    -1,    -1,   317,    -1,   319,    -1,    -1,    -1,
      -1,    -1,   325,    -1,    -1,   328,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4061,  2770,    -1,    -1,    -1,    -1,  4067,
     353,   354,    -1,   356,    -1,  3953,    -1,   360,    -1,    -1,
      -1,    -1,   923,    -1,   925,   368,    -1,  2793,    -1,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   940,
      -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   953,    -1,    -1,   398,    -1,    -1,    -1,   960,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   972,    -1,    -1,   975,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4021,  4022,    -1,    -1,    -1,    -1,    -1,
    4028,    -1,    -1,    -1,  1321,    -1,    -1,    -1,    -1,  1000,
      -1,  1111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1012,    -1,  2879,    -1,    21,    -1,    -1,    -1,    -1,
    2886,    -1,    -1,   466,  4182,    -1,    -1,    33,    -1,    -1,
     473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4197,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    54,    -1,
      -1,    -1,    -1,    -1,  1381,    -1,    -1,    -1,    -1,  1060,
      -1,    67,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4109,    -1,    -1,    -1,    81,    -1,  1141,    -1,  1080,
      -1,  1082,    -1,  1084,    -1,  1086,    -1,  1088,  1089,  1090,
      -1,    -1,    98,    -1,  1095,  1422,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1170,  2973,    -1,    -1,
      -1,    -1,    -1,   119,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   139,   140,    -1,    -1,    -1,    -1,  1203,
    1204,    -1,  1206,    -1,    -1,   151,    -1,    -1,    -1,    -1,
     156,  4309,    -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,
      -1,  1225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   177,    -1,    -1,    -1,    -1,  1503,    -1,    -1,    -1,
    3046,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3061,  3062,    -1,    -1,    -1,
      -1,    -1,  1266,    -1,  4362,    -1,    -1,    -1,    -1,    -1,
      -1,  1321,    -1,    -1,  1541,    -1,    -1,   223,    -1,    -1,
      -1,    -1,  3088,    -1,    -1,  3091,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1301,    -1,  1566,
      -1,  1305,  1306,    -1,  4402,    -1,    -1,    -1,    -1,    -1,
      -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     286,    -1,    -1,    -1,  1285,    -1,    -1,  4325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4460,  1630,    -1,    -1,    -1,   313,    -1,    -1,
      -1,   317,  1422,   319,    -1,  4353,    -1,    -1,    -1,   325,
      -1,    -1,   328,    -1,  3190,  3191,  3192,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,
     356,    -1,    -1,  1354,   360,    -1,    -1,    -1,    -1,  4397,
    3226,    -1,   368,    -1,    -1,    -1,    -1,   373,    -1,    -1,
      -1,  4409,  3238,    -1,    -1,    -1,    -1,    -1,    -1,   385,
      -1,    -1,    -1,  3249,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   398,  1503,  4432,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1541,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1566,    -1,    -1,    -1,
     466,    -1,    -1,    -1,    -1,  4623,    -1,   473,    -1,    -1,
      -1,  3337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1817,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1630,    -1,    -1,    -1,    -1,  3391,    -1,  3393,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3408,    -1,  3410,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4606,  1570,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4739,    -1,    -1,  1585,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4756,    -1,
    3466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4770,    -1,    -1,  1616,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3495,
      -1,    -1,  1633,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3509,    -1,    -1,    -1,  1648,    -1,  1650,
      -1,  1652,    -1,    -1,    -1,    -1,  1657,    -1,    -1,    -1,
      -1,    -1,  3528,    -1,    -1,  3531,    -1,    -1,  4706,    -1,
    4708,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1682,    -1,  1684,    -1,  1686,  1750,  1688,    -1,  1690,
      -1,    -1,    -1,  1694,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1817,    -1,  1773,
      -1,    -1,  1776,    -1,    -1,  1779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1787,  1788,    -1,    -1,    -1,  1792,  1793,
      -1,    -1,  1796,    -1,  1798,    -1,    -1,  1801,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3612,    -1,    -1,    -1,
      -1,  4789,    -1,    -1,  4912,    -1,    -1,    -1,    -1,  4917,
      -1,    -1,    -1,    -1,  1828,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4810,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4939,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   970,    -1,    -1,    -1,    -1,  4837,
      -1,  4839,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4977,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1910,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1939,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5052,    -1,    -1,    -1,  5056,  5057,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1974,    -1,  3778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3836,    -1,    -1,    -1,    -1,    -1,  3842,    -1,  3844,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5031,    -1,    -1,    -1,    -1,    -1,  2326,
      -1,    -1,    -1,  2330,  2331,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3882,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3904,    -1,
      -1,  3907,    -1,  5201,  5202,    -1,    -1,    -1,    -1,  2113,
    2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,    -1,  2123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2134,  2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3953,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2444,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4021,  4022,    -1,    -1,    -1,
      -1,    -1,  4028,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1381,    -1,  2271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2326,    -1,    -1,    -1,
    2330,  2331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2299,  2300,    -1,    -1,    -1,
      -1,    -1,    -1,  4109,    -1,    -1,  1422,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5306,    -1,
      -1,    -1,    -1,    -1,    -1,  2276,  2277,    -1,    -1,    -1,
      -1,    -1,    -1,  2610,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1503,    -1,    -1,
      -1,    -1,    -1,    -1,  2444,    -1,    -1,    -1,    -1,    -1,
    2341,  2342,    -1,    -1,    -1,  2346,  2347,    -1,    -1,  2350,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2360,
      -1,    -1,  2689,    -1,    -1,  1541,  2367,    -1,  2695,    -1,
    2371,  2372,    -1,    -1,  2375,  2376,    -1,    -1,    -1,    -1,
      -1,  2382,    -1,    -1,  5422,    -1,    -1,    -1,    -1,    -1,
    1566,    -1,    -1,  2394,    -1,  2396,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5571,    -1,  2416,    -1,    -1,    -1,    -1,
    2421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2437,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5482,  2446,    -1,    -1,    -1,    -1,
    2451,  2452,  2453,  2454,  1630,  2782,    -1,    -1,    -1,  4325,
    2461,  2462,    -1,    -1,  5502,    -1,    -1,    -1,  2469,    -1,
      -1,    -1,    -1,  2474,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2482,    -1,    -1,    -1,    -1,    -1,  4353,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2610,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2523,    -1,  2525,    -1,    -1,    -1,    -1,  2530,
      -1,  4397,  5570,  2534,  5572,  2536,  2537,  2538,  2539,    -1,
    2541,    -1,    -1,  4409,  2608,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2554,  2555,    -1,  2557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4432,  2568,  2569,  2570,
      -1,    -1,    -1,    -1,    -1,  5613,    -1,    -1,    -1,  2689,
      -1,    -1,    -1,    -1,    -1,  2695,    -1,    -1,  5626,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     970,  1817,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2782,    -1,    -1,  2739,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3034,    -1,    -1,
    3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2822,    -1,
      -1,    -1,    -1,  2827,    -1,    -1,    -1,  3094,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1111,    -1,    -1,    -1,    -1,    -1,  2788,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,    -1,  2873,
    2874,    -1,    -1,  3140,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2885,    -1,    -1,  2888,    -1,    -1,    -1,    -1,    -1,
    2894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4706,    -1,  4708,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2921,    -1,  2923,
      -1,    -1,    -1,  2927,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2959,  2960,  2961,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3235,    -1,
    3237,    -1,  2976,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4789,  3034,    -1,    -1,  3037,  2992,  3039,
      -1,    -1,    -1,    -1,  3044,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3007,  4810,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4837,  3299,  4839,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3094,  2986,    -1,   970,    -1,    -1,
      -1,  1321,    -1,    -1,    -1,    -1,   970,    -1,    -1,    -1,
      -1,    -1,    -1,  3067,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3047,  3048,    -1,    -1,
    3377,  1381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3089,    -1,
      -1,    -1,  1422,    -1,    -1,    -1,    -1,  3098,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3113,  3114,    -1,    -1,    -1,  3118,    -1,  3446,
      -1,    -1,  3123,  3124,  3125,  3235,    -1,  3237,  1111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1111,    -1,    -1,
    3467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2326,    -1,  3479,    -1,  2330,  2331,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5031,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1503,    -1,    -1,    -1,    -1,    -1,    -1,
    3181,  3182,  3183,  3184,    -1,    -1,    -1,    -1,    -1,  3299,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1541,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3552,  3227,    -1,  3229,  3230,
    3231,    -1,    -1,  3343,    -1,    -1,  1566,    -1,  3239,    -1,
      -1,    -1,    -1,    -1,    -1,  3572,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3377,  2444,    -1,
      -1,    -1,    -1,  3600,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1630,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3312,    -1,    -1,    -1,  3642,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3446,  3338,  1321,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3467,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5234,  3479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3392,    -1,    -1,    -1,    -1,    -1,    -1,  1381,    -1,
      -1,    -1,    -1,    -1,  3731,    -1,    -1,  1381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2610,    -1,  3437,    -1,    -1,  1422,
    5306,  3442,  3552,    -1,    -1,    -1,    -1,    -1,  1422,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3572,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3480,
      -1,    -1,    -1,    -1,  3811,  3549,    -1,  1817,    -1,    -1,
    3600,    -1,    -1,  3494,    -1,  3559,    -1,    -1,    -1,    -1,
      -1,  3565,    -1,  3567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2689,    -1,    -1,  3843,    -1,    -1,  2695,
    1503,    -1,    -1,    -1,    -1,  3589,  3590,    -1,    -1,  1503,
      -1,    -1,  3642,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3609,    -1,    -1,    -1,    -1,
    3614,    -1,    -1,    -1,    -1,  3619,  5422,    -1,  1541,    -1,
      -1,    -1,    -1,    -1,    -1,  3629,    -1,  1541,  3632,    -1,
    3634,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3643,
      -1,    -1,    -1,  1566,    -1,  3649,    -1,    -1,  3652,    -1,
      -1,    -1,  1566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5482,  3681,    -1,    -1,
      -1,  3731,    -1,  3687,  3688,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5502,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1630,    -1,  3713,
      -1,    -1,    -1,    -1,    -1,  3719,  1630,    -1,    -1,    -1,
      -1,  3725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4025,    -1,
      -1,  3811,    -1,    -1,  5570,    -1,  5572,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3843,  4061,    -1,    -1,    -1,    -1,    -1,
    4067,    -1,    -1,    -1,    -1,    -1,    -1,  5613,    -1,    -1,
      -1,    -1,    -1,  3754,    -1,  3756,    -1,    -1,    -1,    -1,
    5626,    -1,  3763,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3779,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3795,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3808,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1817,    -1,    -1,    -1,    -1,  3840,
      -1,    -1,    -1,  1817,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4182,    -1,    -1,  3034,    -1,
      -1,  3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,    -1,
    4197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3891,  3892,  3893,    -1,    -1,  3896,  3897,  3898,  3899,  3900,
      -1,    -1,    -1,    -1,  3905,  3906,    -1,  3908,  3909,  3910,
    3911,  3912,  3913,  3914,    -1,  4025,    -1,    -1,  3094,    -1,
      -1,    -1,  3923,    -1,    -1,  3926,  3927,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4061,    -1,    -1,    -1,    -1,    -1,  4067,    -1,    -1,
      -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4309,    -1,    -1,    -1,    -1,    -1,    -1,  3990,
    3991,  3992,    -1,    -1,  3995,    -1,  2326,    -1,    -1,    -1,
    2330,  2331,    -1,    -1,  4068,  4069,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4362,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3235,
      -1,  3237,    -1,    -1,    -1,  4129,    -1,    -1,    -1,    -1,
      -1,    -1,  4182,    -1,    -1,  4402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4084,    -1,    -1,    -1,  4197,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2444,  4179,  4180,    -1,    -1,    -1,
    4184,    -1,    -1,  3299,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4196,  4460,    -1,    -1,    -1,    -1,  4202,  4203,
      -1,    -1,  4206,    -1,    -1,  4209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3343,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4247,    -1,    -1,    -1,    -1,  4252,    -1,
      -1,    -1,    -1,  4257,    -1,    -1,    -1,    -1,    -1,  4309,
      -1,  3377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4362,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2610,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3467,  4402,    -1,    -1,    -1,  4623,    -1,    -1,    -1,
      -1,    -1,    -1,  3479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4320,
    4321,  4322,  4323,    -1,    -1,  4326,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,
    4460,    -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,  2689,
      -1,    -1,    -1,    -1,    -1,  2695,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4393,  4394,  4395,  4396,  3572,  4398,  4399,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4410,
    4411,    -1,  4739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3600,    -1,    -1,    -1,    -1,  4756,
      -1,    -1,  4433,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2782,    -1,    -1,    -1,  4520,    -1,    -1,    -1,
      -1,  2444,    -1,    -1,    -1,    -1,  3642,    -1,    -1,    -1,
    2444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4540,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4549,    -1,
      -1,    -1,    -1,    -1,    -1,  3731,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4642,    -1,
      -1,    -1,    -1,    -1,    -1,  4912,    -1,    -1,    -1,    -1,
    4917,  4655,    -1,    -1,    -1,    -1,  4597,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4939,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4687,  4688,    -1,    -1,  2610,    -1,  4739,
      -1,    -1,    -1,    -1,    -1,  3811,  2610,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4756,    -1,    -1,    -1,
    4977,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4770,    -1,    -1,    -1,    -1,    -1,    -1,  3843,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4742,    -1,
    4744,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4697,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3034,    -1,  2689,  3037,    -1,  3039,
      -1,    -1,  2695,    -1,  3044,  2689,    -1,    -1,    -1,    -1,
      -1,  2695,    -1,    -1,    -1,  5052,    -1,    -1,    -1,  5056,
    5057,    -1,    -1,    -1,    -1,  1219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4753,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3094,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4790,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1281,    -1,  2782,
      -1,    -1,  4912,    -1,    -1,    -1,    -1,  4917,  2782,    -1,
    3140,    -1,    -1,    -1,    -1,    -1,  4817,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4939,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4025,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4977,    -1,    -1,
      -1,    -1,  4936,    -1,  5201,  5202,    -1,  4941,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4061,    -1,    -1,    -1,    -1,
      -1,  4067,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4963,
      -1,    -1,    -1,    -1,  4968,  3235,    -1,  3237,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4982,    -1,
      -1,    -1,  4923,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5052,    -1,    -1,    -1,  5056,  5057,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3299,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4182,    -1,  5009,    -1,
      -1,    -1,    -1,  3343,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3377,    -1,    -1,
    5051,  3034,    -1,    -1,  3037,    -1,  3039,  5121,    -1,    -1,
    3034,  3044,    -1,  3037,    -1,  3039,    -1,    -1,    -1,    -1,
    3044,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5201,  5202,    -1,    -1,    -1,    -1,    -1,  5162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3094,    -1,    -1,    -1,    -1,  3446,    -1,    -1,  5183,
    3094,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4309,    -1,    -1,    -1,  3467,    -1,    -1,
      -1,    -1,    -1,  5207,    -1,    -1,    -1,    -1,  5149,  3479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1669,  4362,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5200,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3552,  5224,    -1,    -1,  4402,  5291,  5292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5301,    -1,    -1,
      -1,    -1,  3572,    -1,  5571,    -1,    -1,    -1,  5249,    -1,
      -1,    -1,  3235,  5254,  3237,    -1,    -1,    -1,    -1,    -1,
      -1,  3235,    -1,  3237,  1748,    -1,    -1,    -1,    -1,    -1,
    3600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,  1772,    -1,
      -1,    -1,    -1,  1777,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5375,  3642,    -1,    -1,    -1,  3299,    -1,  1802,  1803,
      -1,    -1,  1806,    -1,  5325,  3299,    -1,    -1,  5392,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3377,    -1,    -1,    -1,    -1,    -1,
      -1,  3731,    -1,  3377,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5490,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4623,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5571,    -1,  3446,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3811,    -1,    -1,  3467,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3467,    -1,    -1,  3479,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3843,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4739,    -1,    -1,    -1,    -1,    -1,  3552,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,
    4756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3572,
      -1,    -1,    -1,    -1,  4770,    -1,    -1,    -1,  3572,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3600,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3600,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2131,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3642,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3642,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2167,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4025,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4061,    -1,    -1,    -1,    -1,  4912,  4067,    -1,    -1,
      -1,  4917,    -1,    -1,    -1,    -1,    -1,    -1,  3731,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3731,    -1,    -1,
      -1,    -1,    -1,  4939,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4977,  2286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2298,    -1,    -1,    -1,    -1,  2303,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3811,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3811,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4182,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3843,    -1,    -1,    -1,    -1,    -1,    -1,  4197,    -1,  3843,
      -1,    -1,    -1,    -1,    -1,    -1,  5052,    -1,    -1,    -1,
    5056,  5057,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5201,  5202,    -1,    -1,    -1,
      -1,    -1,  4362,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4402,    -1,    -1,    -1,    -1,    -1,  4061,    -1,
      -1,    -1,    -1,    -1,  4067,    -1,    -1,  4061,    -1,    -1,
      -1,    -1,    -1,  4067,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4182,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4182,    -1,
      -1,    -1,    -1,    -1,  4197,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4197,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,    -1,
      -1,  2825,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2848,    -1,  2850,    -1,  2852,  2853,
    2854,    -1,    -1,  2857,    -1,    -1,    -1,  2861,    -1,  4362,
      -1,    -1,    -1,    -1,    -1,    -1,  2870,    -1,  4362,    -1,
      -1,  2875,    -1,    -1,    -1,  5571,  2880,    -1,  2882,    -1,
      -1,    -1,    -1,  2887,    -1,  2889,    -1,    -1,  2892,  4739,
      -1,    -1,    -1,    -1,    -1,    -1,  2900,    -1,    -1,  4402,
    2904,  2905,    -1,  2907,    -1,    -1,  4756,    -1,  4402,    -1,
      -1,    -1,    -1,    -1,    -1,  2919,    -1,    -1,    -1,    -1,
    4770,    -1,  2926,    -1,  2928,  2929,  2930,  2931,  2932,  2933,
    2934,  2935,  2936,  2937,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4460,    -1,    -1,
      -1,  2965,    -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4912,    -1,    -1,    -1,    -1,  4917,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3082,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4939,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4623,    -1,    -1,    -1,    -1,    -1,    -1,  4977,    -1,  4623,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5052,    -1,    -1,    -1,  5056,  5057,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4739,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4739,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4756,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4756,    -1,    -1,    -1,    -1,  4770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5201,  5202,    -1,    -1,    -1,    -1,    -1,  3362,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4912,
      -1,    -1,    -1,    -1,  4917,    -1,    -1,    -1,  4912,    -1,
      -1,    -1,    -1,  4917,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4939,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4939,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4977,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4977,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3547,    -1,    -1,    -1,    -1,    -1,  5052,
    3554,    -1,    -1,  5056,  5057,    -1,    -1,    -1,  5052,    -1,
      -1,    -1,  5056,  5057,    -1,    -1,  3570,  3571,    -1,  3573,
      -1,    -1,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,  3586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3615,    -1,    -1,  3618,    -1,    -1,    -1,    -1,    -1,
      -1,  3625,    -1,    -1,    -1,    -1,  3630,  3631,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3644,  3645,  3646,    -1,  3648,    -1,    -1,  3651,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3695,    -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3744,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3996,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5571,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5571,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4130,    -1,    -1,    -1,
    4134,  4135,  4136,    -1,    -1,  4139,    -1,    -1,    -1,    -1,
    4144,  4145,  4146,  4147,  4148,  4149,  4150,  4151,  4152,  4153,
    4154,  4155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4169,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4183,
      -1,    -1,    -1,    -1,    -1,    -1,  4190,  4191,  4192,  4193,
      -1,  4195,    -1,    -1,    -1,  4199,  4200,  4201,    -1,    -1,
    4204,    -1,    -1,  4207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4249,    -1,    -1,    -1,    -1,
      -1,    -1,  4256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4523,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4583,
    4584,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4615,    -1,    -1,    -1,  4619,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4635,    -1,  4637,    -1,    -1,    -1,    -1,    -1,  4643,
      -1,    -1,  4646,  4647,  4648,    -1,    -1,  4651,  4652,  4653,
    4654,    -1,  4656,    -1,    -1,  4659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4669,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4861,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4937,  4938,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4952,    -1,
    4954,  4955,  4956,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4985,  4986,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5153,
    5154,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5168,    -1,    -1,  5171,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5259,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5378,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5455,    14,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   507,    14,    15,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,   507,
      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,   498,   499,    -1,    -1,    -1,    -1,
      -1,    -1,   506,   507,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,   507,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,   498,     3,    -1,    -1,    -1,    -1,
      -1,    -1,   506,   507,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,
      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    -1,
      -1,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    -1,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,    -1,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,    -1,   210,   211,   212,    -1,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,    -1,    -1,   242,   243,
     244,   245,    -1,    -1,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,    -1,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,
     374,    -1,   376,   377,    -1,    -1,   380,   381,   382,   383,
     384,    -1,    -1,   387,   388,   389,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,    -1,   477,   478,     3,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,   507,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    -1,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,    -1,   210,   211,   212,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,    -1,    -1,   242,   243,   244,   245,    -1,    -1,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
      -1,    -1,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,    -1,
     368,    -1,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,    -1,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,    -1,   477,
     478,    -1,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
       4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,   507,
      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,    -1,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
      -1,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,    -1,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,    -1,   268,   269,   270,   271,   272,   273,
     274,   275,   276,    -1,   278,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,    -1,
      -1,    -1,   506,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    33,    34,    -1,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    -1,    69,
      70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   506,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    -1,    69,    70,    71,    72,    73,    74,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     506,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,   498,    -1,    -1,    -1,
      -1,    -1,   504,   505,   506,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
     498,   499,    -1,    -1,    -1,    -1,    -1,    -1,   506,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,   498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   506,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    33,    34,    -1,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    -1,    69,
      70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   506,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    -1,    69,    70,    71,    72,    73,    74,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     506,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,   498,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   506,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
     498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,   498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   506,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    33,    34,    -1,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    -1,    69,
      70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   506,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    -1,    69,    70,    71,    72,    73,    74,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     506,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,   498,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   506,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
     498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,   209,   210,   211,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,   498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   506,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    33,    34,    -1,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    -1,    69,
      70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   506,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    -1,    69,    70,    71,    72,    73,    74,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     506,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,   498,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   506,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,    -1,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
     498,    -1,    -1,     3,     4,     5,     6,     7,   506,     9,
      10,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    33,    34,    -1,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    -1,    69,
      70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,    -1,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   506,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    -1,    69,    70,    71,    72,    73,    74,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,    -1,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,    -1,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,   379,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,   498,    -1,    -1,     3,     4,     5,     6,     7,
     506,     9,    10,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,    -1,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,    -1,     9,    10,    -1,    -1,   506,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,   506,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,    -1,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
      -1,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,    -1,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,    -1,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,   498,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   506,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    67,
      -1,    69,    70,    71,    72,    73,    74,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,    -1,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,    -1,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,    -1,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,   497,
     498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,   256,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   506,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
      -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,    -1,
     242,   243,   244,   245,    -1,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,   256,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,    -1,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,    -1,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,    -1,   376,   377,    -1,    -1,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   506,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    67,    -1,    69,    70,    71,    72,    73,    74,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,    -1,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,   210,   211,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,    -1,   242,   243,   244,   245,
      -1,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,    -1,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,    -1,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,    -1,
     376,   377,    -1,    -1,   380,   381,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,     4,     5,     6,     7,    -1,     9,    -1,    -1,    -1,
     506,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   498,     3,     4,     5,     6,
       7,    -1,     9,   506,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   498,     3,     4,     5,     6,     7,    -1,     9,   506,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,     3,     4,
       5,    -1,    -1,    -1,     9,   506,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,   497,   498,   499,    -1,    -1,    -1,    -1,    -1,
      -1,   506,    14,    15,    16,    17,    18,    19,    20,    21,
      -1,    23,    24,    25,    26,    27,    -1,    -1,    -1,    -1,
      -1,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    -1,    -1,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    -1,    67,    -1,    69,    70,    71,
      72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,
      -1,    -1,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,    -1,   105,    -1,   107,   108,   109,   110,   111,
      -1,   113,   114,   115,    -1,    -1,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,    -1,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,   139,   140,   141,
      -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,    -1,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,    -1,
     242,   243,   244,   245,    -1,   247,   248,   249,   250,   251,
     252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,    -1,   276,   277,    -1,   279,   280,   281,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,    -1,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,    -1,   376,   377,    -1,    -1,   380,   381,
     382,   383,   384,    -1,    -1,   387,   388,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,    -1,
      -1,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,   431,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   506,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,    14,    15,
      16,    17,    18,    19,    20,    21,    -1,    23,    24,    25,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,
      36,    37,    -1,    39,    40,    41,    42,    43,    -1,    45,
      46,    -1,    48,    49,    50,    51,    52,    -1,    -1,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,    75,
      76,    -1,    78,    79,    80,    81,    82,    83,    -1,    -1,
      86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,    -1,   105,
      -1,   107,   108,   109,   110,   111,    -1,   113,   114,   115,
      -1,    -1,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,    -1,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,   139,   140,   141,    -1,   143,    -1,   145,
     146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,
     156,   157,   158,    -1,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,    -1,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,    -1,   194,    -1,
      -1,   197,    -1,   199,   200,   201,   202,   203,    -1,   205,
     206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,
     216,    -1,    -1,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
      -1,   237,   238,   239,   240,    -1,   242,   243,    -1,   245,
      -1,   247,   248,   249,   250,   251,   252,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,    -1,   331,   332,   333,   334,    -1,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,    -1,
     376,   377,    -1,    -1,   380,   381,   382,   383,   384,    -1,
      -1,   387,   388,   389,   390,   391,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,   431,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     506,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,   256,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   506,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   506,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,
      14,    15,    16,    17,    18,    19,    20,    21,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      34,    -1,    36,    37,    -1,    39,    40,    41,    42,    43,
      -1,    45,    46,    -1,    48,    49,    50,    51,    52,    -1,
      -1,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    -1,    -1,    -1,    69,    70,    71,    72,    73,
      -1,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,   137,   138,   139,   140,   141,    -1,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,
      -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,    -1,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,    -1,    -1,   197,    -1,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,    -1,   237,   238,   239,   240,    -1,   242,   243,
      -1,   245,    -1,   247,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
      -1,   265,    -1,   267,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,    -1,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,    -1,   376,   377,    -1,    -1,   380,   381,   382,   383,
     384,    -1,    -1,   387,   388,   389,   390,   391,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   506,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,   506,    14,    15,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,    -1,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,   274,   275,   276,    -1,
     278,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,    -1,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,    -1,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    25,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,
      -1,    39,    40,    41,    42,    43,    -1,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    -1,    -1,
      -1,    69,    70,    71,    72,    73,    -1,    75,    76,    -1,
      78,    79,    80,    81,    82,    83,    -1,    -1,    86,    87,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,   113,   114,   115,    -1,    -1,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,   139,   140,   141,    -1,   143,    -1,   145,   146,   147,
      -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,
      -1,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,    -1,   242,   243,    -1,   245,    -1,   247,
     248,   249,   250,   251,   252,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,    -1,   325,   326,   327,
     328,   329,    -1,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,    -1,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
      -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,   387,
     388,   389,   390,   391,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,     3,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    14,    15,    16,    17,
      18,    19,    20,    21,    -1,    23,    24,    -1,    -1,    -1,
      28,    -1,    -1,    31,    -1,    33,    34,    -1,    36,    -1,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    -1,    -1,    -1,    56,    -1,
      -1,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      -1,    69,    -1,    71,    72,    73,    -1,    -1,    76,    -1,
      78,    79,    -1,    81,    82,    83,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    -1,
      98,    -1,   100,   101,   102,   103,    -1,   105,    -1,   107,
     108,   109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,
      -1,   119,   120,   121,   122,    -1,   124,   125,   126,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,    -1,    -1,    -1,    -1,   146,   147,
      -1,    -1,   150,    -1,   152,   153,    -1,    -1,   156,    -1,
     158,    -1,   160,   161,    -1,   163,    -1,   165,   166,    -1,
      -1,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,    -1,    -1,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,    -1,    -1,    -1,    -1,
      -1,   209,    -1,   211,   212,    -1,   214,   215,   216,    -1,
      -1,   219,   220,    -1,   222,    -1,   224,   225,   226,   227,
      -1,   229,   230,    -1,   232,   233,   234,   235,    -1,   237,
     238,   239,   240,   241,   242,   243,   244,   245,    -1,   247,
     248,   249,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,   259,   260,    -1,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,    -1,   277,
      -1,   279,   280,   281,   282,    -1,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,    -1,    -1,    -1,
      -1,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,    -1,   323,    -1,   325,    -1,   327,
      -1,   329,    -1,   331,   332,   333,   334,   335,   336,   337,
      -1,    -1,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,    -1,   352,   353,    -1,    -1,   356,   357,
     358,   359,    -1,    -1,   362,   363,    -1,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,    -1,   376,   377,
      -1,    -1,   380,   381,    -1,   383,   384,    -1,    -1,   387,
     388,    -1,   390,   391,   392,   393,    -1,    -1,   396,   397,
     398,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     408,    -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,    -1,    -1,   434,   435,   436,    -1,
     438,   439,   440,    -1,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,    -1,   453,   454,   455,    -1,   457,
      -1,   459,   460,   461,    -1,   463,   464,   465,   466,   467,
      -1,    -1,    -1,    -1,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,   482,   483,   484,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     499,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   499,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   499,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      -1,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,    -1,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,    -1,    -1,   242,   243,   244,
     245,    -1,    -1,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,    -1,   477,   478,    -1,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   499,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    -1,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
      -1,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,    -1,    -1,   242,   243,   244,   245,    -1,    -1,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,    -1,
      -1,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,    -1,   368,
      -1,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,    -1,   477,   478,
      -1,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,     6,     7,    -1,     9,    -1,    -1,    -1,
     499,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,   498,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
     497,   498,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,    -1,    -1,    -1,     9,    -1,   497,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
       9,    -1,   497,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,   154,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,    -1,    -1,    -1,     9,    -1,   497,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    26,    27,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      -1,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,   133,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,   151,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    -1,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,   133,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
     151,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,   133,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,   151,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
     151,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    26,    27,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    31,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,    -1,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,    -1,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      -1,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,    -1,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,    -1,    -1,   242,   243,   244,
     245,    -1,    -1,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,    -1,   477,   478,     3,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    -1,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
      -1,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,    -1,    -1,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,    -1,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,    -1,
      -1,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,    -1,   368,
      -1,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,    -1,   477,   478,
       3,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    -1,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,    -1,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,    -1,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
      -1,   264,   265,   266,    -1,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,    -1,    -1,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,    -1,   368,    -1,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,    -1,   477,   478,     3,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,    -1,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
      -1,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,    -1,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,    -1,    -1,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
      -1,   368,    -1,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,    -1,
     477,   478,     3,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    -1,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,    -1,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,    -1,
      -1,   242,   243,   244,   245,    -1,    -1,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,    -1,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,    -1,    -1,    -1,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,    -1,   368,    -1,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,    -1,   477,   478,     3,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      -1,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,    -1,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,    -1,    -1,   242,   243,   244,
     245,    -1,    -1,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,    -1,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,    -1,   477,   478,     3,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    -1,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
      -1,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,    -1,    -1,   242,   243,   244,   245,    -1,    -1,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,    -1,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,    -1,
      -1,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,    -1,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,    -1,   368,
      -1,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,    -1,   477,   478,
       3,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    -1,
      -1,    44,    -1,    -1,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    -1,    -1,    59,    -1,    61,    62,
      63,    64,    -1,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,    -1,    -1,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,    -1,
     143,    -1,   145,   146,    -1,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,    -1,   185,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,    -1,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,    -1,   236,    -1,   238,   239,    -1,    -1,   242,
     243,   244,   245,    -1,    -1,   248,    -1,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
      -1,   264,   265,   266,    -1,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,    -1,    -1,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,    -1,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,    -1,
     333,   334,   335,   336,    -1,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,    -1,
      -1,    -1,    -1,   366,    -1,   368,    -1,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,    -1,
      -1,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,    -1,   477,   478,     3,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    14,    15,    16,
      17,    -1,    19,    20,    21,    -1,    23,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    -1,    56,
      -1,    -1,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    -1,    71,    72,    73,    -1,    -1,    76,
      -1,    78,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      -1,    98,    -1,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,    -1,    -1,    -1,    -1,   146,
     147,    -1,   149,   150,    -1,   152,   153,    -1,    -1,   156,
      -1,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,    -1,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,    -1,   201,   202,   203,    -1,    -1,    -1,
      -1,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,   224,   225,   226,
     227,    -1,   229,   230,    -1,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,   271,    -1,    -1,   274,    -1,    -1,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,    -1,    -1,
      -1,    -1,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,   323,    -1,   325,    -1,
     327,    -1,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,    -1,    -1,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,    -1,   352,   353,    -1,    -1,    -1,
     357,   358,   359,    -1,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,    -1,   376,
     377,    -1,    -1,   380,   381,    -1,   383,   384,    -1,    -1,
     387,   388,    -1,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,    -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,    -1,    -1,   434,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,    -1,   463,   464,   465,   466,
     467,    -1,    -1,    -1,    -1,    -1,   473,   474,     3,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,    -1,    14,
      15,    16,    17,    -1,    19,    20,    21,    -1,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    -1,    -1,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      -1,    56,    -1,    -1,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    -1,    71,    72,    73,    -1,
      -1,    76,    -1,    78,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    -1,    98,    -1,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,    -1,    -1,    -1,
      -1,   146,   147,    -1,   149,   150,    -1,   152,   153,    -1,
      -1,   156,    -1,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,    -1,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,    -1,   201,   202,   203,    -1,
      -1,    -1,    -1,    -1,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,   224,
     225,   226,   227,    -1,   229,   230,    -1,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,    -1,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
      -1,    -1,    -1,    -1,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,   323,    -1,
     325,    -1,   327,    -1,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,    -1,    -1,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,    -1,   352,   353,    -1,
      -1,    -1,   357,   358,   359,    -1,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
      -1,   376,   377,    -1,    -1,   380,   381,    -1,   383,   384,
      -1,    -1,   387,   388,    -1,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   408,    -1,   410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,    -1,    -1,   434,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,   459,   460,   461,    -1,   463,   464,
     465,   466,   467,    -1,    -1,    -1,    -1,    -1,   473,   474,
       3,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
      -1,    14,    15,    16,    17,    -1,    19,    20,    21,    -1,
      23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    -1,    -1,    38,    39,    40,    41,    -1,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    -1,    56,    -1,    -1,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    -1,    71,    72,
      73,    -1,    -1,    76,    -1,    78,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    -1,    98,    -1,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,    -1,
      -1,    -1,    -1,   146,   147,    -1,   149,   150,    -1,   152,
     153,    -1,    -1,   156,    -1,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,    -1,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,    -1,   201,   202,
     203,    -1,    -1,    -1,    -1,    -1,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,   224,   225,   226,   227,    -1,   229,   230,    -1,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,    -1,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,    -1,    -1,    -1,    -1,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
     323,    -1,   325,    -1,   327,    -1,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,    -1,    -1,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,    -1,   352,
     353,    -1,    -1,    -1,   357,   358,   359,    -1,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,    -1,   376,   377,    -1,    -1,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,    -1,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,    -1,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,    -1,
      -1,   434,   435,   436,    -1,   438,   439,   440,    -1,   442,
     443,   444,   445,    -1,   447,    -1,   449,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,   459,   460,   461,    -1,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
     473,   474,     3,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,    -1,    14,    15,    16,    17,    -1,    19,    20,
      21,    -1,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    -1,    -1,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    -1,    56,    -1,    -1,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    -1,
      71,    72,    73,    -1,    -1,    76,    -1,    78,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    -1,    98,    -1,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,    -1,    -1,    -1,    -1,   146,   147,    -1,   149,   150,
      -1,   152,   153,    -1,    -1,   156,    -1,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,    -1,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,    -1,
     201,   202,   203,    -1,    -1,    -1,    -1,    -1,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,   224,   225,   226,   227,    -1,   229,   230,
      -1,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,    -1,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,    -1,    -1,    -1,    -1,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,   323,    -1,   325,    -1,   327,    -1,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,    -1,    -1,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
      -1,   352,   353,    -1,    -1,    -1,   357,   358,   359,    -1,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,    -1,   376,   377,    -1,    -1,   380,
     381,    -1,   383,   384,    -1,    -1,   387,   388,    -1,   390,
     391,   392,   393,    -1,    -1,   396,   397,   398,    -1,   400,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,   410,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,    -1,    -1,   434,   435,   436,    -1,   438,   439,   440,
      -1,   442,   443,   444,   445,    -1,   447,    -1,   449,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,   459,   460,
     461,    -1,   463,   464,   465,   466,   467,    -1,    -1,    -1,
      -1,    -1,   473,   474,     3,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,    -1,    14,    15,    16,    17,    -1,
      19,    20,    21,    -1,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    -1,    -1,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    -1,    56,    -1,    -1,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    -1,    71,    72,    73,    -1,    -1,    76,    -1,    78,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    -1,    98,
      -1,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,    -1,    -1,    -1,    -1,   146,   147,    -1,
     149,   150,    -1,   152,   153,    -1,    -1,   156,    -1,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,    -1,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,    -1,   201,   202,   203,    -1,    -1,    -1,    -1,    -1,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,   224,   225,   226,   227,    -1,
     229,   230,    -1,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,    -1,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,    -1,    -1,    -1,    -1,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,   323,    -1,   325,    -1,   327,    -1,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,    -1,
      -1,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,    -1,   352,   353,    -1,    -1,    -1,   357,   358,
     359,    -1,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,    -1,   376,   377,    -1,
      -1,   380,   381,    -1,   383,   384,    -1,    -1,   387,   388,
      -1,   390,   391,   392,   393,    -1,    -1,   396,   397,   398,
      -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,
      -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,    -1,    -1,   434,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
     459,   460,   461,    -1,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,   473,   474,     3,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,    -1,    14,    15,    16,
      17,    -1,    19,    20,    21,    -1,    23,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    -1,    56,
      -1,    -1,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    -1,    71,    72,    73,    -1,    -1,    76,
      -1,    78,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      -1,    98,    -1,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,    -1,    -1,    -1,    -1,   146,
     147,    -1,   149,   150,    -1,   152,   153,    -1,    -1,   156,
      -1,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,    -1,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,    -1,   201,   202,   203,    -1,    -1,    -1,
      -1,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,   224,   225,   226,
     227,    -1,   229,   230,    -1,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,   271,    -1,    -1,   274,    -1,    -1,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,    -1,    -1,
      -1,    -1,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,   323,    -1,   325,    -1,
     327,    -1,   329,    -1,    -1,   332,   333,   334,    -1,   336,
     337,    -1,    -1,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,    -1,   352,   353,    -1,    -1,    -1,
     357,   358,   359,    -1,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,    -1,   376,
     377,    -1,    -1,   380,   381,    -1,   383,   384,    -1,    -1,
     387,   388,    -1,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,    -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,    -1,    -1,   434,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,    -1,   463,   464,   465,   466,
     467,    -1,    -1,    -1,    -1,    -1,   473,   474,     3,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,    -1,    14,
      15,    16,    17,    -1,    19,    20,    21,    -1,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    -1,    -1,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      -1,    56,    -1,    -1,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    -1,    71,    72,    73,    -1,
      -1,    76,    -1,    78,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    -1,    98,    -1,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,    -1,    -1,    -1,
      -1,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
      -1,   156,    -1,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,    -1,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,    -1,   201,   202,   203,    -1,
      -1,    -1,    -1,    -1,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,   224,
     225,   226,   227,    -1,   229,   230,    -1,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,    -1,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
      -1,    -1,    -1,    -1,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,   323,    -1,
     325,    -1,   327,    -1,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,    -1,    -1,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,    -1,   352,   353,    -1,
      -1,    -1,   357,   358,   359,    -1,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
      -1,   376,   377,    -1,    -1,   380,   381,    -1,   383,   384,
      -1,    -1,   387,   388,    -1,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   408,    -1,   410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,    -1,    -1,   434,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,   459,   460,   461,    -1,   463,   464,
     465,   466,   467,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,   482,   483,   484
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,    14,    24,    26,    27,    41,    61,    63,    64,    69,
      71,    82,    84,   100,   103,   115,   117,   121,   127,   136,
     138,   144,   159,   214,   215,   220,   232,   243,   281,   293,
     298,   299,   301,   306,   311,   314,   318,   323,   324,   331,
     334,   342,   354,   371,   381,   387,   392,   405,   462,   506,
     513,   514,   515,   516,   519,   520,   521,   522,   523,   526,
     541,   542,   544,   545,   546,   547,   548,   549,   550,   552,
     553,   557,   569,   574,   575,   578,   579,   580,   597,   600,
     601,   618,   695,   698,   724,   727,   728,   729,   736,   742,
     744,   746,   747,   750,   753,   754,   758,   759,   768,   772,
     773,   774,   775,   776,   778,   779,   780,   793,   794,   798,
     800,   801,   802,   813,   815,   822,   823,   826,   827,   828,
     829,   830,   835,   837,   840,   844,   848,   849,   859,   860,
     863,   868,   879,   901,   904,   905,   906,   909,   912,   914,
     916,   919,   920,   921,   924,   925,   926,   933,   934,   936,
     937,   938,   943,   945,   946,   950,   951,   954,   955,   956,
     957,   959,   960,   961,   962,   964,   967,   968,   974,   981,
     984,   986,   989,   994,   996,  1001,  1008,  1012,  1013,  1014,
    1015,  1016,  1017,  1018,  1021,  1051,   366,   408,   939,    21,
      67,    81,    98,   104,   119,   131,   139,   140,   151,   156,
     162,   177,   202,   223,   257,   286,   313,   317,   319,   325,
     328,   353,   354,   356,   360,   368,   373,   385,   398,   466,
     473,   743,   939,     3,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    33,    34,    36,    37,
      39,    40,    41,    42,    43,    45,    46,    48,    49,    50,
      51,    52,    55,    56,    57,    58,    59,    61,    62,    63,
      64,    65,    69,    70,    71,    72,    73,    75,    76,    78,
      79,    80,    81,    82,    83,    86,    87,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   105,   107,   108,   109,
     110,   111,   113,   114,   115,   118,   119,   120,   121,   122,
     124,   125,   126,   128,   129,   130,   131,   134,   135,   136,
     137,   138,   139,   140,   141,   143,   145,   146,   147,   150,
     152,   156,   157,   158,   160,   161,   163,   165,   166,   167,
     168,   169,   171,   172,   173,   175,   176,   177,   178,   179,
     180,   182,   184,   185,   186,   187,   188,   189,   190,   192,
     194,   197,   199,   200,   201,   202,   203,   205,   206,   208,
     209,   211,   214,   215,   216,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   237,   238,   239,   240,   242,   243,   245,   247,
     248,   249,   250,   251,   252,   254,   257,   258,   259,   262,
     263,   265,   267,   268,   269,   270,   271,   273,   274,   276,
     277,   279,   280,   281,   282,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   310,
     311,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   325,   326,   327,   328,   329,   331,   332,   333,
     334,   336,   337,   338,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   352,   353,   355,   356,   357,
     358,   359,   360,   362,   363,   366,   367,   368,   369,   371,
     372,   373,   374,   376,   377,   380,   381,   382,   383,   384,
     387,   388,   389,   390,   391,   392,   393,   395,   397,   398,
     399,   400,   403,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   431,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,  1009,  1178,  1192,  1196,  1201,   396,   969,
     255,   282,   939,    44,   609,  1014,    33,    54,    67,    77,
      98,   104,   119,   131,   139,   151,   158,   162,   216,   257,
     260,   313,   319,   328,   356,   357,   359,   360,   368,   373,
     379,   382,   385,   458,   469,   473,   487,   619,   699,   726,
     803,   818,   869,   880,    22,   281,  1178,  1009,    22,   276,
     326,   357,   359,     5,   201,   910,   911,  1187,    21,    33,
      54,    67,    81,    98,   119,   131,   139,   140,   151,   156,
     162,   177,   223,   257,   268,   313,   317,   319,   325,   328,
     354,   356,   360,   368,   373,   385,   398,   466,   473,   743,
     831,   939,  1178,    84,   396,   506,   618,   695,   724,   727,
     968,   975,   984,   989,   994,  1001,  1008,  1012,     9,    15,
      22,    39,   146,   152,   154,   174,   203,   238,   284,   300,
     497,   498,   845,   846,  1009,  1186,  1191,    22,    84,   297,
     324,   850,   851,   852,  1192,  1192,  1183,  1187,   354,  1024,
     845,  1192,   366,  1178,   268,   223,    98,   177,   353,   354,
     917,   318,  1192,    22,   329,   362,   366,   561,   570,   571,
    1192,    19,   159,   850,   851,   282,   939,  1192,   200,    22,
     116,  1026,    55,    78,   216,   234,   313,   319,   329,   362,
     366,   411,   558,   559,   560,   561,    22,   329,   362,   366,
     561,   366,   256,  1062,  1176,  1192,  1024,   499,  1192,   155,
     506,   971,   506,  1171,   295,  1019,  1020,  1178,    22,  1191,
    1014,  1015,  1018,     0,   509,   969,   132,   191,   261,   378,
    1027,  1028,  1014,  1016,  1017,   109,   187,   384,   510,     3,
      38,    44,    67,    74,    85,    91,   153,   155,   170,   183,
     195,   196,   198,   210,   212,   236,   244,   264,   266,   312,
     335,   396,  1184,  1192,  1193,  1196,  1202,   833,  1192,   833,
    1179,  1192,   285,   833,   368,   833,  1178,  1192,   354,    97,
     354,   858,  1184,     3,  1188,  1194,  1196,  1201,  1202,    22,
     169,  1176,   250,   398,     8,    62,   143,   493,   494,   495,
     497,   498,   499,   500,   501,   502,   908,  1132,  1133,  1192,
      22,  1188,  1178,  1178,   169,  1176,  1178,   306,   331,    22,
     169,  1062,  1178,   321,  1178,   833,    22,   221,  1188,   169,
    1176,   833,  1178,   162,   467,   201,   106,   197,   241,   291,
     940,   941,   942,  1176,  1182,  1192,    21,    54,    67,    68,
      77,    81,    98,   119,   131,   139,   151,   156,   177,   202,
     223,   257,   313,   317,   319,   325,   328,   354,   356,   360,
     368,   373,   398,   473,   743,   838,  1187,  1176,   364,  1178,
     506,   833,   368,  1179,   833,   368,   169,  1178,    97,   354,
     357,   359,  1188,   357,   359,    62,   143,   908,   304,  1188,
     169,   554,  1192,  1178,  1178,   321,  1178,   833,   221,  1188,
     162,   467,   295,   325,   354,   398,   140,   223,    21,    81,
     177,   156,   317,   372,   737,    22,  1178,  1010,   568,  1187,
    1194,   911,   169,  1184,  1178,   169,   915,   169,  1179,   368,
     354,   486,    97,   354,   169,  1184,   169,  1188,  1190,    74,
     398,    62,   143,   169,   908,    48,   169,  1190,   169,  1178,
     169,  1178,   169,  1178,   321,   169,  1178,   169,   221,  1190,
     162,   467,   201,   169,   832,   833,   506,   985,   619,   433,
     976,   392,   968,   977,   978,   979,  1194,   969,  1191,   846,
     847,    22,   847,  1191,   847,    22,   847,  1191,   847,   847,
     847,  1191,  1186,  1186,  1009,   847,   285,   506,   506,   640,
     640,   640,   255,   364,   510,   640,  1062,  1063,   510,   935,
    1187,   506,   982,    48,   398,  1178,  1178,  1176,  1192,    38,
     423,   197,   508,   258,   258,   255,   154,  1187,   364,   149,
     841,   255,     4,     6,     7,     8,    10,    30,    43,    45,
      46,    53,    54,    57,    58,    65,    67,    88,    89,    90,
      91,    92,    93,    94,   101,   102,   120,   137,   141,   142,
     147,   161,   189,   190,   192,   209,   217,   218,   235,   237,
     241,   246,   247,   249,   257,   267,   277,   292,   315,   330,
     337,   350,   354,   362,   363,   367,   369,   370,   379,   385,
     393,   413,   414,   415,   416,   417,   418,   419,   420,   430,
     442,   443,   452,   497,   498,   499,   506,  1014,  1079,  1082,
    1085,  1086,  1087,  1089,  1090,  1091,  1092,  1095,  1096,  1100,
    1102,  1105,  1106,  1108,  1130,  1134,  1154,  1160,  1164,  1172,
    1173,  1174,  1184,  1185,  1186,  1187,  1192,  1187,    22,   576,
    1175,  1176,   329,   558,   104,   567,  1187,   568,  1187,    38,
      59,   558,   423,   338,   941,   258,   154,   364,   493,    38,
     423,   197,   942,   506,  1176,   499,   504,   508,  1165,  1166,
    1063,   153,   155,   396,   488,   965,   966,   968,   153,   972,
     104,  1100,  1169,  1170,  1019,   510,   506,   973,   154,   154,
     507,   507,   515,   441,   475,   970,  1176,    22,   116,  1025,
    1025,    48,  1025,   144,   149,   213,   253,  1031,  1033,  1034,
    1045,  1047,  1048,  1049,  1027,  1028,   154,   193,  1062,  1064,
    1171,   506,   892,  1166,   269,   302,   331,   508,   834,   269,
     302,   331,   269,   302,   331,   405,   527,   569,   572,   864,
      18,   121,   269,   302,   331,   389,   583,  1178,   331,    18,
     121,   384,   551,  1062,   409,   169,  1062,    50,    83,   136,
     140,   172,   208,   239,   241,   269,   302,   310,   316,   323,
     331,   340,   348,   400,   425,   454,   470,   569,   573,   895,
     902,   506,   881,   302,   551,   174,   137,    18,    24,    64,
     114,   121,   124,   179,   239,   241,   251,   259,   269,   302,
     305,   306,   331,   371,   389,   436,   437,   480,   581,   582,
     596,   762,     4,   497,   498,   734,  1191,    22,   169,  1176,
     833,   833,   506,   907,   508,   174,   543,   302,   527,   543,
     255,   269,   302,   137,    49,    96,   176,   224,   229,   239,
     268,   302,   307,   331,   342,   581,   731,   732,   269,   302,
     397,   762,   770,   571,   559,   561,   174,   137,   302,   331,
     581,   269,   302,   306,   331,    75,   113,   270,   358,   255,
      18,    24,   121,   269,   302,   331,   598,   599,   543,   149,
     302,   527,   543,   137,   302,   331,   581,   302,   269,  1178,
    1189,  1194,  1178,   211,   106,   256,   410,   510,   940,   386,
     963,   255,  1184,   506,  1178,   368,    97,   354,  1184,   250,
     398,    62,   143,   908,  1178,   321,  1178,   162,   467,   201,
     833,   640,   288,   603,    60,     3,    43,    45,    46,    57,
      58,   101,   102,   147,   189,   190,   192,   235,   237,   249,
     292,   332,   337,   362,   363,   393,  1075,  1078,  1080,  1082,
    1084,  1086,  1087,  1088,  1090,  1091,  1095,  1096,  1193,  1196,
     154,   506,   804,  1178,   527,    31,   958,  1178,   241,   527,
     409,   169,  1176,   527,   833,   833,   804,   382,   619,   527,
     241,    38,   555,   373,   769,   269,   745,    75,   113,   270,
     358,    20,    40,   188,   781,    31,   804,   149,   527,  1178,
    1189,   398,  1176,   169,   696,  1176,  1176,   486,   700,   398,
    1184,   833,    74,   870,  1184,  1178,   466,   743,    44,    95,
     186,   239,   320,   461,   137,   892,    51,   308,   584,   137,
     506,   137,   354,   409,   137,   881,   137,   510,   169,   832,
     169,   833,   169,   833,   137,   907,  1190,   137,   137,   255,
     137,   584,   137,    75,   113,   270,   358,   137,   255,   137,
     149,   169,  1178,  1189,   169,   568,   137,   510,   584,  1100,
    1137,   975,   507,   510,   142,   255,   370,   565,   568,   734,
     980,   976,   847,  1009,   847,  1009,   847,  1009,   847,  1009,
     847,  1009,  1009,  1009,   847,  1009,   506,   641,   642,  1192,
     641,    22,    98,   119,   151,   156,   201,   202,   319,   325,
     354,   356,   373,   466,   853,  1175,  1190,   852,   174,   510,
     997,  1187,  1075,  1140,    31,  1190,   870,   150,   918,   918,
     918,   211,  1192,   149,   149,   853,  1190,   318,  1192,   568,
     255,   506,  1167,   504,  1014,  1142,   395,  1093,  1100,  1159,
     506,  1093,  1093,   506,   149,   506,   506,   506,  1081,  1081,
     279,  1014,   506,   506,  1083,   506,   506,   506,   506,    57,
      58,  1093,  1100,   506,  1081,   506,   506,   506,   506,   506,
     506,   407,   492,   506,  1097,   506,  1097,   506,   506,  1014,
     506,   506,   506,   506,   506,   506,   506,   506,   506,   506,
     506,   506,  1100,  1100,   354,  1014,  1100,  1137,  1166,  1187,
      58,   506,  1094,   506,  1187,     3,     8,    11,    14,    15,
      16,    17,    18,    19,    20,    21,    23,    24,    28,    31,
      33,    34,    36,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    48,    49,    50,    51,    52,    56,    59,    61,
      62,    63,    64,    65,    66,    69,    71,    72,    73,    76,
      78,    79,    81,    82,    83,    86,    95,    96,    98,   100,
     101,   102,   103,   105,   107,   108,   109,   110,   111,   114,
     119,   120,   121,   122,   124,   125,   126,   128,   129,   130,
     134,   135,   136,   137,   138,   140,   141,   146,   147,   150,
     152,   153,   156,   158,   160,   161,   163,   165,   166,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   184,   185,   186,   187,   188,   189,   190,   192,   194,
     195,   196,   197,   199,   201,   202,   203,   209,   211,   212,
     214,   215,   216,   219,   220,   222,   224,   225,   226,   227,
     229,   230,   232,   233,   234,   235,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   247,   248,   249,   250,   251,
     254,   257,   258,   259,   260,   263,   264,   267,   268,   269,
     271,   274,   277,   279,   280,   281,   282,   284,   285,   286,
     287,   289,   290,   291,   292,   293,   294,   299,   300,   301,
     302,   303,   304,   306,   307,   308,   310,   311,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   323,   325,   327,
     329,   331,   332,   333,   334,   335,   336,   337,   340,   342,
     343,   344,   345,   346,   347,   348,   350,   352,   353,   356,
     357,   358,   359,   362,   363,   366,   367,   368,   369,   371,
     372,   373,   376,   377,   380,   381,   383,   384,   387,   388,
     390,   391,   392,   393,   396,   397,   398,   400,   408,   410,
     423,   424,   425,   426,   427,   428,   429,   434,   435,   436,
     438,   439,   440,   442,   443,   444,   445,   447,   449,   450,
     451,   453,   454,   455,   457,   459,   460,   461,   463,   464,
     465,   466,   467,   473,   474,   477,   478,   479,   480,   481,
     482,   483,   484,   493,   494,   495,   497,   498,   499,   500,
     501,   502,  1132,  1134,  1136,  1197,  1198,  1200,   406,  1117,
     266,  1100,   193,  1022,   510,   506,  1187,  1166,   107,   171,
     577,   510,    59,   104,   568,    31,     3,   104,   216,   566,
     734,  1096,  1187,  1187,    79,   118,  1114,    87,   104,   562,
     563,   565,   734,   104,   562,   211,  1176,  1100,     3,    22,
      26,    27,    28,    29,    30,    31,    32,    35,    47,    53,
      54,    60,    66,    68,    77,    84,    88,    89,    90,    92,
      93,    94,   104,   106,   112,   116,   117,   123,   127,   132,
     133,   142,   144,   148,   149,   151,   154,   159,   162,   164,
     174,   181,   191,   193,   204,   207,   213,   217,   218,   241,
     246,   253,   255,   256,   260,   261,   272,   275,   278,   283,
     297,   309,   324,   330,   339,   351,   354,   361,   364,   365,
     370,   375,   378,   379,   385,   386,   394,   401,   402,   404,
     405,   430,   432,   476,   499,  1181,  1195,  1196,  1201,  1202,
    1203,  1165,    80,   307,   836,   507,   510,   969,    36,   257,
     507,   510,  1020,  1177,  1178,    31,   128,   128,  1176,    22,
    1176,   973,  1016,  1016,  1029,  1030,  1100,  1016,   146,   238,
    1040,   199,   239,   291,   333,   384,    22,  1035,  1100,   497,
     498,  1036,  1037,  1100,  1102,  1045,  1046,  1034,  1033,  1031,
    1032,   149,  1048,   251,  1050,  1031,  1045,  1064,  1064,    31,
    1192,   331,   174,   184,   261,   263,   332,   394,   499,   885,
     886,   887,   889,   891,   893,  1075,  1193,   269,   302,   331,
     364,   364,   319,  1181,   508,   364,   364,   319,   364,   364,
     356,   558,   952,   149,   159,   174,   311,   865,   866,    60,
      77,   133,   151,   283,   379,   637,   638,    77,   104,   241,
     364,    77,   364,   104,   241,   319,    77,   114,   124,   269,
     302,   799,   319,   751,    21,    54,    67,    81,   119,   131,
     151,   156,   223,   257,   319,   325,   328,   354,   360,   373,
     398,   743,   302,   581,  1178,   137,   302,   331,   581,   255,
     734,   255,   323,   481,   208,   364,   364,   246,   734,   108,
     194,   319,   329,   366,   560,   481,   481,   481,   308,   331,
     895,   903,   507,   882,   885,   364,   385,   356,  1176,    68,
     104,   272,   627,   637,  1192,    68,    77,   104,   272,   595,
     922,   255,   317,   368,    77,   104,   272,   595,   922,    25,
     305,   317,   368,  1176,   179,   251,   833,   506,   364,   364,
     595,   168,   506,   588,   356,   405,   407,   432,   482,   588,
     660,   595,    77,   595,   272,   354,   104,   595,   510,     4,
       4,   269,   174,   137,   302,   331,   581,   386,   386,   240,
    1075,   269,   331,   908,    98,   331,   572,   364,   529,   572,
    1176,   364,   364,  1176,   734,    48,   733,   734,   734,    96,
     224,   229,    48,   364,   527,   319,   527,   239,   732,   364,
     364,   246,  1187,   762,   356,  1062,    77,   364,   922,   319,
     364,   364,   588,   588,   833,   833,   833,   833,  1176,    37,
     391,    37,    37,   364,    37,   364,   104,   319,   510,   572,
      94,   385,   777,  1188,   364,   529,   572,  1176,   364,   319,
     364,   364,   331,   517,   269,   302,   291,   303,   327,   564,
     940,  1182,  1192,  1176,   892,  1075,   255,   409,   881,   734,
     833,   833,   907,   195,   255,    75,   113,   270,   358,   255,
     833,   195,   405,   610,   345,   346,   605,  1187,   506,  1078,
      31,    30,  1077,    99,   167,   228,   231,   322,   421,   506,
    1098,  1099,   834,  1081,   833,   805,   806,  1195,    20,   947,
    1075,   255,   137,   748,  1178,   241,   506,   528,   818,   386,
     295,   398,   528,   137,  1188,    84,   159,   556,   618,   728,
     780,   848,   868,   943,  1187,   770,   771,  1178,   219,   833,
     833,   833,   833,   251,   109,   187,   371,   384,   782,   783,
     129,   290,   506,   777,   528,   405,   517,  1176,   730,   731,
     241,    31,   251,   506,   640,   640,   619,   725,  1176,   506,
     808,   892,   149,   871,  1182,   506,   883,    31,  1178,   201,
     405,   407,  1011,   320,   462,  1184,   584,  1075,  1179,   169,
    1178,  1184,   584,  1190,  1188,   137,   584,   137,   386,   137,
     386,   908,   584,   584,  1190,  1178,   833,  1178,  1178,  1178,
     833,  1190,   777,   137,   137,   584,   832,   833,   507,   510,
     975,   978,   975,  1009,  1009,  1009,  1009,  1009,  1009,   641,
     507,   510,   507,   157,   326,   355,  1177,   832,    97,   328,
     857,   858,  1177,   250,  1177,  1175,  1175,  1177,   832,  1177,
     364,   405,   861,    16,   135,   315,   333,   998,  1062,   245,
     999,   507,   510,   983,   989,   994,  1001,  1012,   364,  1176,
     851,   850,   851,   154,   160,   862,  1192,    21,    68,    98,
     119,   131,   151,   156,   202,   223,   313,   319,   325,   354,
     356,   373,   398,   743,   842,  1137,  1165,   505,  1137,  1142,
    1143,   506,   401,  1155,  1156,  1100,  1137,   506,  1186,  1186,
    1137,     3,    99,   167,   228,   231,   322,   421,  1144,  1145,
    1187,  1186,  1137,  1137,  1186,  1186,  1093,  1093,  1100,   908,
    1100,  1146,   497,   498,  1101,  1102,  1130,  1134,  1148,   507,
    1137,  1100,  1137,  1149,  1012,  1104,   362,   423,  1186,  1186,
    1100,    47,   154,   207,   365,  1100,  1137,  1152,  1137,   233,
    1100,  1102,  1100,  1112,  1113,  1114,   233,  1100,  1114,  1100,
     507,  1137,  1100,   507,   510,   331,  1186,  1186,  1098,  1075,
    1100,  1195,   362,    35,   351,  1168,   833,  1100,   506,  1014,
    1153,   116,   118,   142,   241,   246,   251,   370,   380,  1100,
      42,   170,   174,   212,   335,   506,  1100,   364,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,    22,    29,
     339,  1131,   162,   145,  1118,   315,   506,  1130,   158,   216,
     354,   357,   359,   382,  1023,  1176,   154,  1052,  1174,    22,
     116,   394,   499,   507,   887,  1100,  1138,  1139,  1193,  1176,
     366,   506,  1187,   510,   507,   505,   511,   168,   168,   584,
    1176,   966,   967,  1176,  1169,   507,   510,   506,  1178,  1178,
     973,   973,   510,    32,   112,   386,   877,   315,   316,   497,
     498,  1037,  1039,  1102,   333,   199,   256,   510,     4,  1038,
    1186,  1038,   315,   316,  1039,  1175,   999,  1046,  1032,   386,
     995,   104,   506,   990,  1012,  1192,   506,  1002,  1003,  1004,
    1005,  1006,  1192,   263,    48,  1193,   507,   887,   889,   886,
     889,  1193,   261,   507,   510,   834,   364,   364,   319,  1188,
    1178,  1178,  1181,  1188,  1178,  1178,  1188,  1179,  1178,    76,
     953,   313,   385,   850,   319,   159,   850,   506,  1178,   386,
     872,   199,   199,   386,   506,   658,   169,  1178,   246,  1188,
    1178,  1178,  1100,   246,  1178,  1178,    25,   305,   364,   364,
    1178,   364,   752,  1184,   506,   833,   833,   833,   368,    97,
     354,   858,   398,    62,   143,   908,  1178,   833,  1178,   833,
     321,   833,   833,   201,   163,   239,   269,   302,   390,   755,
     756,   757,  1062,   364,   922,   319,   246,    22,    29,   448,
     451,   108,   194,  1188,  1178,   255,  1178,    97,    97,   507,
     510,  1188,  1190,  1178,   302,   581,   627,   272,     3,   127,
     149,   257,   342,   392,   594,   673,   674,   677,   678,   681,
    1199,  1200,  1075,  1076,  1178,   272,   594,   582,  1192,  1178,
    1178,    22,   385,  1178,   169,  1178,   272,   169,   584,   169,
    1192,   317,   368,   317,   368,  1178,    22,   385,  1178,  1176,
      18,   121,   331,   763,   764,   765,   766,  1195,  1188,  1178,
     364,   104,   155,   242,   386,   587,   590,   591,  1195,  1178,
     254,   804,    64,   254,    48,   216,   468,   472,   358,   584,
    1178,   405,   281,   272,    36,   582,   364,   356,  1176,   364,
     922,   319,  1180,  1192,  1180,   510,   507,   510,   364,   319,
    1179,  1188,     3,    76,   121,   126,   179,   274,   377,   385,
     388,   428,   431,   456,   473,   530,   531,   533,   302,  1188,
    1178,   302,   331,   581,   731,   734,   833,  1178,   734,  1178,
     734,  1188,  1178,  1178,   302,   331,   581,  1178,  1178,  1178,
    1178,  1188,  1178,    18,    24,   121,   269,   302,   331,   269,
     302,   331,   804,   302,   331,   302,   331,   302,  1074,  1192,
     169,   814,  1192,   169,  1192,  1188,  1178,  1178,   125,  1178,
      18,   599,   328,  1188,   302,   331,   581,  1178,  1178,  1178,
    1188,    73,   225,   226,   227,   426,   427,   524,   525,    83,
     405,   407,   424,   446,   457,   460,   518,   364,   364,    72,
     376,   291,   195,    31,   833,   195,   195,   386,   386,   195,
     246,   839,  1187,   833,   833,   195,   839,   254,   154,   364,
     602,   527,  1100,    30,  1077,  1075,   504,   504,   364,   364,
     364,   506,   364,  1186,  1081,   507,   510,   493,   782,    76,
     125,   205,   206,   219,   269,   356,   358,   948,   629,  1195,
    1178,   154,   319,   397,   749,   756,   757,   137,    68,   104,
     212,   620,   622,   624,   626,   627,   634,   637,    19,   174,
     313,   352,   531,   532,   149,  1180,   398,  1176,   554,  1192,
     555,   260,   619,   151,  1187,   804,   804,   804,   804,   251,
     255,   260,   506,   804,  1072,  1073,  1074,   328,   804,   405,
     506,   137,   136,  1012,   833,   620,  1192,   405,   407,   654,
     405,   589,   354,    31,   640,     3,   809,   810,   804,  1187,
     255,   507,   884,   885,   890,    31,   201,   310,   404,   894,
     895,   896,   255,   804,   568,   166,   166,   149,   892,    31,
     137,   584,   881,   832,   833,  1180,   833,  1180,   907,   255,
     584,   584,   255,   584,   328,   149,   568,   584,  1100,   507,
     642,   174,   174,   174,   409,  1177,   510,   734,   735,   162,
     854,   855,  1188,    19,   862,   135,   333,   135,   333,   315,
     384,   230,   451,  1000,  1075,  1178,   405,   697,   154,   255,
     854,    48,   584,  1184,   368,   354,  1184,   250,   398,   201,
     833,   507,   505,   505,   510,  1137,   195,  1100,  1157,   123,
    1156,  1158,    31,   507,  1100,   507,   507,   507,   507,   154,
     507,   507,   507,   507,   507,   510,   507,   275,  1147,   507,
    1101,  1101,    11,   174,   195,   257,   493,   494,   495,   497,
     498,   499,   500,   501,   502,  1134,  1101,   507,   507,   149,
     154,  1150,  1151,   507,   476,  1103,   507,   423,   507,   507,
      31,  1152,  1137,  1152,  1152,   154,   507,   507,  1195,   510,
     273,  1116,    31,   507,   510,  1100,  1195,   510,  1100,   510,
    1161,  1162,   507,   507,  1167,  1100,  1192,   507,   507,   423,
    1101,  1101,   130,  1137,   154,   116,   118,   142,   246,   251,
     370,   380,   506,   130,   351,  1168,  1100,  1153,  1100,   364,
     908,  1100,   506,  1014,   506,   506,   265,  1122,   357,   359,
     357,   359,  1176,  1024,  1024,  1024,   204,   316,   430,   506,
    1014,  1053,  1054,  1055,  1062,  1065,  1105,  1107,  1108,  1184,
    1192,   402,  1070,  1138,  1138,  1139,   507,    13,   510,  1027,
    1028,   941,  1186,  1098,   563,  1100,   973,  1178,   983,  1030,
     257,  1132,  1135,   489,   490,   878,     4,  1186,  1039,   256,
     384,  1036,  1053,   402,  1071,   392,   991,   992,  1192,   309,
     993,  1006,  1007,   510,  1052,   493,  1167,   893,   834,   889,
     889,    48,   891,   501,  1188,  1178,  1178,   213,  1190,  1190,
     255,  1177,   258,   255,  1100,   638,  1180,   506,   506,   506,
     658,   177,   641,   791,   137,   584,   364,  1188,  1178,   568,
     892,  1075,  1178,   409,   833,   833,   833,   833,   907,    75,
     113,   270,   358,  1178,   738,  1178,   163,   390,   364,   364,
     738,   755,   762,   302,   331,   581,  1178,  1178,  1178,   185,
     478,   246,   885,   268,   331,   364,   594,   506,   506,   506,
     506,   342,   392,   678,   674,   676,   435,   675,   356,   405,
     664,   494,   259,   760,   791,   594,   121,   306,   331,   583,
     762,   923,   137,   584,   169,   137,   137,   584,  1178,  1178,
    1178,  1178,   765,   766,   765,   507,   510,   767,  1187,     3,
     177,   507,   510,   493,   508,   660,   506,   478,   659,   506,
     354,   673,   506,  1188,  1178,   302,   331,   581,  1178,  1178,
    1178,   269,   302,   331,    18,   121,   269,   302,   331,  1075,
     240,  1075,  1188,  1178,   213,   431,   274,   246,  1187,   274,
    1190,   383,   506,   538,    42,    99,   534,   536,   538,   162,
     467,   364,   364,   319,   268,   331,   364,   922,   319,   364,
     364,   221,   221,   221,   364,   364,   319,   364,   364,   319,
     364,   319,   364,   319,   364,   584,  1075,   241,  1187,   331,
     923,   137,   584,   364,   804,  1178,   364,   319,  1191,  1191,
    1191,  1191,  1187,  1191,   483,   804,   804,   483,   483,  1188,
    1178,   839,  1075,   195,   839,   839,  1180,  1180,   839,   195,
     195,   839,   603,   506,   606,   607,   507,   504,   507,  1186,
     505,  1186,   167,   228,  1099,   228,  1099,  1099,  1186,   231,
     507,   806,   240,   257,   315,   497,   498,   734,   807,   889,
    1135,  1187,  1203,   255,   213,   493,   949,   949,   949,   949,
     949,   949,   949,    60,    66,    77,   104,   106,   181,   241,
     246,   283,   297,   379,   630,   632,   633,   136,   401,   527,
     568,  1178,   568,   760,  1176,  1192,    68,  1176,   507,   510,
    1190,   162,   313,  1190,  1186,   373,  1176,   640,    38,   555,
     304,   354,    97,   589,   641,  1176,   783,   811,   812,  1187,
     507,   510,  1178,   804,   641,  1176,  1178,   697,   506,   621,
     507,   254,   588,   254,   255,   655,   588,    31,  1176,  1012,
     589,   493,   507,   510,   364,  1176,   507,   510,   104,   493,
     897,  1187,   568,   354,   888,   889,   405,   896,   898,   109,
     187,   324,   384,   931,   163,  1012,   584,  1075,  1178,   584,
     584,   386,   584,   386,   584,   584,   833,   833,  1178,   777,
     584,   319,   319,   319,  1177,   858,   510,  1188,   405,   510,
     856,   258,   135,   135,   256,    97,   239,  1190,   853,   584,
    1188,   892,   881,   734,   833,   195,  1142,   507,   241,   361,
    1100,   127,  1075,   507,  1100,  1100,  1100,  1150,  1075,  1101,
     116,   118,   241,   251,  1101,  1101,  1101,  1101,  1101,  1101,
    1101,  1101,  1101,  1101,  1100,  1100,  1151,  1150,    48,   468,
    1097,  1097,  1075,   507,   507,   507,  1137,   507,   510,  1100,
      48,  1102,   507,  1195,  1113,   280,   349,  1115,   507,   510,
     397,  1109,    31,  1100,   510,  1162,  1163,   507,  1094,  1187,
    1100,    28,    28,  1100,   507,  1100,   154,   506,  1140,  1100,
    1101,  1101,   130,   130,  1100,   507,   130,  1100,  1028,   402,
     506,  1123,  1192,  1024,  1024,  1024,  1024,  1176,  1176,  1176,
    1014,  1065,   154,   506,  1014,  1054,  1055,    31,  1056,  1057,
    1192,   510,    85,   155,   183,   198,   210,   236,   312,  1059,
    1057,    31,  1056,  1058,  1192,   491,  1069,   506,  1166,  1100,
     162,  1041,   510,  1027,  1027,  1027,  1100,   394,  1139,   507,
     507,   505,   507,   506,   878,   256,    87,  1100,   993,   507,
     510,  1167,  1173,   507,   510,  1003,  1071,  1169,   507,   501,
     893,   373,   949,   157,   326,   355,   374,   867,   149,   867,
     507,   506,   646,   647,   874,  1107,  1192,   641,   641,   791,
    1182,   507,   106,   181,   239,   241,   792,  1178,  1178,    31,
    1178,   386,   386,   833,   833,   833,   833,   834,  1188,  1178,
     364,   922,   319,   364,   185,    48,   356,  1178,   678,    54,
     498,   506,   669,   670,   671,  1184,  1185,   671,  1184,   671,
     506,   669,   679,   680,   664,   675,   506,  1178,   804,   506,
     666,  1076,  1141,   506,   629,   241,   588,    97,   241,   344,
     347,   588,   373,  1178,   137,   594,  1192,   764,  1178,   591,
     807,  1195,   643,   644,  1192,     9,   104,   482,   507,   626,
     668,   677,   684,   687,   688,  1176,   674,   392,   671,   681,
     682,   268,   331,   364,   922,   319,   364,   364,   364,   319,
     156,   257,   347,   816,   817,   156,   257,   824,   825,   364,
     364,   319,   507,   507,   507,  1191,   149,  1187,  1187,  1187,
     539,   540,  1195,   536,   535,  1186,  1187,   833,   833,  1178,
    1178,  1178,    48,   356,  1178,  1178,  1178,  1178,  1178,   149,
     149,   304,   149,   169,  1188,  1178,  1178,  1188,  1178,  1178,
    1178,  1178,  1178,  1178,  1178,    66,   585,   137,    20,    40,
     373,  1192,  1178,   762,  1178,  1178,   734,   407,   734,   734,
     507,   839,   195,   195,   839,   839,   605,   613,   614,  1195,
      44,    86,   110,   125,   130,   150,   153,   165,   246,   254,
     255,   289,   439,   455,   608,   791,  1186,   405,   407,   505,
     505,   507,  1098,  1176,   949,   104,  1186,  1187,   104,  1187,
     104,  1187,   104,  1187,   104,  1178,   104,  1178,   104,  1178,
     506,   833,  1178,  1101,   107,   171,   106,   246,   199,  1176,
     898,   287,   795,   796,  1192,   748,   506,   125,   125,   635,
     328,   624,  1190,  1190,  1075,   506,   589,  1188,  1176,   409,
     149,   784,   507,   510,  1074,   760,   507,   251,   506,   985,
     660,   661,   623,   625,   628,   637,  1192,   654,   180,   653,
      71,   356,   656,  1012,   506,   697,   656,   807,     3,   810,
    1187,   872,   890,  1100,  1100,   510,   506,   894,   804,   364,
     738,   507,   584,  1180,  1180,   584,   584,   328,  1177,  1177,
    1177,   734,   159,   855,    97,   862,   154,   195,   195,   195,
     195,   246,   843,  1187,   116,  1100,   507,   507,  1151,   154,
     116,   118,   251,   506,  1137,   507,   412,  1111,  1137,   507,
     296,    48,   403,   403,   507,  1100,   239,  1100,   510,  1110,
    1078,   507,   510,  1100,   507,  1098,  1101,  1101,  1100,  1140,
     507,    28,    28,  1100,  1100,   130,  1100,   507,   507,  1100,
    1124,  1192,  1176,  1176,  1176,  1176,  1057,  1058,   506,  1100,
     507,  1192,   506,  1054,   198,   264,  1060,  1054,  1060,   198,
    1059,  1060,   198,   506,  1192,   506,  1138,    48,   164,  1044,
     507,   507,   507,  1139,  1187,  1187,   908,   251,  1012,   992,
     493,  1006,   993,   373,   507,  1191,   364,   850,   154,   791,
    1100,   507,   510,   405,    66,   875,   875,   507,   507,   898,
     107,   171,   179,   106,   388,   584,  1075,  1180,  1180,  1178,
    1178,  1178,  1178,  1190,  1178,   664,   506,   669,   669,    11,
     507,   510,   506,   507,   506,   507,   680,   507,   510,   507,
     510,   666,   671,   356,   668,   495,   510,   761,   765,   125,
     631,   246,   246,  1191,  1192,  1075,   584,   584,   584,   584,
     493,   507,   510,   386,   833,   876,   482,  1199,   507,   510,
     664,   678,   678,   405,   407,   593,   193,   592,   507,    48,
     356,  1178,  1178,  1178,  1178,  1188,  1178,  1178,  1186,  1186,
    1075,   510,  1186,  1186,   510,  1188,  1178,  1178,   536,   507,
     510,   493,    28,   362,   537,  1190,  1178,   364,  1177,  1177,
     833,  1177,   137,   833,  1187,  1187,  1075,   584,   584,   804,
     195,   839,   839,   386,   611,   612,   507,   510,   499,   506,
     565,   615,   734,   958,  1187,   958,   241,   246,   289,   958,
     477,   958,   453,   958,   505,   156,   184,   156,   154,   790,
    1191,  1100,   241,   632,   898,   640,   386,   657,  1184,    28,
     136,   174,   620,   804,   804,   134,   175,  1178,   386,   641,
      31,   555,   506,  1178,   122,   785,   401,   787,  1187,   589,
     833,   620,   697,   272,   690,   507,   510,   405,   655,   506,
     654,   109,   121,   280,  1178,   405,   944,   634,   713,   714,
     715,   716,  1192,   661,   154,   506,  1187,   887,   899,   900,
    1193,   898,  1176,   182,   739,   584,   584,   584,  1178,   258,
     584,   854,   843,   843,   843,   843,   154,  1101,   154,   506,
    1140,   506,   507,   510,   507,  1102,   296,   507,   391,   341,
     507,   507,  1100,   507,  1101,  1101,  1100,   507,   272,  1125,
    1066,  1067,  1107,   510,  1056,   506,  1177,  1054,   255,   386,
    1061,  1054,   198,  1054,  1073,   506,  1073,  1192,  1027,   429,
     443,   474,   506,  1042,  1043,  1100,  1100,   404,  1119,  1027,
    1098,   507,  1009,  1171,   854,   255,   854,   507,   898,   647,
     257,   908,   833,   876,   876,   297,   898,   657,   507,   364,
     331,   999,   666,   670,   507,  1075,   135,   447,   672,   670,
    1138,  1138,   672,   507,   506,   669,   507,  1178,   507,  1076,
     507,   510,   804,   585,   807,   659,   644,   833,  1199,   684,
     626,   662,   663,   664,   664,   485,   485,   506,   592,  1190,
    1178,   364,   506,  1184,   908,   817,   506,   506,   825,   540,
    1187,   536,  1187,   331,   999,  1178,   405,   304,   405,   405,
     149,   585,   839,   527,   111,   614,   565,   616,   617,  1187,
    1187,   246,   641,   499,   641,  1187,  1187,   438,  1187,   858,
      31,   913,   913,  1176,   791,   507,   657,   222,   645,   177,
     506,   796,   287,   506,   507,    22,    70,    78,   105,   178,
     347,   636,   636,   760,  1180,   507,  1012,   760,   315,   343,
     786,   506,   136,    31,   621,   507,    48,   625,   259,   656,
    1175,   655,   316,   316,    52,    60,   216,   507,   510,  1075,
     833,   873,   874,   889,   507,   510,  1070,   738,   239,   390,
     740,   741,   584,  1100,  1101,  1140,   507,  1112,  1137,    48,
     239,   422,    48,  1027,   507,   510,    31,  1068,  1100,  1177,
     507,  1100,   506,  1054,  1061,   507,  1073,   507,   507,   506,
     479,   506,   507,   510,  1120,  1121,  1192,   507,   856,   867,
     584,   875,   657,   506,   877,   877,  1176,   657,   791,  1178,
     356,    31,    11,  1027,  1027,   680,   765,   386,   586,   666,
     626,   662,   662,   595,   331,   999,  1178,  1140,   881,   149,
     820,   907,  1140,  1140,   356,   832,   833,   832,   833,  1177,
     584,   606,  1187,   507,   510,   641,   913,    34,   173,   149,
     239,   639,   155,   271,   336,   255,   649,   650,   651,   356,
     507,  1184,     5,   797,   328,   143,   819,   589,   944,  1100,
     287,  1012,   654,   653,   290,   449,   689,   629,   661,   507,
     656,    60,   258,    60,   136,   219,   701,   715,   507,   510,
     894,   899,   117,   390,   738,   507,   507,   507,   296,   391,
    1029,   290,   316,  1126,  1069,  1066,   506,   507,  1177,   507,
    1137,   506,  1137,  1043,   510,    31,   154,   876,   402,   648,
     908,   878,   878,   640,   791,  1178,  1075,  1075,   507,   507,
     507,  1100,   666,   666,   510,   356,   507,   261,   321,   294,
     821,   820,   507,   507,  1178,   405,   450,   717,   718,   617,
     122,   179,   109,   384,   255,   651,   255,   650,  1178,   506,
     507,   510,  1178,   833,    31,    31,   507,  1184,   944,   655,
     654,   506,   690,   661,   258,   258,  1187,   506,   440,   589,
     874,   898,    23,   188,   932,    42,    87,   375,  1100,  1127,
    1128,  1127,   507,  1073,   507,   507,  1042,   507,  1121,  1123,
     854,   877,   506,   791,   507,   645,   999,   507,   507,   595,
    1178,  1184,    48,   821,   999,   833,   434,   446,   604,   477,
     315,    51,   239,   308,   331,   652,   652,   507,     5,   760,
     816,  1012,   506,   656,   655,   641,   690,   702,   987,   988,
    1187,  1187,   656,   242,   506,   927,   929,   934,   989,   994,
    1001,  1012,  1128,   315,   148,   278,   148,   278,   133,  1129,
    1129,   507,   507,   584,   878,  1100,   649,   507,   999,   881,
     833,   193,   140,   471,   787,    17,   104,   246,   944,     4,
     788,   789,  1186,  1187,  1195,   661,   656,   507,   255,   703,
     507,   510,   506,   704,  1070,   928,   929,   930,  1014,  1015,
      28,    87,   162,   239,   484,   507,   791,  1176,   463,   213,
     136,   507,   510,   690,   661,   482,   692,   693,   694,    22,
     445,   451,   477,  1186,   702,   988,    86,   110,   130,   150,
     165,   246,   289,   439,   455,   507,   705,   706,   707,   708,
    1195,   259,   709,   507,   509,  1128,   315,   459,  1186,   287,
     789,   690,    48,   506,   665,   482,   691,   694,  1187,  1186,
     958,   958,   241,   289,   958,   958,   453,   958,    86,   110,
     130,   150,   165,   246,   289,   439,   455,   507,   708,   507,
     510,   493,   506,   710,   722,   930,   316,   464,   721,  1184,
     689,   104,   272,   626,   667,   677,   683,   685,   686,   358,
     694,  1187,  1187,   246,   499,   641,  1187,  1187,   438,  1187,
     707,   506,   807,   507,   711,   712,  1195,   125,   450,   718,
     719,   720,   723,   506,   506,   272,  1199,   507,   510,   664,
     678,   678,   506,   641,   641,   507,   510,  1187,   949,   434,
     661,   477,   788,   641,  1199,   683,   662,   664,   664,   668,
     507,   712,  1186,  1187,   465,   471,   507,   507,   666,   662,
     662,   507,   213,   666,   666,  1186,   721
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   512,   513,   514,   514,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   516,   516,   517,   517,   518,   518,   518,   518,   518,
     519,   519,   519,   519,   520,   521,   522,   523,   524,   525,
     525,   525,   525,   525,   525,   526,   527,   527,   528,   528,
     529,   529,   530,   530,   531,   531,   531,   531,   531,   531,
     531,   531,   531,   531,   531,   531,   531,   531,   532,   532,
     532,   532,   532,   532,   533,   533,   534,   535,   535,   536,
     537,   537,   538,   538,   539,   539,   540,   541,   542,   543,
     543,   544,   544,   545,   546,   546,   547,   547,   548,   548,
     549,   550,   551,   551,   552,   552,   553,   553,   553,   553,
     554,   554,   555,   555,   556,   556,   556,   556,   556,   556,
     557,   557,   557,   558,   558,   558,   559,   559,   559,   559,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   561,   561,   562,   562,   563,   563,   564,   564,   564,
     564,   565,   565,   565,   565,   566,   566,   566,   566,   566,
     566,   566,   567,   567,   567,   568,   568,   569,   570,   570,
     570,   570,   571,   571,   572,   572,   573,   573,   574,   574,
     574,   574,   574,   575,   576,   576,   577,   577,   578,   579,
     579,   579,   579,   579,   580,   580,   580,   580,   580,   580,
     580,   580,   580,   580,   580,   580,   580,   580,   580,   580,
     580,   581,   581,   582,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   582,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   582,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   582,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   582,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   583,   583,   584,   584,   584,   585,   585,
     586,   586,   587,   587,   587,   587,   588,   589,   589,   590,
     590,   591,   591,   591,   591,   592,   592,   593,   593,   593,
     594,   594,   594,   595,   595,   595,   596,   596,   596,   596,
     596,   596,   596,   596,   596,   596,   596,   596,   596,   596,
     596,   597,   598,   598,   599,   599,   599,   599,   600,   600,
     601,   601,   602,   602,   603,   603,   604,   604,   605,   605,
     605,   606,   606,   607,   607,   608,   608,   608,   608,   608,
     608,   608,   608,   608,   608,   608,   608,   608,   608,   608,
     608,   608,   609,   609,   610,   610,   611,   611,   612,   612,
     613,   613,   614,   615,   615,   615,   615,   615,   616,   616,
     617,   618,   618,   618,   618,   619,   619,   619,   619,   619,
     619,   619,   619,   620,   620,   621,   621,   622,   622,   623,
     623,   624,   624,   624,   624,   625,   625,   626,   626,   627,
     628,   629,   629,   630,   630,   630,   630,   631,   631,   632,
     632,   632,   632,   632,   632,   632,   633,   633,   633,   633,
     634,   635,   635,   635,   636,   636,   636,   636,   636,   636,
     637,   637,   638,   638,   638,   638,   638,   638,   638,   639,
     639,   640,   640,   641,   641,   642,   643,   643,   644,   645,
     645,   645,   645,   646,   646,   647,   647,   648,   648,   649,
     649,   649,   649,   649,   650,   651,   652,   652,   652,   652,
     652,   653,   653,   654,   654,   654,   654,   655,   655,   655,
     655,   656,   656,   657,   657,   658,   659,   659,   660,   660,
     660,   660,   661,   661,   662,   662,   663,   663,   664,   664,
     664,   664,   665,   665,   666,   666,   667,   667,   668,   668,
     669,   669,   669,   669,   670,   670,   670,   671,   671,   672,
     672,   672,   673,   674,   675,   675,   676,   676,   677,   677,
     677,   678,   678,   679,   679,   680,   680,   681,   681,   682,
     682,   683,   683,   683,   683,   684,   684,   684,   684,   685,
     686,   687,   688,   689,   689,   689,   690,   690,   691,   692,
     692,   693,   694,   694,   694,   694,   695,   696,   697,   697,
     697,   698,   699,   699,   699,   700,   700,   701,   701,   702,
     702,   703,   703,   703,   703,   703,   703,   704,   704,   704,
     704,   705,   705,   706,   706,   707,   707,   708,   708,   708,
     708,   708,   708,   708,   708,   708,   708,   708,   709,   709,
     710,   710,   711,   711,   712,   713,   713,   714,   714,   715,
     715,   716,   717,   717,   718,   718,   718,   719,   719,   720,
     720,   721,   721,   721,   722,   722,   723,   723,   724,   725,
     726,   726,   727,   728,   729,   729,   730,   730,   731,   731,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   733,   733,   734,   734,   734,   734,   735,   735,
     736,   736,   737,   737,   738,   738,   739,   739,   740,   740,
     741,   741,   742,   742,   743,   743,   744,   745,   745,   746,
     746,   747,   747,   748,   748,   749,   749,   749,   750,   751,
     751,   752,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   753,   754,   755,   755,   755,
     755,   756,   756,   757,   757,   758,   758,   759,   759,   760,
     760,   761,   761,   762,   763,   763,   764,   764,   764,   764,
     765,   766,   767,   768,   769,   769,   770,   770,   771,   771,
     772,   772,   773,   773,   773,   774,   774,   775,   775,   776,
     777,   777,   777,   778,   778,   779,   780,   780,   781,   781,
     781,   782,   782,   783,   783,   783,   783,   783,   784,   784,
     785,   785,   786,   786,   787,   787,   788,   788,   788,   789,
     789,   789,   789,   790,   790,   791,   791,   792,   792,   792,
     792,   792,   792,   793,   793,   794,   794,   795,   795,   796,
     797,   797,   798,   799,   799,   799,   799,   800,   801,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   803,   803,   804,   805,   805,   806,
     806,   807,   807,   807,   807,   807,   807,   807,   808,   809,
     809,   810,   811,   811,   812,   812,   813,   813,   813,   814,
     814,   815,   816,   816,   817,   817,   817,   817,   817,   818,
     818,   819,   819,   820,   820,   820,   821,   821,   822,   823,
     823,   824,   824,   825,   825,   826,   826,   827,   827,   828,
     829,   830,   830,   830,   830,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   832,   832,   833,   833,   834,
     834,   835,   836,   836,   836,   837,   837,   837,   837,   837,
     837,   837,   837,   837,   837,   837,   837,   837,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   839,   839,   840,   840,   840,   840,   840,
     841,   841,   842,   842,   842,   842,   842,   842,   842,   842,
     842,   842,   842,   842,   842,   843,   843,   844,   844,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   846,   846,   847,   847,   848,
     849,   849,   850,   850,   850,   850,   850,   851,   851,   852,
     852,   852,   852,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     854,   854,   855,   855,   856,   856,   857,   857,   858,   859,
     860,   860,   861,   861,   862,   862,   863,   864,   864,   865,
     865,   865,   866,   866,   866,   867,   867,   867,   867,   868,
     869,   869,   870,   870,   871,   871,   872,   872,   873,   873,
     874,   874,   874,   875,   875,   876,   876,   876,   877,   877,
     877,   878,   878,   878,   879,   879,   879,   880,   880,   881,
     881,   882,   882,   883,   883,   884,   884,   885,   885,   885,
     885,   885,   886,   886,   886,   886,   886,   887,   888,   889,
     889,   889,   890,   890,   890,   891,   892,   892,   892,   892,
     893,   893,   894,   894,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   896,   896,   896,
     896,   897,   897,   898,   898,   899,   900,   900,   901,   902,
     902,   903,   903,   904,   904,   905,   905,   906,   906,   907,
     907,   907,   907,   908,   908,   909,   910,   910,   911,   911,
     912,   912,   912,   913,   913,   913,   914,   915,   915,   916,
     916,   916,   917,   917,   918,   918,   919,   920,   920,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   922,   922,   923,   923,   924,
     924,   924,   924,   924,   924,   924,   924,   924,   924,   924,
     924,   924,   924,   924,   924,   924,   924,   924,   924,   924,
     924,   924,   924,   925,   925,   925,   925,   925,   925,   925,
     925,   925,   925,   925,   925,   925,   925,   925,   925,   925,
     925,   925,   925,   926,   927,   927,   927,   928,   928,   929,
     929,   929,   929,   929,   930,   930,   931,   931,   931,   931,
     932,   932,   932,   933,   933,   934,   935,   935,   936,   937,
     937,   938,   938,   938,   938,   938,   938,   938,   938,   938,
     938,   938,   938,   938,   938,   939,   939,   939,   940,   940,
     940,   940,   940,   941,   941,   941,   942,   942,   943,   943,
     943,   943,   944,   944,   944,   944,   945,   946,   947,   947,
     948,   948,   948,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   948,   948,   948,   948,   949,   949,   950,   950,
     951,   952,   952,   953,   954,   954,   955,   955,   956,   957,
     957,   957,   957,   957,   957,   957,   958,   958,   959,   960,
     960,   960,   960,   960,   960,   961,   962,   962,   962,   963,
     963,   964,   964,   964,   964,   964,   965,   965,   966,   966,
     966,   966,   966,   967,   967,   967,   967,   968,   968,   969,
     969,   970,   970,   971,   971,   972,   972,   973,   973,   974,
     974,   974,   974,   975,   975,   975,   975,   975,   975,   975,
     975,   975,   975,   976,   976,   977,   977,   978,   979,   979,
     980,   980,   980,   981,   982,   982,   983,   983,   983,   983,
     984,   984,   985,   985,   986,   986,   986,   986,   987,   987,
     988,   989,   990,   990,   990,   991,   991,   992,   993,   993,
     994,   995,   995,   996,   997,   997,   998,   998,   998,   998,
     998,   998,   998,   998,   999,   999,  1000,  1000,  1001,  1002,
    1002,  1003,  1003,  1004,  1005,  1006,  1007,  1007,  1008,  1009,
    1010,  1010,  1010,  1010,  1010,  1010,  1011,  1011,  1011,  1012,
    1012,  1013,  1013,  1014,  1014,  1015,  1015,  1015,  1015,  1015,
    1015,  1015,  1015,  1016,  1016,  1017,  1017,  1017,  1017,  1017,
    1017,  1018,  1018,  1019,  1019,  1020,  1021,  1021,  1022,  1022,
    1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,  1024,
    1024,  1025,  1025,  1025,  1026,  1026,  1026,  1026,  1027,  1027,
    1028,  1029,  1029,  1030,  1030,  1031,  1031,  1031,  1031,  1032,
    1032,  1033,  1033,  1033,  1033,  1034,  1034,  1035,  1035,  1036,
    1037,  1037,  1037,  1038,  1038,  1039,  1039,  1040,  1040,  1041,
    1041,  1042,  1042,  1043,  1043,  1043,  1043,  1043,  1044,  1044,
    1045,  1045,  1046,  1046,  1047,  1047,  1048,  1049,  1049,  1049,
    1049,  1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,  1054,
    1054,  1054,  1054,  1054,  1054,  1054,  1055,  1055,  1055,  1055,
    1055,  1055,  1056,  1056,  1056,  1056,  1057,  1057,  1058,  1058,
    1058,  1058,  1058,  1059,  1059,  1059,  1059,  1060,  1060,  1061,
    1061,  1062,  1062,  1062,  1062,  1063,  1063,  1064,  1064,  1064,
    1065,  1065,  1066,  1067,  1067,  1068,  1068,  1069,  1069,  1070,
    1070,  1071,  1071,  1071,  1072,  1072,  1073,  1073,  1074,  1075,
    1075,  1075,  1075,  1075,  1075,  1076,  1076,  1077,  1077,  1077,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1079,  1079,  1079,
    1079,  1080,  1080,  1081,  1081,  1082,  1082,  1082,  1082,  1082,
    1082,  1082,  1082,  1082,  1082,  1082,  1083,  1083,  1084,  1084,
    1085,  1085,  1086,  1087,  1088,  1088,  1089,  1089,  1090,  1091,
    1092,  1092,  1092,  1092,  1092,  1092,  1093,  1093,  1094,  1094,
    1095,  1095,  1095,  1095,  1096,  1097,  1097,  1097,  1098,  1098,
    1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,
    1098,  1098,  1099,  1099,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1100,  1101,  1101,  1101,  1101,  1101,  1101,  1101,
    1101,  1101,  1101,  1101,  1101,  1101,  1101,  1101,  1101,  1101,
    1101,  1101,  1101,  1101,  1101,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1103,
    1103,  1103,  1104,  1105,  1105,  1105,  1105,  1105,  1105,  1105,
    1106,  1106,  1107,  1107,  1108,  1108,  1108,  1108,  1108,  1108,
    1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,
    1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,
    1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,
    1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,  1108,
    1108,  1109,  1109,  1110,  1110,  1110,  1110,  1111,  1112,  1112,
    1113,  1113,  1114,  1114,  1115,  1115,  1115,  1116,  1116,  1116,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1120,  1120,  1121,
    1122,  1122,  1122,  1123,  1124,  1124,  1125,  1125,  1126,  1126,
    1126,  1127,  1127,  1128,  1128,  1128,  1128,  1128,  1129,  1129,
    1129,  1129,  1129,  1130,  1130,  1130,  1131,  1131,  1131,  1132,
    1132,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1134,  1134,  1135,  1135,  1136,  1136,  1136,  1136,  1136,  1136,
    1137,  1137,  1138,  1138,  1139,  1139,  1140,  1140,  1141,  1141,
    1142,  1142,  1142,  1143,  1143,  1144,  1144,  1145,  1145,  1145,
    1145,  1145,  1145,  1145,  1145,  1146,  1146,  1147,  1148,  1148,
    1149,  1149,  1149,  1149,  1149,  1149,  1150,  1151,  1152,  1152,
    1152,  1153,  1153,  1154,  1155,  1155,  1156,  1157,  1157,  1158,
    1158,  1159,  1159,  1160,  1161,  1161,  1162,  1163,  1163,  1164,
    1164,  1165,  1165,  1165,  1165,  1166,  1166,  1167,  1167,  1168,
    1168,  1169,  1169,  1170,  1170,  1171,  1172,  1172,  1173,  1173,
    1174,  1174,  1174,  1174,  1174,  1175,  1175,  1176,  1176,  1177,
    1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1184,  1185,
    1185,  1185,  1185,  1185,  1185,  1185,  1185,  1185,  1185,  1185,
    1185,  1185,  1186,  1187,  1188,  1189,  1190,  1190,  1191,  1191,
    1191,  1192,  1192,  1192,  1193,  1193,  1193,  1194,  1194,  1194,
    1194,  1195,  1195,  1195,  1195,  1195,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1197,  1198,  1198,  1198,  1198,  1198,  1199,  1199,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,
    1200,  1200,  1200,  1200,  1200,  1200,  1200,  1200,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     5,     7,     2,     0,     3,     3,     3,     1,     1,
       5,     7,     7,     9,     4,     6,     4,     6,     1,     2,
       2,     2,     2,     2,     2,     5,     1,     0,     2,     0,
       2,     0,     1,     4,     2,     2,     3,     3,     1,     3,
       3,     3,     3,     2,     2,     2,     1,     1,     1,     2,
       2,     2,     3,     3,     2,     2,     4,     1,     1,     3,
       2,     0,     3,     0,     1,     3,     3,     5,     5,     0,
       3,     5,     5,     5,     5,     5,     3,     5,     3,     5,
       5,     6,     1,     1,     3,     5,     6,     4,     9,     7,
       1,     0,     2,     0,     1,     1,     1,     1,     1,     1,
       2,     3,     3,     2,     5,     1,     3,     3,     3,     3,
       1,     3,     3,     2,     2,     2,     2,     3,     3,     3,
       3,     1,     3,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     3,     6,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     1,     2,
       3,     2,     1,     1,     2,     1,     2,     1,     2,     3,
       4,     3,     2,     4,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     4,     6,     5,    10,    13,     4,
       6,    10,    13,     4,     6,     4,     6,     5,     7,    11,
      14,     1,     3,     2,     3,     4,     6,     6,     6,     5,
       5,     6,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     3,     3,     3,     3,     3,     4,     4,     3,     3,
       3,     3,     3,     3,     4,     4,     3,     2,     3,     2,
       4,     3,     1,     2,     3,     2,     2,     3,     3,     2,
       2,     3,     1,     3,     2,     1,     1,     0,     2,     0,
       2,     0,     1,     1,     1,     3,     3,     2,     0,     1,
       3,     3,     1,     5,     3,     6,     0,     2,     2,     0,
       1,     4,     8,     2,     3,     2,     5,     7,     6,     3,
       6,     6,     3,     2,     6,     4,     6,     5,     6,     7,
       3,     4,     1,     3,     4,     6,     4,     8,     2,     2,
      13,     7,     1,     1,     1,     0,     3,     0,     1,     1,
       1,     1,     3,     2,     0,     1,     1,     1,     3,     3,
       1,     1,     3,     3,     3,     3,     4,     3,     2,     3,
       3,     2,     1,     0,     2,     0,     3,     0,     1,     0,
       1,     3,     2,     1,     1,     1,     3,     0,     1,     3,
       1,    13,    16,    12,    15,     1,     1,     2,     2,     2,
       2,     1,     0,     1,     0,     3,     0,     1,     3,     1,
       3,     1,     1,     1,     1,     1,     1,     4,     4,     5,
       4,     2,     0,     3,     1,     1,     2,     2,     0,     2,
       1,     3,     4,     5,     2,     5,     1,     2,     2,     2,
       3,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       3,     1,     5,     7,     3,     8,     4,     9,    11,     2,
       0,     3,     0,     1,     3,     1,     1,     3,     2,     2,
       2,     2,     0,     1,     3,     3,     6,     4,     0,     1,
       1,     2,     2,     0,     3,     3,     2,     1,     1,     2,
       2,     4,     0,     2,     2,     2,     0,     3,     4,     4,
       0,     2,     0,     4,     0,     3,     2,     0,     6,     3,
       2,     2,     1,     0,     1,     0,     1,     2,     4,     2,
       2,     0,     3,     0,     3,     0,     1,     3,     1,     3,
       1,     6,     3,     2,     1,     3,     5,     1,     3,     1,
       1,     0,     5,     5,     4,     0,     1,     0,     1,     3,
       2,     1,     0,     3,     5,     1,     3,     4,     4,     1,
       1,     5,     5,     4,     1,     5,     5,     4,     1,     2,
       3,     2,     3,     1,     1,     0,     8,     0,     5,     1,
       0,     6,     2,     1,     2,     3,     9,     5,     2,     3,
       0,    18,     1,     1,     0,     1,     0,     5,     3,     2,
       0,     2,     3,     2,     2,     3,     2,     3,     3,     2,
       0,     1,     2,     1,     3,     3,     5,     3,     3,     1,
       1,     3,     3,     4,     3,     3,     3,     3,     2,     0,
       3,     2,     1,     3,     2,     1,     0,     1,     3,     1,
       1,     2,     6,     0,     4,     2,     0,     6,     0,     1,
       3,     1,     1,     0,     2,     0,     3,     3,     9,     4,
       1,     0,     6,     5,     4,     6,     1,     0,     1,     2,
       2,     1,     2,     3,     2,     2,     2,     2,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     1,     1,     3,
       6,    10,     1,     0,     1,     2,     2,     0,     2,     2,
       1,     0,     5,     7,     1,     0,     7,     2,     0,     3,
       5,     5,     8,     2,     0,     2,     2,     2,     5,     2,
       0,     2,     7,    10,     6,     6,     6,     6,     7,     7,
       9,     9,     6,     7,     6,     8,     8,     8,     8,     6,
       6,     7,     7,     8,     6,     6,     7,     2,     2,     2,
       2,     1,     2,     1,     0,     6,     8,     7,     6,     4,
       0,     1,     3,     4,     1,     3,     1,     2,     2,     2,
       2,     1,     1,    10,     2,     0,     2,     2,     1,     0,
       4,     6,     5,     4,     4,    10,    13,     5,     7,     8,
       1,     1,     1,     7,     9,     8,    15,    20,     1,     1,
       2,     1,     3,     1,     1,     1,     3,     1,     3,     0,
       1,     0,     1,     1,     4,     0,     1,     3,     0,     1,
       1,     1,     1,     2,     0,     0,     2,     2,     1,     2,
       2,     2,     2,     6,     8,    11,    13,     1,     3,     5,
       1,     3,     5,     1,     2,     2,     1,     8,     4,     6,
       5,     4,     4,     3,     7,     6,     8,     6,     6,     6,
       6,     6,     4,     5,     1,     0,     3,     1,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       3,     3,     1,     0,     1,     3,     7,     9,     9,     3,
       0,    13,     1,     3,     5,     6,     4,     7,     2,     1,
       0,     2,     0,     2,     4,     0,     1,     0,     6,     8,
       8,     1,     3,     5,     5,     7,     9,     7,     9,     5,
       6,     6,     4,     5,     7,     1,     2,     3,     1,     1,
       2,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     1,     1,     3,     1,     2,     2,
       3,     5,     2,     2,     0,     6,     7,     7,     7,     8,
       8,     6,     8,     9,     9,     7,    10,     7,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     1,     3,     2,     3,     3,     3,
       3,     2,     2,     1,     1,     8,     9,     9,     9,     9,
       2,     0,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     2,     1,
       2,     3,     3,     3,     3,     4,     4,     3,     3,     3,
       4,     4,     3,     4,     4,     1,     1,     1,     0,     7,
       7,    10,     1,     1,     2,     4,     5,     1,     3,     2,
       2,     2,     2,     1,     2,     2,     4,     3,     2,     2,
       2,     2,     3,     2,     2,     2,     2,     5,     5,     5,
       1,     3,     1,     2,     3,     0,     1,     3,     2,     6,
       6,     9,     3,     0,     3,     0,     5,     2,     0,     3,
       3,     3,     7,     7,    10,     1,     1,     1,     1,    14,
       1,     0,     1,     0,     1,     0,     2,     0,     1,     3,
       5,     5,     7,     2,     0,     1,     2,     0,     1,     1,
       0,     1,     1,     0,     9,    12,     7,     2,     0,     3,
       2,     1,     3,     3,     2,     1,     3,     3,     3,     2,
       2,     1,     1,     1,     1,     2,     1,     1,     1,     1,
       4,     5,     1,     3,     3,     1,     3,     3,     5,     6,
       1,     3,     1,     2,     4,     5,     1,     1,     1,     1,
       3,     3,     2,     2,     1,     2,     2,     2,     1,     2,
       2,     3,     3,     3,     3,     3,     4,     2,     2,     1,
       1,     1,     3,     2,     0,     2,     1,     3,     5,     1,
       2,     1,     0,     5,     7,     5,     7,     5,     7,     3,
       5,     5,     5,     1,     3,     2,     1,     2,     1,     2,
      11,    10,    10,     2,     2,     0,     9,     2,     0,     4,
       4,     4,     1,     1,     1,     0,     7,     5,     5,     7,
       6,     6,     6,     6,     8,     8,     6,     6,     7,     9,
       9,     6,     6,     6,     8,     6,     8,     6,     8,     7,
       9,     6,     8,     7,     9,     8,    10,     9,    11,     8,
       9,    11,     8,     8,     7,     6,     6,     6,     8,     8,
       8,     8,     6,     9,     6,     1,     0,     2,     0,     7,
       6,     6,     6,     6,     6,     7,     9,     9,     6,     8,
       8,     8,     8,     8,     6,     8,     6,     8,     7,     9,
       7,     9,     6,     7,     6,     6,     6,     6,     6,     7,
       7,     7,     9,     9,     6,     6,     6,     6,     8,     8,
       8,     6,     7,    13,     1,     1,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     0,     6,     8,     3,     2,     0,     2,     2,
       2,     2,     3,     3,     2,     2,     2,     2,     3,     2,
       5,     4,     3,     3,     3,     1,     1,     0,     3,     2,
       2,     1,     2,     1,     3,     2,     1,     0,     9,    11,
      12,    14,     3,     4,     4,     0,     2,     5,     2,     0,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     4,     3,     3,     1,     0,     5,     6,
       4,     2,     0,     4,     3,     5,     4,     4,     6,     4,
       6,     6,     5,     7,     9,     6,     1,     0,     6,    11,
      11,    11,    13,     9,    11,    10,     4,     2,     5,     2,
       0,     4,     5,     5,     4,     6,     1,     3,     1,     1,
       1,     1,     1,     3,     4,     5,     5,     1,     1,     1,
       0,     2,     0,     1,     0,     1,     0,     3,     0,     2,
       5,     4,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     3,     2,     1,     1,
       1,     1,     0,     5,     3,     0,     1,     1,     1,     1,
       3,     9,     3,     0,     2,     3,     2,     3,     1,     3,
       1,     6,     1,     4,     2,     1,     3,     2,     2,     0,
       7,     2,     0,     6,     3,     0,     2,     2,     2,     3,
       1,     3,     1,     2,     1,     0,     2,     0,     8,     1,
       3,     1,     1,     3,     5,     2,     1,     3,     7,     1,
       0,     3,     2,     2,     2,     3,     0,     2,     2,     1,
       1,     5,     5,     3,     3,     1,     2,     4,     4,     2,
       3,     5,     5,     1,     1,     9,     1,     2,     4,     4,
       4,     2,     3,     1,     3,     6,     1,     0,     2,     0,
       3,     3,     4,     4,     4,     4,     3,     2,     1,     1,
       0,     1,     1,     0,     1,     5,     1,     0,     1,     0,
       3,     1,     3,     4,     3,     2,     2,     1,     1,     1,
       0,     2,     4,     5,     4,     2,     3,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     3,
       0,     1,     3,     1,     4,     4,     5,     2,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     2,     3,     2,     0,     1,     3,     2,
       2,     3,     2,     3,     1,     4,     3,     4,     5,     4,
       5,     4,     5,     2,     4,     1,     1,     0,     1,     4,
       5,     4,     0,     2,     2,     2,     1,     1,     0,     4,
       2,     1,     2,     2,     4,     1,     3,     1,     2,     3,
       2,     6,     2,     1,     3,     4,     0,     1,     0,     2,
       0,     2,     4,     0,     1,     0,     1,     3,     3,     2,
       3,     5,     6,     2,     3,     1,     4,     3,     4,     0,
       1,     1,     1,     1,     1,     2,     5,     1,     1,     1,
       1,     2,     3,     3,     0,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     2,     1,     3,     0,     1,     1,
       1,     1,     5,     2,     1,     1,     1,     1,     5,     2,
       2,     2,     1,     3,     3,     2,     1,     0,     3,     0,
       5,     2,     5,     2,     1,     2,     3,     0,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     4,     1,     3,     3,     5,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     3,     3,     2,     3,     5,     4,     6,     3,
       5,     4,     6,     4,     6,     5,     7,     3,     2,     4,
       2,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       2,     3,     4,     1,     3,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     5,
       6,     6,     7,     3,     4,     1,     1,     2,     4,     1,
       1,     1,     1,     2,     2,     2,     2,     4,     1,     0,
       2,     3,     2,     3,     5,     6,     8,     6,     6,     4,
       4,     1,     1,     1,     5,     1,     1,     4,     1,     4,
       1,     4,     1,     4,     1,     1,     1,     1,     1,     1,
       6,     4,     4,     4,     4,     6,     5,     5,     5,     4,
       6,     4,     4,     4,     4,     3,     4,     6,     4,     5,
       7,     7,     9,     5,     6,     4,     6,     5,     7,     7,
       7,     2,     3,     3,     3,     4,     0,     4,     1,     3,
       3,     1,     1,     1,     2,     2,     0,     2,     4,     4,
       6,     5,     0,     5,     0,     2,     0,     1,     3,     3,
       2,     2,     0,     6,     1,     0,     3,     0,     3,     3,
       0,     1,     4,     2,     2,     2,     2,     2,     3,     2,
       2,     3,     0,     4,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     1,     4,     1,     4,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     1,     3,
       3,     3,     2,     1,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     3,     2,     3,     0,
       3,     3,     2,     2,     1,     0,     2,     2,     3,     2,
       1,     1,     3,     5,     1,     2,     4,     1,     5,     2,
       0,     1,     0,     6,     1,     2,     4,     2,     0,     1,
       2,     2,     2,     3,     5,     1,     2,     0,     2,     1,
       0,     1,     1,     1,     3,     3,     1,     0,     1,     3,
       3,     2,     2,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     6,     2,     3,     6,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF

/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YYLOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

# ifndef YYLOCATION_PRINT

#  if defined YY_LOCATION_PRINT

   /* Temporary convenience wrapper in case some people defined the
      undocumented and private YY_LOCATION_PRINT macros.  */
#   define YYLOCATION_PRINT(File, Loc)  YY_LOCATION_PRINT(File, *(Loc))

#  elif defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static int
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  int res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
}

#   define YYLOCATION_PRINT  yy_location_print_

    /* Temporary convenience wrapper in case some people defined the
       undocumented and private YY_LOCATION_PRINT macros.  */
#   define YY_LOCATION_PRINT(File, Loc)  YYLOCATION_PRINT(File, &(Loc))

#  else

#   define YYLOCATION_PRINT(File, Loc) ((void) 0)
    /* Temporary convenience wrapper in case some people defined the
       undocumented and private YY_LOCATION_PRINT macros.  */
#   define YY_LOCATION_PRINT  YYLOCATION_PRINT

#  endif
# endif /* !defined YYLOCATION_PRINT */


# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (yylocationp);
  YY_USE (yyscanner);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  YYLOCATION_PRINT (yyo, yylocationp);
  YYFPRINTF (yyo, ": ");
  yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,
                 int yyrule, core_yyscan_t yyscanner)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)],
                       &(yylsp[(yyi + 1) - (yynrhs)]), yyscanner);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, yyscanner); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
{
  YY_USE (yyvaluep);
  YY_USE (yylocationp);
  YY_USE (yyscanner);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (core_yyscan_t yyscanner)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

    /* The location stack: array, bottom, top.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls = yylsa;
    YYLTYPE *yylsp = yyls;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[3];



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  yylsp[0] = yylloc;
  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yyls1, yysize * YYSIZEOF (*yylsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
        yyls = yyls1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, &yylloc, yyscanner);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      yyerror_range[1] = yylloc;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location. */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  yyerror_range[1] = yyloc;
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* stmtblock: stmtmulti  */
#line 1135 "gram.y"
                        {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[0].list);
			}
#line 26959 "gram.cpp"
    break;

  case 3: /* stmtmulti: stmtmulti ';' stmt  */
#line 1142 "gram.y"
                                {
					if ((yyvsp[0].node) != NULL)
						(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
					else
						(yyval.list) = (yyvsp[-2].list);
				}
#line 26970 "gram.cpp"
    break;

  case 4: /* stmtmulti: stmt  */
#line 1149 "gram.y"
                                {
					if ((yyvsp[0].node) != NULL)
						(yyval.list) = list_make1((yyvsp[0].node));
					else
						(yyval.list) = NIL;
				}
#line 26981 "gram.cpp"
    break;

  case 130: /* stmt: %empty  */
#line 1284 "gram.y"
                                { (yyval.node) = NULL; }
#line 26987 "gram.cpp"
    break;

  case 131: /* CreateQueueStmt: CREATE RESOURCE QUEUE QueueId OptQueueList  */
#line 1295 "gram.y"
                                {
					CreateQueueStmt *n = makeNode(CreateQueueStmt);
					DefElem         *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-1].str);
					n->options = list_concat(lappend((yyvsp[0].list), def1), NULL); 
					(yyval.node) = (Node *)n;
				}
#line 27001 "gram.cpp"
    break;

  case 132: /* CreateQueueStmt: CREATE RESOURCE QUEUE QueueId OptQueueList WITH definition  */
#line 1305 "gram.y"
                                {
					CreateQueueStmt *n    = makeNode(CreateQueueStmt);
					DefElem         *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-3].str);
					n->options = list_concat(lappend((yyvsp[-2].list), def1), (yyvsp[0].list)); 
					(yyval.node) = (Node *)n;
				}
#line 27015 "gram.cpp"
    break;

  case 133: /* OptQueueList: OptQueueList OptQueueElem  */
#line 1320 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 27021 "gram.cpp"
    break;

  case 134: /* OptQueueList: %empty  */
#line 1321 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 27027 "gram.cpp"
    break;

  case 135: /* OptQueueElem: ACTIVE THRESHOLD NumericOnly  */
#line 1326 "gram.y"
                                {
					/* was "activelimit" */
					(yyval.defelt) = makeDefElem("active_statements", (Node *)(yyvsp[0].value));
				}
#line 27036 "gram.cpp"
    break;

  case 136: /* OptQueueElem: COST THRESHOLD NumericOnly  */
#line 1331 "gram.y"
                                {
					/* was "costlimit" */
					(yyval.defelt) = makeDefElem("max_cost", (Node *)(yyvsp[0].value));
				}
#line 27045 "gram.cpp"
    break;

  case 137: /* OptQueueElem: IGNORE_P THRESHOLD NumericOnly  */
#line 1336 "gram.y"
                                {
					/* was "ignorecostlimit" */
					(yyval.defelt) = makeDefElem("min_cost", (Node *)(yyvsp[0].value));
				}
#line 27054 "gram.cpp"
    break;

  case 138: /* OptQueueElem: OVERCOMMIT  */
#line 1341 "gram.y"
                                {
					/* was "overcommit" */
					(yyval.defelt) = makeDefElem("cost_overcommit", (Node *)makeInteger(TRUE));
				}
#line 27063 "gram.cpp"
    break;

  case 139: /* OptQueueElem: NOOVERCOMMIT  */
#line 1346 "gram.y"
                                {
					/* was "overcommit" */
					(yyval.defelt) = makeDefElem("cost_overcommit", (Node *)makeInteger(FALSE));
				}
#line 27072 "gram.cpp"
    break;

  case 140: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList  */
#line 1360 "gram.y"
                                 {
					AlterQueueStmt *n = makeNode(AlterQueueStmt);
					n->queue = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27083 "gram.cpp"
    break;

  case 141: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList WITH definition  */
#line 1367 "gram.y"
                                 {
					AlterQueueStmt *n    = makeNode(AlterQueueStmt);
					DefElem        *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					DefElem        *def2 = /* mark start of WITHOUT items */
						makeDefElem("withoutliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-3].str);
					n->options = list_concat(lappend((yyvsp[-2].list), def1), (yyvsp[0].list)); 
					n->options = lappend(n->options, def2); 
					(yyval.node) = (Node *)n;
				 }
#line 27101 "gram.cpp"
    break;

  case 142: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList WITHOUT definition  */
#line 1381 "gram.y"
                                 {
					AlterQueueStmt *n    = makeNode(AlterQueueStmt);
					DefElem        *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					DefElem        *def2 = /* mark start of WITHOUT items */
						makeDefElem("withoutliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-3].str);
					n->options = lappend((yyvsp[-2].list), def1); 
					n->options = list_concat(lappend(n->options, def2), (yyvsp[0].list)); 
					(yyval.node) = (Node *)n;
				 }
#line 27119 "gram.cpp"
    break;

  case 143: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList WITH definition WITHOUT definition  */
#line 1396 "gram.y"
                                 {
					AlterQueueStmt *n    = makeNode(AlterQueueStmt);
					DefElem        *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					DefElem        *def2 = /* mark start of WITHOUT items */
						makeDefElem("withoutliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-5].str);
					n->options = list_concat(lappend((yyvsp[-4].list), def1), (yyvsp[-2].list)); 
					n->options = list_concat(lappend(n->options, def2), (yyvsp[0].list));
					(yyval.node) = (Node *)n;
				 }
#line 27137 "gram.cpp"
    break;

  case 144: /* DropQueueStmt: DROP RESOURCE QUEUE QueueId  */
#line 1419 "gram.y"
                                 {
					DropQueueStmt *n = makeNode(DropQueueStmt);
					n->queue = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				 }
#line 27147 "gram.cpp"
    break;

  case 145: /* CreateResourceGroupStmt: CREATE RESOURCE GROUP_P name WITH definition  */
#line 1434 "gram.y"
                                {
					CreateResourceGroupStmt *n = makeNode(CreateResourceGroupStmt);
					n->name = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27158 "gram.cpp"
    break;

  case 146: /* DropResourceGroupStmt: DROP RESOURCE GROUP_P name  */
#line 1450 "gram.y"
                                 {
					DropResourceGroupStmt *n = makeNode(DropResourceGroupStmt);
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				 }
#line 27168 "gram.cpp"
    break;

  case 147: /* AlterResourceGroupStmt: ALTER RESOURCE GROUP_P name SET OptResourceGroupList  */
#line 1464 "gram.y"
                                 {
					AlterResourceGroupStmt *n = makeNode(AlterResourceGroupStmt);
					n->name = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27179 "gram.cpp"
    break;

  case 148: /* OptResourceGroupList: OptResourceGroupElem  */
#line 1475 "gram.y"
                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 27185 "gram.cpp"
    break;

  case 149: /* OptResourceGroupElem: CONCURRENCY SignedIconst  */
#line 1480 "gram.y"
                                {
					/* was "concurrency" */
					(yyval.defelt) = makeDefElem("concurrency", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27194 "gram.cpp"
    break;

  case 150: /* OptResourceGroupElem: CPU_RATE_LIMIT SignedIconst  */
#line 1485 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cpu_rate_limit", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27202 "gram.cpp"
    break;

  case 151: /* OptResourceGroupElem: CPUSET Sconst  */
#line 1489 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cpuset", (Node *) makeString((yyvsp[0].str)));
				}
#line 27210 "gram.cpp"
    break;

  case 152: /* OptResourceGroupElem: MEMORY_SHARED_QUOTA SignedIconst  */
#line 1493 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("memory_shared_quota", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27218 "gram.cpp"
    break;

  case 153: /* OptResourceGroupElem: MEMORY_LIMIT SignedIconst  */
#line 1497 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("memory_limit", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27226 "gram.cpp"
    break;

  case 154: /* OptResourceGroupElem: MEMORY_SPILL_RATIO SignedIconst  */
#line 1501 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("memory_spill_ratio", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27234 "gram.cpp"
    break;

  case 155: /* CreateRoleStmt: CREATE ROLE RoleId opt_with OptRoleList  */
#line 1514 "gram.y"
                                {
					CreateRoleStmt *n = makeNode(CreateRoleStmt);
					n->stmt_type = ROLESTMT_ROLE;
					n->role = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27246 "gram.cpp"
    break;

  case 156: /* opt_with: WITH  */
#line 1524 "gram.y"
                                                                                        {}
#line 27252 "gram.cpp"
    break;

  case 157: /* opt_with: %empty  */
#line 1525 "gram.y"
                                                                                                {}
#line 27258 "gram.cpp"
    break;

  case 158: /* OptRoleList: OptRoleList CreateOptRoleElem  */
#line 1534 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 27264 "gram.cpp"
    break;

  case 159: /* OptRoleList: %empty  */
#line 1535 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 27270 "gram.cpp"
    break;

  case 160: /* AlterOptRoleList: AlterOptRoleList AlterOnlyOptRoleElem  */
#line 1539 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 27276 "gram.cpp"
    break;

  case 161: /* AlterOptRoleList: %empty  */
#line 1540 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 27282 "gram.cpp"
    break;

  case 162: /* AlterOnlyOptRoleElem: AlterOptRoleElem  */
#line 1550 "gram.y"
                                                                { (yyval.defelt) = (yyvsp[0].defelt); }
#line 27288 "gram.cpp"
    break;

  case 163: /* AlterOnlyOptRoleElem: DROP DENY FOR deny_point  */
#line 1551 "gram.y"
                                                        { (yyval.defelt) = makeDefElem("drop_deny", (yyvsp[0].node)); }
#line 27294 "gram.cpp"
    break;

  case 164: /* AlterOptRoleElem: PASSWORD Sconst  */
#line 1556 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("password",
									 (Node *)makeString((yyvsp[0].str)));
				}
#line 27303 "gram.cpp"
    break;

  case 165: /* AlterOptRoleElem: PASSWORD NULL_P  */
#line 1561 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("password", NULL);
				}
#line 27311 "gram.cpp"
    break;

  case 166: /* AlterOptRoleElem: ENCRYPTED PASSWORD Sconst  */
#line 1565 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encryptedPassword",
									 (Node *)makeString((yyvsp[0].str)));
				}
#line 27320 "gram.cpp"
    break;

  case 167: /* AlterOptRoleElem: UNENCRYPTED PASSWORD Sconst  */
#line 1570 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("unencryptedPassword",
									 (Node *)makeString((yyvsp[0].str)));
				}
#line 27329 "gram.cpp"
    break;

  case 168: /* AlterOptRoleElem: INHERIT  */
#line 1575 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(TRUE));
				}
#line 27337 "gram.cpp"
    break;

  case 169: /* AlterOptRoleElem: CONNECTION LIMIT SignedIconst  */
#line 1579 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 27345 "gram.cpp"
    break;

  case 170: /* AlterOptRoleElem: VALID UNTIL Sconst  */
#line 1583 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("validUntil", (Node *)makeString((yyvsp[0].str)));
				}
#line 27353 "gram.cpp"
    break;

  case 171: /* AlterOptRoleElem: RESOURCE QUEUE any_name  */
#line 1587 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("resourceQueue", (Node *)(yyvsp[0].list));
				}
#line 27361 "gram.cpp"
    break;

  case 172: /* AlterOptRoleElem: RESOURCE GROUP_P any_name  */
#line 1591 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("resourceGroup", (Node *)(yyvsp[0].list));
				}
#line 27369 "gram.cpp"
    break;

  case 173: /* AlterOptRoleElem: CREATEEXTTABLE exttab_auth_list  */
#line 1595 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exttabauth", (Node *)(yyvsp[0].list));
				}
#line 27377 "gram.cpp"
    break;

  case 174: /* AlterOptRoleElem: NOCREATEEXTTABLE exttab_auth_list  */
#line 1599 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exttabnoauth", (Node *)(yyvsp[0].list));
				}
#line 27385 "gram.cpp"
    break;

  case 175: /* AlterOptRoleElem: USER role_list  */
#line 1604 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[0].list));
				}
#line 27393 "gram.cpp"
    break;

  case 176: /* AlterOptRoleElem: deny_login_role  */
#line 1608 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("deny", (Node *)(yyvsp[0].node));
				}
#line 27401 "gram.cpp"
    break;

  case 177: /* AlterOptRoleElem: IDENT  */
#line 1612 "gram.y"
                                {
					/*
					 * We handle identifiers that aren't parser keywords with
					 * the following special-case codes, to avoid bloating the
					 * size of the main parser.
					 */
					if (strcmp((yyvsp[0].str), "superuser") == 0)
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nosuperuser") == 0)
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "createuser") == 0)
					{
						/* For backwards compatibility, synonym for SUPERUSER */
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(TRUE));
					}
					else if (strcmp((yyvsp[0].str), "nocreateuser") == 0)
					{
						/* For backwards compatibility, synonym for SUPERUSER */
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(FALSE));
					}
					else if (strcmp((yyvsp[0].str), "createrole") == 0)
						(yyval.defelt) = makeDefElem("createrole", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nocreaterole") == 0)
						(yyval.defelt) = makeDefElem("createrole", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "replication") == 0)
						(yyval.defelt) = makeDefElem("isreplication", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "noreplication") == 0)
						(yyval.defelt) = makeDefElem("isreplication", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "createdb") == 0)
						(yyval.defelt) = makeDefElem("createdb", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nocreatedb") == 0)
						(yyval.defelt) = makeDefElem("createdb", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "login") == 0)
						(yyval.defelt) = makeDefElem("canlogin", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nologin") == 0)
						(yyval.defelt) = makeDefElem("canlogin", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "noinherit") == 0)
					{
						/*
						 * Note that INHERIT is a keyword, so it's handled by main parser, but
						 * NOINHERIT is handled here.
						 */
						(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(FALSE));
					}
					else
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("unrecognized role option \"%s\"", (yyvsp[0].str)),
									 parser_errposition((yylsp[0])));
				}
#line 27456 "gram.cpp"
    break;

  case 178: /* CreateOptRoleElem: AlterOptRoleElem  */
#line 1665 "gram.y"
                                                                { (yyval.defelt) = (yyvsp[0].defelt); }
#line 27462 "gram.cpp"
    break;

  case 179: /* CreateOptRoleElem: SYSID Iconst  */
#line 1668 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("sysid", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 27470 "gram.cpp"
    break;

  case 180: /* CreateOptRoleElem: ADMIN role_list  */
#line 1672 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("adminmembers", (Node *)(yyvsp[0].list));
				}
#line 27478 "gram.cpp"
    break;

  case 181: /* CreateOptRoleElem: ROLE role_list  */
#line 1676 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[0].list));
				}
#line 27486 "gram.cpp"
    break;

  case 182: /* CreateOptRoleElem: IN_P ROLE role_list  */
#line 1680 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[0].list));
				}
#line 27494 "gram.cpp"
    break;

  case 183: /* CreateOptRoleElem: IN_P GROUP_P role_list  */
#line 1684 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[0].list));
				}
#line 27502 "gram.cpp"
    break;

  case 184: /* deny_login_role: DENY deny_interval  */
#line 1689 "gram.y"
                                    { (yyval.node) = (Node *)(yyvsp[0].node); }
#line 27508 "gram.cpp"
    break;

  case 185: /* deny_login_role: DENY deny_point  */
#line 1690 "gram.y"
                                          { (yyval.node) = (Node *)(yyvsp[0].node); }
#line 27514 "gram.cpp"
    break;

  case 186: /* deny_interval: BETWEEN deny_point AND deny_point  */
#line 1694 "gram.y"
                                {
					DenyLoginInterval *n = makeNode(DenyLoginInterval);
					n->start = (DenyLoginPoint *)(yyvsp[-2].node);
					n->end = (DenyLoginPoint *)(yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 27525 "gram.cpp"
    break;

  case 187: /* deny_day_specifier: Sconst  */
#line 1702 "gram.y"
                           { (yyval.node) = (Node *)makeString((yyvsp[0].str)); }
#line 27531 "gram.cpp"
    break;

  case 188: /* deny_day_specifier: Iconst  */
#line 1703 "gram.y"
                                 { (yyval.node) = (Node *)makeInteger((yyvsp[0].ival)); }
#line 27537 "gram.cpp"
    break;

  case 189: /* deny_point: DAY_P deny_day_specifier opt_time  */
#line 1707 "gram.y"
                                {
					DenyLoginPoint *n = makeNode(DenyLoginPoint);
					n->day = (Value *)(yyvsp[-1].node);
					n->time = (Value *)(yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 27548 "gram.cpp"
    break;

  case 190: /* opt_time: TIME Sconst  */
#line 1715 "gram.y"
                      { (yyval.node) = (Node *)makeString((yyvsp[0].str)); }
#line 27554 "gram.cpp"
    break;

  case 191: /* opt_time: %empty  */
#line 1716 "gram.y"
                                { (yyval.node) = NULL; }
#line 27560 "gram.cpp"
    break;

  case 192: /* exttab_auth_list: '(' keyvalue_list ')'  */
#line 1720 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 27566 "gram.cpp"
    break;

  case 193: /* exttab_auth_list: %empty  */
#line 1721 "gram.y"
                                                        { (yyval.list) = NIL; }
#line 27572 "gram.cpp"
    break;

  case 194: /* keyvalue_list: keyvalue_pair  */
#line 1725 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 27578 "gram.cpp"
    break;

  case 195: /* keyvalue_list: keyvalue_list ',' keyvalue_pair  */
#line 1726 "gram.y"
                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 27584 "gram.cpp"
    break;

  case 196: /* keyvalue_pair: ColLabel '=' Sconst  */
#line 1731 "gram.y"
                {
			(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *)makeString((yyvsp[0].str)));
		}
#line 27592 "gram.cpp"
    break;

  case 197: /* CreateUserStmt: CREATE USER RoleId opt_with OptRoleList  */
#line 1745 "gram.y"
                                {
					CreateRoleStmt *n = makeNode(CreateRoleStmt);
					n->stmt_type = ROLESTMT_USER;
					n->role = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27604 "gram.cpp"
    break;

  case 198: /* AlterRoleStmt: ALTER ROLE RoleId opt_with AlterOptRoleList  */
#line 1763 "gram.y"
                                 {
					AlterRoleStmt *n = makeNode(AlterRoleStmt);
					n->role = (yyvsp[-2].str);
					n->action = +1;	/* add, if there are members */
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27616 "gram.cpp"
    break;

  case 199: /* opt_in_database: %empty  */
#line 1773 "gram.y"
                                                                        { (yyval.str) = NULL; }
#line 27622 "gram.cpp"
    break;

  case 200: /* opt_in_database: IN_P DATABASE database_name  */
#line 1774 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 27628 "gram.cpp"
    break;

  case 201: /* AlterRoleSetStmt: ALTER ROLE RoleId opt_in_database SetResetClause  */
#line 1779 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = (yyvsp[-2].str);
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27640 "gram.cpp"
    break;

  case 202: /* AlterRoleSetStmt: ALTER ROLE ALL opt_in_database SetResetClause  */
#line 1787 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = NULL;
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27652 "gram.cpp"
    break;

  case 203: /* AlterUserStmt: ALTER USER RoleId opt_with AlterOptRoleList  */
#line 1805 "gram.y"
                                 {
					AlterRoleStmt *n = makeNode(AlterRoleStmt);
					n->role = (yyvsp[-2].str);
					n->action = +1;	/* add, if there are members */
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27664 "gram.cpp"
    break;

  case 204: /* AlterUserSetStmt: ALTER USER RoleId opt_in_database SetResetClause  */
#line 1817 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = (yyvsp[-2].str);
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27676 "gram.cpp"
    break;

  case 205: /* AlterUserSetStmt: ALTER USER ALL opt_in_database SetResetClause  */
#line 1825 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = NULL;
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27688 "gram.cpp"
    break;

  case 206: /* DropRoleStmt: DROP ROLE role_list  */
#line 1846 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = FALSE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27699 "gram.cpp"
    break;

  case 207: /* DropRoleStmt: DROP ROLE IF_P EXISTS role_list  */
#line 1853 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = TRUE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27710 "gram.cpp"
    break;

  case 208: /* DropUserStmt: DROP USER role_list  */
#line 1872 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = FALSE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27721 "gram.cpp"
    break;

  case 209: /* DropUserStmt: DROP USER IF_P EXISTS role_list  */
#line 1879 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->roles = (yyvsp[0].list);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 27732 "gram.cpp"
    break;

  case 210: /* CreateGroupStmt: CREATE GROUP_P RoleId opt_with OptRoleList  */
#line 1896 "gram.y"
                                {
					CreateRoleStmt *n = makeNode(CreateRoleStmt);
					n->stmt_type = ROLESTMT_GROUP;
					n->role = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27744 "gram.cpp"
    break;

  case 211: /* AlterGroupStmt: ALTER GROUP_P RoleId add_drop USER role_list  */
#line 1914 "gram.y"
                                {
					AlterRoleStmt *n = makeNode(AlterRoleStmt);
					n->role = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->options = list_make1(makeDefElem("rolemembers",
														(Node *)(yyvsp[0].list)));
					(yyval.node) = (Node *)n;
				}
#line 27757 "gram.cpp"
    break;

  case 212: /* add_drop: ADD_P  */
#line 1924 "gram.y"
                                                                                        { (yyval.ival) = +1; }
#line 27763 "gram.cpp"
    break;

  case 213: /* add_drop: DROP  */
#line 1925 "gram.y"
                                                                                                { (yyval.ival) = -1; }
#line 27769 "gram.cpp"
    break;

  case 214: /* DropGroupStmt: DROP GROUP_P role_list  */
#line 1938 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = FALSE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27780 "gram.cpp"
    break;

  case 215: /* DropGroupStmt: DROP GROUP_P IF_P EXISTS role_list  */
#line 1945 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = TRUE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27791 "gram.cpp"
    break;

  case 216: /* CreateSchemaStmt: CREATE SCHEMA OptSchemaName AUTHORIZATION RoleId OptSchemaEltList  */
#line 1962 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* One can omit the schema name or the authorization id. */
					if ((yyvsp[-3].str) != NULL)
						n->schemaname = (yyvsp[-3].str);
					else
						n->schemaname = (yyvsp[-1].str);
					n->authid = (yyvsp[-1].str);
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = false;
					(yyval.node) = (Node *)n;
				}
#line 27808 "gram.cpp"
    break;

  case 217: /* CreateSchemaStmt: CREATE SCHEMA ColId OptSchemaEltList  */
#line 1975 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[-1].str);
					n->authid = NULL;
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = false;
					(yyval.node) = (Node *)n;
				}
#line 27822 "gram.cpp"
    break;

  case 218: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS OptSchemaName AUTHORIZATION RoleId OptSchemaEltList  */
#line 1985 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* One can omit the schema name or the authorization id. */
					if ((yyvsp[-3].str) != NULL)
						n->schemaname = (yyvsp[-3].str);
					else
						n->schemaname = (yyvsp[-1].str);
					n->authid = (yyvsp[-1].str);
					if ((yyvsp[0].list) != NIL)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[0])));
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = true;
					(yyval.node) = (Node *)n;
				}
#line 27844 "gram.cpp"
    break;

  case 219: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS ColId OptSchemaEltList  */
#line 2003 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[-1].str);
					n->authid = NULL;
					if ((yyvsp[0].list) != NIL)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[0])));
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = true;
					(yyval.node) = (Node *)n;
				}
#line 27863 "gram.cpp"
    break;

  case 220: /* OptSchemaName: ColId  */
#line 2020 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 27869 "gram.cpp"
    break;

  case 221: /* OptSchemaName: %empty  */
#line 2021 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 27875 "gram.cpp"
    break;

  case 222: /* OptSchemaEltList: OptSchemaEltList schema_stmt  */
#line 2026 "gram.y"
                                {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[0]);
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 27885 "gram.cpp"
    break;

  case 223: /* OptSchemaEltList: %empty  */
#line 2032 "gram.y"
                                { (yyval.list) = NIL; }
#line 27891 "gram.cpp"
    break;

  case 230: /* VariableSetStmt: SET set_rest  */
#line 2060 "gram.y"
                                {
					VariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->is_local = false;
					(yyval.node) = (Node *) n;
				}
#line 27901 "gram.cpp"
    break;

  case 231: /* VariableSetStmt: SET LOCAL set_rest  */
#line 2066 "gram.y"
                                {
					VariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->is_local = true;
					(yyval.node) = (Node *) n;
				}
#line 27911 "gram.cpp"
    break;

  case 232: /* VariableSetStmt: SET SESSION set_rest  */
#line 2072 "gram.y"
                                {
					VariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->is_local = false;
					(yyval.node) = (Node *) n;
				}
#line 27921 "gram.cpp"
    break;

  case 233: /* set_rest: TRANSACTION transaction_mode_list  */
#line 2081 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_MULTI;
					n->name = "TRANSACTION";
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27933 "gram.cpp"
    break;

  case 234: /* set_rest: SESSION CHARACTERISTICS AS TRANSACTION transaction_mode_list  */
#line 2089 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_MULTI;
					n->name = "SESSION CHARACTERISTICS";
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27945 "gram.cpp"
    break;

  case 236: /* generic_set: var_name TO var_list  */
#line 2101 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27957 "gram.cpp"
    break;

  case 237: /* generic_set: var_name '=' var_list  */
#line 2109 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27969 "gram.cpp"
    break;

  case 238: /* generic_set: var_name TO DEFAULT  */
#line 2117 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 27980 "gram.cpp"
    break;

  case 239: /* generic_set: var_name '=' DEFAULT  */
#line 2124 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 27991 "gram.cpp"
    break;

  case 240: /* set_rest_more: generic_set  */
#line 2133 "gram.y"
                                                                                {(yyval.vsetstmt) = (yyvsp[0].vsetstmt);}
#line 27997 "gram.cpp"
    break;

  case 241: /* set_rest_more: var_name FROM CURRENT_P  */
#line 2135 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 28008 "gram.cpp"
    break;

  case 242: /* set_rest_more: TIME ZONE zone_value  */
#line 2143 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "timezone";
					if ((yyvsp[0].node) != NULL)
						n->args = list_make1((yyvsp[0].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				}
#line 28023 "gram.cpp"
    break;

  case 243: /* set_rest_more: CATALOG_P Sconst  */
#line 2154 "gram.y"
                                {
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("current database cannot be changed"),
							 parser_errposition((yylsp[0])));
					(yyval.vsetstmt) = NULL; /*not reached*/
				}
#line 28035 "gram.cpp"
    break;

  case 244: /* set_rest_more: SCHEMA Sconst  */
#line 2162 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "search_path";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28047 "gram.cpp"
    break;

  case 245: /* set_rest_more: NAMES opt_encoding  */
#line 2170 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "client_encoding";
					if ((yyvsp[0].str) != NULL)
						n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				}
#line 28062 "gram.cpp"
    break;

  case 246: /* set_rest_more: ROLE NonReservedWord_or_Sconst  */
#line 2181 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "role";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28074 "gram.cpp"
    break;

  case 247: /* set_rest_more: SESSION AUTHORIZATION NonReservedWord_or_Sconst  */
#line 2189 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "session_authorization";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28086 "gram.cpp"
    break;

  case 248: /* set_rest_more: SESSION AUTHORIZATION DEFAULT  */
#line 2197 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = "session_authorization";
					(yyval.vsetstmt) = n;
				}
#line 28097 "gram.cpp"
    break;

  case 249: /* set_rest_more: XML_P OPTION document_or_content  */
#line 2204 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "xmloption";
					n->args = list_make1(makeStringConst((yyvsp[0].ival) == XMLOPTION_DOCUMENT ? pstrdup("DOCUMENT") : pstrdup("CONTENT"), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28109 "gram.cpp"
    break;

  case 250: /* set_rest_more: TRANSACTION SNAPSHOT Sconst  */
#line 2213 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_MULTI;
					n->name = "TRANSACTION SNAPSHOT";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28121 "gram.cpp"
    break;

  case 251: /* var_name: ColId  */
#line 2222 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28127 "gram.cpp"
    break;

  case 252: /* var_name: var_name '.' ColId  */
#line 2224 "gram.y"
                                { (yyval.str) = psprintf("%s.%s", (yyvsp[-2].str), (yyvsp[0].str)); }
#line 28133 "gram.cpp"
    break;

  case 253: /* var_list: var_value  */
#line 2227 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 28139 "gram.cpp"
    break;

  case 254: /* var_list: var_list ',' var_value  */
#line 2228 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 28145 "gram.cpp"
    break;

  case 255: /* var_value: opt_boolean_or_string  */
#line 2232 "gram.y"
                                { (yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0])); }
#line 28151 "gram.cpp"
    break;

  case 256: /* var_value: NumericOnly  */
#line 2234 "gram.y"
                                { (yyval.node) = makeAConst((yyvsp[0].value), (yylsp[0])); }
#line 28157 "gram.cpp"
    break;

  case 257: /* iso_level: READ UNCOMMITTED  */
#line 2237 "gram.y"
                                                                                { (yyval.str) = "read uncommitted"; }
#line 28163 "gram.cpp"
    break;

  case 258: /* iso_level: READ COMMITTED  */
#line 2238 "gram.y"
                                                                                        { (yyval.str) = "read committed"; }
#line 28169 "gram.cpp"
    break;

  case 259: /* iso_level: REPEATABLE READ  */
#line 2239 "gram.y"
                                                                                        { (yyval.str) = "repeatable read"; }
#line 28175 "gram.cpp"
    break;

  case 260: /* iso_level: SERIALIZABLE  */
#line 2240 "gram.y"
                                                                                        { (yyval.str) = "serializable"; }
#line 28181 "gram.cpp"
    break;

  case 261: /* opt_boolean_or_string: TRUE_P  */
#line 2244 "gram.y"
                                                                                                { (yyval.str) = "true"; }
#line 28187 "gram.cpp"
    break;

  case 262: /* opt_boolean_or_string: FALSE_P  */
#line 2245 "gram.y"
                                                                                                { (yyval.str) = "false"; }
#line 28193 "gram.cpp"
    break;

  case 263: /* opt_boolean_or_string: ON  */
#line 2246 "gram.y"
                                                                                                { (yyval.str) = "on"; }
#line 28199 "gram.cpp"
    break;

  case 264: /* opt_boolean_or_string: NonReservedWord_or_Sconst  */
#line 2252 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28205 "gram.cpp"
    break;

  case 265: /* zone_value: Sconst  */
#line 2265 "gram.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 28213 "gram.cpp"
    break;

  case 266: /* zone_value: IDENT  */
#line 2269 "gram.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 28221 "gram.cpp"
    break;

  case 267: /* zone_value: ConstInterval Sconst opt_interval  */
#line 2273 "gram.y"
                                {
					TypeName *t = (yyvsp[-2].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						A_Const *n = (A_Const *) linitial((yyvsp[0].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[0])));
					}
					t->typmods = (yyvsp[0].list);
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 28240 "gram.cpp"
    break;

  case 268: /* zone_value: ConstInterval '(' Iconst ')' Sconst opt_interval  */
#line 2288 "gram.y"
                                {
					TypeName *t = (yyvsp[-5].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						A_Const *n = (A_Const *) linitial((yyvsp[0].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[0])));
						if (list_length((yyvsp[0].list)) != 1)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("interval precision specified twice"),
									 parser_errposition((yylsp[-5])));
						t->typmods = lappend((yyvsp[0].list), makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 28267 "gram.cpp"
    break;

  case 269: /* zone_value: NumericOnly  */
#line 2310 "gram.y"
                                                                                        { (yyval.node) = makeAConst((yyvsp[0].value), (yylsp[0])); }
#line 28273 "gram.cpp"
    break;

  case 270: /* zone_value: DEFAULT  */
#line 2311 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 28279 "gram.cpp"
    break;

  case 271: /* zone_value: LOCAL  */
#line 2312 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 28285 "gram.cpp"
    break;

  case 272: /* opt_encoding: Sconst  */
#line 2316 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28291 "gram.cpp"
    break;

  case 273: /* opt_encoding: DEFAULT  */
#line 2317 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 28297 "gram.cpp"
    break;

  case 274: /* opt_encoding: %empty  */
#line 2318 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 28303 "gram.cpp"
    break;

  case 275: /* NonReservedWord_or_Sconst: NonReservedWord  */
#line 2322 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 28309 "gram.cpp"
    break;

  case 276: /* NonReservedWord_or_Sconst: Sconst  */
#line 2323 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28315 "gram.cpp"
    break;

  case 277: /* VariableResetStmt: RESET reset_rest  */
#line 2327 "gram.y"
                                                                                        { (yyval.node) = (Node *) (yyvsp[0].vsetstmt); }
#line 28321 "gram.cpp"
    break;

  case 278: /* reset_rest: generic_reset  */
#line 2331 "gram.y"
                                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 28327 "gram.cpp"
    break;

  case 279: /* reset_rest: TIME ZONE  */
#line 2333 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = "timezone";
					(yyval.vsetstmt) = n;
				}
#line 28338 "gram.cpp"
    break;

  case 280: /* reset_rest: TRANSACTION ISOLATION LEVEL  */
#line 2340 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = "transaction_isolation";
					(yyval.vsetstmt) = n;
				}
#line 28349 "gram.cpp"
    break;

  case 281: /* reset_rest: SESSION AUTHORIZATION  */
#line 2347 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = "session_authorization";
					(yyval.vsetstmt) = n;
				}
#line 28360 "gram.cpp"
    break;

  case 282: /* generic_reset: var_name  */
#line 2357 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[0].str);
					(yyval.vsetstmt) = n;
				}
#line 28371 "gram.cpp"
    break;

  case 283: /* generic_reset: ALL  */
#line 2364 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				}
#line 28381 "gram.cpp"
    break;

  case 284: /* SetResetClause: SET set_rest  */
#line 2373 "gram.y"
                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 28387 "gram.cpp"
    break;

  case 285: /* SetResetClause: VariableResetStmt  */
#line 2374 "gram.y"
                                                                        { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[0].node); }
#line 28393 "gram.cpp"
    break;

  case 286: /* FunctionSetResetClause: SET set_rest_more  */
#line 2379 "gram.y"
                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 28399 "gram.cpp"
    break;

  case 287: /* FunctionSetResetClause: VariableResetStmt  */
#line 2380 "gram.y"
                                                                        { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[0].node); }
#line 28405 "gram.cpp"
    break;

  case 288: /* VariableShowStmt: SHOW var_name  */
#line 2386 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 28415 "gram.cpp"
    break;

  case 289: /* VariableShowStmt: SHOW TIME ZONE  */
#line 2392 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "timezone";
					(yyval.node) = (Node *) n;
				}
#line 28425 "gram.cpp"
    break;

  case 290: /* VariableShowStmt: SHOW TRANSACTION ISOLATION LEVEL  */
#line 2398 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "transaction_isolation";
					(yyval.node) = (Node *) n;
				}
#line 28435 "gram.cpp"
    break;

  case 291: /* VariableShowStmt: SHOW SESSION AUTHORIZATION  */
#line 2404 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "session_authorization";
					(yyval.node) = (Node *) n;
				}
#line 28445 "gram.cpp"
    break;

  case 292: /* VariableShowStmt: SHOW ALL  */
#line 2410 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "all";
					(yyval.node) = (Node *) n;
				}
#line 28455 "gram.cpp"
    break;

  case 293: /* ConstraintsSetStmt: SET CONSTRAINTS constraints_set_list constraints_set_mode  */
#line 2420 "gram.y"
                                {
					ConstraintsSetStmt *n = makeNode(ConstraintsSetStmt);
					n->constraints = (yyvsp[-1].list);
					n->deferred = (yyvsp[0].boolean);
					(yyval.node) = (Node *) n;
				}
#line 28466 "gram.cpp"
    break;

  case 294: /* constraints_set_list: ALL  */
#line 2429 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 28472 "gram.cpp"
    break;

  case 295: /* constraints_set_list: qualified_name_list  */
#line 2430 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28478 "gram.cpp"
    break;

  case 296: /* constraints_set_mode: DEFERRED  */
#line 2434 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 28484 "gram.cpp"
    break;

  case 297: /* constraints_set_mode: IMMEDIATE  */
#line 2435 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 28490 "gram.cpp"
    break;

  case 298: /* CheckPointStmt: CHECKPOINT  */
#line 2444 "gram.y"
                                {
					CheckPointStmt *n = makeNode(CheckPointStmt);
					(yyval.node) = (Node *)n;
				}
#line 28499 "gram.cpp"
    break;

  case 299: /* DiscardStmt: DISCARD ALL  */
#line 2459 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_ALL;
					(yyval.node) = (Node *) n;
				}
#line 28509 "gram.cpp"
    break;

  case 300: /* DiscardStmt: DISCARD TEMP  */
#line 2465 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_TEMP;
					(yyval.node) = (Node *) n;
				}
#line 28519 "gram.cpp"
    break;

  case 301: /* DiscardStmt: DISCARD TEMPORARY  */
#line 2471 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_TEMP;
					(yyval.node) = (Node *) n;
				}
#line 28529 "gram.cpp"
    break;

  case 302: /* DiscardStmt: DISCARD PLANS  */
#line 2477 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_PLANS;
					(yyval.node) = (Node *) n;
				}
#line 28539 "gram.cpp"
    break;

  case 303: /* DiscardStmt: DISCARD SEQUENCES  */
#line 2483 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_SEQUENCES;
					(yyval.node) = (Node *) n;
				}
#line 28549 "gram.cpp"
    break;

  case 304: /* AlterTableStmt: ALTER TABLE relation_expr alter_table_cmds  */
#line 2502 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28562 "gram.cpp"
    break;

  case 305: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr alter_table_cmds  */
#line 2511 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28575 "gram.cpp"
    break;

  case 306: /* AlterTableStmt: ALTER EXTERNAL TABLE relation_expr alter_table_cmds  */
#line 2520 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_EXTTABLE;
					(yyval.node) = (Node *)n;
				}
#line 28587 "gram.cpp"
    break;

  case 307: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
#line 2528 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-4].str);
					n->objtype = OBJECT_TABLE;
					n->roles = NIL;
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28602 "gram.cpp"
    break;

  case 308: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
#line 2539 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-7].str);
					n->objtype = OBJECT_TABLE;
					n->roles = (yyvsp[-4].list);
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28617 "gram.cpp"
    break;

  case 309: /* AlterTableStmt: ALTER INDEX qualified_name alter_table_cmds  */
#line 2550 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28630 "gram.cpp"
    break;

  case 310: /* AlterTableStmt: ALTER INDEX IF_P EXISTS qualified_name alter_table_cmds  */
#line 2559 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28643 "gram.cpp"
    break;

  case 311: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
#line 2568 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-4].str);
					n->objtype = OBJECT_INDEX;
					n->roles = NIL;
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28658 "gram.cpp"
    break;

  case 312: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
#line 2579 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-7].str);
					n->objtype = OBJECT_INDEX;
					n->roles = (yyvsp[-4].list);
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28673 "gram.cpp"
    break;

  case 313: /* AlterTableStmt: ALTER SEQUENCE qualified_name alter_table_cmds  */
#line 2590 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28686 "gram.cpp"
    break;

  case 314: /* AlterTableStmt: ALTER SEQUENCE IF_P EXISTS qualified_name alter_table_cmds  */
#line 2599 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28699 "gram.cpp"
    break;

  case 315: /* AlterTableStmt: ALTER VIEW qualified_name alter_table_cmds  */
#line 2608 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28712 "gram.cpp"
    break;

  case 316: /* AlterTableStmt: ALTER VIEW IF_P EXISTS qualified_name alter_table_cmds  */
#line 2617 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28725 "gram.cpp"
    break;

  case 317: /* AlterTableStmt: ALTER MATERIALIZED VIEW qualified_name alter_table_cmds  */
#line 2626 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_MATVIEW;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28738 "gram.cpp"
    break;

  case 318: /* AlterTableStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name alter_table_cmds  */
#line 2635 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_MATVIEW;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28751 "gram.cpp"
    break;

  case 319: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
#line 2644 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-4].str);
					n->objtype = OBJECT_MATVIEW;
					n->roles = NIL;
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28766 "gram.cpp"
    break;

  case 320: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
#line 2655 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-7].str);
					n->objtype = OBJECT_MATVIEW;
					n->roles = (yyvsp[-4].list);
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28781 "gram.cpp"
    break;

  case 321: /* alter_table_cmds: alter_table_cmd  */
#line 2668 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 28787 "gram.cpp"
    break;

  case 322: /* alter_table_cmds: alter_table_cmds ',' alter_table_cmd  */
#line 2669 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 28793 "gram.cpp"
    break;

  case 323: /* alter_table_cmd: ADD_P columnDef  */
#line 2675 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddColumn;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 28804 "gram.cpp"
    break;

  case 324: /* alter_table_cmd: ADD_P COLUMN columnDef  */
#line 2683 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddColumn;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 28815 "gram.cpp"
    break;

  case 325: /* alter_table_cmd: ALTER opt_column ColId alter_column_default  */
#line 2691 "gram.y"
                                {
					ColumnDef *colDef = makeNode(ColumnDef);
					colDef->raw_default = (yyvsp[0].node);
					
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ColumnDefault;
					n->name = (yyvsp[-1].str);
					n->def = (Node *) colDef;
					(yyval.node) = (Node *)n;
				}
#line 28830 "gram.cpp"
    break;

  case 326: /* alter_table_cmd: ALTER opt_column ColId DROP NOT NULL_P  */
#line 2703 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropNotNull;
					n->name = (yyvsp[-3].str);
					(yyval.node) = (Node *)n;
				}
#line 28841 "gram.cpp"
    break;

  case 327: /* alter_table_cmd: ALTER opt_column ColId SET NOT NULL_P  */
#line 2711 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetNotNull;
					n->name = (yyvsp[-3].str);
					(yyval.node) = (Node *)n;
				}
#line 28852 "gram.cpp"
    break;

  case 328: /* alter_table_cmd: ALTER opt_column ColId SET STATISTICS SignedIconst  */
#line 2719 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetStatistics;
					n->name = (yyvsp[-3].str);
					n->def = (Node *) makeInteger((yyvsp[0].ival));
					(yyval.node) = (Node *)n;
				}
#line 28864 "gram.cpp"
    break;

  case 329: /* alter_table_cmd: ALTER opt_column ColId SET reloptions  */
#line 2728 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetOptions;
					n->name = (yyvsp[-2].str);
					n->def = (Node *) (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 28876 "gram.cpp"
    break;

  case 330: /* alter_table_cmd: ALTER opt_column ColId RESET reloptions  */
#line 2737 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ResetOptions;
					n->name = (yyvsp[-2].str);
					n->def = (Node *) (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 28888 "gram.cpp"
    break;

  case 331: /* alter_table_cmd: ALTER opt_column ColId SET STORAGE ColId  */
#line 2746 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetStorage;
					n->name = (yyvsp[-3].str);
					n->def = (Node *) makeString((yyvsp[0].str));
					(yyval.node) = (Node *)n;
				}
#line 28900 "gram.cpp"
    break;

  case 332: /* alter_table_cmd: DROP opt_column IF_P EXISTS ColId opt_drop_behavior  */
#line 2755 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 28913 "gram.cpp"
    break;

  case 333: /* alter_table_cmd: DROP opt_column ColId opt_drop_behavior  */
#line 2765 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 28926 "gram.cpp"
    break;

  case 334: /* alter_table_cmd: ALTER opt_column ColId opt_set_data TYPE_P Typename opt_collate_clause alter_using  */
#line 2778 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					ColumnDef *def = makeNode(ColumnDef);
					n->subtype = AT_AlterColumnType;
					n->name = (yyvsp[-5].str);
					n->def = (Node *) def;
					/* We only use these fields of the ColumnDef node */
					def->typeName = (yyvsp[-2].typnam);
					def->collClause = (CollateClause *) (yyvsp[-1].node);
					def->raw_default = (yyvsp[0].node);
					def->location = (yylsp[-5]);
					(yyval.node) = (Node *)n;
				}
#line 28944 "gram.cpp"
    break;

  case 335: /* alter_table_cmd: ALTER opt_column ColId alter_generic_options  */
#line 2793 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AlterColumnGenericOptions;
					n->name = (yyvsp[-1].str);
					n->def = (Node *) (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 28956 "gram.cpp"
    break;

  case 336: /* alter_table_cmd: ADD_P TableConstraint  */
#line 2802 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddConstraint;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 28967 "gram.cpp"
    break;

  case 337: /* alter_table_cmd: ALTER CONSTRAINT name ConstraintAttributeSpec  */
#line 2810 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					Constraint *c = makeNode(Constraint);
					n->subtype = AT_AlterConstraint;
					n->def = (Node *) c;
					c->contype = CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 28985 "gram.cpp"
    break;

  case 338: /* alter_table_cmd: VALIDATE CONSTRAINT name  */
#line 2825 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ValidateConstraint;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 28996 "gram.cpp"
    break;

  case 339: /* alter_table_cmd: DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
#line 2833 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropConstraint;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 29009 "gram.cpp"
    break;

  case 340: /* alter_table_cmd: DROP CONSTRAINT name opt_drop_behavior  */
#line 2843 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropConstraint;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 29022 "gram.cpp"
    break;

  case 341: /* alter_table_cmd: SET WITH OIDS  */
#line 2853 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddOids;
					(yyval.node) = (Node *)n;
				}
#line 29032 "gram.cpp"
    break;

  case 342: /* alter_table_cmd: SET WITHOUT OIDS  */
#line 2860 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropOids;
					(yyval.node) = (Node *)n;
				}
#line 29042 "gram.cpp"
    break;

  case 343: /* alter_table_cmd: CLUSTER ON name  */
#line 2867 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ClusterOn;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29053 "gram.cpp"
    break;

  case 344: /* alter_table_cmd: SET WITHOUT CLUSTER  */
#line 2875 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropCluster;
					n->name = NULL;
					(yyval.node) = (Node *)n;
				}
#line 29064 "gram.cpp"
    break;

  case 345: /* alter_table_cmd: ENABLE_P TRIGGER name  */
#line 2883 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29075 "gram.cpp"
    break;

  case 346: /* alter_table_cmd: ENABLE_P ALWAYS TRIGGER name  */
#line 2891 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableAlwaysTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29086 "gram.cpp"
    break;

  case 347: /* alter_table_cmd: ENABLE_P REPLICA TRIGGER name  */
#line 2899 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableReplicaTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29097 "gram.cpp"
    break;

  case 348: /* alter_table_cmd: ENABLE_P TRIGGER ALL  */
#line 2907 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableTrigAll;
					(yyval.node) = (Node *)n;
				}
#line 29107 "gram.cpp"
    break;

  case 349: /* alter_table_cmd: ENABLE_P TRIGGER USER  */
#line 2914 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableTrigUser;
					(yyval.node) = (Node *)n;
				}
#line 29117 "gram.cpp"
    break;

  case 350: /* alter_table_cmd: DISABLE_P TRIGGER name  */
#line 2921 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29128 "gram.cpp"
    break;

  case 351: /* alter_table_cmd: DISABLE_P TRIGGER ALL  */
#line 2929 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableTrigAll;
					(yyval.node) = (Node *)n;
				}
#line 29138 "gram.cpp"
    break;

  case 352: /* alter_table_cmd: DISABLE_P TRIGGER USER  */
#line 2936 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableTrigUser;
					(yyval.node) = (Node *)n;
				}
#line 29148 "gram.cpp"
    break;

  case 353: /* alter_table_cmd: ENABLE_P RULE name  */
#line 2943 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29159 "gram.cpp"
    break;

  case 354: /* alter_table_cmd: ENABLE_P ALWAYS RULE name  */
#line 2951 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableAlwaysRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29170 "gram.cpp"
    break;

  case 355: /* alter_table_cmd: ENABLE_P REPLICA RULE name  */
#line 2959 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableReplicaRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29181 "gram.cpp"
    break;

  case 356: /* alter_table_cmd: DISABLE_P RULE name  */
#line 2967 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29192 "gram.cpp"
    break;

  case 357: /* alter_table_cmd: INHERIT qualified_name  */
#line 2975 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddInherit;
					n->def = (Node *) (yyvsp[0].range);
					(yyval.node) = (Node *)n;
				}
#line 29203 "gram.cpp"
    break;

  case 358: /* alter_table_cmd: NO INHERIT qualified_name  */
#line 2983 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropInherit;
					n->def = (Node *) (yyvsp[0].range);
					(yyval.node) = (Node *)n;
				}
#line 29214 "gram.cpp"
    break;

  case 359: /* alter_table_cmd: SET DistributedBy  */
#line 2992 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetDistributedBy;
					n->def = (Node *) list_make2(NULL, (yyvsp[0].node));
					(yyval.node) = (Node *)n;
				}
#line 29225 "gram.cpp"
    break;

  case 360: /* alter_table_cmd: SET WITH definition DistributedBy  */
#line 3000 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetDistributedBy;
					n->def = (Node *) list_make2((yyvsp[-1].list), (yyvsp[0].node));
					(yyval.node) = (Node *)n;
				}
#line 29236 "gram.cpp"
    break;

  case 361: /* alter_table_cmd: SET WITH definition  */
#line 3008 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetDistributedBy;
					n->def = (Node *) list_make2((yyvsp[0].list), NULL);
					(yyval.node) = (Node *)n;
				}
#line 29247 "gram.cpp"
    break;

  case 362: /* alter_table_cmd: alter_table_partition_cmd  */
#line 3015 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 29255 "gram.cpp"
    break;

  case 363: /* alter_table_cmd: EXPAND TABLE  */
#line 3020 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ExpandTable;
					(yyval.node) = (Node *)n;
				}
#line 29265 "gram.cpp"
    break;

  case 364: /* alter_table_cmd: EXPAND PARTITION PREPARE  */
#line 3027 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ExpandPartitionTablePrepare;
					(yyval.node) = (Node *)n;
				}
#line 29275 "gram.cpp"
    break;

  case 365: /* alter_table_cmd: OF any_name  */
#line 3034 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					TypeName *def = makeTypeNameFromNameList((yyvsp[0].list));
					def->location = (yylsp[0]);
					n->subtype = AT_AddOf;
					n->def = (Node *) def;
					(yyval.node) = (Node *)n;
				}
#line 29288 "gram.cpp"
    break;

  case 366: /* alter_table_cmd: NOT OF  */
#line 3044 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropOf;
					(yyval.node) = (Node *)n;
				}
#line 29298 "gram.cpp"
    break;

  case 367: /* alter_table_cmd: OWNER TO RoleId  */
#line 3051 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ChangeOwner;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29309 "gram.cpp"
    break;

  case 368: /* alter_table_cmd: SET TABLESPACE name  */
#line 3059 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetTableSpace;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29320 "gram.cpp"
    break;

  case 369: /* alter_table_cmd: SET reloptions  */
#line 3067 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetRelOptions;
					n->def = (Node *)(yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 29331 "gram.cpp"
    break;

  case 370: /* alter_table_cmd: RESET reloptions  */
#line 3075 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ResetRelOptions;
					n->def = (Node *)(yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 29342 "gram.cpp"
    break;

  case 371: /* alter_table_cmd: REPLICA IDENTITY_P replica_identity  */
#line 3083 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ReplicaIdentity;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 29353 "gram.cpp"
    break;

  case 372: /* alter_table_cmd: alter_generic_options  */
#line 3090 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_GenericOptions;
					n->def = (Node *)(yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 29364 "gram.cpp"
    break;

  case 373: /* alter_column_default: SET DEFAULT a_expr  */
#line 3099 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 29370 "gram.cpp"
    break;

  case 374: /* alter_column_default: DROP DEFAULT  */
#line 3100 "gram.y"
                                                                { (yyval.node) = NULL; }
#line 29376 "gram.cpp"
    break;

  case 375: /* opt_drop_behavior: CASCADE  */
#line 3104 "gram.y"
                                                                        { (yyval.dbehavior) = DROP_CASCADE; }
#line 29382 "gram.cpp"
    break;

  case 376: /* opt_drop_behavior: RESTRICT  */
#line 3105 "gram.y"
                                                                        { (yyval.dbehavior) = DROP_RESTRICT; }
#line 29388 "gram.cpp"
    break;

  case 377: /* opt_drop_behavior: %empty  */
#line 3106 "gram.y"
                                                                { (yyval.dbehavior) = DROP_RESTRICT; /* default */ }
#line 29394 "gram.cpp"
    break;

  case 378: /* opt_collate_clause: COLLATE any_name  */
#line 3111 "gram.y"
                                {
					CollateClause *n = makeNode(CollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *) n;
				}
#line 29406 "gram.cpp"
    break;

  case 379: /* opt_collate_clause: %empty  */
#line 3118 "gram.y"
                                                                { (yyval.node) = NULL; }
#line 29412 "gram.cpp"
    break;

  case 380: /* alter_using: USING a_expr  */
#line 3122 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 29418 "gram.cpp"
    break;

  case 381: /* alter_using: %empty  */
#line 3123 "gram.y"
                                                                { (yyval.node) = NULL; }
#line 29424 "gram.cpp"
    break;

  case 382: /* replica_identity: NOTHING  */
#line 3128 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_NOTHING;
					n->name = NULL;
					(yyval.node) = (Node *) n;
				}
#line 29435 "gram.cpp"
    break;

  case 383: /* replica_identity: FULL  */
#line 3135 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_FULL;
					n->name = NULL;
					(yyval.node) = (Node *) n;
				}
#line 29446 "gram.cpp"
    break;

  case 384: /* replica_identity: DEFAULT  */
#line 3142 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_DEFAULT;
					n->name = NULL;
					(yyval.node) = (Node *) n;
				}
#line 29457 "gram.cpp"
    break;

  case 385: /* replica_identity: USING INDEX name  */
#line 3149 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_INDEX;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 29468 "gram.cpp"
    break;

  case 386: /* reloptions: '(' reloption_list ')'  */
#line 3158 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 29474 "gram.cpp"
    break;

  case 387: /* opt_reloptions: WITH reloptions  */
#line 3161 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 29480 "gram.cpp"
    break;

  case 388: /* opt_reloptions: %empty  */
#line 3162 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 29486 "gram.cpp"
    break;

  case 389: /* reloption_list: reloption_elem  */
#line 3166 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 29492 "gram.cpp"
    break;

  case 390: /* reloption_list: reloption_list ',' reloption_elem  */
#line 3167 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 29498 "gram.cpp"
    break;

  case 391: /* reloption_elem: ColLabel '=' def_arg  */
#line 3173 "gram.y"
                                {
					/*
					 * appendoptimized is an alias for appendonly in order to
					 * provide a reloption syntax which better reflects the
					 * featureset of AO tables. It is implemented as a very
					 * thin alias, the reloptions and messaging will still
					 * say appendonly.
					 */
					if (strcmp((yyvsp[-2].str), "appendoptimized") == 0)
						(yyval.defelt) = makeDefElem("appendonly", (Node *) (yyvsp[0].node));
					else
						(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node));
				}
#line 29516 "gram.cpp"
    break;

  case 392: /* reloption_elem: ColLabel  */
#line 3187 "gram.y"
                                {
					/*
					 * Similarly to the above, translate 'appendoptimized' to
					 * 'appendonly'. Also, adding the implicit 'true' in case 
					 * we don't handle that properly in parse analysis.
					 * See: https://github.com/greenplum-db/gpdb/issues/14510.
					 */
					if (strcmp((yyvsp[0].str), "appendonly") == 0 || strcmp((yyvsp[0].str), "appendoptimized") == 0)
						(yyval.defelt) = makeDefElem("appendonly", (Node *) makeString(pstrdup("true")));
					else
						(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL);
				}
#line 29533 "gram.cpp"
    break;

  case 393: /* reloption_elem: ColLabel '.' ColLabel '=' def_arg  */
#line 3200 "gram.y"
                                {
					(yyval.defelt) = makeDefElemExtended((yyvsp[-4].str), (yyvsp[-2].str), (Node *) (yyvsp[0].node),
											 DEFELEM_UNSPEC);
				}
#line 29542 "gram.cpp"
    break;

  case 394: /* reloption_elem: ColLabel '.' ColLabel  */
#line 3205 "gram.y"
                                {
					(yyval.defelt) = makeDefElemExtended((yyvsp[-2].str), (yyvsp[0].str), NULL, DEFELEM_UNSPEC);
				}
#line 29550 "gram.cpp"
    break;

  case 395: /* opt_table_partition_split_into: INTO '(' alter_table_partition_id_spec_with_opt_default ',' alter_table_partition_id_spec_with_opt_default ')'  */
#line 3214 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = (Node *)(yyvsp[-3].node);
                    pc->arg1 = (Node *)(yyvsp[-1].node);
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);
					(yyval.node) = (Node *)pc;
                }
#line 29564 "gram.cpp"
    break;

  case 396: /* opt_table_partition_split_into: %empty  */
#line 3223 "gram.y"
                                                                                { (yyval.node) = NULL; /* default */ }
#line 29570 "gram.cpp"
    break;

  case 397: /* opt_table_partition_exchange_validate: WITH VALIDATION  */
#line 3227 "gram.y"
                                                                                { (yyval.ival) = +1; }
#line 29576 "gram.cpp"
    break;

  case 398: /* opt_table_partition_exchange_validate: WITHOUT VALIDATION  */
#line 3228 "gram.y"
                                                                        { (yyval.ival) = +0; }
#line 29582 "gram.cpp"
    break;

  case 399: /* opt_table_partition_exchange_validate: %empty  */
#line 3229 "gram.y"
                                                                                        { (yyval.ival) = +1; /* default */ }
#line 29588 "gram.cpp"
    break;

  case 400: /* alter_table_partition_id_spec: PartitionColId  */
#line 3234 "gram.y"
                                {
					AlterPartitionId *n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDName;
                    n->partiddef = (Node *)makeString((yyvsp[0].str));
                    n->location  = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 29600 "gram.cpp"
    break;

  case 401: /* alter_table_partition_id_spec: FOR '(' TabPartitionBoundarySpecValList ')'  */
#line 3243 "gram.y"
                                {
					AlterPartitionId *n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDValue;
                    n->partiddef = (Node *)(yyvsp[-1].list);
                    n->location  = (yylsp[-1]);
					(yyval.node) = reinterpret_cast<Node *>(n);
				}
#line 29612 "gram.cpp"
    break;

  case 402: /* alter_table_partition_id_spec: FOR '(' func_name '(' func_arg_list opt_sort_clause ')' ')'  */
#line 3273 "gram.y"
                                {
					Node		   *arg;
					Value		   *val;
					Node		   *fname;
					AlterPartitionId *n;

                    /* allow RANK only */
					if (list_length((yyvsp[-5].list)) != 1)
                        parser_yyerror("syntax error");
					fname = reinterpret_cast<Node*>(linitial((yyvsp[-5].list)));
					if (!(strcmp(strVal(linitial((yyvsp[-5].list))), "rank") == 0))
                        parser_yyerror("syntax error");

					/* expr_list must be a single numeric constant */
					if (list_length((yyvsp[-3].list)) != 1)
						parser_yyerror("syntax error");

					arg = reinterpret_cast<Node*>(linitial((yyvsp[-3].list)));
					if (!IsA(arg, A_Const))
						parser_yyerror("syntax error");
					val = &((A_Const *) arg)->val;
					if (!IsA(val, Integer) && !IsA(val, Float))
						parser_yyerror("syntax error");

					/* we don't want a sort clause */
					if ((yyvsp[-2].list))
						parser_yyerror("syntax error");

					n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDRank;
                    n->partiddef = (Node *) val;
                    n->location  = (yylsp[-3]);

					(yyval.node) = (Node *)n;
				}
#line 29652 "gram.cpp"
    break;

  case 403: /* alter_table_partition_id_spec_with_opt_default: PARTITION alter_table_partition_id_spec  */
#line 3312 "gram.y"
                                {
					AlterPartitionId *n = (AlterPartitionId*)(yyvsp[0].node);
                    (yyval.node) = (Node *)n;
				}
#line 29661 "gram.cpp"
    break;

  case 404: /* alter_table_partition_id_spec_with_opt_default: DEFAULT PARTITION alter_table_partition_id_spec  */
#line 3317 "gram.y"
                                {
					ereport(ERROR,
							errcode(ERRCODE_SYNTAX_ERROR),
							 errmsg("cannot specify a name, rank, or value for a DEFAULT partition in this context"));
				}
#line 29671 "gram.cpp"
    break;

  case 405: /* alter_table_partition_id_spec_with_opt_default: DEFAULT PARTITION  */
#line 3323 "gram.y"
                                {
					AlterPartitionId *n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDDefault;
                    n->partiddef = NULL;
                    n->location  = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 29683 "gram.cpp"
    break;

  case 406: /* alter_table_partition_cmd: ADD_P PARTITION OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabSubPartitionSpec  */
#line 3338 "gram.y"
                                {
					AlterPartitionId  *pid   = makeNode(AlterPartitionId);
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 

                    pid->idtype = AT_AP_IDNone;
                    pid->location = (yylsp[-2]);
                    pid->partiddef = NULL;

                    pc->partid = (Node *) pid;

                    pelem->partName  = NULL;
                    pelem->boundSpec = (yyvsp[-2].node);
                    pelem->subSpec   = (yyvsp[0].node);
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = false; /* not default */
                    pelem->storeAttr = (yyvsp[-1].node);
                    pelem->AddPartDesc = NULL;
					pc->arg1 = (Node *) pelem;

                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartAdd;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29715 "gram.cpp"
    break;

  case 407: /* alter_table_partition_cmd: ADD_P DEFAULT PARTITION alter_table_partition_id_spec OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabSubPartitionSpec  */
#line 3370 "gram.y"
                                {
					AlterPartitionId  *pid   = (AlterPartitionId *)(yyvsp[-3].node);
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 

                    if (pid->idtype != AT_AP_IDName)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("can only ADD a partition by name"));

                    pc->partid = (Node *) pid;

                    pelem->partName  = NULL;
                    pelem->boundSpec = (yyvsp[-2].node);
                    pelem->subSpec   = (yyvsp[0].node);
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = true;
                    pelem->storeAttr = (yyvsp[-1].node);
                    pelem->AddPartDesc = NULL;
					pc->arg1 = (Node *) pelem;
                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartAdd;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29747 "gram.cpp"
    break;

  case 408: /* alter_table_partition_cmd: ADD_P PARTITION alter_table_partition_id_spec OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabSubPartitionSpec  */
#line 3402 "gram.y"
                                {
					AlterPartitionId  *pid   = (AlterPartitionId *)(yyvsp[-3].node);
					AlterPartitionCmd *pc    = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 

                    if (pid->idtype != AT_AP_IDName)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("can only ADD a partition by name"));

                    pc->partid = (Node *) pid;

                    pelem->partName  = NULL;
                    pelem->boundSpec = (yyvsp[-2].node);
                    pelem->subSpec   = (yyvsp[0].node);
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = false;
                    pelem->storeAttr = (yyvsp[-1].node);
                    pelem->AddPartDesc = NULL;
                    pc->arg1 = (Node *) pelem;

                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartAdd;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29780 "gram.cpp"
    break;

  case 409: /* alter_table_partition_cmd: ALTER alter_table_partition_id_spec_with_opt_default alter_table_cmd  */
#line 3433 "gram.y"
                                {
                    /* NOTE: only allow a subset of valid ALTER TABLE
                       cmds for partitions.
                    */

					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)(yyvsp[0].node);
                    pc->arg2 = NULL;
                    pc->location = (yylsp[0]);

					n->subtype = AT_PartAlter;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29802 "gram.cpp"
    break;

  case 410: /* alter_table_partition_cmd: DROP PARTITION IF_P EXISTS alter_table_partition_id_spec opt_drop_behavior  */
#line 3453 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);

					ds->missing_ok = TRUE;
					ds->behavior = (yyvsp[0].dbehavior);

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29830 "gram.cpp"
    break;

  case 411: /* alter_table_partition_cmd: DROP DEFAULT PARTITION IF_P EXISTS opt_drop_behavior  */
#line 3478 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);
					AlterPartitionId *pid = makeNode(AlterPartitionId);

					pid->idtype = AT_AP_IDDefault;
                    pid->partiddef = NULL;
                    pid->location  = (yylsp[-4]);

					ds->missing_ok = TRUE;
					ds->behavior = (yyvsp[0].dbehavior);

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    pc->partid = (Node *)pid;
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-3]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29863 "gram.cpp"
    break;

  case 412: /* alter_table_partition_cmd: DROP alter_table_partition_id_spec_with_opt_default opt_drop_behavior  */
#line 3509 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);

					ds->missing_ok = FALSE;
					ds->behavior = (yyvsp[0].dbehavior);

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29891 "gram.cpp"
    break;

  case 413: /* alter_table_partition_cmd: DROP PARTITION  */
#line 3533 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);
					AlterPartitionId *pid = makeNode(AlterPartitionId);

					ds->missing_ok = FALSE;
					ds->behavior = DROP_RESTRICT; /* default */ 

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    /* just try to drop the first partition if not specified */
					pid->idtype = AT_AP_IDNone;
                    pid->location  = (yylsp[0]);

                    pc->partid = (Node *)pid;
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[0]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29924 "gram.cpp"
    break;

  case 414: /* alter_table_partition_cmd: EXCHANGE alter_table_partition_id_spec_with_opt_default WITH TABLE qualified_name opt_table_partition_exchange_validate  */
#line 3565 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterPartitionCmd *pc2 = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-4].node);
                    pc->arg1 = (Node *)(yyvsp[-1].range);
                    pc->arg2 = (Node *)pc2;
                    pc2->arg1 = (Node *)makeInteger((yyvsp[0].ival));
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartExchange;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29944 "gram.cpp"
    break;

  case 415: /* alter_table_partition_cmd: RENAME alter_table_partition_id_spec_with_opt_default TO IDENT  */
#line 3582 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-2].node);
                    pc->arg1 = (Node *)makeString((yyvsp[0].str));
                    pc->arg2 = NULL;
                    pc->location = (yylsp[0]);

					n->subtype = AT_PartRename;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29962 "gram.cpp"
    break;

  case 416: /* alter_table_partition_cmd: SET SUBPARTITION TEMPLATE '(' TabSubPartitionElemList ')'  */
#line 3597 "gram.y"
                                {
					AlterPartitionId  *pid   = makeNode(AlterPartitionId);
					AlterPartitionCmd *pc    = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 
					PartitionSpec	  *ps    = makeNode(PartitionSpec); 

					/* treat this case as similar to ADD PARTITION */

                    pid->idtype    = AT_AP_IDName;
                    pid->location  = (yylsp[-3]);
                    pid->partiddef = 
						(Node *)makeString("subpartition_template");

                    pc->partid = (Node *) pid;

					/* build a subpartition spec and add it to CREATE TABLE */
					ps->partElem   = (yyvsp[-1].list); 
					ps->subSpec	   = NULL;
					ps->istemplate = true;
					ps->location   = (yylsp[-2]);

                    pelem->partName  = NULL;
                    pelem->boundSpec = NULL;
                    pelem->subSpec   = (Node *)ps;
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = true;
                    pelem->storeAttr = NULL;
                    pelem->AddPartDesc = NULL;
					pc->arg1 = (Node *) pelem;

					/* a little (temporary?) syntax check on templates */
					if (ps->partElem)
					{
						List *elems;
						ListCell *lc;
						Assert(IsA(ps->partElem, List));

						elems = (List *)ps->partElem;
						foreach(lc, elems)
						{
							PartitionElem *e = reinterpret_cast<PartitionElem*>(lfirst(lc));

							if (!IsA(e, PartitionElem))
								continue;

							if (e->subSpec)
								ereport(ERROR,
										errcode(ERRCODE_SYNTAX_ERROR),
										 errmsg("template cannot contain "
												"specification for child "
												"partition"));
						}
					}

                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartSetTemplate;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 30028 "gram.cpp"
    break;

  case 417: /* alter_table_partition_cmd: SET SUBPARTITION TEMPLATE '(' ')'  */
#line 3660 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = NULL; 
                    pc->arg1 = NULL;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartSetTemplate;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 30046 "gram.cpp"
    break;

  case 418: /* alter_table_partition_cmd: SPLIT DEFAULT PARTITION TabPartitionBoundarySpecStart TabPartitionBoundarySpecEnd opt_table_partition_split_into  */
#line 3677 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					AlterPartitionId *pid = makeNode(AlterPartitionId);

					pid->idtype = AT_AP_IDDefault;
                    pid->partiddef = NULL;
                    pid->location  = (yylsp[-4]);

                    pc->partid = (Node *)pid;
                    pc->arg1 = (Node *)list_make2((yyvsp[-2].node), (yyvsp[-1].node));
                    pc->arg2 = (Node *)(yyvsp[0].node);
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartSplit;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 30069 "gram.cpp"
    break;

  case 419: /* alter_table_partition_cmd: SPLIT alter_table_partition_id_spec_with_opt_default AT '(' part_values_or_spec_list ')' opt_table_partition_split_into  */
#line 3699 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-5].node);

					/* 
					 * The first element of the list is only defined if
					 * we're doing default splits for range partitioning.
				 	 */
                    pc->arg1 = (Node *)list_make2(NULL, (yyvsp[-2].list));
                    pc->arg2 = (Node *)(yyvsp[0].node);
                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartSplit;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 30092 "gram.cpp"
    break;

  case 420: /* alter_table_partition_cmd: TRUNCATE alter_table_partition_id_spec_with_opt_default opt_drop_behavior  */
#line 3720 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					TruncateStmt *ts = makeNode(TruncateStmt);

                    /* 
                       build an (incomplete) truncate statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */
					ts->relations = NULL;
					ts->behavior = (yyvsp[0].dbehavior);

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)ts;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartTruncate;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 30119 "gram.cpp"
    break;

  case 421: /* AlterCompositeTypeStmt: ALTER TYPE_P any_name alter_type_cmds  */
#line 3754 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);

					/* can't use qualified_name, sigh */
					n->relation = makeRangeVarFromAnyName((yyvsp[-1].list), (yylsp[-1]), yyscanner);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_TYPE;
					(yyval.node) = (Node *)n;
				}
#line 30133 "gram.cpp"
    break;

  case 422: /* alter_type_cmds: alter_type_cmd  */
#line 3766 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 30139 "gram.cpp"
    break;

  case 423: /* alter_type_cmds: alter_type_cmds ',' alter_type_cmd  */
#line 3767 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 30145 "gram.cpp"
    break;

  case 424: /* alter_type_cmd: ADD_P ATTRIBUTE TableFuncElement opt_drop_behavior  */
#line 3773 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddColumn;
					n->def = (yyvsp[-1].node);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 30157 "gram.cpp"
    break;

  case 425: /* alter_type_cmd: DROP ATTRIBUTE IF_P EXISTS ColId opt_drop_behavior  */
#line 3782 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 30170 "gram.cpp"
    break;

  case 426: /* alter_type_cmd: DROP ATTRIBUTE ColId opt_drop_behavior  */
#line 3792 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 30183 "gram.cpp"
    break;

  case 427: /* alter_type_cmd: ALTER ATTRIBUTE ColId opt_set_data TYPE_P Typename opt_collate_clause opt_drop_behavior  */
#line 3802 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					ColumnDef *def = makeNode(ColumnDef);
					n->subtype = AT_AlterColumnType;
					n->name = (yyvsp[-5].str);
					n->def = (Node *) def;
					n->behavior = (yyvsp[0].dbehavior);
					/* We only use these fields of the ColumnDef node */
					def->typeName = (yyvsp[-2].typnam);
					def->collClause = (CollateClause *) (yyvsp[-1].node);
					def->raw_default = NULL;
					def->location = (yylsp[-5]);
					(yyval.node) = (Node *)n;
				}
#line 30202 "gram.cpp"
    break;

  case 428: /* ClosePortalStmt: CLOSE cursor_name  */
#line 3828 "gram.y"
                                {
					ClosePortalStmt *n = makeNode(ClosePortalStmt);
					n->portalname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 30212 "gram.cpp"
    break;

  case 429: /* ClosePortalStmt: CLOSE ALL  */
#line 3834 "gram.y"
                                {
					ClosePortalStmt *n = makeNode(ClosePortalStmt);
					n->portalname = NULL;
					(yyval.node) = (Node *)n;
				}
#line 30222 "gram.cpp"
    break;

  case 430: /* CopyStmt: COPY opt_binary qualified_name opt_column_list opt_oids copy_from opt_program copy_file_name copy_delimiter opt_with copy_options OptSingleRowErrorHandling skip_external_partition  */
#line 3866 "gram.y"
                                {
					CopyStmt *n = makeNode(CopyStmt);
					n->relation = (yyvsp[-10].range);
					n->query = NULL;
					n->attlist = (yyvsp[-9].list);
					n->is_from = (yyvsp[-7].boolean);
					n->is_program = (yyvsp[-6].boolean);
					n->filename = (yyvsp[-5].str);
					n->sreh = reinterpret_cast<Node*>((yyvsp[-1].list));
					n->partitions = NULL;
					n->ao_segnos = NIL;

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[-5])));

// -- non-upstream patch begin
					if (n->is_program) {
						/*
						* MDB-21297: forbit usage of COPY TO PROGRAM and COPY FROM PROGRAM at all
						*/
						// ereport(ERROR,
						// 	errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
						// 		errmsg("forbidden to COPY to or from an external program or file in Yandex Cloud"),
						// 		errhint("Anyone can COPY to stdout or from stdin. "
						// 				"psql's \\copy command also works for anyone."));
					}
// --- non-upstream patch end

					n->options = NIL;
					n->skip_ext_partition = (yyvsp[0].boolean);


					/* Concatenate user-supplied flags */
					if ((yyvsp[-11].defelt))
						n->options = lappend(n->options, (yyvsp[-11].defelt));
					if ((yyvsp[-8].defelt))
						n->options = lappend(n->options, (yyvsp[-8].defelt));
					if ((yyvsp[-4].defelt))
						n->options = lappend(n->options, (yyvsp[-4].defelt));
					if ((yyvsp[-2].list))
						n->options = list_concat(n->options, (yyvsp[-2].list));
					if ((yyvsp[-1].list)) {
						n->options = list_concat(n->options, (yyvsp[-1].list));
					}
					(yyval.node) = (Node *)n;
				}
#line 30276 "gram.cpp"
    break;

  case 431: /* CopyStmt: COPY select_with_parens TO opt_program copy_file_name opt_with copy_options  */
#line 3916 "gram.y"
                                {
					CopyStmt *n = makeNode(CopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[-5].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[-3].boolean);
					n->filename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					n->partitions = NULL;
					n->ao_segnos = NIL;
					n->skip_ext_partition = false;

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[-2])));

// -- non-upstream patch begin
					if (n->is_program) {
						/*
						* MDB-21297: forbit usage of COPY TO PROGRAM and COPY FROM PROGRAM at all
						*/
						// ereport(ERROR,
						// 	errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
						// 		errmsg("forbidden to COPY to or from an external program or file in Yandex Cloud"),
						// 		errhint("Anyone can COPY to stdout or from stdin. "
						// 				"psql's \\copy command also works for anyone."));
					}
// --- non-upstream patch end


					(yyval.node) = (Node *)n;
				}
#line 30316 "gram.cpp"
    break;

  case 432: /* copy_from: FROM  */
#line 3954 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 30322 "gram.cpp"
    break;

  case 433: /* copy_from: TO  */
#line 3955 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 30328 "gram.cpp"
    break;

  case 434: /* opt_program: PROGRAM  */
#line 3959 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 30334 "gram.cpp"
    break;

  case 435: /* opt_program: %empty  */
#line 3960 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 30340 "gram.cpp"
    break;

  case 436: /* skip_external_partition: IGNORE_P EXTERNAL PARTITIONS  */
#line 3964 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 30346 "gram.cpp"
    break;

  case 437: /* skip_external_partition: %empty  */
#line 3965 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 30352 "gram.cpp"
    break;

  case 438: /* copy_file_name: Sconst  */
#line 3974 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 30358 "gram.cpp"
    break;

  case 439: /* copy_file_name: STDIN  */
#line 3975 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 30364 "gram.cpp"
    break;

  case 440: /* copy_file_name: STDOUT  */
#line 3976 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 30370 "gram.cpp"
    break;

  case 441: /* copy_options: copy_opt_list  */
#line 3979 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 30376 "gram.cpp"
    break;

  case 442: /* copy_options: '(' copy_generic_opt_list ')'  */
#line 3980 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 30382 "gram.cpp"
    break;

  case 443: /* copy_opt_list: copy_opt_list copy_opt_item  */
#line 3985 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 30388 "gram.cpp"
    break;

  case 444: /* copy_opt_list: %empty  */
#line 3986 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 30394 "gram.cpp"
    break;

  case 445: /* copy_opt_item: BINARY  */
#line 3991 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
				}
#line 30402 "gram.cpp"
    break;

  case 446: /* copy_opt_item: OIDS  */
#line 3995 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
				}
#line 30410 "gram.cpp"
    break;

  case 447: /* copy_opt_item: FREEZE  */
#line 3999 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("freeze", (Node *)makeInteger(TRUE));
				}
#line 30418 "gram.cpp"
    break;

  case 448: /* copy_opt_item: DELIMITER opt_as Sconst  */
#line 4003 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[0].str)));
				}
#line 30426 "gram.cpp"
    break;

  case 449: /* copy_opt_item: NULL_P opt_as Sconst  */
#line 4007 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[0].str)));
				}
#line 30434 "gram.cpp"
    break;

  case 450: /* copy_opt_item: CSV  */
#line 4011 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("format", (Node *)makeString("csv"));
				}
#line 30442 "gram.cpp"
    break;

  case 451: /* copy_opt_item: HEADER_P  */
#line 4015 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
				}
#line 30450 "gram.cpp"
    break;

  case 452: /* copy_opt_item: QUOTE opt_as Sconst  */
#line 4019 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[0].str)));
				}
#line 30458 "gram.cpp"
    break;

  case 453: /* copy_opt_item: ESCAPE opt_as Sconst  */
#line 4023 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[0].str)));
				}
#line 30466 "gram.cpp"
    break;

  case 454: /* copy_opt_item: FORCE QUOTE columnList  */
#line 4027 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[0].list));
				}
#line 30474 "gram.cpp"
    break;

  case 455: /* copy_opt_item: FORCE QUOTE '*'  */
#line 4031 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
				}
#line 30482 "gram.cpp"
    break;

  case 456: /* copy_opt_item: FORCE NOT NULL_P columnList  */
#line 4035 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[0].list));
				}
#line 30490 "gram.cpp"
    break;

  case 457: /* copy_opt_item: FORCE NULL_P columnList  */
#line 4039 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_null", (Node *)(yyvsp[0].list));
				}
#line 30498 "gram.cpp"
    break;

  case 458: /* copy_opt_item: ENCODING Sconst  */
#line 4043 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[0].str)));
				}
#line 30506 "gram.cpp"
    break;

  case 459: /* copy_opt_item: FILL MISSING FIELDS  */
#line 4047 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("fill_missing_fields", (Node *)makeInteger(TRUE));
				}
#line 30514 "gram.cpp"
    break;

  case 460: /* copy_opt_item: NEWLINE opt_as Sconst  */
#line 4051 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("newline", (Node *)makeString((yyvsp[0].str)));
				}
#line 30522 "gram.cpp"
    break;

  case 461: /* copy_opt_item: ON SEGMENT  */
#line 4055 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("on_segment", (Node *)makeInteger(TRUE));
				}
#line 30530 "gram.cpp"
    break;

  case 462: /* opt_binary: BINARY  */
#line 4064 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
				}
#line 30538 "gram.cpp"
    break;

  case 463: /* opt_binary: %empty  */
#line 4067 "gram.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 30544 "gram.cpp"
    break;

  case 464: /* opt_oids: WITH OIDS  */
#line 4072 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
				}
#line 30552 "gram.cpp"
    break;

  case 465: /* opt_oids: %empty  */
#line 4075 "gram.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 30558 "gram.cpp"
    break;

  case 466: /* copy_delimiter: opt_using DELIMITERS Sconst  */
#line 4080 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[0].str)));
				}
#line 30566 "gram.cpp"
    break;

  case 467: /* copy_delimiter: %empty  */
#line 4083 "gram.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 30572 "gram.cpp"
    break;

  case 468: /* opt_using: USING  */
#line 4087 "gram.y"
                                                                                                {}
#line 30578 "gram.cpp"
    break;

  case 469: /* opt_using: %empty  */
#line 4088 "gram.y"
                                                                                                {}
#line 30584 "gram.cpp"
    break;

  case 470: /* copy_generic_opt_list: copy_generic_opt_elem  */
#line 4094 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 30592 "gram.cpp"
    break;

  case 471: /* copy_generic_opt_list: copy_generic_opt_list ',' copy_generic_opt_elem  */
#line 4098 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 30600 "gram.cpp"
    break;

  case 472: /* copy_generic_opt_elem: ColLabel copy_generic_opt_arg  */
#line 4105 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node));
				}
#line 30608 "gram.cpp"
    break;

  case 473: /* copy_generic_opt_arg: opt_boolean_or_string  */
#line 4111 "gram.y"
                                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 30614 "gram.cpp"
    break;

  case 474: /* copy_generic_opt_arg: NumericOnly  */
#line 4112 "gram.y"
                                                                        { (yyval.node) = (Node *) (yyvsp[0].value); }
#line 30620 "gram.cpp"
    break;

  case 475: /* copy_generic_opt_arg: '*'  */
#line 4113 "gram.y"
                                                                                { (yyval.node) = (Node *) makeNode(A_Star); }
#line 30626 "gram.cpp"
    break;

  case 476: /* copy_generic_opt_arg: '(' copy_generic_opt_arg_list ')'  */
#line 4114 "gram.y"
                                                                        { (yyval.node) = (Node *) (yyvsp[-1].list); }
#line 30632 "gram.cpp"
    break;

  case 477: /* copy_generic_opt_arg: %empty  */
#line 4115 "gram.y"
                                                                        { (yyval.node) = NULL; }
#line 30638 "gram.cpp"
    break;

  case 478: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list_item  */
#line 4120 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 30646 "gram.cpp"
    break;

  case 479: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list ',' copy_generic_opt_arg_list_item  */
#line 4124 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 30654 "gram.cpp"
    break;

  case 480: /* copy_generic_opt_arg_list_item: opt_boolean_or_string  */
#line 4131 "gram.y"
                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 30660 "gram.cpp"
    break;

  case 481: /* CreateStmt: CREATE OptTemp TABLE qualified_name '(' OptTableElementList ')' OptInherit OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4145 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-9].range)->relpersistence = (yyvsp[-11].ival);
					n->relation = (yyvsp[-9].range);
					n->tableElts = (yyvsp[-7].list);
					n->inhRelations = (yyvsp[-5].list);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = false;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30681 "gram.cpp"
    break;

  case 482: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptInherit OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4165 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-9].range)->relpersistence = (yyvsp[-14].ival);
					n->relation = (yyvsp[-9].range);
					n->tableElts = (yyvsp[-7].list);
					n->inhRelations = (yyvsp[-5].list);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = true;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30702 "gram.cpp"
    break;

  case 483: /* CreateStmt: CREATE OptTemp TABLE qualified_name OF any_name OptTypedTableElementList OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4184 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-8].range)->relpersistence = (yyvsp[-10].ival);
					n->relation = (yyvsp[-8].range);
					n->tableElts = (yyvsp[-5].list);
					n->ofTypename = makeTypeNameFromNameList((yyvsp[-6].list));
					n->ofTypename->location = (yylsp[-6]);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = false;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30724 "gram.cpp"
    break;

  case 484: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name OF any_name OptTypedTableElementList OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4204 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-8].range)->relpersistence = (yyvsp[-13].ival);
					n->relation = (yyvsp[-8].range);
					n->tableElts = (yyvsp[-5].list);
					n->ofTypename = makeTypeNameFromNameList((yyvsp[-6].list));
					n->ofTypename->location = (yylsp[-6]);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = true;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30746 "gram.cpp"
    break;

  case 485: /* OptTemp: TEMPORARY  */
#line 4234 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30752 "gram.cpp"
    break;

  case 486: /* OptTemp: TEMP  */
#line 4235 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30758 "gram.cpp"
    break;

  case 487: /* OptTemp: LOCAL TEMPORARY  */
#line 4236 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30764 "gram.cpp"
    break;

  case 488: /* OptTemp: LOCAL TEMP  */
#line 4237 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30770 "gram.cpp"
    break;

  case 489: /* OptTemp: GLOBAL TEMPORARY  */
#line 4239 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-1])));
					(yyval.ival) = RELPERSISTENCE_TEMP;
				}
#line 30781 "gram.cpp"
    break;

  case 490: /* OptTemp: GLOBAL TEMP  */
#line 4246 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-1])));
					(yyval.ival) = RELPERSISTENCE_TEMP;
				}
#line 30792 "gram.cpp"
    break;

  case 491: /* OptTemp: UNLOGGED  */
#line 4252 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
#line 30798 "gram.cpp"
    break;

  case 492: /* OptTemp: %empty  */
#line 4253 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
#line 30804 "gram.cpp"
    break;

  case 493: /* OptTableElementList: TableElementList  */
#line 4257 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 30810 "gram.cpp"
    break;

  case 494: /* OptTableElementList: %empty  */
#line 4258 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 30816 "gram.cpp"
    break;

  case 495: /* OptTypedTableElementList: '(' TypedTableElementList ')'  */
#line 4262 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 30822 "gram.cpp"
    break;

  case 496: /* OptTypedTableElementList: %empty  */
#line 4263 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 30828 "gram.cpp"
    break;

  case 497: /* TableElementList: TableElement  */
#line 4268 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 30836 "gram.cpp"
    break;

  case 498: /* TableElementList: TableElementList ',' TableElement  */
#line 4272 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 30844 "gram.cpp"
    break;

  case 499: /* TypedTableElementList: TypedTableElement  */
#line 4279 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 30852 "gram.cpp"
    break;

  case 500: /* TypedTableElementList: TypedTableElementList ',' TypedTableElement  */
#line 4283 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 30860 "gram.cpp"
    break;

  case 501: /* TableElement: columnDef  */
#line 4289 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 30866 "gram.cpp"
    break;

  case 502: /* TableElement: TableLikeClause  */
#line 4290 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30872 "gram.cpp"
    break;

  case 503: /* TableElement: TableConstraint  */
#line 4291 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30878 "gram.cpp"
    break;

  case 504: /* TableElement: column_reference_storage_directive  */
#line 4292 "gram.y"
                                                             { (yyval.node) = (yyvsp[0].node); }
#line 30884 "gram.cpp"
    break;

  case 505: /* TypedTableElement: columnOptions  */
#line 4296 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30890 "gram.cpp"
    break;

  case 506: /* TypedTableElement: TableConstraint  */
#line 4297 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30896 "gram.cpp"
    break;

  case 507: /* column_reference_storage_directive: COLUMN ColId ENCODING definition  */
#line 4302 "gram.y"
                                {
					ColumnReferenceStorageDirective *n =
						makeNode(ColumnReferenceStorageDirective);

					n->column = (yyvsp[-2].str);
					n->encoding = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 30909 "gram.cpp"
    break;

  case 508: /* column_reference_storage_directive: DEFAULT COLUMN ENCODING definition  */
#line 4311 "gram.y"
                                {
					ColumnReferenceStorageDirective *n =
						makeNode(ColumnReferenceStorageDirective);

					n->deflt = true;
					n->encoding = (yyvsp[0].list);

					(yyval.node) = (Node *)n;
				}
#line 30923 "gram.cpp"
    break;

  case 509: /* columnDef: ColId NestedTypename create_generic_options ColQualList opt_storage_encoding  */
#line 4323 "gram.y"
                                {
					ColumnDef *n = makeNode(ColumnDef);
					n->colname = (yyvsp[-4].str);
					n->typeName = (yyvsp[-3].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->encoding = (yyvsp[0].list);
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[-2].list);
					SplitColQualList((yyvsp[-1].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[-4]);
					(yyval.node) = (Node *)n;
				}
#line 30947 "gram.cpp"
    break;

  case 510: /* columnOptions: ColId WITH OPTIONS ColQualList  */
#line 4345 "gram.y"
                                {
					ColumnDef *n = makeNode(ColumnDef);
					n->colname = (yyvsp[-3].str);
					n->typeName = NULL;
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					SplitColQualList((yyvsp[0].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[-3]);
					(yyval.node) = (Node *)n;
				}
#line 30969 "gram.cpp"
    break;

  case 511: /* ColQualList: ColQualList ColConstraint  */
#line 4365 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 30975 "gram.cpp"
    break;

  case 512: /* ColQualList: %empty  */
#line 4366 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 30981 "gram.cpp"
    break;

  case 513: /* ColConstraint: CONSTRAINT name ColConstraintElem  */
#line 4371 "gram.y"
                                {
					Constraint *n = (Constraint *) (yyvsp[0].node);
					Assert(IsA(n, Constraint));
					n->conname = (yyvsp[-1].str);
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *) n;
				}
#line 30993 "gram.cpp"
    break;

  case 514: /* ColConstraint: ColConstraintElem  */
#line 4378 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 30999 "gram.cpp"
    break;

  case 515: /* ColConstraint: ConstraintAttr  */
#line 4379 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 31005 "gram.cpp"
    break;

  case 516: /* ColConstraint: COLLATE any_name  */
#line 4381 "gram.y"
                                {
					/*
					 * Note: the CollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					CollateClause *n = makeNode(CollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *) n;
				}
#line 31022 "gram.cpp"
    break;

  case 517: /* opt_storage_encoding: ENCODING definition  */
#line 4395 "gram.y"
                                          { (yyval.list) = (yyvsp[0].list); }
#line 31028 "gram.cpp"
    break;

  case 518: /* opt_storage_encoding: %empty  */
#line 4396 "gram.y"
                                        { (yyval.list) = NIL; }
#line 31034 "gram.cpp"
    break;

  case 519: /* ColConstraintElem: NOT NULL_P  */
#line 4416 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_NOTNULL;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31045 "gram.cpp"
    break;

  case 520: /* ColConstraintElem: NULL_P  */
#line 4423 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_NULL;
					n->location = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 31056 "gram.cpp"
    break;

  case 521: /* ColConstraintElem: UNIQUE opt_definition OptConsTableSpace  */
#line 4430 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_UNIQUE;
					n->location = (yylsp[-2]);
					n->keys = NULL;
					n->options = (yyvsp[-1].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 31071 "gram.cpp"
    break;

  case 522: /* ColConstraintElem: PRIMARY KEY opt_definition OptConsTableSpace  */
#line 4441 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_PRIMARY;
					n->location = (yylsp[-3]);
					n->keys = NULL;
					n->options = (yyvsp[-1].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 31086 "gram.cpp"
    break;

  case 523: /* ColConstraintElem: CHECK '(' a_expr ')' opt_no_inherit  */
#line 4452 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_CHECK;
					n->location = (yylsp[-4]);
					n->is_no_inherit = (yyvsp[0].boolean);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					(yyval.node) = (Node *)n;
				}
#line 31100 "gram.cpp"
    break;

  case 524: /* ColConstraintElem: DEFAULT b_expr  */
#line 4462 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_DEFAULT;
					n->location = (yylsp[-1]);
					n->raw_expr = (yyvsp[0].node);
					n->cooked_expr = NULL;
					(yyval.node) = (Node *)n;
				}
#line 31113 "gram.cpp"
    break;

  case 525: /* ColConstraintElem: REFERENCES qualified_name opt_column_list key_match key_actions  */
#line 4471 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_FOREIGN;
					n->location = (yylsp[-4]);
					n->pktable			= (yyvsp[-3].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[-2].list);
					n->fk_matchtype		= (yyvsp[-1].ival);
					n->fk_upd_action	= (char) ((yyvsp[0].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[0].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (Node *)n;
				}
#line 31132 "gram.cpp"
    break;

  case 526: /* ConstraintAttr: DEFERRABLE  */
#line 4504 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 31143 "gram.cpp"
    break;

  case 527: /* ConstraintAttr: NOT DEFERRABLE  */
#line 4511 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31154 "gram.cpp"
    break;

  case 528: /* ConstraintAttr: INITIALLY DEFERRED  */
#line 4518 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31165 "gram.cpp"
    break;

  case 529: /* ConstraintAttr: INITIALLY IMMEDIATE  */
#line 4525 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31176 "gram.cpp"
    break;

  case 530: /* TableLikeClause: LIKE qualified_name TableLikeOptionList  */
#line 4536 "gram.y"
                                {
					TableLikeClause *n = makeNode(TableLikeClause);
					n->relation = (yyvsp[-1].range);
					n->options = (yyvsp[0].ival);
					(yyval.node) = (Node *)n;
				}
#line 31187 "gram.cpp"
    break;

  case 531: /* TableLikeOptionList: TableLikeOptionList INCLUDING TableLikeOption  */
#line 4545 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
#line 31193 "gram.cpp"
    break;

  case 532: /* TableLikeOptionList: TableLikeOptionList EXCLUDING TableLikeOption  */
#line 4546 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) & ~(yyvsp[0].ival); }
#line 31199 "gram.cpp"
    break;

  case 533: /* TableLikeOptionList: %empty  */
#line 4547 "gram.y"
                                                                                        { (yyval.ival) = 0; }
#line 31205 "gram.cpp"
    break;

  case 534: /* TableLikeOption: DEFAULTS  */
#line 4551 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; }
#line 31211 "gram.cpp"
    break;

  case 535: /* TableLikeOption: CONSTRAINTS  */
#line 4552 "gram.y"
                                                        { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; }
#line 31217 "gram.cpp"
    break;

  case 536: /* TableLikeOption: INDEXES  */
#line 4553 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; }
#line 31223 "gram.cpp"
    break;

  case 537: /* TableLikeOption: STORAGE  */
#line 4554 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; }
#line 31229 "gram.cpp"
    break;

  case 538: /* TableLikeOption: COMMENTS  */
#line 4555 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; }
#line 31235 "gram.cpp"
    break;

  case 539: /* TableLikeOption: ALL  */
#line 4556 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_ALL; }
#line 31241 "gram.cpp"
    break;

  case 540: /* TableConstraint: CONSTRAINT name ConstraintElem  */
#line 4566 "gram.y"
                                {
					Constraint *n = (Constraint *) (yyvsp[0].node);
					Assert(IsA(n, Constraint));
					n->conname = (yyvsp[-1].str);
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *) n;
				}
#line 31253 "gram.cpp"
    break;

  case 541: /* TableConstraint: ConstraintElem  */
#line 4573 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 31259 "gram.cpp"
    break;

  case 542: /* ConstraintElem: CHECK '(' a_expr ')' ConstraintAttributeSpec  */
#line 4578 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_CHECK;
					n->location = (yylsp[-4]);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (Node *)n;
				}
#line 31276 "gram.cpp"
    break;

  case 543: /* ConstraintElem: UNIQUE '(' columnList ')' opt_definition OptConsTableSpace ConstraintAttributeSpec  */
#line 4592 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_UNIQUE;
					n->location = (yylsp[-6]);
					n->keys = (yyvsp[-4].list);
					n->options = (yyvsp[-2].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31294 "gram.cpp"
    break;

  case 544: /* ConstraintElem: UNIQUE ExistingIndex ConstraintAttributeSpec  */
#line 4606 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_UNIQUE;
					n->location = (yylsp[-2]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[-1].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31312 "gram.cpp"
    break;

  case 545: /* ConstraintElem: PRIMARY KEY '(' columnList ')' opt_definition OptConsTableSpace ConstraintAttributeSpec  */
#line 4621 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_PRIMARY;
					n->location = (yylsp[-7]);
					n->keys = (yyvsp[-4].list);
					n->options = (yyvsp[-2].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31330 "gram.cpp"
    break;

  case 546: /* ConstraintElem: PRIMARY KEY ExistingIndex ConstraintAttributeSpec  */
#line 4635 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_PRIMARY;
					n->location = (yylsp[-3]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[-1].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31348 "gram.cpp"
    break;

  case 547: /* ConstraintElem: EXCLUDE access_method_clause '(' ExclusionConstraintList ')' opt_definition OptConsTableSpace ExclusionWhereClause ConstraintAttributeSpec  */
#line 4651 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_EXCLUSION;
					n->location = (yylsp[-8]);
					n->access_method	= (yyvsp[-7].str);
					n->exclusions		= (yyvsp[-5].list);
					n->options			= (yyvsp[-3].list);
					n->indexname		= NULL;
					n->indexspace		= (yyvsp[-2].str);
					n->where_clause		= (yyvsp[-1].node);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "EXCLUDE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31368 "gram.cpp"
    break;

  case 548: /* ConstraintElem: FOREIGN KEY '(' columnList ')' REFERENCES qualified_name opt_column_list key_match key_actions ConstraintAttributeSpec  */
#line 4668 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_FOREIGN;
					n->location = (yylsp[-10]);
					n->pktable			= (yyvsp[-4].range);
					n->fk_attrs			= (yyvsp[-7].list);
					n->pk_attrs			= (yyvsp[-3].list);
					n->fk_matchtype		= (yyvsp[-2].ival);
					n->fk_upd_action	= (char) ((yyvsp[-1].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[-1].ival) & 0xFF);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (Node *)n;
				}
#line 31390 "gram.cpp"
    break;

  case 549: /* opt_no_inherit: NO INHERIT  */
#line 4687 "gram.y"
                                                                                {  (yyval.boolean) = TRUE; }
#line 31396 "gram.cpp"
    break;

  case 550: /* opt_no_inherit: %empty  */
#line 4688 "gram.y"
                                                                                        {  (yyval.boolean) = FALSE; }
#line 31402 "gram.cpp"
    break;

  case 551: /* opt_column_list: '(' columnList ')'  */
#line 4692 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 31408 "gram.cpp"
    break;

  case 552: /* opt_column_list: %empty  */
#line 4693 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 31414 "gram.cpp"
    break;

  case 553: /* columnList: columnElem  */
#line 4697 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31420 "gram.cpp"
    break;

  case 554: /* columnList: columnList ',' columnElem  */
#line 4698 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31426 "gram.cpp"
    break;

  case 555: /* columnElem: ColId  */
#line 4702 "gram.y"
                                {
					(yyval.node) = (Node *) makeString((yyvsp[0].str));
				}
#line 31434 "gram.cpp"
    break;

  case 556: /* distributed_by_list: distributed_by_elem  */
#line 4708 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].ielem)); }
#line 31440 "gram.cpp"
    break;

  case 557: /* distributed_by_list: distributed_by_list ',' distributed_by_elem  */
#line 4710 "gram.y"
                                {
					IndexElem *newelem = (yyvsp[0].ielem);
					ListCell *lc;

					foreach(lc, (yyvsp[-2].list))
					{
						IndexElem  *oldelem = (IndexElem *) lfirst(lc);

						if (strcmp(oldelem->name, newelem->name) == 0)
							ereport(ERROR,
									errcode(ERRCODE_DUPLICATE_COLUMN),
									 errmsg("duplicate column in DISTRIBUTED BY clause"),
									 parser_errposition((yylsp[0])));
					}

					(yyval.list) = lappend((yyvsp[-2].list), newelem);
				}
#line 31462 "gram.cpp"
    break;

  case 558: /* distributed_by_elem: ColId opt_class  */
#line 4730 "gram.y"
                                {
					/*
					 * only these fields are used, leave others as 0/NULL
					 */
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = (yyvsp[-1].str);
					(yyval.ielem)->opclass = (yyvsp[0].list);
				}
#line 31475 "gram.cpp"
    break;

  case 559: /* key_match: MATCH FULL  */
#line 4741 "gram.y"
                        {
				(yyval.ival) = FKCONSTR_MATCH_FULL;
			}
#line 31483 "gram.cpp"
    break;

  case 560: /* key_match: MATCH PARTIAL  */
#line 4745 "gram.y"
                        {
				ereport(ERROR,
						errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[-1])));
				(yyval.ival) = FKCONSTR_MATCH_PARTIAL;
			}
#line 31495 "gram.cpp"
    break;

  case 561: /* key_match: MATCH SIMPLE  */
#line 4753 "gram.y"
                        {
				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
			}
#line 31503 "gram.cpp"
    break;

  case 562: /* key_match: %empty  */
#line 4757 "gram.y"
                        {
				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
			}
#line 31511 "gram.cpp"
    break;

  case 563: /* ExclusionConstraintList: ExclusionConstraintElem  */
#line 4763 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 31517 "gram.cpp"
    break;

  case 564: /* ExclusionConstraintList: ExclusionConstraintList ',' ExclusionConstraintElem  */
#line 4765 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 31523 "gram.cpp"
    break;

  case 565: /* ExclusionConstraintElem: index_elem WITH any_operator  */
#line 4769 "gram.y"
                        {
				(yyval.list) = list_make2((yyvsp[-2].ielem), (yyvsp[0].list));
			}
#line 31531 "gram.cpp"
    break;

  case 566: /* ExclusionConstraintElem: index_elem WITH OPERATOR '(' any_operator ')'  */
#line 4774 "gram.y"
                        {
				(yyval.list) = list_make2((yyvsp[-5].ielem), (yyvsp[-1].list));
			}
#line 31539 "gram.cpp"
    break;

  case 567: /* ExclusionWhereClause: WHERE '(' a_expr ')'  */
#line 4780 "gram.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 31545 "gram.cpp"
    break;

  case 568: /* ExclusionWhereClause: %empty  */
#line 4781 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31551 "gram.cpp"
    break;

  case 569: /* key_actions: key_update  */
#line 4792 "gram.y"
                                { (yyval.ival) = ((yyvsp[0].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
#line 31557 "gram.cpp"
    break;

  case 570: /* key_actions: key_delete  */
#line 4794 "gram.y"
                                { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[0].ival) & 0xFF); }
#line 31563 "gram.cpp"
    break;

  case 571: /* key_actions: key_update key_delete  */
#line 4796 "gram.y"
                                { (yyval.ival) = ((yyvsp[-1].ival) << 8) | ((yyvsp[0].ival) & 0xFF); }
#line 31569 "gram.cpp"
    break;

  case 572: /* key_actions: key_delete key_update  */
#line 4798 "gram.y"
                                { (yyval.ival) = ((yyvsp[0].ival) << 8) | ((yyvsp[-1].ival) & 0xFF); }
#line 31575 "gram.cpp"
    break;

  case 573: /* key_actions: %empty  */
#line 4800 "gram.y"
                                { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
#line 31581 "gram.cpp"
    break;

  case 574: /* key_update: ON UPDATE key_action  */
#line 4803 "gram.y"
                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 31587 "gram.cpp"
    break;

  case 575: /* key_delete: ON DELETE_P key_action  */
#line 4806 "gram.y"
                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 31593 "gram.cpp"
    break;

  case 576: /* key_action: NO ACTION  */
#line 4810 "gram.y"
                                                                        { (yyval.ival) = FKCONSTR_ACTION_NOACTION; }
#line 31599 "gram.cpp"
    break;

  case 577: /* key_action: RESTRICT  */
#line 4811 "gram.y"
                                                                        { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; }
#line 31605 "gram.cpp"
    break;

  case 578: /* key_action: CASCADE  */
#line 4812 "gram.y"
                                                                        { (yyval.ival) = FKCONSTR_ACTION_CASCADE; }
#line 31611 "gram.cpp"
    break;

  case 579: /* key_action: SET NULL_P  */
#line 4813 "gram.y"
                                                                { (yyval.ival) = FKCONSTR_ACTION_SETNULL; }
#line 31617 "gram.cpp"
    break;

  case 580: /* key_action: SET DEFAULT  */
#line 4814 "gram.y"
                                                                { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; }
#line 31623 "gram.cpp"
    break;

  case 581: /* OptInherit: INHERITS '(' qualified_name_list ')'  */
#line 4817 "gram.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 31629 "gram.cpp"
    break;

  case 582: /* OptInherit: %empty  */
#line 4818 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 31635 "gram.cpp"
    break;

  case 583: /* OptWith: WITH reloptions  */
#line 4823 "gram.y"
                                                                { (yyval.list) = (yyvsp[0].list); }
#line 31641 "gram.cpp"
    break;

  case 584: /* OptWith: WITH OIDS  */
#line 4824 "gram.y"
                                                                        { (yyval.list) = list_make1(defWithOids(true)); }
#line 31647 "gram.cpp"
    break;

  case 585: /* OptWith: WITHOUT OIDS  */
#line 4825 "gram.y"
                                                                { (yyval.list) = list_make1(defWithOids(false)); }
#line 31653 "gram.cpp"
    break;

  case 586: /* OptWith: %empty  */
#line 4826 "gram.y"
                                                                        { (yyval.list) = NIL; }
#line 31659 "gram.cpp"
    break;

  case 587: /* OnCommitOption: ON COMMIT DROP  */
#line 4829 "gram.y"
                                                        { (yyval.oncommit) = ONCOMMIT_DROP; }
#line 31665 "gram.cpp"
    break;

  case 588: /* OnCommitOption: ON COMMIT DELETE_P ROWS  */
#line 4830 "gram.y"
                                                                { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; }
#line 31671 "gram.cpp"
    break;

  case 589: /* OnCommitOption: ON COMMIT PRESERVE ROWS  */
#line 4831 "gram.y"
                                                                { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; }
#line 31677 "gram.cpp"
    break;

  case 590: /* OnCommitOption: %empty  */
#line 4832 "gram.y"
                                                                                { (yyval.oncommit) = ONCOMMIT_NOOP; }
#line 31683 "gram.cpp"
    break;

  case 591: /* OptTableSpace: TABLESPACE name  */
#line 4835 "gram.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 31689 "gram.cpp"
    break;

  case 592: /* OptTableSpace: %empty  */
#line 4836 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 31695 "gram.cpp"
    break;

  case 593: /* OptConsTableSpace: USING INDEX TABLESPACE name  */
#line 4839 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 31701 "gram.cpp"
    break;

  case 594: /* OptConsTableSpace: %empty  */
#line 4840 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 31707 "gram.cpp"
    break;

  case 595: /* ExistingIndex: USING INDEX index_name  */
#line 4843 "gram.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 31713 "gram.cpp"
    break;

  case 596: /* optNumsegments: SEGMENTS ICONST  */
#line 4848 "gram.y"
        {
		(yyval.ival) = (yyvsp[0].ival);
	}
#line 31721 "gram.cpp"
    break;

  case 597: /* optNumsegments: %empty  */
#line 4852 "gram.y"
        {
		(yyval.ival) = -1;
	}
#line 31729 "gram.cpp"
    break;

  case 598: /* DistributedBy: DISTRIBUTED BY '(' distributed_by_list ')' optNumsegments  */
#line 4858 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_PARTITIONED;
				distributedBy->numsegments = (yyvsp[0].ival);
				distributedBy->keyCols = (yyvsp[-2].list);
				(yyval.node) = (Node *)distributedBy;
			}
#line 31741 "gram.cpp"
    break;

  case 599: /* DistributedBy: DISTRIBUTED RANDOMLY optNumsegments  */
#line 4866 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_PARTITIONED;
				distributedBy->numsegments = (yyvsp[0].ival);
				distributedBy->keyCols = NIL;
				(yyval.node) = (Node *)distributedBy;
			}
#line 31753 "gram.cpp"
    break;

  case 600: /* DistributedBy: DISTRIBUTED REPLICATED  */
#line 4874 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_REPLICATED;
				distributedBy->numsegments = -1;
				distributedBy->keyCols = NIL;
				(yyval.node) = (Node *)distributedBy;
			}
#line 31765 "gram.cpp"
    break;

  case 601: /* DistributedBy: DISTRIBUTED LOCAL  */
#line 4882 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_LOCAL;
				distributedBy->numsegments = -1;
				distributedBy->keyCols = NIL;
				(yyval.node) = (Node *)distributedBy;

			}
#line 31778 "gram.cpp"
    break;

  case 602: /* OptDistributedBy: DistributedBy  */
#line 4892 "gram.y"
                                                        { (yyval.node) = (yyvsp[0].node); }
#line 31784 "gram.cpp"
    break;

  case 603: /* OptDistributedBy: %empty  */
#line 4893 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31790 "gram.cpp"
    break;

  case 604: /* OptTabPartitionColumnEncList: TabPartitionColumnEncList  */
#line 4898 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 31796 "gram.cpp"
    break;

  case 605: /* OptTabPartitionColumnEncList: %empty  */
#line 4899 "gram.y"
                                    { (yyval.list) = NULL; }
#line 31802 "gram.cpp"
    break;

  case 606: /* TabPartitionColumnEncList: column_reference_storage_directive  */
#line 4903 "gram.y"
                                           { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31808 "gram.cpp"
    break;

  case 607: /* TabPartitionColumnEncList: TabPartitionColumnEncList column_reference_storage_directive  */
#line 4905 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 31816 "gram.cpp"
    break;

  case 608: /* OptTabPartitionStorageAttr: WITH definition TABLESPACE name  */
#line 4911 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = NULL;
                    pc->arg1 = (Node *)(yyvsp[-2].list);
                    pc->arg2 = (Node *)makeString((yyvsp[0].str));
                    pc->location = (yylsp[-3]);
					(yyval.node) = (Node *)pc;
                }
#line 31830 "gram.cpp"
    break;

  case 609: /* OptTabPartitionStorageAttr: WITH definition  */
#line 4921 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = NULL;
                    pc->arg1 = (Node *)(yyvsp[0].list);
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);
					(yyval.node) = (Node *)pc;
 				}
#line 31844 "gram.cpp"
    break;

  case 610: /* OptTabPartitionStorageAttr: TABLESPACE name  */
#line 4931 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = NULL;
                    pc->arg1 = NULL;
                    pc->arg2 = (Node *)makeString((yyvsp[0].str));
                    pc->location = (yylsp[-1]);
					(yyval.node) = (Node *)pc;
				}
#line 31858 "gram.cpp"
    break;

  case 611: /* OptTabPartitionStorageAttr: %empty  */
#line 4940 "gram.y"
                                    { (yyval.node) = NULL; }
#line 31864 "gram.cpp"
    break;

  case 612: /* OptTabPartitionSpec: '(' TabPartitionElemList ')'  */
#line 4944 "gram.y"
                                {
                        PartitionSpec *n = makeNode(PartitionSpec); 
                        n->partElem  = (yyvsp[-1].list);
                        n->subSpec   = NULL;
                        n->location  = (yylsp[-1]);
                        (yyval.node) = (Node *)n;
				}
#line 31876 "gram.cpp"
    break;

  case 613: /* OptTabPartitionSpec: %empty  */
#line 4951 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31882 "gram.cpp"
    break;

  case 614: /* OptTabSubPartitionSpec: '(' TabSubPartitionElemList ')'  */
#line 4956 "gram.y"
                                {
                        PartitionSpec *n = makeNode(PartitionSpec); 
                        n->partElem  = (yyvsp[-1].list);
                        n->subSpec   = NULL;
                        n->location  = (yylsp[-1]);
                        (yyval.node) = (Node *)n;
				}
#line 31894 "gram.cpp"
    break;

  case 615: /* OptTabSubPartitionSpec: %empty  */
#line 4963 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31900 "gram.cpp"
    break;

  case 616: /* TabPartitionElemList: TabPartitionElem  */
#line 4967 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31906 "gram.cpp"
    break;

  case 617: /* TabPartitionElemList: TabPartitionElemList ',' TabPartitionElem  */
#line 4969 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31912 "gram.cpp"
    break;

  case 618: /* TabSubPartitionElemList: TabSubPartitionElem  */
#line 4972 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31918 "gram.cpp"
    break;

  case 619: /* TabSubPartitionElemList: TabSubPartitionElemList ',' TabSubPartitionElem  */
#line 4974 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31924 "gram.cpp"
    break;

  case 620: /* tab_part_val_no_paran: AexprConst  */
#line 4977 "gram.y"
                                  { (yyval.node) = (yyvsp[0].node); }
#line 31930 "gram.cpp"
    break;

  case 621: /* tab_part_val_no_paran: CAST '(' tab_part_val AS Typename ')'  */
#line 4979 "gram.y"
                                { 
					(yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), (yylsp[-2]));
				}
#line 31938 "gram.cpp"
    break;

  case 622: /* tab_part_val_no_paran: tab_part_val_no_paran TYPECAST Typename  */
#line 4983 "gram.y"
                                { 
					(yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); 
				}
#line 31946 "gram.cpp"
    break;

  case 623: /* tab_part_val_no_paran: '-' tab_part_val_no_paran  */
#line 4986 "gram.y"
                                                    { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 31952 "gram.cpp"
    break;

  case 624: /* tab_part_val: tab_part_val_no_paran  */
#line 4989 "gram.y"
                                    { (yyval.node) = (yyvsp[0].node); }
#line 31958 "gram.cpp"
    break;

  case 625: /* tab_part_val: '(' tab_part_val_no_paran ')'  */
#line 4990 "gram.y"
                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 31964 "gram.cpp"
    break;

  case 626: /* tab_part_val: '(' tab_part_val_no_paran ')' TYPECAST Typename  */
#line 4992 "gram.y"
                                { 
					(yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[0].typnam), (yylsp[-1])); 
				}
#line 31972 "gram.cpp"
    break;

  case 627: /* TabPartitionBoundarySpecValList: tab_part_val  */
#line 4998 "gram.y"
                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31978 "gram.cpp"
    break;

  case 628: /* TabPartitionBoundarySpecValList: TabPartitionBoundarySpecValList ',' tab_part_val  */
#line 5000 "gram.y"
                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31984 "gram.cpp"
    break;

  case 629: /* OptTabPartitionRangeInclusive: INCLUSIVE  */
#line 5004 "gram.y"
                                                        { (yyval.ival) = PART_EDGE_INCLUSIVE; }
#line 31990 "gram.cpp"
    break;

  case 630: /* OptTabPartitionRangeInclusive: EXCLUSIVE  */
#line 5005 "gram.y"
                                                        { (yyval.ival) = PART_EDGE_EXCLUSIVE; }
#line 31996 "gram.cpp"
    break;

  case 631: /* OptTabPartitionRangeInclusive: %empty  */
#line 5006 "gram.y"
                                                        { (yyval.ival) = PART_EDGE_UNSPECIFIED; }
#line 32002 "gram.cpp"
    break;

  case 632: /* TabPartitionBoundarySpecStart: START '(' TabPartitionBoundarySpecValList ')' OptTabPartitionRangeInclusive  */
#line 5013 "gram.y"
                                {
                        PartitionRangeItem *n = makeNode(PartitionRangeItem); 
                        n->partRangeVal  = (yyvsp[-2].list);
                        if (!((yyvsp[0].ival)))
                            n->partedge = PART_EDGE_INCLUSIVE;
                        else
                            n->partedge = static_cast<PartitionEdgeBounding>((yyvsp[0].ival));
                        n->location  = (yylsp[-4]);
                        (yyval.node) = (Node *)n;
				}
#line 32017 "gram.cpp"
    break;

  case 633: /* TabPartitionBoundarySpecEnd: END_P '(' TabPartitionBoundarySpecValList ')' OptTabPartitionRangeInclusive  */
#line 5029 "gram.y"
                                {
                        PartitionRangeItem *n = makeNode(PartitionRangeItem); 
                        n->partRangeVal  = (yyvsp[-2].list);
                        if (!((yyvsp[0].ival)))
                            n->partedge = PART_EDGE_EXCLUSIVE;
                        else
                            n->partedge = static_cast<PartitionEdgeBounding>((yyvsp[0].ival));
                        n->location  = (yylsp[-4]);
                        (yyval.node) = (Node *)n;
				}
#line 32032 "gram.cpp"
    break;

  case 634: /* OptTabPartitionBoundarySpecEvery: EVERY '(' TabPartitionBoundarySpecValList ')'  */
#line 5043 "gram.y"
                                {
                        PartitionRangeItem *n = makeNode(PartitionRangeItem); 
                        n->partRangeVal  = (yyvsp[-1].list);
                        n->location  = (yylsp[-3]);

                        (yyval.node) = (Node *)n;
				}
#line 32044 "gram.cpp"
    break;

  case 635: /* OptTabPartitionBoundarySpecEvery: %empty  */
#line 5050 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 32050 "gram.cpp"
    break;

  case 636: /* OptTabPartitionBoundarySpecEnd: TabPartitionBoundarySpecEnd  */
#line 5054 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 32056 "gram.cpp"
    break;

  case 637: /* OptTabPartitionBoundarySpecEnd: %empty  */
#line 5055 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 32062 "gram.cpp"
    break;

  case 638: /* TabPartitionBoundarySpec: part_values_clause  */
#line 5061 "gram.y"
                                {
                        PartitionValuesSpec *n = makeNode(PartitionValuesSpec); 

                        n->partValues = (yyvsp[0].list);
                        n->location  = (yylsp[0]);
                        (yyval.node) = (Node *)n;
				}
#line 32074 "gram.cpp"
    break;

  case 639: /* TabPartitionBoundarySpec: TabPartitionBoundarySpecStart OptTabPartitionBoundarySpecEnd OptTabPartitionBoundarySpecEvery  */
#line 5071 "gram.y"
                                {
                        PartitionBoundSpec *n = makeNode(PartitionBoundSpec); 
                        n->partStart = (yyvsp[-2].node);
                        n->partEnd   = (yyvsp[-1].node);
                        n->partEvery = (yyvsp[0].node);
                        n->everyGenList = NIL; 
						n->pWithTnameStr = NULL;
                        n->location  = (yylsp[-2]);
                        (yyval.node) = (Node *)n;
				}
#line 32089 "gram.cpp"
    break;

  case 640: /* TabPartitionBoundarySpec: TabPartitionBoundarySpecEnd OptTabPartitionBoundarySpecEvery  */
#line 5083 "gram.y"
                                {
                        PartitionBoundSpec *n = makeNode(PartitionBoundSpec); 
                        n->partStart = NULL;
                        n->partEnd   = (yyvsp[-1].node);
                        n->partEvery = (yyvsp[0].node);
                        n->everyGenList = NIL; 
						n->pWithTnameStr = NULL;
                        n->location  = (yylsp[-1]);
                        (yyval.node) = (Node *)n;
				}
#line 32104 "gram.cpp"
    break;

  case 641: /* OptTabPartitionBoundarySpec: TabPartitionBoundarySpec  */
#line 5096 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 32110 "gram.cpp"
    break;

  case 642: /* OptTabPartitionBoundarySpec: %empty  */
#line 5097 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 32116 "gram.cpp"
    break;

  case 643: /* multi_spec_value_list: '(' part_values_single ')'  */
#line 5101 "gram.y"
                                {
					ListCell *lc;
					List *out = NIL;

					foreach(lc, (yyvsp[-1].list))
						out = lappend(out, linitial(reinterpret_cast<const PGList*>(lfirst(lc))));

					(yyval.list) = list_make1(out);
				}
#line 32130 "gram.cpp"
    break;

  case 644: /* multi_spec_value_list: multi_spec_value_list ',' '(' part_values_single ')'  */
#line 5111 "gram.y"
                                {
					ListCell *lc;
					List *out = NIL;

					foreach(lc, (yyvsp[-1].list))
						out = lappend(out, linitial(reinterpret_cast<const PGList*>(lfirst(lc))));

					(yyval.list) = lappend((yyvsp[-4].list), out);
				}
#line 32144 "gram.cpp"
    break;

  case 645: /* part_values_single: tab_part_val_no_paran  */
#line 5123 "gram.y"
                                {
					(yyval.list) = list_make1(list_make1((yyvsp[0].node)));
				}
#line 32152 "gram.cpp"
    break;

  case 646: /* part_values_single: part_values_single ',' tab_part_val_no_paran  */
#line 5127 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), list_make1((yyvsp[0].node)));
				}
#line 32160 "gram.cpp"
    break;

  case 647: /* part_values_clause: VALUES '(' part_values_single ')'  */
#line 5134 "gram.y"
                                {
					(yyval.list) = (yyvsp[-1].list);
				}
#line 32168 "gram.cpp"
    break;

  case 648: /* part_values_clause: VALUES '(' multi_spec_value_list ')'  */
#line 5138 "gram.y"
                                {
					(yyval.list) = (yyvsp[-1].list);
				}
#line 32176 "gram.cpp"
    break;

  case 649: /* part_values_or_spec_list: TabPartitionBoundarySpecValList  */
#line 5143 "gram.y"
                                                          { (yyval.list) = (yyvsp[0].list); }
#line 32182 "gram.cpp"
    break;

  case 650: /* part_values_or_spec_list: part_values_clause  */
#line 5144 "gram.y"
                                             { (yyval.list) = (yyvsp[0].list); }
#line 32188 "gram.cpp"
    break;

  case 651: /* TabPartitionElem: TabPartitionNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5153 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = 0;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32205 "gram.cpp"
    break;

  case 652: /* TabPartitionElem: TabPartitionDefaultNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5172 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = true;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        (yyval.node) = (Node *)n;
				}
#line 32221 "gram.cpp"
    break;

  case 653: /* TabPartitionElem: TabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5187 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = NULL;
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-3]);
                        n->isDefault = 0;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32238 "gram.cpp"
    break;

  case 654: /* TabPartitionElem: column_reference_storage_directive  */
#line 5200 "gram.y"
                                {
					(yyval.node) = (Node *)(yyvsp[0].node);
				}
#line 32246 "gram.cpp"
    break;

  case 655: /* TabSubPartitionElem: TabSubPartitionNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5210 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = 0;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32263 "gram.cpp"
    break;

  case 656: /* TabSubPartitionElem: TabSubPartitionDefaultNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5227 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = true;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32280 "gram.cpp"
    break;

  case 657: /* TabSubPartitionElem: TabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5243 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = NULL;
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-3]);
                        n->isDefault = false;
                        n->colencs   = (yyvsp[-1].list);
                        n->storeAttr = (yyvsp[-2].node);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32297 "gram.cpp"
    break;

  case 658: /* TabSubPartitionElem: column_reference_storage_directive  */
#line 5256 "gram.y"
                                {
					(yyval.node) = (Node *)(yyvsp[0].node);
				}
#line 32305 "gram.cpp"
    break;

  case 659: /* TabPartitionNameDecl: PARTITION PartitionColId  */
#line 5262 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32313 "gram.cpp"
    break;

  case 660: /* TabPartitionDefaultNameDecl: DEFAULT PARTITION PartitionColId  */
#line 5267 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32321 "gram.cpp"
    break;

  case 661: /* TabSubPartitionNameDecl: SUBPARTITION PartitionColId  */
#line 5273 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32329 "gram.cpp"
    break;

  case 662: /* TabSubPartitionDefaultNameDecl: DEFAULT SUBPARTITION PartitionColId  */
#line 5279 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32337 "gram.cpp"
    break;

  case 663: /* TabPartitionByType: RANGE  */
#line 5285 "gram.y"
                                                        { (yyval.ival) = PARTTYP_RANGE; }
#line 32343 "gram.cpp"
    break;

  case 664: /* TabPartitionByType: LIST  */
#line 5286 "gram.y"
                                                        { (yyval.ival) = PARTTYP_LIST; }
#line 32349 "gram.cpp"
    break;

  case 665: /* TabPartitionByType: %empty  */
#line 5288 "gram.y"
                                {
					(yyval.ival) = PARTTYP_RANGE; 

					ereport(ERROR,
							errcode(ERRCODE_SYNTAX_ERROR),
							 errmsg("PARTITION BY must specify RANGE or LIST"));
				}
#line 32361 "gram.cpp"
    break;

  case 666: /* OptTabPartitionBy: PARTITION BY TabPartitionByType '(' columnList ')' opt_list_subparts OptTabPartitionSpec  */
#line 5302 "gram.y"
                                {
					PartitionBy *n = makeNode(PartitionBy); 
						
					n->partType = static_cast<PartitionByType>((yyvsp[-5].ival));
					n->keys     = (yyvsp[-3].list); 
					n->subPart  = (yyvsp[-1].node);
					if (PointerIsValid(n->subPart) &&
						!IsA(n->subPart, PartitionBy))
						parser_yyerror("syntax error");

					n->partSpec = (yyvsp[0].node);
					n->partDepth = 0;
					n->partQuiet = PART_VERBO_NODISTRO;
					n->location  = (yylsp[-5]);
					n->partDefault = NULL;
					(yyval.node) = (Node *)n;
				}
#line 32383 "gram.cpp"
    break;

  case 667: /* OptTabPartitionBy: %empty  */
#line 5319 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 32389 "gram.cpp"
    break;

  case 668: /* TabSubPartitionTemplate: SUBPARTITION TEMPLATE '(' TabSubPartitionElemList ')'  */
#line 5325 "gram.y"
                                {
					PartitionSpec *n = makeNode(PartitionSpec); 
					n->partElem  = (yyvsp[-1].list);
					n->subSpec   = NULL;
					n->istemplate  = true;
					n->location  = (yylsp[-2]);
					(yyval.node) = (Node *)n;

					/* a little (temporary?) syntax check on templates */
					if (n->partElem)
					{
						List *elems;
						ListCell *lc;
						Assert(IsA(n->partElem, List));

						elems = (List *)n->partElem;
						foreach(lc, elems)
						{
							PartitionElem *e = reinterpret_cast<PartitionElem *>(lfirst(lc));

							if (!IsA(e, PartitionElem)) continue;

							if (e->subSpec)
								ereport(ERROR,
										errcode(ERRCODE_SYNTAX_ERROR),
										 errmsg("template cannot contain "
												"specification for child "
												"partition"));
						}

					}
				}
#line 32426 "gram.cpp"
    break;

  case 669: /* opt_list_subparts: TabSubPartition  */
#line 5359 "gram.y"
                                   { (yyval.node) = (yyvsp[0].node); }
#line 32432 "gram.cpp"
    break;

  case 670: /* opt_list_subparts: %empty  */
#line 5360 "gram.y"
                                    { (yyval.node) = NULL; }
#line 32438 "gram.cpp"
    break;

  case 671: /* TabSubPartitionBy: SUBPARTITION BY TabPartitionByType '(' columnList ')'  */
#line 5366 "gram.y"
                                {
					PartitionBy *n = makeNode(PartitionBy);
					n->partType = static_cast<PartitionByType>((yyvsp[-3].ival));
					n->keys = (yyvsp[-1].list);
					n->subPart  = NULL;
					n->partSpec = NULL;
					n->partDepth = 0;
					n->partQuiet = PART_VERBO_NODISTRO;
					n->location  = (yylsp[-3]);
					n->partDefault = NULL;
					(yyval.node) = (Node *)n;
				}
#line 32455 "gram.cpp"
    break;

  case 672: /* TabSubPartition: TabSubPartitionBy TabSubPartitionTemplate  */
#line 5382 "gram.y"
                                {
					PartitionBy *pby = (PartitionBy *)(yyvsp[-1].node);

					((PartitionBy *)pby)->partSpec = (yyvsp[0].node);

					(yyval.node) = (yyvsp[-1].node);
				}
#line 32467 "gram.cpp"
    break;

  case 673: /* TabSubPartition: TabSubPartitionBy  */
#line 5389 "gram.y"
                                            { (yyval.node) = (yyvsp[0].node); }
#line 32473 "gram.cpp"
    break;

  case 674: /* TabSubPartition: TabSubPartitionBy TabSubPartition  */
#line 5391 "gram.y"
                                {
					PartitionBy *pby = (PartitionBy *)(yyvsp[-1].node);
					pby->subPart = (yyvsp[0].node);
					(yyval.node) = (Node *)pby;
				}
#line 32483 "gram.cpp"
    break;

  case 675: /* TabSubPartition: TabSubPartitionBy TabSubPartitionTemplate TabSubPartition  */
#line 5397 "gram.y"
                                {
					PartitionBy *pby = (PartitionBy *)(yyvsp[-2].node);
					pby->partSpec = (yyvsp[-1].node);
					pby->subPart = (yyvsp[0].node);
					(yyval.node) = (Node *)pby;
				}
#line 32494 "gram.cpp"
    break;

  case 676: /* CreateAsStmt: CREATE OptTemp TABLE create_as_target AS SelectStmt opt_with_data OptDistributedBy OptTabPartitionBy  */
#line 5419 "gram.y"
                                {
					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
					ctas->query = (yyvsp[-3].node);
					ctas->into = (yyvsp[-5].into);
					ctas->relkind = OBJECT_TABLE;
					ctas->is_select_into = false;
					/* cram additional flags into the IntoClause */
					(yyvsp[-5].into)->rel->relpersistence = (yyvsp[-7].ival);
					ctas->into->distributedBy = (yyvsp[-1].node);

					if ((yyvsp[0].node))
						ereport(ERROR,
                                errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("Cannot create a partitioned table using CREATE TABLE AS SELECT"),
                                 errhint("Use CREATE TABLE...LIKE (followed by INSERT...SELECT) instead"));

					(yyvsp[-5].into)->skipData = !((yyvsp[-2].boolean));
					(yyval.node) = (Node *) ctas;
				}
#line 32518 "gram.cpp"
    break;

  case 677: /* create_as_target: qualified_name opt_column_list OptWith OnCommitOption OptTableSpace  */
#line 5442 "gram.y"
                                {
					(yyval.into) = makeNode(IntoClause);
					(yyval.into)->rel = (yyvsp[-4].range);
					(yyval.into)->colNames = (yyvsp[-3].list);
					(yyval.into)->options = (yyvsp[-2].list);
					(yyval.into)->onCommit = (yyvsp[-1].oncommit);
					(yyval.into)->tableSpaceName = (yyvsp[0].str);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				}
#line 32533 "gram.cpp"
    break;

  case 678: /* opt_with_data: WITH DATA_P  */
#line 5455 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 32539 "gram.cpp"
    break;

  case 679: /* opt_with_data: WITH NO DATA_P  */
#line 5456 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 32545 "gram.cpp"
    break;

  case 680: /* opt_with_data: %empty  */
#line 5457 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 32551 "gram.cpp"
    break;

  case 681: /* CreateExternalStmt: CREATE OptWritable EXTERNAL OptWeb OptTemp TABLE qualified_name '(' OptExtTableElementList ')' ExtTypedesc FORMAT Sconst format_opt ext_options_opt ext_opt_encoding_list ExtSingleRowErrorHandling OptDistributedBy  */
#line 5469 "gram.y"
                                                {
							CreateExternalStmt *n = makeNode(CreateExternalStmt);
							n->iswritable = (yyvsp[-16].boolean);
							n->isweb = (yyvsp[-14].boolean);
							(yyvsp[-11].range)->relpersistence = (yyvsp[-13].ival);
							n->relation = (yyvsp[-11].range);
							n->tableElts = (yyvsp[-9].list);
							n->exttypedesc = (ExtTableTypeDesc *) (yyvsp[-7].node);
							n->format = (yyvsp[-5].str);
							n->formatOpts = (yyvsp[-4].list);
							n->extOptions = (yyvsp[-3].list);
							n->encoding = (yyvsp[-2].list);
							n->sreh = (yyvsp[-1].node);
							n->distributedBy = (DistributedBy *) (yyvsp[0].node);
							
							/* various syntax checks for EXECUTE external table */
							if(((ExtTableTypeDesc *) n->exttypedesc)->exttabletype == EXTTBL_TYPE_EXECUTE)
							{
								ExtTableTypeDesc *extdesc = (ExtTableTypeDesc *) n->exttypedesc;
								
								if(!n->isweb)
									ereport(ERROR,
											errcode(ERRCODE_SYNTAX_ERROR),
										 	 errmsg("EXECUTE may not be used with a regular external table"),
										 	 errhint("Use CREATE EXTERNAL WEB TABLE instead"));
								
								/* if no ON clause specified, default to "ON ALL" */
								if(extdesc->on_clause == NIL)
								{									
									extdesc->on_clause = lappend(extdesc->on_clause, 
										   				   		 makeDefElem("all", (Node *)makeInteger(TRUE)));
								}
								else if(n->iswritable)
								{
									ereport(ERROR,
											errcode(ERRCODE_SYNTAX_ERROR),
									 		 errmsg("ON clause may not be used with a writable external table"));
								}
							}

							if(n->sreh)
							{
								if (n->iswritable)
									ereport(ERROR,
										errcode(ERRCODE_SYNTAX_ERROR),
										 errmsg("Single row error handling may not be used with a writable external table"));

								if (((SingleRowErrorDesc *)n->sreh)->log_errors_type == LOG_ERRORS_PERSISTENTLY)
								{
									n->extOptions = lappend(n->extOptions,
															makeDefElem("error_log_persistent", (Node *)makeString("true")));
								}
							}

							(yyval.node) = (Node *)n;							
						}
#line 32612 "gram.cpp"
    break;

  case 682: /* OptWritable: WRITABLE  */
#line 5527 "gram.y"
                                                        { (yyval.boolean) = TRUE; }
#line 32618 "gram.cpp"
    break;

  case 683: /* OptWritable: READABLE  */
#line 5528 "gram.y"
                                                                        { (yyval.boolean) = FALSE; }
#line 32624 "gram.cpp"
    break;

  case 684: /* OptWritable: %empty  */
#line 5529 "gram.y"
                                                                        { (yyval.boolean) = FALSE; }
#line 32630 "gram.cpp"
    break;

  case 685: /* OptWeb: WEB  */
#line 5532 "gram.y"
                                                                { (yyval.boolean) = TRUE; }
#line 32636 "gram.cpp"
    break;

  case 686: /* OptWeb: %empty  */
#line 5533 "gram.y"
                                                                { (yyval.boolean) = FALSE; }
#line 32642 "gram.cpp"
    break;

  case 687: /* ExtTypedesc: LOCATION '(' cdb_string_list ')' ext_on_clause_list  */
#line 5538 "gram.y"
                        {
				ExtTableTypeDesc *n = makeNode(ExtTableTypeDesc);
				n->exttabletype = EXTTBL_TYPE_LOCATION;
				n->location_list = (yyvsp[-2].list); 
				n->on_clause = (yyvsp[0].list);
				n->command_string = NULL;
				(yyval.node) = (Node *)n;
	
			}
#line 32656 "gram.cpp"
    break;

  case 688: /* ExtTypedesc: EXECUTE Sconst ext_on_clause_list  */
#line 5548 "gram.y"
                        {
				ExtTableTypeDesc *n = makeNode(ExtTableTypeDesc);
				n->exttabletype = EXTTBL_TYPE_EXECUTE;
				n->location_list = NIL; 
				n->command_string = (yyvsp[-1].str);
				n->on_clause = (yyvsp[0].list); /* default will get set later if needed */
						
				(yyval.node) = (Node *)n;
			}
#line 32670 "gram.cpp"
    break;

  case 689: /* ext_on_clause_list: ext_on_clause_list ext_on_clause_item  */
#line 5560 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 32676 "gram.cpp"
    break;

  case 690: /* ext_on_clause_list: %empty  */
#line 5561 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 32682 "gram.cpp"
    break;

  case 691: /* ext_on_clause_item: ON ALL  */
#line 5566 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("all", (Node *)makeInteger(TRUE));
			}
#line 32690 "gram.cpp"
    break;

  case 692: /* ext_on_clause_item: ON HOST Sconst  */
#line 5570 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("hostname", (Node *)makeString((yyvsp[0].str)));
			}
#line 32698 "gram.cpp"
    break;

  case 693: /* ext_on_clause_item: ON HOST  */
#line 5574 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("eachhost", (Node *)makeInteger(TRUE));
			}
#line 32706 "gram.cpp"
    break;

  case 694: /* ext_on_clause_item: ON MASTER  */
#line 5578 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("master", (Node *)makeInteger(TRUE));
			}
#line 32714 "gram.cpp"
    break;

  case 695: /* ext_on_clause_item: ON SEGMENT Iconst  */
#line 5582 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("segment", (Node *)makeInteger((yyvsp[0].ival)));
			}
#line 32722 "gram.cpp"
    break;

  case 696: /* ext_on_clause_item: ON Iconst  */
#line 5586 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("random", (Node *)makeInteger((yyvsp[0].ival)));
			}
#line 32730 "gram.cpp"
    break;

  case 697: /* format_opt: '(' format_opt_list ')'  */
#line 5592 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 32736 "gram.cpp"
    break;

  case 698: /* format_opt: '(' format_def_list ')'  */
#line 5593 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 32742 "gram.cpp"
    break;

  case 699: /* format_opt: '(' ')'  */
#line 5594 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 32748 "gram.cpp"
    break;

  case 700: /* format_opt: %empty  */
#line 5595 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 32754 "gram.cpp"
    break;

  case 701: /* format_opt_list: format_opt_item  */
#line 5600 "gram.y"
                        { 
				(yyval.list) = list_make1((yyvsp[0].defelt));
			}
#line 32762 "gram.cpp"
    break;

  case 702: /* format_opt_list: format_opt_list format_opt_item  */
#line 5604 "gram.y"
                        { 
				(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); 
			}
#line 32770 "gram.cpp"
    break;

  case 703: /* format_def_list: format_def_item  */
#line 5611 "gram.y"
                        { 
				(yyval.list) = list_make1((yyvsp[0].defelt));
			}
#line 32778 "gram.cpp"
    break;

  case 704: /* format_def_list: format_def_list ',' format_def_item  */
#line 5615 "gram.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
			}
#line 32786 "gram.cpp"
    break;

  case 705: /* format_def_item: ColLabel '=' def_arg  */
#line 5622 "gram.y"
                        {
				(yyval.defelt) = makeDefElem((yyvsp[-2].str), (yyvsp[0].node));
			}
#line 32794 "gram.cpp"
    break;

  case 706: /* format_def_item: ColLabel '=' '(' columnList ')'  */
#line 5626 "gram.y"
                        {
				(yyval.defelt) = makeDefElem((yyvsp[-4].str), (Node *) (yyvsp[-1].list));
			}
#line 32802 "gram.cpp"
    break;

  case 707: /* format_opt_item: DELIMITER opt_as Sconst  */
#line 5633 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[0].str)));
			}
#line 32810 "gram.cpp"
    break;

  case 708: /* format_opt_item: NULL_P opt_as Sconst  */
#line 5637 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[0].str)));
			}
#line 32818 "gram.cpp"
    break;

  case 709: /* format_opt_item: CSV  */
#line 5641 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("csv", (Node *)makeInteger(TRUE));
			}
#line 32826 "gram.cpp"
    break;

  case 710: /* format_opt_item: HEADER_P  */
#line 5645 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
			}
#line 32834 "gram.cpp"
    break;

  case 711: /* format_opt_item: QUOTE opt_as Sconst  */
#line 5649 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[0].str)));
			}
#line 32842 "gram.cpp"
    break;

  case 712: /* format_opt_item: ESCAPE opt_as Sconst  */
#line 5653 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[0].str)));
			}
#line 32850 "gram.cpp"
    break;

  case 713: /* format_opt_item: FORCE NOT NULL_P columnList  */
#line 5657 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[0].list));
			}
#line 32858 "gram.cpp"
    break;

  case 714: /* format_opt_item: FORCE QUOTE columnList  */
#line 5661 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[0].list));
			}
#line 32866 "gram.cpp"
    break;

  case 715: /* format_opt_item: FORCE QUOTE '*'  */
#line 5665 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
			}
#line 32874 "gram.cpp"
    break;

  case 716: /* format_opt_item: FILL MISSING FIELDS  */
#line 5669 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("fill_missing_fields", (Node *)makeInteger(TRUE));
			}
#line 32882 "gram.cpp"
    break;

  case 717: /* format_opt_item: NEWLINE opt_as Sconst  */
#line 5673 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("newline", (Node *)makeString((yyvsp[0].str)));
			}
#line 32890 "gram.cpp"
    break;

  case 718: /* ext_options_opt: OPTIONS ext_options  */
#line 5679 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 32896 "gram.cpp"
    break;

  case 719: /* ext_options_opt: %empty  */
#line 5680 "gram.y"
                                                            { (yyval.list) = NIL; }
#line 32902 "gram.cpp"
    break;

  case 720: /* ext_options: '(' ext_options_list ')'  */
#line 5684 "gram.y"
                                                           { (yyval.list) = (yyvsp[-1].list); }
#line 32908 "gram.cpp"
    break;

  case 721: /* ext_options: '(' ')'  */
#line 5685 "gram.y"
                                                            { (yyval.list) = NIL; }
#line 32914 "gram.cpp"
    break;

  case 722: /* ext_options_list: ext_options_item  */
#line 5690 "gram.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].defelt));
			}
#line 32922 "gram.cpp"
    break;

  case 723: /* ext_options_list: ext_options_list ',' ext_options_item  */
#line 5694 "gram.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
			}
#line 32930 "gram.cpp"
    break;

  case 724: /* ext_options_item: ColLabel Sconst  */
#line 5701 "gram.y"
                        {
				(yyval.defelt) = makeDefElem((yyvsp[-1].str), (Node *)makeString((yyvsp[0].str)));
			}
#line 32938 "gram.cpp"
    break;

  case 725: /* OptExtTableElementList: ExtTableElementList  */
#line 5707 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 32944 "gram.cpp"
    break;

  case 726: /* OptExtTableElementList: %empty  */
#line 5708 "gram.y"
                                                                                { (yyval.list) = NIL; }
#line 32950 "gram.cpp"
    break;

  case 727: /* ExtTableElementList: ExtTableElement  */
#line 5713 "gram.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].node));
			}
#line 32958 "gram.cpp"
    break;

  case 728: /* ExtTableElementList: ExtTableElementList ',' ExtTableElement  */
#line 5717 "gram.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
			}
#line 32966 "gram.cpp"
    break;

  case 729: /* ExtTableElement: ExtcolumnDef  */
#line 5723 "gram.y"
                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 32972 "gram.cpp"
    break;

  case 730: /* ExtTableElement: TableLikeClause  */
#line 5724 "gram.y"
                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 32978 "gram.cpp"
    break;

  case 731: /* ExtcolumnDef: ColId Typename  */
#line 5729 "gram.y"
                {
			ColumnDef *n = makeNode(ColumnDef);
			n->colname = (yyvsp[-1].str);
			n->typeName = (yyvsp[0].typnam);
			n->is_local = true;
			n->is_not_null = false;
			n->constraints = NIL;
			(yyval.node) = (Node *)n;
		}
#line 32992 "gram.cpp"
    break;

  case 732: /* OptSingleRowErrorHandling: OptLogErrorTable SEGMENT REJECT_P LIMIT Iconst OptSrehLimitType  */
#line 5745 "gram.y"
                {
			SingleRowErrorDesc *n = makeNode(SingleRowErrorDesc);
			n->into_file = (yyvsp[-5].ival) == LOG_ERRORS_DISABLE ? false : true;
			n->log_errors_type = n->into_file ? LOG_ERRORS_ENABLE : LOG_ERRORS_DISABLE;
			n->rejectlimit = (yyvsp[-1].ival);
			n->is_limit_in_rows = (yyvsp[0].boolean); /* true for ROWS false for PERCENT */

			/* PERCENT value check */
			if(!n->is_limit_in_rows && (n->rejectlimit < 1 || n->rejectlimit > 100))
				ereport(ERROR,
						errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						 errmsg("invalid PERCENT value. Should be (1 - 100)"));
			
			/* ROW values check */
			if(n->is_limit_in_rows && n->rejectlimit < 2)
			   ereport(ERROR,
					   errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						errmsg("invalid (ROWS) reject limit. Should be 2 or larger"));

			(yyval.list) = lappend(NULL, makeDefElem("sreh", (Node *) n));
		}
#line 33018 "gram.cpp"
    break;

  case 733: /* OptSingleRowErrorHandling: %empty  */
#line 5766 "gram.y"
                                        { (yyval.list) = NULL; }
#line 33024 "gram.cpp"
    break;

  case 734: /* OptLogErrorTable: LOG_P ERRORS INTO qualified_name  */
#line 5771 "gram.y"
                {
			if (gp_ignore_error_table) /* ignore the [INTO error-table] clause for backward compatibility */
			{
			ereport(WARNING,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 errmsg("error table is not supported"),
					 errhint("Use gp_read_error_log() and gp_truncate_error_log() to view and manage the internal error log associated with your table."));
			}
			else
			{
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 errmsg("error table is not supported"),
					 errhint("Set gp_ignore_error_table to ignore the [INTO error-table] clause for backward compatibility."),
					 parser_errposition((yylsp[-1])));
			}
			(yyval.ival) = LOG_ERRORS_ENABLE;
		}
#line 33047 "gram.cpp"
    break;

  case 735: /* OptLogErrorTable: LOG_P ERRORS  */
#line 5789 "gram.y"
                                                                        { (yyval.ival) = LOG_ERRORS_ENABLE; }
#line 33053 "gram.cpp"
    break;

  case 736: /* OptLogErrorTable: %empty  */
#line 5790 "gram.y"
                                                                                { (yyval.ival) = LOG_ERRORS_DISABLE; }
#line 33059 "gram.cpp"
    break;

  case 737: /* ExtSingleRowErrorHandling: ExtLogErrorTable SEGMENT REJECT_P LIMIT Iconst OptSrehLimitType  */
#line 5794 "gram.y"
                {
			SingleRowErrorDesc *n = makeNode(SingleRowErrorDesc);
			n->log_errors_type = static_cast<LogErrorsType>((yyvsp[-5].ival));
			n->into_file = n->log_errors_type == LOG_ERRORS_DISABLE ? false : true;
			n->rejectlimit = (yyvsp[-1].ival);
			n->is_limit_in_rows = (yyvsp[0].boolean); /* true for ROWS false for PERCENT */

			/* PERCENT value check */
			if(!n->is_limit_in_rows && (n->rejectlimit < 1 || n->rejectlimit > 100))
				ereport(ERROR,
						errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						 errmsg("invalid PERCENT value. Should be (1 - 100)"));

			/* ROW values check */
			if(n->is_limit_in_rows && n->rejectlimit < 2)
			   ereport(ERROR,
					   errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						errmsg("invalid (ROWS) reject limit. Should be 2 or larger"));

			(yyval.node) = (Node *)n;
		}
#line 33085 "gram.cpp"
    break;

  case 738: /* ExtSingleRowErrorHandling: %empty  */
#line 5815 "gram.y"
                                        { (yyval.node) = NULL; }
#line 33091 "gram.cpp"
    break;

  case 739: /* ExtLogErrorTable: OptLogErrorTable  */
#line 5819 "gram.y"
                                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 33097 "gram.cpp"
    break;

  case 740: /* ExtLogErrorTable: LOG_P ERRORS PERSISTENTLY  */
#line 5820 "gram.y"
                                                        { (yyval.ival) = LOG_ERRORS_PERSISTENTLY; }
#line 33103 "gram.cpp"
    break;

  case 741: /* OptSrehLimitType: ROWS  */
#line 5824 "gram.y"
                                                        { (yyval.boolean) = TRUE; }
#line 33109 "gram.cpp"
    break;

  case 742: /* OptSrehLimitType: PERCENT  */
#line 5825 "gram.y"
                                                        { (yyval.boolean) = FALSE; }
#line 33115 "gram.cpp"
    break;

  case 743: /* OptSrehLimitType: %empty  */
#line 5826 "gram.y"
                                        { (yyval.boolean) = TRUE; }
#line 33121 "gram.cpp"
    break;

  case 744: /* ext_opt_encoding_list: ext_opt_encoding_list ext_opt_encoding_item  */
#line 5833 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33127 "gram.cpp"
    break;

  case 745: /* ext_opt_encoding_list: %empty  */
#line 5834 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 33133 "gram.cpp"
    break;

  case 746: /* ext_opt_encoding_item: ENCODING opt_equal Sconst  */
#line 5839 "gram.y"
                {
			(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[0].str)));
		}
#line 33141 "gram.cpp"
    break;

  case 747: /* ext_opt_encoding_item: ENCODING opt_equal Iconst  */
#line 5843 "gram.y"
                {
			(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[0].ival)));
		}
#line 33149 "gram.cpp"
    break;

  case 748: /* CreateMatViewStmt: CREATE OptNoLog MATERIALIZED VIEW create_mv_target AS SelectStmt opt_with_data OptDistributedBy  */
#line 5857 "gram.y"
                                {
					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
					ctas->query = (yyvsp[-2].node);
					ctas->into = (yyvsp[-4].into);
					ctas->relkind = OBJECT_MATVIEW;
					ctas->is_select_into = false;
					/* cram additional flags into the IntoClause */
					(yyvsp[-4].into)->rel->relpersistence = (yyvsp[-7].ival);
					(yyvsp[-4].into)->skipData = !((yyvsp[-1].boolean));
					ctas->into->distributedBy = (yyvsp[0].node);

					(yyval.node) = (Node *) ctas;
				}
#line 33167 "gram.cpp"
    break;

  case 749: /* create_mv_target: qualified_name opt_column_list opt_reloptions OptTableSpace  */
#line 5874 "gram.y"
                                {
					(yyval.into) = makeNode(IntoClause);
					(yyval.into)->rel = (yyvsp[-3].range);
					(yyval.into)->colNames = (yyvsp[-2].list);
					(yyval.into)->options = (yyvsp[-1].list);
					(yyval.into)->onCommit = ONCOMMIT_NOOP;
					(yyval.into)->tableSpaceName = (yyvsp[0].str);
					(yyval.into)->viewQuery = NULL;		/* filled at analysis time */
					(yyval.into)->skipData = false;		/* might get changed later */
				}
#line 33182 "gram.cpp"
    break;

  case 750: /* OptNoLog: UNLOGGED  */
#line 5886 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
#line 33188 "gram.cpp"
    break;

  case 751: /* OptNoLog: %empty  */
#line 5887 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
#line 33194 "gram.cpp"
    break;

  case 752: /* RefreshMatViewStmt: REFRESH MATERIALIZED VIEW opt_concurrently qualified_name opt_with_data  */
#line 5900 "gram.y"
                                {
					RefreshMatViewStmt *n = makeNode(RefreshMatViewStmt);
					n->concurrent = (yyvsp[-2].boolean);
					n->relation = (yyvsp[-1].range);
					n->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (Node *) n;
				}
#line 33206 "gram.cpp"
    break;

  case 753: /* CreateSeqStmt: CREATE OptTemp SEQUENCE qualified_name OptSeqOptList  */
#line 5920 "gram.y"
                                {
					CreateSeqStmt *n = makeNode(CreateSeqStmt);
					(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->ownerId = InvalidOid;
					(yyval.node) = (Node *)n;
				}
#line 33219 "gram.cpp"
    break;

  case 754: /* AlterSeqStmt: ALTER SEQUENCE qualified_name SeqOptList  */
#line 5932 "gram.y"
                                {
					AlterSeqStmt *n = makeNode(AlterSeqStmt);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 33231 "gram.cpp"
    break;

  case 755: /* AlterSeqStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SeqOptList  */
#line 5940 "gram.y"
                                {
					AlterSeqStmt *n = makeNode(AlterSeqStmt);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 33243 "gram.cpp"
    break;

  case 756: /* OptSeqOptList: SeqOptList  */
#line 5950 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 33249 "gram.cpp"
    break;

  case 757: /* OptSeqOptList: %empty  */
#line 5951 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 33255 "gram.cpp"
    break;

  case 758: /* SeqOptList: SeqOptElem  */
#line 5954 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 33261 "gram.cpp"
    break;

  case 759: /* SeqOptList: SeqOptList SeqOptElem  */
#line 5955 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33267 "gram.cpp"
    break;

  case 760: /* SeqOptElem: CACHE NumericOnly  */
#line 5959 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cache", (Node *)(yyvsp[0].value));
				}
#line 33275 "gram.cpp"
    break;

  case 761: /* SeqOptElem: CYCLE  */
#line 5963 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(TRUE));
				}
#line 33283 "gram.cpp"
    break;

  case 762: /* SeqOptElem: NO CYCLE  */
#line 5967 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(FALSE));
				}
#line 33291 "gram.cpp"
    break;

  case 763: /* SeqOptElem: INCREMENT opt_by NumericOnly  */
#line 5971 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("increment", (Node *)(yyvsp[0].value));
				}
#line 33299 "gram.cpp"
    break;

  case 764: /* SeqOptElem: MAXVALUE NumericOnly  */
#line 5975 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("maxvalue", (Node *)(yyvsp[0].value));
				}
#line 33307 "gram.cpp"
    break;

  case 765: /* SeqOptElem: MINVALUE NumericOnly  */
#line 5979 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("minvalue", (Node *)(yyvsp[0].value));
				}
#line 33315 "gram.cpp"
    break;

  case 766: /* SeqOptElem: NO MAXVALUE  */
#line 5983 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("maxvalue", NULL);
				}
#line 33323 "gram.cpp"
    break;

  case 767: /* SeqOptElem: NO MINVALUE  */
#line 5987 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("minvalue", NULL);
				}
#line 33331 "gram.cpp"
    break;

  case 768: /* SeqOptElem: OWNED BY any_name  */
#line 5991 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("owned_by", (Node *)(yyvsp[0].list));
				}
#line 33339 "gram.cpp"
    break;

  case 769: /* SeqOptElem: START opt_with NumericOnly  */
#line 5995 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("start", (Node *)(yyvsp[0].value));
				}
#line 33347 "gram.cpp"
    break;

  case 770: /* SeqOptElem: RESTART  */
#line 5999 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("restart", NULL);
				}
#line 33355 "gram.cpp"
    break;

  case 771: /* SeqOptElem: RESTART opt_with NumericOnly  */
#line 6003 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("restart", (Node *)(yyvsp[0].value));
				}
#line 33363 "gram.cpp"
    break;

  case 772: /* opt_by: BY  */
#line 6008 "gram.y"
                                                {}
#line 33369 "gram.cpp"
    break;

  case 773: /* opt_by: %empty  */
#line 6009 "gram.y"
                                        {}
#line 33375 "gram.cpp"
    break;

  case 774: /* NumericOnly: FCONST  */
#line 6013 "gram.y"
                                                                                        { (yyval.value) = makeFloat((yyvsp[0].str)); }
#line 33381 "gram.cpp"
    break;

  case 775: /* NumericOnly: '+' FCONST  */
#line 6014 "gram.y"
                                                                                { (yyval.value) = makeFloat((yyvsp[0].str)); }
#line 33387 "gram.cpp"
    break;

  case 776: /* NumericOnly: '-' FCONST  */
#line 6016 "gram.y"
                                {
					(yyval.value) = makeFloat((yyvsp[0].str));
					doNegateFloat((yyval.value));
				}
#line 33396 "gram.cpp"
    break;

  case 777: /* NumericOnly: SignedIconst  */
#line 6020 "gram.y"
                                                                                { (yyval.value) = makeInteger((yyvsp[0].ival)); }
#line 33402 "gram.cpp"
    break;

  case 778: /* NumericOnly_list: NumericOnly  */
#line 6023 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].value)); }
#line 33408 "gram.cpp"
    break;

  case 779: /* NumericOnly_list: NumericOnly_list ',' NumericOnly  */
#line 6024 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].value)); }
#line 33414 "gram.cpp"
    break;

  case 780: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE NonReservedWord_or_Sconst  */
#line 6037 "gram.y"
                        {
				CreatePLangStmt *n = makeNode(CreatePLangStmt);
				n->replace = (yyvsp[-4].boolean);
				n->plname = (yyvsp[0].str);
				/* parameters are all to be supplied by system */
				n->plhandler = NIL;
				n->plinline = NIL;
				n->plvalidator = NIL;
				n->pltrusted = false;
				(yyval.node) = (Node *)n;
			}
#line 33430 "gram.cpp"
    break;

  case 781: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE NonReservedWord_or_Sconst HANDLER handler_name opt_inline_handler opt_validator  */
#line 6050 "gram.y"
                        {
				CreatePLangStmt *n = makeNode(CreatePLangStmt);
				n->replace = (yyvsp[-8].boolean);
				n->plname = (yyvsp[-4].str);
				n->plhandler = (yyvsp[-2].list);
				n->plinline = (yyvsp[-1].list);
				n->plvalidator = (yyvsp[0].list);
				n->pltrusted = (yyvsp[-7].boolean);
				(yyval.node) = (Node *)n;
			}
#line 33445 "gram.cpp"
    break;

  case 782: /* opt_trusted: TRUSTED  */
#line 6063 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 33451 "gram.cpp"
    break;

  case 783: /* opt_trusted: %empty  */
#line 6064 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 33457 "gram.cpp"
    break;

  case 784: /* handler_name: name  */
#line 6072 "gram.y"
                                                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 33463 "gram.cpp"
    break;

  case 785: /* handler_name: name attrs  */
#line 6073 "gram.y"
                                                                { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
#line 33469 "gram.cpp"
    break;

  case 786: /* opt_inline_handler: INLINE_P handler_name  */
#line 6077 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 33475 "gram.cpp"
    break;

  case 787: /* opt_inline_handler: %empty  */
#line 6078 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 33481 "gram.cpp"
    break;

  case 788: /* validator_clause: VALIDATOR handler_name  */
#line 6082 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 33487 "gram.cpp"
    break;

  case 789: /* validator_clause: NO VALIDATOR  */
#line 6083 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 33493 "gram.cpp"
    break;

  case 790: /* opt_validator: validator_clause  */
#line 6087 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 33499 "gram.cpp"
    break;

  case 791: /* opt_validator: %empty  */
#line 6088 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 33505 "gram.cpp"
    break;

  case 792: /* DropPLangStmt: DROP opt_procedural LANGUAGE NonReservedWord_or_Sconst opt_drop_behavior  */
#line 6093 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_LANGUAGE;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 33520 "gram.cpp"
    break;

  case 793: /* DropPLangStmt: DROP opt_procedural LANGUAGE IF_P EXISTS NonReservedWord_or_Sconst opt_drop_behavior  */
#line 6104 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_LANGUAGE;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 33534 "gram.cpp"
    break;

  case 794: /* opt_procedural: PROCEDURAL  */
#line 6116 "gram.y"
                                                                                                {}
#line 33540 "gram.cpp"
    break;

  case 795: /* opt_procedural: %empty  */
#line 6117 "gram.y"
                                                                                                {}
#line 33546 "gram.cpp"
    break;

  case 796: /* CreateTableSpaceStmt: CREATE TABLESPACE name OptTableSpaceOwner LOCATION Sconst opt_reloptions  */
#line 6128 "gram.y"
                                {
					CreateTableSpaceStmt *n = makeNode(CreateTableSpaceStmt);
					n->tablespacename = (yyvsp[-4].str);
					n->owner = (yyvsp[-3].str);
					n->location = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33559 "gram.cpp"
    break;

  case 797: /* OptTableSpaceOwner: OWNER name  */
#line 6138 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 33565 "gram.cpp"
    break;

  case 798: /* OptTableSpaceOwner: %empty  */
#line 6139 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 33571 "gram.cpp"
    break;

  case 799: /* DropTableSpaceStmt: DROP TABLESPACE name  */
#line 6153 "gram.y"
                                {
					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
					n->tablespacename = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *) n;
				}
#line 33582 "gram.cpp"
    break;

  case 800: /* DropTableSpaceStmt: DROP TABLESPACE IF_P EXISTS name  */
#line 6160 "gram.y"
                                {
					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
					n->tablespacename = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *) n;
				}
#line 33593 "gram.cpp"
    break;

  case 801: /* CreateExtensionStmt: CREATE EXTENSION name opt_with create_extension_opt_list  */
#line 6177 "gram.y"
                                {
					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
					n->extname = (yyvsp[-2].str);
					n->if_not_exists = false;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33605 "gram.cpp"
    break;

  case 802: /* CreateExtensionStmt: CREATE EXTENSION IF_P NOT EXISTS name opt_with create_extension_opt_list  */
#line 6185 "gram.y"
                                {
					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
					n->extname = (yyvsp[-2].str);
					n->if_not_exists = true;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33617 "gram.cpp"
    break;

  case 803: /* create_extension_opt_list: create_extension_opt_list create_extension_opt_item  */
#line 6196 "gram.y"
                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33623 "gram.cpp"
    break;

  case 804: /* create_extension_opt_list: %empty  */
#line 6198 "gram.y"
                                { (yyval.list) = NIL; }
#line 33629 "gram.cpp"
    break;

  case 805: /* create_extension_opt_item: SCHEMA name  */
#line 6203 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("schema", (Node *)makeString((yyvsp[0].str)));
				}
#line 33637 "gram.cpp"
    break;

  case 806: /* create_extension_opt_item: VERSION_P NonReservedWord_or_Sconst  */
#line 6207 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[0].str)));
				}
#line 33645 "gram.cpp"
    break;

  case 807: /* create_extension_opt_item: FROM NonReservedWord_or_Sconst  */
#line 6211 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("old_version", (Node *)makeString((yyvsp[0].str)));
				}
#line 33653 "gram.cpp"
    break;

  case 808: /* AlterExtensionStmt: ALTER EXTENSION name UPDATE alter_extension_opt_list  */
#line 6223 "gram.y"
                                {
					AlterExtensionStmt *n = makeNode(AlterExtensionStmt);
					n->extname = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33664 "gram.cpp"
    break;

  case 809: /* alter_extension_opt_list: alter_extension_opt_list alter_extension_opt_item  */
#line 6233 "gram.y"
                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33670 "gram.cpp"
    break;

  case 810: /* alter_extension_opt_list: %empty  */
#line 6235 "gram.y"
                                { (yyval.list) = NIL; }
#line 33676 "gram.cpp"
    break;

  case 811: /* alter_extension_opt_item: TO NonReservedWord_or_Sconst  */
#line 6240 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[0].str)));
				}
#line 33684 "gram.cpp"
    break;

  case 812: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop AGGREGATE func_name aggr_args  */
#line 6253 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_AGGREGATE;
					n->objname = (yyvsp[-1].list);
					n->objargs = extractAggrArgTypes((yyvsp[0].list));
					(yyval.node) = (Node *)n;
				}
#line 33698 "gram.cpp"
    break;

  case 813: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop CAST '(' Typename AS Typename ')'  */
#line 6263 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-7].str);
					n->action = (yyvsp[-6].ival);
					n->objtype = OBJECT_CAST;
					n->objname = list_make1((yyvsp[-3].typnam));
					n->objargs = list_make1((yyvsp[-1].typnam));
					(yyval.node) = (Node *) n;
				}
#line 33712 "gram.cpp"
    break;

  case 814: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop COLLATION any_name  */
#line 6273 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_COLLATION;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33725 "gram.cpp"
    break;

  case 815: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop CONVERSION_P any_name  */
#line 6282 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_CONVERSION;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33738 "gram.cpp"
    break;

  case 816: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop DOMAIN_P any_name  */
#line 6291 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_DOMAIN;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33751 "gram.cpp"
    break;

  case 817: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FUNCTION function_with_argtypes  */
#line 6300 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_FUNCTION;
					n->objname = (yyvsp[0].funwithargs)->funcname;
					n->objargs = (yyvsp[0].funwithargs)->funcargs;
					(yyval.node) = (Node *)n;
				}
#line 33765 "gram.cpp"
    break;

  case 818: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop opt_procedural LANGUAGE name  */
#line 6310 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_LANGUAGE;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33778 "gram.cpp"
    break;

  case 819: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR any_operator oper_argtypes  */
#line 6319 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_OPERATOR;
					n->objname = (yyvsp[-1].list);
					n->objargs = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33792 "gram.cpp"
    break;

  case 820: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR CLASS any_name USING access_method  */
#line 6329 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-6].str);
					n->action = (yyvsp[-5].ival);
					n->objtype = OBJECT_OPCLASS;
					n->objname = (yyvsp[-2].list);
					n->objargs = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33806 "gram.cpp"
    break;

  case 821: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR FAMILY any_name USING access_method  */
#line 6339 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-6].str);
					n->action = (yyvsp[-5].ival);
					n->objtype = OBJECT_OPFAMILY;
					n->objname = (yyvsp[-2].list);
					n->objargs = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33820 "gram.cpp"
    break;

  case 822: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop SCHEMA name  */
#line 6349 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_SCHEMA;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33833 "gram.cpp"
    break;

  case 823: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop EVENT TRIGGER name  */
#line 6358 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_EVENT_TRIGGER;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33846 "gram.cpp"
    break;

  case 824: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TABLE any_name  */
#line 6367 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_TABLE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33859 "gram.cpp"
    break;

  case 825: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH PARSER any_name  */
#line 6376 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSPARSER;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33872 "gram.cpp"
    break;

  case 826: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH DICTIONARY any_name  */
#line 6385 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSDICTIONARY;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33885 "gram.cpp"
    break;

  case 827: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH TEMPLATE any_name  */
#line 6394 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSTEMPLATE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33898 "gram.cpp"
    break;

  case 828: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH CONFIGURATION any_name  */
#line 6403 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSCONFIGURATION;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33911 "gram.cpp"
    break;

  case 829: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop SEQUENCE any_name  */
#line 6412 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_SEQUENCE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33924 "gram.cpp"
    break;

  case 830: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop VIEW any_name  */
#line 6421 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_VIEW;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33937 "gram.cpp"
    break;

  case 831: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop MATERIALIZED VIEW any_name  */
#line 6430 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_MATVIEW;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33950 "gram.cpp"
    break;

  case 832: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FOREIGN TABLE any_name  */
#line 6439 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_FOREIGN_TABLE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33963 "gram.cpp"
    break;

  case 833: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FOREIGN DATA_P WRAPPER name  */
#line 6448 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_FDW;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33976 "gram.cpp"
    break;

  case 834: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop SERVER name  */
#line 6457 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_FOREIGN_SERVER;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33989 "gram.cpp"
    break;

  case 835: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TYPE_P any_name  */
#line 6466 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_TYPE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34002 "gram.cpp"
    break;

  case 836: /* CreateFdwStmt: CREATE FOREIGN DATA_P WRAPPER name opt_fdw_options create_generic_options  */
#line 6484 "gram.y"
                                {
					CreateFdwStmt *n = makeNode(CreateFdwStmt);
					n->fdwname = (yyvsp[-2].str);
					n->func_options = (yyvsp[-1].list);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34014 "gram.cpp"
    break;

  case 837: /* fdw_option: HANDLER handler_name  */
#line 6494 "gram.y"
                                                                        { (yyval.defelt) = makeDefElem("handler", (Node *)(yyvsp[0].list)); }
#line 34020 "gram.cpp"
    break;

  case 838: /* fdw_option: NO HANDLER  */
#line 6495 "gram.y"
                                                                                { (yyval.defelt) = makeDefElem("handler", NULL); }
#line 34026 "gram.cpp"
    break;

  case 839: /* fdw_option: VALIDATOR handler_name  */
#line 6496 "gram.y"
                                                                        { (yyval.defelt) = makeDefElem("validator", (Node *)(yyvsp[0].list)); }
#line 34032 "gram.cpp"
    break;

  case 840: /* fdw_option: NO VALIDATOR  */
#line 6497 "gram.y"
                                                                                { (yyval.defelt) = makeDefElem("validator", NULL); }
#line 34038 "gram.cpp"
    break;

  case 841: /* fdw_options: fdw_option  */
#line 6501 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 34044 "gram.cpp"
    break;

  case 842: /* fdw_options: fdw_options fdw_option  */
#line 6502 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 34050 "gram.cpp"
    break;

  case 843: /* opt_fdw_options: fdw_options  */
#line 6506 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 34056 "gram.cpp"
    break;

  case 844: /* opt_fdw_options: %empty  */
#line 6507 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 34062 "gram.cpp"
    break;

  case 845: /* DropFdwStmt: DROP FOREIGN DATA_P WRAPPER name opt_drop_behavior  */
#line 6518 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FDW;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = false;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34077 "gram.cpp"
    break;

  case 846: /* DropFdwStmt: DROP FOREIGN DATA_P WRAPPER IF_P EXISTS name opt_drop_behavior  */
#line 6529 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FDW;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = true;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34092 "gram.cpp"
    break;

  case 847: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name opt_fdw_options alter_generic_options  */
#line 6549 "gram.y"
                                {
					AlterFdwStmt *n = makeNode(AlterFdwStmt);
					n->fdwname = (yyvsp[-2].str);
					n->func_options = (yyvsp[-1].list);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34104 "gram.cpp"
    break;

  case 848: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name fdw_options  */
#line 6557 "gram.y"
                                {
					AlterFdwStmt *n = makeNode(AlterFdwStmt);
					n->fdwname = (yyvsp[-1].str);
					n->func_options = (yyvsp[0].list);
					n->options = NIL;
					(yyval.node) = (Node *) n;
				}
#line 34116 "gram.cpp"
    break;

  case 849: /* create_generic_options: OPTIONS '(' generic_option_list ')'  */
#line 6568 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 34122 "gram.cpp"
    break;

  case 850: /* create_generic_options: %empty  */
#line 6569 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 34128 "gram.cpp"
    break;

  case 851: /* generic_option_list: generic_option_elem  */
#line 6574 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 34136 "gram.cpp"
    break;

  case 852: /* generic_option_list: generic_option_list ',' generic_option_elem  */
#line 6578 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 34144 "gram.cpp"
    break;

  case 853: /* alter_generic_options: OPTIONS '(' alter_generic_option_list ')'  */
#line 6585 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 34150 "gram.cpp"
    break;

  case 854: /* alter_generic_option_list: alter_generic_option_elem  */
#line 6590 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 34158 "gram.cpp"
    break;

  case 855: /* alter_generic_option_list: alter_generic_option_list ',' alter_generic_option_elem  */
#line 6594 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 34166 "gram.cpp"
    break;

  case 856: /* alter_generic_option_elem: generic_option_elem  */
#line 6601 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
				}
#line 34174 "gram.cpp"
    break;

  case 857: /* alter_generic_option_elem: SET generic_option_elem  */
#line 6605 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
					(yyval.defelt)->defaction = DEFELEM_SET;
				}
#line 34183 "gram.cpp"
    break;

  case 858: /* alter_generic_option_elem: ADD_P generic_option_elem  */
#line 6610 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
					(yyval.defelt)->defaction = DEFELEM_ADD;
				}
#line 34192 "gram.cpp"
    break;

  case 859: /* alter_generic_option_elem: DROP generic_option_name  */
#line 6615 "gram.y"
                                {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[0].str), NULL, DEFELEM_DROP);
				}
#line 34200 "gram.cpp"
    break;

  case 860: /* generic_option_elem: generic_option_name generic_option_arg  */
#line 6622 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node));
				}
#line 34208 "gram.cpp"
    break;

  case 861: /* generic_option_name: ColLabel  */
#line 6628 "gram.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 34214 "gram.cpp"
    break;

  case 862: /* generic_option_arg: Sconst  */
#line 6633 "gram.y"
                                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 34220 "gram.cpp"
    break;

  case 863: /* CreateForeignServerStmt: CREATE SERVER name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options  */
#line 6645 "gram.y"
                                {
					CreateForeignServerStmt *n = makeNode(CreateForeignServerStmt);
					n->servername = (yyvsp[-7].str);
					n->servertype = (yyvsp[-6].str);
					n->version = (yyvsp[-5].str);
					n->fdwname = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34234 "gram.cpp"
    break;

  case 864: /* opt_type: TYPE_P Sconst  */
#line 6657 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 34240 "gram.cpp"
    break;

  case 865: /* opt_type: %empty  */
#line 6658 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 34246 "gram.cpp"
    break;

  case 866: /* foreign_server_version: VERSION_P Sconst  */
#line 6663 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 34252 "gram.cpp"
    break;

  case 867: /* foreign_server_version: VERSION_P NULL_P  */
#line 6664 "gram.y"
                                                        { (yyval.str) = NULL; }
#line 34258 "gram.cpp"
    break;

  case 868: /* opt_foreign_server_version: foreign_server_version  */
#line 6668 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 34264 "gram.cpp"
    break;

  case 869: /* opt_foreign_server_version: %empty  */
#line 6669 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 34270 "gram.cpp"
    break;

  case 870: /* DropForeignServerStmt: DROP SERVER name opt_drop_behavior  */
#line 6680 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FOREIGN_SERVER;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = false;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34285 "gram.cpp"
    break;

  case 871: /* DropForeignServerStmt: DROP SERVER IF_P EXISTS name opt_drop_behavior  */
#line 6691 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FOREIGN_SERVER;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = true;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34300 "gram.cpp"
    break;

  case 872: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version alter_generic_options  */
#line 6711 "gram.y"
                                {
					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
					n->servername = (yyvsp[-2].str);
					n->version = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					n->has_version = true;
					(yyval.node) = (Node *) n;
				}
#line 34313 "gram.cpp"
    break;

  case 873: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version  */
#line 6720 "gram.y"
                                {
					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
					n->servername = (yyvsp[-1].str);
					n->version = (yyvsp[0].str);
					n->has_version = true;
					(yyval.node) = (Node *) n;
				}
#line 34325 "gram.cpp"
    break;

  case 874: /* AlterForeignServerStmt: ALTER SERVER name alter_generic_options  */
#line 6728 "gram.y"
                                {
					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34336 "gram.cpp"
    break;

  case 875: /* CreateForeignTableStmt: CREATE FOREIGN TABLE qualified_name '(' OptTableElementList ')' SERVER name create_generic_options  */
#line 6747 "gram.y"
                                {
					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
					(yyvsp[-6].range)->relpersistence = RELPERSISTENCE_PERMANENT;
					n->base.relation = (yyvsp[-6].range);
					n->base.tableElts = (yyvsp[-4].list);
					n->base.inhRelations = NIL;
					n->base.if_not_exists = false;
					/* FDW-specific data */
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34353 "gram.cpp"
    break;

  case 876: /* CreateForeignTableStmt: CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' SERVER name create_generic_options  */
#line 6762 "gram.y"
                                {
					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
					(yyvsp[-6].range)->relpersistence = RELPERSISTENCE_PERMANENT;
					n->base.relation = (yyvsp[-6].range);
					n->base.tableElts = (yyvsp[-4].list);
					n->base.inhRelations = NIL;
					n->base.if_not_exists = true;
					/* FDW-specific data */
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34370 "gram.cpp"
    break;

  case 877: /* AlterForeignTableStmt: ALTER FOREIGN TABLE relation_expr alter_table_cmds  */
#line 6785 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_FOREIGN_TABLE;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 34383 "gram.cpp"
    break;

  case 878: /* AlterForeignTableStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr alter_table_cmds  */
#line 6794 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_FOREIGN_TABLE;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 34396 "gram.cpp"
    break;

  case 879: /* CreateUserMappingStmt: CREATE USER MAPPING FOR auth_ident SERVER name create_generic_options  */
#line 6812 "gram.y"
                                {
					CreateUserMappingStmt *n = makeNode(CreateUserMappingStmt);
					n->username = (yyvsp[-3].str);
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34408 "gram.cpp"
    break;

  case 880: /* auth_ident: CURRENT_USER  */
#line 6823 "gram.y"
                                        { (yyval.str) = "current_user"; }
#line 34414 "gram.cpp"
    break;

  case 881: /* auth_ident: USER  */
#line 6824 "gram.y"
                                                { (yyval.str) = "current_user"; }
#line 34420 "gram.cpp"
    break;

  case 882: /* auth_ident: RoleId  */
#line 6825 "gram.y"
                                                { (yyval.str) = (strcmp((yyvsp[0].str), "public") == 0) ? NULL : (yyvsp[0].str); }
#line 34426 "gram.cpp"
    break;

  case 883: /* DropUserMappingStmt: DROP USER MAPPING FOR auth_ident SERVER name  */
#line 6836 "gram.y"
                                {
					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
					n->username = (yyvsp[-2].str);
					n->servername = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *) n;
				}
#line 34438 "gram.cpp"
    break;

  case 884: /* DropUserMappingStmt: DROP USER MAPPING IF_P EXISTS FOR auth_ident SERVER name  */
#line 6844 "gram.y"
                                {
					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
					n->username = (yyvsp[-2].str);
					n->servername = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *) n;
				}
#line 34450 "gram.cpp"
    break;

  case 885: /* AlterUserMappingStmt: ALTER USER MAPPING FOR auth_ident SERVER name alter_generic_options  */
#line 6861 "gram.y"
                                {
					AlterUserMappingStmt *n = makeNode(AlterUserMappingStmt);
					n->username = (yyvsp[-3].str);
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34462 "gram.cpp"
    break;

  case 886: /* CreateTrigStmt: CREATE TRIGGER name TriggerActionTime TriggerEvents ON qualified_name TriggerForSpec TriggerWhen EXECUTE PROCEDURE func_name '(' TriggerFuncArgs ')'  */
#line 6882 "gram.y"
                                {
					CreateTrigStmt *n = makeNode(CreateTrigStmt);
					n->trigname = (yyvsp[-12].str);
					n->relation = (yyvsp[-8].range);
					n->funcname = (yyvsp[-3].list);
					n->args = (yyvsp[-1].list);
					n->row = (yyvsp[-7].boolean);
					n->timing = (yyvsp[-11].ival);
					n->events = intVal(linitial((yyvsp[-10].list)));
					n->columns = (List *) lsecond((yyvsp[-10].list));
					n->whenClause = (yyvsp[-6].node);
					n->isconstraint  = FALSE;
					n->deferrable	 = FALSE;
					n->initdeferred  = FALSE;
					n->constrrel = NULL;
					(yyval.node) = (Node *)n;
				}
#line 34484 "gram.cpp"
    break;

  case 887: /* CreateTrigStmt: CREATE CONSTRAINT TRIGGER name AFTER TriggerEvents ON qualified_name OptConstrFromTable ConstraintAttributeSpec FOR EACH ROW TriggerWhen EXECUTE PROCEDURE func_name '(' TriggerFuncArgs ')'  */
#line 6903 "gram.y"
                                {
					CreateTrigStmt *n = makeNode(CreateTrigStmt);
					n->trigname = (yyvsp[-16].str);
					n->relation = (yyvsp[-12].range);
					n->funcname = (yyvsp[-3].list);
					n->args = (yyvsp[-1].list);
					n->row = TRUE;
					n->timing = TRIGGER_TYPE_AFTER;
					n->events = intVal(linitial((yyvsp[-14].list)));
					n->columns = (List *) lsecond((yyvsp[-14].list));
					n->whenClause = (yyvsp[-6].node);
					n->isconstraint  = TRUE;
					processCASbits((yyvsp[-10].ival), (yylsp[-10]), "TRIGGER",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					n->constrrel = (yyvsp[-11].range);
					(yyval.node) = (Node *)n;
				}
#line 34507 "gram.cpp"
    break;

  case 888: /* TriggerActionTime: BEFORE  */
#line 6924 "gram.y"
                                                                                        { (yyval.ival) = TRIGGER_TYPE_BEFORE; }
#line 34513 "gram.cpp"
    break;

  case 889: /* TriggerActionTime: AFTER  */
#line 6925 "gram.y"
                                                                                        { (yyval.ival) = TRIGGER_TYPE_AFTER; }
#line 34519 "gram.cpp"
    break;

  case 890: /* TriggerActionTime: INSTEAD OF  */
#line 6926 "gram.y"
                                                                                { (yyval.ival) = TRIGGER_TYPE_INSTEAD; }
#line 34525 "gram.cpp"
    break;

  case 891: /* TriggerEvents: TriggerOneEvent  */
#line 6931 "gram.y"
                                { (yyval.list) = (yyvsp[0].list); }
#line 34531 "gram.cpp"
    break;

  case 892: /* TriggerEvents: TriggerEvents OR TriggerOneEvent  */
#line 6933 "gram.y"
                                {
					int		events1 = intVal(linitial((yyvsp[-2].list)));
					int		events2 = intVal(linitial((yyvsp[0].list)));
					List   *columns1 = (List *) lsecond((yyvsp[-2].list));
					List   *columns2 = (List *) lsecond((yyvsp[0].list));

					if (events1 & events2)
						parser_yyerror("duplicate trigger events specified");
					/*
					 * concat'ing the columns lists loses information about
					 * which columns went with which event, but so long as
					 * only UPDATE carries columns and we disallow multiple
					 * UPDATE items, it doesn't matter.  Command execution
					 * should just ignore the columns for non-UPDATE events.
					 */
					(yyval.list) = list_make2(makeInteger(events1 | events2),
									list_concat(columns1, columns2));
				}
#line 34554 "gram.cpp"
    break;

  case 893: /* TriggerOneEvent: INSERT  */
#line 6955 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); }
#line 34560 "gram.cpp"
    break;

  case 894: /* TriggerOneEvent: DELETE_P  */
#line 6957 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); }
#line 34566 "gram.cpp"
    break;

  case 895: /* TriggerOneEvent: UPDATE  */
#line 6959 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); }
#line 34572 "gram.cpp"
    break;

  case 896: /* TriggerOneEvent: UPDATE OF columnList  */
#line 6961 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[0].list)); }
#line 34578 "gram.cpp"
    break;

  case 897: /* TriggerOneEvent: TRUNCATE  */
#line 6963 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); }
#line 34584 "gram.cpp"
    break;

  case 898: /* TriggerForSpec: FOR TriggerForOptEach TriggerForType  */
#line 6968 "gram.y"
                                {
					(yyval.boolean) = (yyvsp[0].boolean);
				}
#line 34592 "gram.cpp"
    break;

  case 899: /* TriggerForSpec: %empty  */
#line 6972 "gram.y"
                                {
					/*
					 * If ROW/STATEMENT not specified, default to
					 * STATEMENT, per SQL
					 */
					(yyval.boolean) = FALSE;
				}
#line 34604 "gram.cpp"
    break;

  case 900: /* TriggerForOptEach: EACH  */
#line 6982 "gram.y"
                                                                                                {}
#line 34610 "gram.cpp"
    break;

  case 901: /* TriggerForOptEach: %empty  */
#line 6983 "gram.y"
                                                                                                {}
#line 34616 "gram.cpp"
    break;

  case 902: /* TriggerForType: ROW  */
#line 6987 "gram.y"
                                                                                                        { (yyval.boolean) = TRUE; }
#line 34622 "gram.cpp"
    break;

  case 903: /* TriggerForType: STATEMENT  */
#line 6988 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 34628 "gram.cpp"
    break;

  case 904: /* TriggerWhen: WHEN '(' a_expr ')'  */
#line 6992 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 34634 "gram.cpp"
    break;

  case 905: /* TriggerWhen: %empty  */
#line 6993 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 34640 "gram.cpp"
    break;

  case 906: /* TriggerFuncArgs: TriggerFuncArg  */
#line 6997 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].value)); }
#line 34646 "gram.cpp"
    break;

  case 907: /* TriggerFuncArgs: TriggerFuncArgs ',' TriggerFuncArg  */
#line 6998 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].value)); }
#line 34652 "gram.cpp"
    break;

  case 908: /* TriggerFuncArgs: %empty  */
#line 6999 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 34658 "gram.cpp"
    break;

  case 909: /* TriggerFuncArg: Iconst  */
#line 7004 "gram.y"
                                {
					char buf[64];
					snprintf(buf, sizeof(buf), "%d", (yyvsp[0].ival));
					(yyval.value) = makeString(pstrdup(buf));
				}
#line 34668 "gram.cpp"
    break;

  case 910: /* TriggerFuncArg: FCONST  */
#line 7009 "gram.y"
                                                                                                { (yyval.value) = makeString((yyvsp[0].str)); }
#line 34674 "gram.cpp"
    break;

  case 911: /* TriggerFuncArg: Sconst  */
#line 7010 "gram.y"
                                                                                                { (yyval.value) = makeString((yyvsp[0].str)); }
#line 34680 "gram.cpp"
    break;

  case 912: /* TriggerFuncArg: ColLabel  */
#line 7011 "gram.y"
                                                                                                { (yyval.value) = makeString((yyvsp[0].str)); }
#line 34686 "gram.cpp"
    break;

  case 913: /* OptConstrFromTable: FROM qualified_name  */
#line 7015 "gram.y"
                                                                                        { (yyval.range) = (yyvsp[0].range); }
#line 34692 "gram.cpp"
    break;

  case 914: /* OptConstrFromTable: %empty  */
#line 7016 "gram.y"
                                                                                                { (yyval.range) = NULL; }
#line 34698 "gram.cpp"
    break;

  case 915: /* ConstraintAttributeSpec: %empty  */
#line 7021 "gram.y"
                                { (yyval.ival) = 0; }
#line 34704 "gram.cpp"
    break;

  case 916: /* ConstraintAttributeSpec: ConstraintAttributeSpec ConstraintAttributeElem  */
#line 7023 "gram.y"
                                {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[-1].ival) | (yyvsp[0].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[0])));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[0])));
					(yyval.ival) = newspec;
				}
#line 34732 "gram.cpp"
    break;

  case 917: /* ConstraintAttributeElem: NOT DEFERRABLE  */
#line 7049 "gram.y"
                                                                        { (yyval.ival) = CAS_NOT_DEFERRABLE; }
#line 34738 "gram.cpp"
    break;

  case 918: /* ConstraintAttributeElem: DEFERRABLE  */
#line 7050 "gram.y"
                                                                        { (yyval.ival) = CAS_DEFERRABLE; }
#line 34744 "gram.cpp"
    break;

  case 919: /* ConstraintAttributeElem: INITIALLY IMMEDIATE  */
#line 7051 "gram.y"
                                                                { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; }
#line 34750 "gram.cpp"
    break;

  case 920: /* ConstraintAttributeElem: INITIALLY DEFERRED  */
#line 7052 "gram.y"
                                                                { (yyval.ival) = CAS_INITIALLY_DEFERRED; }
#line 34756 "gram.cpp"
    break;

  case 921: /* ConstraintAttributeElem: NOT VALID  */
#line 7053 "gram.y"
                                                                                { (yyval.ival) = CAS_NOT_VALID; }
#line 34762 "gram.cpp"
    break;

  case 922: /* ConstraintAttributeElem: NO INHERIT  */
#line 7054 "gram.y"
                                                                        { (yyval.ival) = CAS_NO_INHERIT; }
#line 34768 "gram.cpp"
    break;

  case 923: /* DropTrigStmt: DROP TRIGGER name ON any_name opt_drop_behavior  */
#line 7060 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_TRIGGER;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34783 "gram.cpp"
    break;

  case 924: /* DropTrigStmt: DROP TRIGGER IF_P EXISTS name ON any_name opt_drop_behavior  */
#line 7071 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_TRIGGER;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34798 "gram.cpp"
    break;

  case 925: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel EXECUTE PROCEDURE func_name '(' ')'  */
#line 7095 "gram.y"
                                {
					CreateEventTrigStmt *n = makeNode(CreateEventTrigStmt);
					n->trigname = (yyvsp[-7].str);
					n->eventname = (yyvsp[-5].str);
					n->whenclause = NULL;
					n->funcname = (yyvsp[-2].list);
					(yyval.node) = (Node *)n;
				}
#line 34811 "gram.cpp"
    break;

  case 926: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel WHEN event_trigger_when_list EXECUTE PROCEDURE func_name '(' ')'  */
#line 7106 "gram.y"
                                {
					CreateEventTrigStmt *n = makeNode(CreateEventTrigStmt);
					n->trigname = (yyvsp[-9].str);
					n->eventname = (yyvsp[-7].str);
					n->whenclause = (yyvsp[-5].list);
					n->funcname = (yyvsp[-2].list);
					(yyval.node) = (Node *)n;
				}
#line 34824 "gram.cpp"
    break;

  case 927: /* event_trigger_when_list: event_trigger_when_item  */
#line 7118 "gram.y"
                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 34830 "gram.cpp"
    break;

  case 928: /* event_trigger_when_list: event_trigger_when_list AND event_trigger_when_item  */
#line 7120 "gram.y"
                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 34836 "gram.cpp"
    break;

  case 929: /* event_trigger_when_item: ColId IN_P '(' event_trigger_value_list ')'  */
#line 7125 "gram.y"
                        { (yyval.defelt) = makeDefElem((yyvsp[-4].str), (Node *) (yyvsp[-1].list)); }
#line 34842 "gram.cpp"
    break;

  case 930: /* event_trigger_value_list: SCONST  */
#line 7130 "gram.y"
                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 34848 "gram.cpp"
    break;

  case 931: /* event_trigger_value_list: event_trigger_value_list ',' SCONST  */
#line 7132 "gram.y"
                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 34854 "gram.cpp"
    break;

  case 932: /* AlterEventTrigStmt: ALTER EVENT TRIGGER name enable_trigger  */
#line 7137 "gram.y"
                                {
					AlterEventTrigStmt *n = makeNode(AlterEventTrigStmt);
					n->trigname = (yyvsp[-1].str);
					n->tgenabled = (yyvsp[0].chr);
					(yyval.node) = (Node *) n;
				}
#line 34865 "gram.cpp"
    break;

  case 933: /* enable_trigger: ENABLE_P  */
#line 7146 "gram.y"
                                                                        { (yyval.chr) = TRIGGER_FIRES_ON_ORIGIN; }
#line 34871 "gram.cpp"
    break;

  case 934: /* enable_trigger: ENABLE_P REPLICA  */
#line 7147 "gram.y"
                                                                { (yyval.chr) = TRIGGER_FIRES_ON_REPLICA; }
#line 34877 "gram.cpp"
    break;

  case 935: /* enable_trigger: ENABLE_P ALWAYS  */
#line 7148 "gram.y"
                                                                { (yyval.chr) = TRIGGER_FIRES_ALWAYS; }
#line 34883 "gram.cpp"
    break;

  case 936: /* enable_trigger: DISABLE_P  */
#line 7149 "gram.y"
                                                                        { (yyval.chr) = TRIGGER_DISABLED; }
#line 34889 "gram.cpp"
    break;

  case 937: /* CreateAssertStmt: CREATE ASSERTION name CHECK '(' a_expr ')' ConstraintAttributeSpec  */
#line 7163 "gram.y"
                                {
					CreateTrigStmt *n = makeNode(CreateTrigStmt);
					n->trigname = (yyvsp[-5].str);
					n->args = list_make1((yyvsp[-2].node));
					n->isconstraint  = TRUE;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "ASSERTION",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);

					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("CREATE ASSERTION is not yet implemented"));

					(yyval.node) = (Node *)n;
				}
#line 34909 "gram.cpp"
    break;

  case 938: /* DropAssertStmt: DROP ASSERTION name opt_drop_behavior  */
#line 7182 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = NIL;
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->removeType = OBJECT_TRIGGER; /* XXX */
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("DROP ASSERTION is not yet implemented"));
					(yyval.node) = (Node *) n;
				}
#line 34925 "gram.cpp"
    break;

  case 939: /* DefineStmt: CREATE opt_ordered AGGREGATE func_name aggr_args definition  */
#line 7205 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_AGGREGATE;
					n->oldstyle = false;
					n->defnames = (yyvsp[-2].list);
					n->args = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34939 "gram.cpp"
    break;

  case 940: /* DefineStmt: CREATE opt_ordered AGGREGATE func_name old_aggr_definition  */
#line 7215 "gram.y"
                                {
					/* old-style (pre-8.2) syntax for CREATE AGGREGATE */
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_AGGREGATE;
					n->oldstyle = true;
					n->defnames = (yyvsp[-1].list);
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34954 "gram.cpp"
    break;

  case 941: /* DefineStmt: CREATE OPERATOR any_operator definition  */
#line 7226 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_OPERATOR;
					n->oldstyle = false;
					n->defnames = (yyvsp[-1].list);
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34968 "gram.cpp"
    break;

  case 942: /* DefineStmt: CREATE TYPE_P any_name definition  */
#line 7236 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TYPE;
					n->oldstyle = false;
					n->defnames = (yyvsp[-1].list);
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34982 "gram.cpp"
    break;

  case 943: /* DefineStmt: CREATE TYPE_P any_name  */
#line 7246 "gram.y"
                                {
					/* Shell type (identified by lack of definition) */
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TYPE;
					n->oldstyle = false;
					n->defnames = (yyvsp[0].list);
					n->args = NIL;
					n->definition = NIL;
					(yyval.node) = (Node *)n;
				}
#line 34997 "gram.cpp"
    break;

  case 944: /* DefineStmt: CREATE TYPE_P any_name AS '(' OptTableFuncElementList ')'  */
#line 7257 "gram.y"
                                {
					CompositeTypeStmt *n = makeNode(CompositeTypeStmt);

					/* can't use qualified_name, sigh */
					n->typevar = makeRangeVarFromAnyName((yyvsp[-4].list), (yylsp[-4]), yyscanner);
					n->coldeflist = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 35010 "gram.cpp"
    break;

  case 945: /* DefineStmt: CREATE opt_or_replace opt_trusted PROTOCOL name definition  */
#line 7266 "gram.y"
                                {
					/*
					 * The opt_or_replace is here just to avoid a grammar conflict.
					 * It's not actually supported.
					 */
					if ((yyvsp[-4].boolean))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("syntax error"),
								 parser_errposition((yylsp[-4])));

					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_EXTPROTOCOL;
					n->oldstyle = false;
					n->trusted = (yyvsp[-3].boolean);
					n->defnames = list_make1(makeString((yyvsp[-1].str)));
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35035 "gram.cpp"
    break;

  case 946: /* DefineStmt: CREATE TYPE_P any_name AS ENUM_P '(' opt_enum_val_list ')'  */
#line 7287 "gram.y"
                                {
					CreateEnumStmt *n = makeNode(CreateEnumStmt);
					n->typeName = (yyvsp[-5].list);
					n->vals = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 35046 "gram.cpp"
    break;

  case 947: /* DefineStmt: CREATE TYPE_P any_name AS RANGE definition  */
#line 7294 "gram.y"
                                {
					CreateRangeStmt *n = makeNode(CreateRangeStmt);
					n->typeName = (yyvsp[-3].list);
					n->params	= (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35057 "gram.cpp"
    break;

  case 948: /* DefineStmt: CREATE TEXT_P SEARCH PARSER any_name definition  */
#line 7301 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSPARSER;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35070 "gram.cpp"
    break;

  case 949: /* DefineStmt: CREATE TEXT_P SEARCH DICTIONARY any_name definition  */
#line 7310 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSDICTIONARY;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35083 "gram.cpp"
    break;

  case 950: /* DefineStmt: CREATE TEXT_P SEARCH TEMPLATE any_name definition  */
#line 7319 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSTEMPLATE;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35096 "gram.cpp"
    break;

  case 951: /* DefineStmt: CREATE TEXT_P SEARCH CONFIGURATION any_name definition  */
#line 7328 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSCONFIGURATION;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35109 "gram.cpp"
    break;

  case 952: /* DefineStmt: CREATE COLLATION any_name definition  */
#line 7337 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_COLLATION;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35122 "gram.cpp"
    break;

  case 953: /* DefineStmt: CREATE COLLATION any_name FROM any_name  */
#line 7346 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_COLLATION;
					n->args = NIL;
					n->defnames = (yyvsp[-2].list);
					n->definition = list_make1(makeDefElem("from", (Node *) (yyvsp[0].list)));
					(yyval.node) = (Node *)n;
				}
#line 35135 "gram.cpp"
    break;

  case 954: /* opt_ordered: ORDERED  */
#line 7356 "gram.y"
                        { (yyval.boolean) = TRUE; }
#line 35141 "gram.cpp"
    break;

  case 955: /* opt_ordered: %empty  */
#line 7357 "gram.y"
                                        { (yyval.boolean) = FALSE; }
#line 35147 "gram.cpp"
    break;

  case 956: /* definition: '(' def_list ')'  */
#line 7360 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 35153 "gram.cpp"
    break;

  case 957: /* def_list: def_elem  */
#line 7363 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 35159 "gram.cpp"
    break;

  case 958: /* def_list: def_list ',' def_elem  */
#line 7364 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 35165 "gram.cpp"
    break;

  case 959: /* def_elem: ColLabel '=' def_arg  */
#line 7368 "gram.y"
                                {
					/*
					 * appendoptimized is an alias for appendonly in order to
					 * provide a reloption syntax which better reflects the
					 * featureset of AO tables. It is implemented as a very
					 * thin alias, the reloptions and messaging will still
					 * say appendonly.
					 */
					if (strcmp((yyvsp[-2].str), "appendoptimized") == 0)
						(yyval.defelt) = makeDefElem("appendonly", (Node *) (yyvsp[0].node));
					else
						(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node));
				}
#line 35183 "gram.cpp"
    break;

  case 960: /* def_elem: ColLabel  */
#line 7382 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL);
				}
#line 35191 "gram.cpp"
    break;

  case 961: /* def_arg: func_type  */
#line 7388 "gram.y"
                                                                        { (yyval.node) = (Node *)(yyvsp[0].typnam); }
#line 35197 "gram.cpp"
    break;

  case 962: /* def_arg: ROW  */
#line 7390 "gram.y"
                                                                                { (yyval.node) = (Node *)makeString(pstrdup("row")); }
#line 35203 "gram.cpp"
    break;

  case 963: /* def_arg: reserved_keyword  */
#line 7391 "gram.y"
                                                                        { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[0].keyword))); }
#line 35209 "gram.cpp"
    break;

  case 964: /* def_arg: qual_all_Op  */
#line 7392 "gram.y"
                                                                        { (yyval.node) = (Node *)(yyvsp[0].list); }
#line 35215 "gram.cpp"
    break;

  case 965: /* def_arg: NumericOnly  */
#line 7393 "gram.y"
                                                                        { (yyval.node) = (Node *)(yyvsp[0].value); }
#line 35221 "gram.cpp"
    break;

  case 966: /* def_arg: Sconst  */
#line 7394 "gram.y"
                                                                                { (yyval.node) = (Node *)makeString((yyvsp[0].str)); }
#line 35227 "gram.cpp"
    break;

  case 967: /* def_arg: NONE  */
#line 7401 "gram.y"
                                                                                { (yyval.node) = (Node *)makeString(pstrdup("none")); }
#line 35233 "gram.cpp"
    break;

  case 968: /* old_aggr_definition: '(' old_aggr_list ')'  */
#line 7404 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 35239 "gram.cpp"
    break;

  case 969: /* old_aggr_list: old_aggr_elem  */
#line 7407 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 35245 "gram.cpp"
    break;

  case 970: /* old_aggr_list: old_aggr_list ',' old_aggr_elem  */
#line 7408 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 35251 "gram.cpp"
    break;

  case 971: /* old_aggr_elem: IDENT '=' def_arg  */
#line 7417 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *)(yyvsp[0].node));
				}
#line 35259 "gram.cpp"
    break;

  case 972: /* opt_enum_val_list: enum_val_list  */
#line 7423 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 35265 "gram.cpp"
    break;

  case 973: /* opt_enum_val_list: %empty  */
#line 7424 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 35271 "gram.cpp"
    break;

  case 974: /* enum_val_list: Sconst  */
#line 7428 "gram.y"
                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 35277 "gram.cpp"
    break;

  case 975: /* enum_val_list: enum_val_list ',' Sconst  */
#line 7430 "gram.y"
                                { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 35283 "gram.cpp"
    break;

  case 976: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst  */
#line 7441 "gram.y"
                        {
				AlterEnumStmt *n = makeNode(AlterEnumStmt);
				n->typeName = (yyvsp[-4].list);
				n->newVal = (yyvsp[0].str);
				n->newValNeighbor = NULL;
				n->newValIsAfter = true;
				n->skipIfExists = (yyvsp[-1].boolean);
				(yyval.node) = (Node *) n;
			}
#line 35297 "gram.cpp"
    break;

  case 977: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst BEFORE Sconst  */
#line 7451 "gram.y"
                        {
				AlterEnumStmt *n = makeNode(AlterEnumStmt);
				n->typeName = (yyvsp[-6].list);
				n->newVal = (yyvsp[-2].str);
				n->newValNeighbor = (yyvsp[0].str);
				n->newValIsAfter = false;
				n->skipIfExists = (yyvsp[-3].boolean);
				(yyval.node) = (Node *) n;
			}
#line 35311 "gram.cpp"
    break;

  case 978: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst AFTER Sconst  */
#line 7461 "gram.y"
                        {
				AlterEnumStmt *n = makeNode(AlterEnumStmt);
				n->typeName = (yyvsp[-6].list);
				n->newVal = (yyvsp[-2].str);
				n->newValNeighbor = (yyvsp[0].str);
				n->newValIsAfter = true;
				n->skipIfExists = (yyvsp[-3].boolean);
				(yyval.node) = (Node *) n;
			}
#line 35325 "gram.cpp"
    break;

  case 979: /* opt_if_not_exists: IF_P NOT EXISTS  */
#line 7472 "gram.y"
                                                { (yyval.boolean) = true; }
#line 35331 "gram.cpp"
    break;

  case 980: /* opt_if_not_exists: %empty  */
#line 7473 "gram.y"
                                                       { (yyval.boolean) = false; }
#line 35337 "gram.cpp"
    break;

  case 981: /* CreateOpClassStmt: CREATE OPERATOR CLASS any_name opt_default FOR TYPE_P Typename USING access_method opt_opfamily AS opclass_item_list  */
#line 7491 "gram.y"
                                {
					CreateOpClassStmt *n = makeNode(CreateOpClassStmt);
					n->opclassname = (yyvsp[-9].list);
					n->isDefault = (yyvsp[-8].boolean);
					n->datatype = (yyvsp[-5].typnam);
					n->amname = (yyvsp[-3].str);
					n->opfamilyname = (yyvsp[-2].list);
					n->items = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 35352 "gram.cpp"
    break;

  case 982: /* opclass_item_list: opclass_item  */
#line 7504 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 35358 "gram.cpp"
    break;

  case 983: /* opclass_item_list: opclass_item_list ',' opclass_item  */
#line 7505 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 35364 "gram.cpp"
    break;

  case 984: /* opclass_item: OPERATOR Iconst any_operator opclass_purpose opt_recheck  */
#line 7510 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_OPERATOR;
					n->name = (yyvsp[-2].list);
					n->args = NIL;
					n->number = (yyvsp[-3].ival);
					n->order_family = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35378 "gram.cpp"
    break;

  case 985: /* opclass_item: OPERATOR Iconst any_operator oper_argtypes opclass_purpose opt_recheck  */
#line 7521 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_OPERATOR;
					n->name = (yyvsp[-3].list);
					n->args = (yyvsp[-2].list);
					n->number = (yyvsp[-4].ival);
					n->order_family = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35392 "gram.cpp"
    break;

  case 986: /* opclass_item: FUNCTION Iconst func_name func_args  */
#line 7531 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_FUNCTION;
					n->name = (yyvsp[-1].list);
					n->args = extractArgTypes((yyvsp[0].list));
					n->number = (yyvsp[-2].ival);
					(yyval.node) = (Node *) n;
				}
#line 35405 "gram.cpp"
    break;

  case 987: /* opclass_item: FUNCTION Iconst '(' type_list ')' func_name func_args  */
#line 7540 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_FUNCTION;
					n->name = (yyvsp[-1].list);
					n->args = extractArgTypes((yyvsp[0].list));
					n->number = (yyvsp[-5].ival);
					n->class_args = (yyvsp[-3].list);
					(yyval.node) = (Node *) n;
				}
#line 35419 "gram.cpp"
    break;

  case 988: /* opclass_item: STORAGE Typename  */
#line 7550 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_STORAGETYPE;
					n->storedtype = (yyvsp[0].typnam);
					(yyval.node) = (Node *) n;
				}
#line 35430 "gram.cpp"
    break;

  case 989: /* opt_default: DEFAULT  */
#line 7558 "gram.y"
                                                                { (yyval.boolean) = TRUE; }
#line 35436 "gram.cpp"
    break;

  case 990: /* opt_default: %empty  */
#line 7559 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 35442 "gram.cpp"
    break;

  case 991: /* opt_opfamily: FAMILY any_name  */
#line 7562 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 35448 "gram.cpp"
    break;

  case 992: /* opt_opfamily: %empty  */
#line 7563 "gram.y"
                                                                                { (yyval.list) = NIL; }
#line 35454 "gram.cpp"
    break;

  case 993: /* opclass_purpose: FOR SEARCH  */
#line 7566 "gram.y"
                                                                { (yyval.list) = NIL; }
#line 35460 "gram.cpp"
    break;

  case 994: /* opclass_purpose: FOR ORDER BY any_name  */
#line 7567 "gram.y"
                                                                { (yyval.list) = (yyvsp[0].list); }
#line 35466 "gram.cpp"
    break;

  case 995: /* opclass_purpose: %empty  */
#line 7568 "gram.y"
                                                                                { (yyval.list) = NIL; }
#line 35472 "gram.cpp"
    break;

  case 996: /* opt_recheck: RECHECK  */
#line 7572 "gram.y"
                                {
					/*
					 * RECHECK no longer does anything in opclass definitions,
					 * but we still accept it to ease porting of old database
					 * dumps.
					 */
					ereport(NOTICE,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("RECHECK is no longer required"),
							 errhint("Update your data type."),
							 parser_errposition((yylsp[0])));
					(yyval.boolean) = TRUE;
				}
#line 35490 "gram.cpp"
    break;

  case 997: /* opt_recheck: %empty  */
#line 7585 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 35496 "gram.cpp"
    break;

  case 998: /* CreateOpFamilyStmt: CREATE OPERATOR FAMILY any_name USING access_method  */
#line 7591 "gram.y"
                                {
					CreateOpFamilyStmt *n = makeNode(CreateOpFamilyStmt);
					n->opfamilyname = (yyvsp[-2].list);
					n->amname = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35507 "gram.cpp"
    break;

  case 999: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING access_method ADD_P opclass_item_list  */
#line 7601 "gram.y"
                                {
					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
					n->opfamilyname = (yyvsp[-4].list);
					n->amname = (yyvsp[-2].str);
					n->isDrop = false;
					n->items = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 35520 "gram.cpp"
    break;

  case 1000: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING access_method DROP opclass_drop_list  */
#line 7610 "gram.y"
                                {
					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
					n->opfamilyname = (yyvsp[-4].list);
					n->amname = (yyvsp[-2].str);
					n->isDrop = true;
					n->items = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 35533 "gram.cpp"
    break;

  case 1001: /* opclass_drop_list: opclass_drop  */
#line 7621 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 35539 "gram.cpp"
    break;

  case 1002: /* opclass_drop_list: opclass_drop_list ',' opclass_drop  */
#line 7622 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 35545 "gram.cpp"
    break;

  case 1003: /* opclass_drop: OPERATOR Iconst '(' type_list ')'  */
#line 7627 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_OPERATOR;
					n->number = (yyvsp[-3].ival);
					n->args = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35557 "gram.cpp"
    break;

  case 1004: /* opclass_drop: FUNCTION Iconst '(' type_list ')'  */
#line 7635 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_FUNCTION;
					n->number = (yyvsp[-3].ival);
					n->args = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35569 "gram.cpp"
    break;

  case 1005: /* DropOpClassStmt: DROP OPERATOR CLASS any_name USING access_method opt_drop_behavior  */
#line 7647 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPCLASS;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35584 "gram.cpp"
    break;

  case 1006: /* DropOpClassStmt: DROP OPERATOR CLASS IF_P EXISTS any_name USING access_method opt_drop_behavior  */
#line 7658 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPCLASS;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35599 "gram.cpp"
    break;

  case 1007: /* DropOpFamilyStmt: DROP OPERATOR FAMILY any_name USING access_method opt_drop_behavior  */
#line 7672 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPFAMILY;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35614 "gram.cpp"
    break;

  case 1008: /* DropOpFamilyStmt: DROP OPERATOR FAMILY IF_P EXISTS any_name USING access_method opt_drop_behavior  */
#line 7683 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPFAMILY;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35629 "gram.cpp"
    break;

  case 1009: /* DropOwnedStmt: DROP OWNED BY role_list opt_drop_behavior  */
#line 7706 "gram.y"
                                {
					DropOwnedStmt *n = makeNode(DropOwnedStmt);
					n->roles = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 35640 "gram.cpp"
    break;

  case 1010: /* ReassignOwnedStmt: REASSIGN OWNED BY role_list TO name  */
#line 7716 "gram.y"
                                {
					ReassignOwnedStmt *n = makeNode(ReassignOwnedStmt);
					n->roles = (yyvsp[-2].list);
					n->newrole = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 35651 "gram.cpp"
    break;

  case 1011: /* DropStmt: DROP drop_type IF_P EXISTS any_name_list opt_drop_behavior  */
#line 7734 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = (yyvsp[-4].objtype);
					n->missing_ok = TRUE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 35666 "gram.cpp"
    break;

  case 1012: /* DropStmt: DROP drop_type any_name_list opt_drop_behavior  */
#line 7745 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = (yyvsp[-2].objtype);
					n->missing_ok = FALSE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 35681 "gram.cpp"
    break;

  case 1013: /* DropStmt: DROP INDEX CONCURRENTLY any_name_list opt_drop_behavior  */
#line 7756 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_INDEX;
					n->missing_ok = FALSE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = true;
					(yyval.node) = (Node *)n;
				}
#line 35696 "gram.cpp"
    break;

  case 1014: /* DropStmt: DROP INDEX CONCURRENTLY IF_P EXISTS any_name_list opt_drop_behavior  */
#line 7767 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_INDEX;
					n->missing_ok = TRUE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = true;
					(yyval.node) = (Node *)n;
				}
#line 35711 "gram.cpp"
    break;

  case 1015: /* drop_type: TABLE  */
#line 7780 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TABLE; }
#line 35717 "gram.cpp"
    break;

  case 1016: /* drop_type: EXTERNAL TABLE  */
#line 7781 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_EXTTABLE; }
#line 35723 "gram.cpp"
    break;

  case 1017: /* drop_type: EXTERNAL WEB TABLE  */
#line 7782 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_EXTTABLE; }
#line 35729 "gram.cpp"
    break;

  case 1018: /* drop_type: SEQUENCE  */
#line 7783 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_SEQUENCE; }
#line 35735 "gram.cpp"
    break;

  case 1019: /* drop_type: VIEW  */
#line 7784 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_VIEW; }
#line 35741 "gram.cpp"
    break;

  case 1020: /* drop_type: MATERIALIZED VIEW  */
#line 7785 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_MATVIEW; }
#line 35747 "gram.cpp"
    break;

  case 1021: /* drop_type: INDEX  */
#line 7786 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_INDEX; }
#line 35753 "gram.cpp"
    break;

  case 1022: /* drop_type: FOREIGN TABLE  */
#line 7787 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
#line 35759 "gram.cpp"
    break;

  case 1023: /* drop_type: EVENT TRIGGER  */
#line 7788 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
#line 35765 "gram.cpp"
    break;

  case 1024: /* drop_type: TYPE_P  */
#line 7789 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_TYPE; }
#line 35771 "gram.cpp"
    break;

  case 1025: /* drop_type: DOMAIN_P  */
#line 7790 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_DOMAIN; }
#line 35777 "gram.cpp"
    break;

  case 1026: /* drop_type: COLLATION  */
#line 7791 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_COLLATION; }
#line 35783 "gram.cpp"
    break;

  case 1027: /* drop_type: CONVERSION_P  */
#line 7792 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_CONVERSION; }
#line 35789 "gram.cpp"
    break;

  case 1028: /* drop_type: SCHEMA  */
#line 7793 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_SCHEMA; }
#line 35795 "gram.cpp"
    break;

  case 1029: /* drop_type: EXTENSION  */
#line 7794 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_EXTENSION; }
#line 35801 "gram.cpp"
    break;

  case 1030: /* drop_type: TEXT_P SEARCH PARSER  */
#line 7795 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TSPARSER; }
#line 35807 "gram.cpp"
    break;

  case 1031: /* drop_type: TEXT_P SEARCH DICTIONARY  */
#line 7796 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TSDICTIONARY; }
#line 35813 "gram.cpp"
    break;

  case 1032: /* drop_type: TEXT_P SEARCH TEMPLATE  */
#line 7797 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TSTEMPLATE; }
#line 35819 "gram.cpp"
    break;

  case 1033: /* drop_type: TEXT_P SEARCH CONFIGURATION  */
#line 7798 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
#line 35825 "gram.cpp"
    break;

  case 1034: /* drop_type: PROTOCOL  */
#line 7799 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_EXTPROTOCOL; }
#line 35831 "gram.cpp"
    break;

  case 1035: /* any_name_list: any_name  */
#line 7803 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 35837 "gram.cpp"
    break;

  case 1036: /* any_name_list: any_name_list ',' any_name  */
#line 7804 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 35843 "gram.cpp"
    break;

  case 1037: /* any_name: ColId  */
#line 7807 "gram.y"
                                                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 35849 "gram.cpp"
    break;

  case 1038: /* any_name: ColId attrs  */
#line 7808 "gram.y"
                                                                { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
#line 35855 "gram.cpp"
    break;

  case 1039: /* attrs: '.' attr_name  */
#line 7812 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 35861 "gram.cpp"
    break;

  case 1040: /* attrs: attrs '.' attr_name  */
#line 7814 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 35867 "gram.cpp"
    break;

  case 1041: /* TruncateStmt: TRUNCATE opt_table relation_expr_list opt_restart_seqs opt_drop_behavior  */
#line 7827 "gram.y"
                                {
					TruncateStmt *n = makeNode(TruncateStmt);
					n->relations = (yyvsp[-2].list);
					n->restart_seqs = (yyvsp[-1].boolean);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 35879 "gram.cpp"
    break;

  case 1042: /* opt_restart_seqs: CONTINUE_P IDENTITY_P  */
#line 7837 "gram.y"
                                                        { (yyval.boolean) = false; }
#line 35885 "gram.cpp"
    break;

  case 1043: /* opt_restart_seqs: RESTART IDENTITY_P  */
#line 7838 "gram.y"
                                                        { (yyval.boolean) = true; }
#line 35891 "gram.cpp"
    break;

  case 1044: /* opt_restart_seqs: %empty  */
#line 7839 "gram.y"
                                                                { (yyval.boolean) = false; }
#line 35897 "gram.cpp"
    break;

  case 1045: /* CommentStmt: COMMENT ON comment_type any_name IS comment_text  */
#line 7872 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = (yyvsp[-3].objtype);
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35910 "gram.cpp"
    break;

  case 1046: /* CommentStmt: COMMENT ON AGGREGATE func_name aggr_args IS comment_text  */
#line 7881 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_AGGREGATE;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractAggrArgTypes((yyvsp[-2].list));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35923 "gram.cpp"
    break;

  case 1047: /* CommentStmt: COMMENT ON FUNCTION func_name func_args IS comment_text  */
#line 7890 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_FUNCTION;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractArgTypes((yyvsp[-2].list));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35936 "gram.cpp"
    break;

  case 1048: /* CommentStmt: COMMENT ON OPERATOR any_operator oper_argtypes IS comment_text  */
#line 7899 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_OPERATOR;
					n->objname = (yyvsp[-3].list);
					n->objargs = (yyvsp[-2].list);
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35949 "gram.cpp"
    break;

  case 1049: /* CommentStmt: COMMENT ON CONSTRAINT name ON any_name IS comment_text  */
#line 7908 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_CONSTRAINT;
					n->objname = lappend((yyvsp[-2].list), makeString((yyvsp[-4].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35962 "gram.cpp"
    break;

  case 1050: /* CommentStmt: COMMENT ON RULE name ON any_name IS comment_text  */
#line 7917 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_RULE;
					n->objname = lappend((yyvsp[-2].list), makeString((yyvsp[-4].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35975 "gram.cpp"
    break;

  case 1051: /* CommentStmt: COMMENT ON RULE name IS comment_text  */
#line 7926 "gram.y"
                                {
					/* Obsolete syntax supported for awhile for compatibility */
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_RULE;
					n->objname = list_make1(makeString((yyvsp[-2].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35989 "gram.cpp"
    break;

  case 1052: /* CommentStmt: COMMENT ON TRIGGER name ON any_name IS comment_text  */
#line 7936 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_TRIGGER;
					n->objname = lappend((yyvsp[-2].list), makeString((yyvsp[-4].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36002 "gram.cpp"
    break;

  case 1053: /* CommentStmt: COMMENT ON OPERATOR CLASS any_name USING access_method IS comment_text  */
#line 7945 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_OPCLASS;
					n->objname = (yyvsp[-4].list);
					n->objargs = list_make1(makeString((yyvsp[-2].str)));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36015 "gram.cpp"
    break;

  case 1054: /* CommentStmt: COMMENT ON OPERATOR FAMILY any_name USING access_method IS comment_text  */
#line 7954 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_OPFAMILY;
					n->objname = (yyvsp[-4].list);
					n->objargs = list_make1(makeString((yyvsp[-2].str)));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36028 "gram.cpp"
    break;

  case 1055: /* CommentStmt: COMMENT ON LARGE_P OBJECT_P NumericOnly IS comment_text  */
#line 7963 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_LARGEOBJECT;
					n->objname = list_make1((yyvsp[-2].value));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36041 "gram.cpp"
    break;

  case 1056: /* CommentStmt: COMMENT ON CAST '(' Typename AS Typename ')' IS comment_text  */
#line 7972 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_CAST;
					n->objname = list_make1((yyvsp[-5].typnam));
					n->objargs = list_make1((yyvsp[-3].typnam));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36054 "gram.cpp"
    break;

  case 1057: /* CommentStmt: COMMENT ON opt_procedural LANGUAGE any_name IS comment_text  */
#line 7981 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_LANGUAGE;
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36067 "gram.cpp"
    break;

  case 1058: /* comment_type: COLUMN  */
#line 7992 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_COLUMN; }
#line 36073 "gram.cpp"
    break;

  case 1059: /* comment_type: DATABASE  */
#line 7993 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_DATABASE; }
#line 36079 "gram.cpp"
    break;

  case 1060: /* comment_type: SCHEMA  */
#line 7994 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SCHEMA; }
#line 36085 "gram.cpp"
    break;

  case 1061: /* comment_type: INDEX  */
#line 7995 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_INDEX; }
#line 36091 "gram.cpp"
    break;

  case 1062: /* comment_type: SEQUENCE  */
#line 7996 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SEQUENCE; }
#line 36097 "gram.cpp"
    break;

  case 1063: /* comment_type: TABLE  */
#line 7997 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TABLE; }
#line 36103 "gram.cpp"
    break;

  case 1064: /* comment_type: DOMAIN_P  */
#line 7998 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_DOMAIN; }
#line 36109 "gram.cpp"
    break;

  case 1065: /* comment_type: TYPE_P  */
#line 7999 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TYPE; }
#line 36115 "gram.cpp"
    break;

  case 1066: /* comment_type: VIEW  */
#line 8000 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_VIEW; }
#line 36121 "gram.cpp"
    break;

  case 1067: /* comment_type: MATERIALIZED VIEW  */
#line 8001 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_MATVIEW; }
#line 36127 "gram.cpp"
    break;

  case 1068: /* comment_type: COLLATION  */
#line 8002 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_COLLATION; }
#line 36133 "gram.cpp"
    break;

  case 1069: /* comment_type: CONVERSION_P  */
#line 8003 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_CONVERSION; }
#line 36139 "gram.cpp"
    break;

  case 1070: /* comment_type: TABLESPACE  */
#line 8004 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TABLESPACE; }
#line 36145 "gram.cpp"
    break;

  case 1071: /* comment_type: EXTENSION  */
#line 8005 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_EXTENSION; }
#line 36151 "gram.cpp"
    break;

  case 1072: /* comment_type: ROLE  */
#line 8006 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_ROLE; }
#line 36157 "gram.cpp"
    break;

  case 1073: /* comment_type: FOREIGN TABLE  */
#line 8007 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
#line 36163 "gram.cpp"
    break;

  case 1074: /* comment_type: SERVER  */
#line 8008 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_FOREIGN_SERVER; }
#line 36169 "gram.cpp"
    break;

  case 1075: /* comment_type: FOREIGN DATA_P WRAPPER  */
#line 8009 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_FDW; }
#line 36175 "gram.cpp"
    break;

  case 1076: /* comment_type: EVENT TRIGGER  */
#line 8010 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
#line 36181 "gram.cpp"
    break;

  case 1077: /* comment_type: TEXT_P SEARCH CONFIGURATION  */
#line 8011 "gram.y"
                                                                { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
#line 36187 "gram.cpp"
    break;

  case 1078: /* comment_type: TEXT_P SEARCH DICTIONARY  */
#line 8012 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSDICTIONARY; }
#line 36193 "gram.cpp"
    break;

  case 1079: /* comment_type: TEXT_P SEARCH PARSER  */
#line 8013 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSPARSER; }
#line 36199 "gram.cpp"
    break;

  case 1080: /* comment_type: TEXT_P SEARCH TEMPLATE  */
#line 8014 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSTEMPLATE; }
#line 36205 "gram.cpp"
    break;

  case 1081: /* comment_type: RESOURCE QUEUE  */
#line 8015 "gram.y"
                                                            { (yyval.objtype) = OBJECT_RESQUEUE; }
#line 36211 "gram.cpp"
    break;

  case 1082: /* comment_type: RESOURCE GROUP_P  */
#line 8016 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_RESGROUP; }
#line 36217 "gram.cpp"
    break;

  case 1083: /* comment_text: Sconst  */
#line 8020 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 36223 "gram.cpp"
    break;

  case 1084: /* comment_text: NULL_P  */
#line 8021 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 36229 "gram.cpp"
    break;

  case 1085: /* SecLabelStmt: SECURITY LABEL opt_provider ON security_label_type any_name IS security_label  */
#line 8037 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-5].str);
					n->objtype = (yyvsp[-3].objtype);
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36243 "gram.cpp"
    break;

  case 1086: /* SecLabelStmt: SECURITY LABEL opt_provider ON AGGREGATE func_name aggr_args IS security_label  */
#line 8048 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_AGGREGATE;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractAggrArgTypes((yyvsp[-2].list));
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36257 "gram.cpp"
    break;

  case 1087: /* SecLabelStmt: SECURITY LABEL opt_provider ON FUNCTION func_name func_args IS security_label  */
#line 8059 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_FUNCTION;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractArgTypes((yyvsp[-2].list));
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36271 "gram.cpp"
    break;

  case 1088: /* SecLabelStmt: SECURITY LABEL opt_provider ON LARGE_P OBJECT_P NumericOnly IS security_label  */
#line 8070 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_LARGEOBJECT;
					n->objname = list_make1((yyvsp[-2].value));
					n->objargs = NIL;
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36285 "gram.cpp"
    break;

  case 1089: /* SecLabelStmt: SECURITY LABEL opt_provider ON opt_procedural LANGUAGE any_name IS security_label  */
#line 8081 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_LANGUAGE;
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36299 "gram.cpp"
    break;

  case 1090: /* opt_provider: FOR NonReservedWord_or_Sconst  */
#line 8092 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 36305 "gram.cpp"
    break;

  case 1091: /* opt_provider: %empty  */
#line 8093 "gram.y"
                                                                                { (yyval.str) = NULL; }
#line 36311 "gram.cpp"
    break;

  case 1092: /* security_label_type: COLUMN  */
#line 8097 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_COLUMN; }
#line 36317 "gram.cpp"
    break;

  case 1093: /* security_label_type: DATABASE  */
#line 8098 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_DATABASE; }
#line 36323 "gram.cpp"
    break;

  case 1094: /* security_label_type: EVENT TRIGGER  */
#line 8099 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
#line 36329 "gram.cpp"
    break;

  case 1095: /* security_label_type: FOREIGN TABLE  */
#line 8100 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
#line 36335 "gram.cpp"
    break;

  case 1096: /* security_label_type: SCHEMA  */
#line 8101 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SCHEMA; }
#line 36341 "gram.cpp"
    break;

  case 1097: /* security_label_type: SEQUENCE  */
#line 8102 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SEQUENCE; }
#line 36347 "gram.cpp"
    break;

  case 1098: /* security_label_type: TABLE  */
#line 8103 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TABLE; }
#line 36353 "gram.cpp"
    break;

  case 1099: /* security_label_type: DOMAIN_P  */
#line 8104 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TYPE; }
#line 36359 "gram.cpp"
    break;

  case 1100: /* security_label_type: ROLE  */
#line 8105 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_ROLE; }
#line 36365 "gram.cpp"
    break;

  case 1101: /* security_label_type: TABLESPACE  */
#line 8106 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TABLESPACE; }
#line 36371 "gram.cpp"
    break;

  case 1102: /* security_label_type: TYPE_P  */
#line 8107 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TYPE; }
#line 36377 "gram.cpp"
    break;

  case 1103: /* security_label_type: VIEW  */
#line 8108 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_VIEW; }
#line 36383 "gram.cpp"
    break;

  case 1104: /* security_label_type: MATERIALIZED VIEW  */
#line 8109 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_MATVIEW; }
#line 36389 "gram.cpp"
    break;

  case 1105: /* security_label: Sconst  */
#line 8112 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 36395 "gram.cpp"
    break;

  case 1106: /* security_label: NULL_P  */
#line 8113 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 36401 "gram.cpp"
    break;

  case 1107: /* FetchStmt: FETCH fetch_args  */
#line 8124 "gram.y"
                                {
					FetchStmt *n = (FetchStmt *) (yyvsp[0].node);
					n->ismove = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 36411 "gram.cpp"
    break;

  case 1108: /* FetchStmt: MOVE fetch_args  */
#line 8130 "gram.y"
                                {
					FetchStmt *n = (FetchStmt *) (yyvsp[0].node);
					n->ismove = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 36421 "gram.cpp"
    break;

  case 1109: /* fetch_args: cursor_name  */
#line 8138 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36433 "gram.cpp"
    break;

  case 1110: /* fetch_args: from_in cursor_name  */
#line 8146 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36445 "gram.cpp"
    break;

  case 1111: /* fetch_args: NEXT opt_from_in cursor_name  */
#line 8154 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36457 "gram.cpp"
    break;

  case 1112: /* fetch_args: PRIOR opt_from_in cursor_name  */
#line 8162 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36469 "gram.cpp"
    break;

  case 1113: /* fetch_args: FIRST_P opt_from_in cursor_name  */
#line 8170 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_ABSOLUTE;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36481 "gram.cpp"
    break;

  case 1114: /* fetch_args: LAST_P opt_from_in cursor_name  */
#line 8178 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_ABSOLUTE;
					n->howMany = -1;
					(yyval.node) = (Node *)n;
				}
#line 36493 "gram.cpp"
    break;

  case 1115: /* fetch_args: ABSOLUTE_P SignedIconst opt_from_in cursor_name  */
#line 8186 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_ABSOLUTE;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36505 "gram.cpp"
    break;

  case 1116: /* fetch_args: RELATIVE_P SignedIconst opt_from_in cursor_name  */
#line 8194 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_RELATIVE;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36517 "gram.cpp"
    break;

  case 1117: /* fetch_args: SignedIconst opt_from_in cursor_name  */
#line 8202 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36529 "gram.cpp"
    break;

  case 1118: /* fetch_args: ALL opt_from_in cursor_name  */
#line 8210 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = FETCH_ALL;
					(yyval.node) = (Node *)n;
				}
#line 36541 "gram.cpp"
    break;

  case 1119: /* fetch_args: FORWARD opt_from_in cursor_name  */
#line 8218 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36553 "gram.cpp"
    break;

  case 1120: /* fetch_args: FORWARD SignedIconst opt_from_in cursor_name  */
#line 8226 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36565 "gram.cpp"
    break;

  case 1121: /* fetch_args: FORWARD ALL opt_from_in cursor_name  */
#line 8234 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = FETCH_ALL;
					(yyval.node) = (Node *)n;
				}
#line 36577 "gram.cpp"
    break;

  case 1122: /* fetch_args: BACKWARD opt_from_in cursor_name  */
#line 8242 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36589 "gram.cpp"
    break;

  case 1123: /* fetch_args: BACKWARD SignedIconst opt_from_in cursor_name  */
#line 8250 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36601 "gram.cpp"
    break;

  case 1124: /* fetch_args: BACKWARD ALL opt_from_in cursor_name  */
#line 8258 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = FETCH_ALL;
					(yyval.node) = (Node *)n;
				}
#line 36613 "gram.cpp"
    break;

  case 1125: /* from_in: FROM  */
#line 8267 "gram.y"
                                                                                        {}
#line 36619 "gram.cpp"
    break;

  case 1126: /* from_in: IN_P  */
#line 8268 "gram.y"
                                                                                                {}
#line 36625 "gram.cpp"
    break;

  case 1127: /* opt_from_in: from_in  */
#line 8271 "gram.y"
                                                                                {}
#line 36631 "gram.cpp"
    break;

  case 1128: /* opt_from_in: %empty  */
#line 8272 "gram.y"
                                                                                        {}
#line 36637 "gram.cpp"
    break;

  case 1129: /* GrantStmt: GRANT privileges ON privilege_target TO grantee_list opt_grant_grant_option  */
#line 8284 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ((yyvsp[-3].privtarget))->targtype;
					n->objtype = ((yyvsp[-3].privtarget))->objtype;
					n->objects = ((yyvsp[-3].privtarget))->objs;
					n->grantees = (yyvsp[-1].list);
					n->grant_option = (yyvsp[0].boolean);
					(yyval.node) = (Node*)n;
				}
#line 36653 "gram.cpp"
    break;

  case 1130: /* RevokeStmt: REVOKE privileges ON privilege_target FROM grantee_list opt_drop_behavior  */
#line 8300 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = false;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ((yyvsp[-3].privtarget))->targtype;
					n->objtype = ((yyvsp[-3].privtarget))->objtype;
					n->objects = ((yyvsp[-3].privtarget))->objs;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 36670 "gram.cpp"
    break;

  case 1131: /* RevokeStmt: REVOKE GRANT OPTION FOR privileges ON privilege_target FROM grantee_list opt_drop_behavior  */
#line 8314 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ((yyvsp[-3].privtarget))->targtype;
					n->objtype = ((yyvsp[-3].privtarget))->objtype;
					n->objects = ((yyvsp[-3].privtarget))->objs;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 36687 "gram.cpp"
    break;

  case 1132: /* privileges: privilege_list  */
#line 8339 "gram.y"
                                { (yyval.list) = (yyvsp[0].list); }
#line 36693 "gram.cpp"
    break;

  case 1133: /* privileges: ALL  */
#line 8341 "gram.y"
                                { (yyval.list) = NIL; }
#line 36699 "gram.cpp"
    break;

  case 1134: /* privileges: ALL PRIVILEGES  */
#line 8343 "gram.y"
                                { (yyval.list) = NIL; }
#line 36705 "gram.cpp"
    break;

  case 1135: /* privileges: ALL '(' columnList ')'  */
#line 8345 "gram.y"
                                {
					AccessPriv *n = makeNode(AccessPriv);
					n->priv_name = NULL;
					n->cols = (yyvsp[-1].list);
					(yyval.list) = list_make1(n);
				}
#line 36716 "gram.cpp"
    break;

  case 1136: /* privileges: ALL PRIVILEGES '(' columnList ')'  */
#line 8352 "gram.y"
                                {
					AccessPriv *n = makeNode(AccessPriv);
					n->priv_name = NULL;
					n->cols = (yyvsp[-1].list);
					(yyval.list) = list_make1(n);
				}
#line 36727 "gram.cpp"
    break;

  case 1137: /* privilege_list: privilege  */
#line 8360 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].accesspriv)); }
#line 36733 "gram.cpp"
    break;

  case 1138: /* privilege_list: privilege_list ',' privilege  */
#line 8361 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].accesspriv)); }
#line 36739 "gram.cpp"
    break;

  case 1139: /* privilege: SELECT opt_column_list  */
#line 8365 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = pstrdup((yyvsp[-1].keyword));
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36750 "gram.cpp"
    break;

  case 1140: /* privilege: REFERENCES opt_column_list  */
#line 8372 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = pstrdup((yyvsp[-1].keyword));
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36761 "gram.cpp"
    break;

  case 1141: /* privilege: CREATE opt_column_list  */
#line 8379 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = pstrdup((yyvsp[-1].keyword));
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36772 "gram.cpp"
    break;

  case 1142: /* privilege: ColId opt_column_list  */
#line 8386 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = (yyvsp[-1].str);
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36783 "gram.cpp"
    break;

  case 1143: /* privilege_target: qualified_name_list  */
#line 8400 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_RELATION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36795 "gram.cpp"
    break;

  case 1144: /* privilege_target: TABLE qualified_name_list  */
#line 8408 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_RELATION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36807 "gram.cpp"
    break;

  case 1145: /* privilege_target: SEQUENCE qualified_name_list  */
#line 8416 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_SEQUENCE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36819 "gram.cpp"
    break;

  case 1146: /* privilege_target: FOREIGN DATA_P WRAPPER name_list  */
#line 8424 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_FDW;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36831 "gram.cpp"
    break;

  case 1147: /* privilege_target: FOREIGN SERVER name_list  */
#line 8432 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_FOREIGN_SERVER;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36843 "gram.cpp"
    break;

  case 1148: /* privilege_target: FUNCTION function_with_argtypes_list  */
#line 8440 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_FUNCTION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36855 "gram.cpp"
    break;

  case 1149: /* privilege_target: DATABASE name_list  */
#line 8448 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_DATABASE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36867 "gram.cpp"
    break;

  case 1150: /* privilege_target: DOMAIN_P any_name_list  */
#line 8456 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_DOMAIN;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36879 "gram.cpp"
    break;

  case 1151: /* privilege_target: LANGUAGE name_list  */
#line 8464 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_LANGUAGE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36891 "gram.cpp"
    break;

  case 1152: /* privilege_target: LARGE_P OBJECT_P NumericOnly_list  */
#line 8472 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_LARGEOBJECT;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36903 "gram.cpp"
    break;

  case 1153: /* privilege_target: SCHEMA name_list  */
#line 8480 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_NAMESPACE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36915 "gram.cpp"
    break;

  case 1154: /* privilege_target: TABLESPACE name_list  */
#line 8488 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_TABLESPACE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36927 "gram.cpp"
    break;

  case 1155: /* privilege_target: PROTOCOL name_list  */
#line 8496 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_EXTPROTOCOL;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36939 "gram.cpp"
    break;

  case 1156: /* privilege_target: TYPE_P any_name_list  */
#line 8504 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_TYPE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36951 "gram.cpp"
    break;

  case 1157: /* privilege_target: ALL TABLES IN_P SCHEMA name_list  */
#line 8512 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_ALL_IN_SCHEMA;
					n->objtype = ACL_OBJECT_RELATION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36963 "gram.cpp"
    break;

  case 1158: /* privilege_target: ALL SEQUENCES IN_P SCHEMA name_list  */
#line 8520 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_ALL_IN_SCHEMA;
					n->objtype = ACL_OBJECT_SEQUENCE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36975 "gram.cpp"
    break;

  case 1159: /* privilege_target: ALL FUNCTIONS IN_P SCHEMA name_list  */
#line 8528 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_ALL_IN_SCHEMA;
					n->objtype = ACL_OBJECT_FUNCTION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36987 "gram.cpp"
    break;

  case 1160: /* grantee_list: grantee  */
#line 8539 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 36993 "gram.cpp"
    break;

  case 1161: /* grantee_list: grantee_list ',' grantee  */
#line 8540 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 36999 "gram.cpp"
    break;

  case 1162: /* grantee: RoleId  */
#line 8544 "gram.y"
                                {
					PrivGrantee *n = makeNode(PrivGrantee);
					/* This hack lets us avoid reserving PUBLIC as a keyword*/
					if (strcmp((yyvsp[0].str), "public") == 0)
						n->rolname = NULL;
					else
						n->rolname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 37013 "gram.cpp"
    break;

  case 1163: /* grantee: GROUP_P RoleId  */
#line 8554 "gram.y"
                                {
					PrivGrantee *n = makeNode(PrivGrantee);
					/* Treat GROUP PUBLIC as a synonym for PUBLIC */
					if (strcmp((yyvsp[0].str), "public") == 0)
						n->rolname = NULL;
					else
						n->rolname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 37027 "gram.cpp"
    break;

  case 1164: /* opt_grant_grant_option: WITH GRANT OPTION  */
#line 8567 "gram.y"
                                          { (yyval.boolean) = TRUE; }
#line 37033 "gram.cpp"
    break;

  case 1165: /* opt_grant_grant_option: %empty  */
#line 8568 "gram.y"
                                    { (yyval.boolean) = FALSE; }
#line 37039 "gram.cpp"
    break;

  case 1166: /* function_with_argtypes_list: function_with_argtypes  */
#line 8572 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].funwithargs)); }
#line 37045 "gram.cpp"
    break;

  case 1167: /* function_with_argtypes_list: function_with_argtypes_list ',' function_with_argtypes  */
#line 8574 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].funwithargs)); }
#line 37051 "gram.cpp"
    break;

  case 1168: /* function_with_argtypes: func_name func_args  */
#line 8579 "gram.y"
                                {
					FuncWithArgs *n = makeNode(FuncWithArgs);
					n->funcname = (yyvsp[-1].list);
					n->funcargs = extractArgTypes((yyvsp[0].list));
					(yyval.funwithargs) = n;
				}
#line 37062 "gram.cpp"
    break;

  case 1169: /* GrantRoleStmt: GRANT privilege_list TO role_list opt_grant_admin_option opt_granted_by  */
#line 8595 "gram.y"
                                {
					GrantRoleStmt *n = makeNode(GrantRoleStmt);
					n->is_grant = true;
					n->granted_roles = (yyvsp[-4].list);
					n->grantee_roles = (yyvsp[-2].list);
					n->admin_opt = (yyvsp[-1].boolean);
					n->grantor = (yyvsp[0].str);
					(yyval.node) = (Node*)n;
				}
#line 37076 "gram.cpp"
    break;

  case 1170: /* RevokeRoleStmt: REVOKE privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
#line 8608 "gram.y"
                                {
					GrantRoleStmt *n = makeNode(GrantRoleStmt);
					n->is_grant = false;
					n->admin_opt = false;
					n->granted_roles = (yyvsp[-4].list);
					n->grantee_roles = (yyvsp[-2].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node*)n;
				}
#line 37090 "gram.cpp"
    break;

  case 1171: /* RevokeRoleStmt: REVOKE ADMIN OPTION FOR privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
#line 8618 "gram.y"
                                {
					GrantRoleStmt *n = makeNode(GrantRoleStmt);
					n->is_grant = false;
					n->admin_opt = true;
					n->granted_roles = (yyvsp[-4].list);
					n->grantee_roles = (yyvsp[-2].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node*)n;
				}
#line 37104 "gram.cpp"
    break;

  case 1172: /* opt_grant_admin_option: WITH ADMIN OPTION  */
#line 8629 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 37110 "gram.cpp"
    break;

  case 1173: /* opt_grant_admin_option: %empty  */
#line 8630 "gram.y"
                                                                                                        { (yyval.boolean) = FALSE; }
#line 37116 "gram.cpp"
    break;

  case 1174: /* opt_granted_by: GRANTED BY RoleId  */
#line 8633 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 37122 "gram.cpp"
    break;

  case 1175: /* opt_granted_by: %empty  */
#line 8634 "gram.y"
                                                                                                        { (yyval.str) = NULL; }
#line 37128 "gram.cpp"
    break;

  case 1176: /* AlterDefaultPrivilegesStmt: ALTER DEFAULT PRIVILEGES DefACLOptionList DefACLAction  */
#line 8645 "gram.y"
                                {
					AlterDefaultPrivilegesStmt *n = makeNode(AlterDefaultPrivilegesStmt);
					n->options = (yyvsp[-1].list);
					n->action = (GrantStmt *) (yyvsp[0].node);
					(yyval.node) = (Node*)n;
				}
#line 37139 "gram.cpp"
    break;

  case 1177: /* DefACLOptionList: DefACLOptionList DefACLOption  */
#line 8654 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 37145 "gram.cpp"
    break;

  case 1178: /* DefACLOptionList: %empty  */
#line 8655 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 37151 "gram.cpp"
    break;

  case 1179: /* DefACLOption: IN_P SCHEMA name_list  */
#line 8660 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("schemas", (Node *)(yyvsp[0].list));
				}
#line 37159 "gram.cpp"
    break;

  case 1180: /* DefACLOption: FOR ROLE role_list  */
#line 8664 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[0].list));
				}
#line 37167 "gram.cpp"
    break;

  case 1181: /* DefACLOption: FOR USER role_list  */
#line 8668 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[0].list));
				}
#line 37175 "gram.cpp"
    break;

  case 1182: /* DefACLAction: GRANT privileges ON defacl_privilege_target TO grantee_list opt_grant_grant_option  */
#line 8680 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ACL_TARGET_DEFAULTS;
					n->objtype = static_cast<GrantObjectType>((yyvsp[-3].ival));
					n->objects = NIL;
					n->grantees = (yyvsp[-1].list);
					n->grant_option = (yyvsp[0].boolean);
					(yyval.node) = (Node*)n;
				}
#line 37191 "gram.cpp"
    break;

  case 1183: /* DefACLAction: REVOKE privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
#line 8693 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = false;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ACL_TARGET_DEFAULTS;
					n->objtype = static_cast<GrantObjectType>((yyvsp[-3].ival));
					n->objects = NIL;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 37208 "gram.cpp"
    break;

  case 1184: /* DefACLAction: REVOKE GRANT OPTION FOR privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
#line 8707 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ACL_TARGET_DEFAULTS;
					n->objtype = static_cast<GrantObjectType>((yyvsp[-3].ival));
					n->objects = NIL;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 37225 "gram.cpp"
    break;

  case 1185: /* defacl_privilege_target: TABLES  */
#line 8722 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_RELATION; }
#line 37231 "gram.cpp"
    break;

  case 1186: /* defacl_privilege_target: FUNCTIONS  */
#line 8723 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_FUNCTION; }
#line 37237 "gram.cpp"
    break;

  case 1187: /* defacl_privilege_target: SEQUENCES  */
#line 8724 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_SEQUENCE; }
#line 37243 "gram.cpp"
    break;

  case 1188: /* defacl_privilege_target: TYPES_P  */
#line 8725 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_TYPE; }
#line 37249 "gram.cpp"
    break;

  case 1189: /* IndexStmt: CREATE opt_unique INDEX opt_concurrently opt_index_name ON qualified_name access_method_clause '(' index_params ')' opt_reloptions OptTableSpace where_clause  */
#line 8740 "gram.y"
                                {
					IndexStmt *n = makeNode(IndexStmt);
					n->unique = (yyvsp[-12].boolean);
					n->concurrent = (yyvsp[-10].boolean);
					n->idxname = (yyvsp[-9].str);
					n->relation = (yyvsp[-7].range);
					n->accessMethod = (yyvsp[-6].str);
					n->indexParams = (yyvsp[-4].list);
					n->options = (yyvsp[-2].list);
					n->tableSpace = (yyvsp[-1].str);
					n->whereClause = (yyvsp[0].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;

                    if (n->concurrent)
					{
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE INDEX CONCURRENTLY is not supported"));

					}

					(yyval.node) = (Node *)n;
				}
#line 37284 "gram.cpp"
    break;

  case 1190: /* opt_unique: UNIQUE  */
#line 8773 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 37290 "gram.cpp"
    break;

  case 1191: /* opt_unique: %empty  */
#line 8774 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 37296 "gram.cpp"
    break;

  case 1192: /* opt_concurrently: CONCURRENTLY  */
#line 8778 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 37302 "gram.cpp"
    break;

  case 1193: /* opt_concurrently: %empty  */
#line 8779 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 37308 "gram.cpp"
    break;

  case 1194: /* opt_index_name: index_name  */
#line 8783 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 37314 "gram.cpp"
    break;

  case 1195: /* opt_index_name: %empty  */
#line 8784 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 37320 "gram.cpp"
    break;

  case 1196: /* access_method_clause: USING access_method  */
#line 8788 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 37326 "gram.cpp"
    break;

  case 1197: /* access_method_clause: %empty  */
#line 8789 "gram.y"
                                                                                                { (yyval.str) = DEFAULT_INDEX_TYPE; }
#line 37332 "gram.cpp"
    break;

  case 1198: /* index_params: index_elem  */
#line 8792 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].ielem)); }
#line 37338 "gram.cpp"
    break;

  case 1199: /* index_params: index_params ',' index_elem  */
#line 8793 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].ielem)); }
#line 37344 "gram.cpp"
    break;

  case 1200: /* index_elem: ColId opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 8802 "gram.y"
                                {
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = (yyvsp[-4].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.ielem)->nulls_ordering = static_cast<SortByNulls>((yyvsp[0].ival));
				}
#line 37359 "gram.cpp"
    break;

  case 1201: /* index_elem: func_expr_windowless opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 8813 "gram.y"
                                {
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[-4].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.ielem)->nulls_ordering = static_cast<SortByNulls>((yyvsp[0].ival));
				}
#line 37374 "gram.cpp"
    break;

  case 1202: /* index_elem: '(' a_expr ')' opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 8824 "gram.y"
                                {
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[-5].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.ielem)->nulls_ordering = static_cast<SortByNulls>((yyvsp[0].ival));
				}
#line 37389 "gram.cpp"
    break;

  case 1203: /* opt_collate: COLLATE any_name  */
#line 8836 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37395 "gram.cpp"
    break;

  case 1204: /* opt_collate: %empty  */
#line 8837 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37401 "gram.cpp"
    break;

  case 1205: /* opt_class: any_name  */
#line 8840 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37407 "gram.cpp"
    break;

  case 1206: /* opt_class: USING any_name  */
#line 8841 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37413 "gram.cpp"
    break;

  case 1207: /* opt_class: %empty  */
#line 8842 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37419 "gram.cpp"
    break;

  case 1208: /* opt_asc_desc: ASC  */
#line 8845 "gram.y"
                                                                        { (yyval.ival) = SORTBY_ASC; }
#line 37425 "gram.cpp"
    break;

  case 1209: /* opt_asc_desc: DESC  */
#line 8846 "gram.y"
                                                                                { (yyval.ival) = SORTBY_DESC; }
#line 37431 "gram.cpp"
    break;

  case 1210: /* opt_asc_desc: %empty  */
#line 8847 "gram.y"
                                                                                { (yyval.ival) = SORTBY_DEFAULT; }
#line 37437 "gram.cpp"
    break;

  case 1211: /* opt_nulls_order: NULLS_FIRST  */
#line 8850 "gram.y"
                                                        { (yyval.ival) = SORTBY_NULLS_FIRST; }
#line 37443 "gram.cpp"
    break;

  case 1212: /* opt_nulls_order: NULLS_LAST  */
#line 8851 "gram.y"
                                                                        { (yyval.ival) = SORTBY_NULLS_LAST; }
#line 37449 "gram.cpp"
    break;

  case 1213: /* opt_nulls_order: %empty  */
#line 8852 "gram.y"
                                                                                { (yyval.ival) = SORTBY_NULLS_DEFAULT; }
#line 37455 "gram.cpp"
    break;

  case 1214: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS func_return createfunc_opt_list opt_definition  */
#line 8870 "gram.y"
                                {
					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
					n->replace = (yyvsp[-7].boolean);
					n->funcname = (yyvsp[-5].list);
					n->parameters = (yyvsp[-4].list);
					n->returnType = (yyvsp[-2].typnam);
					n->options = (yyvsp[-1].list);
					n->withClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 37470 "gram.cpp"
    break;

  case 1215: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS TABLE '(' table_func_column_list ')' createfunc_opt_list opt_definition  */
#line 8882 "gram.y"
                                {
					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
					n->replace = (yyvsp[-10].boolean);
					n->funcname = (yyvsp[-8].list);
					n->parameters = mergeTableFuncParameters((yyvsp[-7].list), (yyvsp[-3].list));
					n->returnType = TableFuncTypeName((yyvsp[-3].list));
					n->returnType->location = (yylsp[-5]);
					n->options = (yyvsp[-1].list);
					n->withClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 37486 "gram.cpp"
    break;

  case 1216: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults createfunc_opt_list opt_definition  */
#line 8895 "gram.y"
                                {
					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
					n->replace = (yyvsp[-5].boolean);
					n->funcname = (yyvsp[-3].list);
					n->parameters = (yyvsp[-2].list);
					n->returnType = NULL;
					n->options = (yyvsp[-1].list);
					n->withClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 37501 "gram.cpp"
    break;

  case 1217: /* opt_or_replace: OR REPLACE  */
#line 8908 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 37507 "gram.cpp"
    break;

  case 1218: /* opt_or_replace: %empty  */
#line 8909 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 37513 "gram.cpp"
    break;

  case 1219: /* func_args: '(' func_args_list ')'  */
#line 8912 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 37519 "gram.cpp"
    break;

  case 1220: /* func_args: '(' ')'  */
#line 8913 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37525 "gram.cpp"
    break;

  case 1221: /* func_args_list: func_arg  */
#line 8917 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
#line 37531 "gram.cpp"
    break;

  case 1222: /* func_args_list: func_args_list ',' func_arg  */
#line 8918 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
#line 37537 "gram.cpp"
    break;

  case 1223: /* func_args_with_defaults: '(' func_args_with_defaults_list ')'  */
#line 8926 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 37543 "gram.cpp"
    break;

  case 1224: /* func_args_with_defaults: '(' ')'  */
#line 8927 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37549 "gram.cpp"
    break;

  case 1225: /* func_args_with_defaults_list: func_arg_with_default  */
#line 8931 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
#line 37555 "gram.cpp"
    break;

  case 1226: /* func_args_with_defaults_list: func_args_with_defaults_list ',' func_arg_with_default  */
#line 8933 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
#line 37561 "gram.cpp"
    break;

  case 1227: /* func_arg: arg_class param_name func_type  */
#line 8948 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-1].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = (yyvsp[-2].fun_param_mode);
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37574 "gram.cpp"
    break;

  case 1228: /* func_arg: param_name arg_class func_type  */
#line 8957 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-2].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = (yyvsp[-1].fun_param_mode);
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37587 "gram.cpp"
    break;

  case 1229: /* func_arg: param_name func_type  */
#line 8966 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-1].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = FUNC_PARAM_IN;
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37600 "gram.cpp"
    break;

  case 1230: /* func_arg: arg_class func_type  */
#line 8975 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = NULL;
					n->argType = (yyvsp[0].typnam);
					n->mode = (yyvsp[-1].fun_param_mode);
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37613 "gram.cpp"
    break;

  case 1231: /* func_arg: func_type  */
#line 8984 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = NULL;
					n->argType = (yyvsp[0].typnam);
					n->mode = FUNC_PARAM_IN;
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37626 "gram.cpp"
    break;

  case 1232: /* arg_class: IN_P  */
#line 8995 "gram.y"
                                                                                { (yyval.fun_param_mode) = FUNC_PARAM_IN; }
#line 37632 "gram.cpp"
    break;

  case 1233: /* arg_class: OUT_P  */
#line 8996 "gram.y"
                                                                                        { (yyval.fun_param_mode) = FUNC_PARAM_OUT; }
#line 37638 "gram.cpp"
    break;

  case 1234: /* arg_class: INOUT  */
#line 8997 "gram.y"
                                                                                        { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
#line 37644 "gram.cpp"
    break;

  case 1235: /* arg_class: IN_P OUT_P  */
#line 8998 "gram.y"
                                                                                { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
#line 37650 "gram.cpp"
    break;

  case 1236: /* arg_class: VARIADIC  */
#line 8999 "gram.y"
                                                                                        { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; }
#line 37656 "gram.cpp"
    break;

  case 1238: /* func_return: func_type  */
#line 9010 "gram.y"
                                {
					/* We can catch over-specified results here if we want to,
					 * but for now better to silently swallow typmod, etc.
					 * - thomas 2000-03-22
					 */
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 37668 "gram.cpp"
    break;

  case 1239: /* func_type: Typename  */
#line 9024 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 37674 "gram.cpp"
    break;

  case 1240: /* func_type: type_function_name attrs '%' TYPE_P  */
#line 9026 "gram.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-3].str)), (yyvsp[-2].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 37684 "gram.cpp"
    break;

  case 1241: /* func_type: SETOF type_function_name attrs '%' TYPE_P  */
#line 9032 "gram.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-3].str)), (yyvsp[-2].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = TRUE;
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 37695 "gram.cpp"
    break;

  case 1242: /* func_arg_with_default: func_arg  */
#line 9042 "gram.y"
                                {
					(yyval.fun_param) = (yyvsp[0].fun_param);
				}
#line 37703 "gram.cpp"
    break;

  case 1243: /* func_arg_with_default: func_arg DEFAULT a_expr  */
#line 9046 "gram.y"
                                {
					(yyval.fun_param) = (yyvsp[-2].fun_param);
					(yyval.fun_param)->defexpr = (yyvsp[0].node);
				}
#line 37712 "gram.cpp"
    break;

  case 1244: /* func_arg_with_default: func_arg '=' a_expr  */
#line 9051 "gram.y"
                                {
					(yyval.fun_param) = (yyvsp[-2].fun_param);
					(yyval.fun_param)->defexpr = (yyvsp[0].node);
				}
#line 37721 "gram.cpp"
    break;

  case 1245: /* aggr_arg: func_arg  */
#line 9059 "gram.y"
                                {
					if (!((yyvsp[0].fun_param)->mode == FUNC_PARAM_IN ||
						  (yyvsp[0].fun_param)->mode == FUNC_PARAM_VARIADIC))
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("aggregates cannot have output arguments"),
								 parser_errposition((yylsp[0])));
					(yyval.fun_param) = (yyvsp[0].fun_param);
				}
#line 37735 "gram.cpp"
    break;

  case 1246: /* aggr_args: '(' '*' ')'  */
#line 9100 "gram.y"
                                {
					(yyval.list) = list_make2(NIL, makeInteger(-1));
				}
#line 37743 "gram.cpp"
    break;

  case 1247: /* aggr_args: '(' aggr_args_list ')'  */
#line 9104 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].list), makeInteger(-1));
				}
#line 37751 "gram.cpp"
    break;

  case 1248: /* aggr_args: '(' ORDER BY aggr_args_list ')'  */
#line 9108 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].list), makeInteger(0));
				}
#line 37759 "gram.cpp"
    break;

  case 1249: /* aggr_args: '(' aggr_args_list ORDER BY aggr_args_list ')'  */
#line 9112 "gram.y"
                                {
					/* this is the only case requiring consistency checking */
					(yyval.list) = makeOrderedSetArgs((yyvsp[-4].list), (yyvsp[-1].list), yyscanner);
				}
#line 37768 "gram.cpp"
    break;

  case 1250: /* aggr_args_list: aggr_arg  */
#line 9119 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
#line 37774 "gram.cpp"
    break;

  case 1251: /* aggr_args_list: aggr_args_list ',' aggr_arg  */
#line 9120 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
#line 37780 "gram.cpp"
    break;

  case 1252: /* createfunc_opt_list: createfunc_opt_item  */
#line 9125 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 37786 "gram.cpp"
    break;

  case 1253: /* createfunc_opt_list: createfunc_opt_list createfunc_opt_item  */
#line 9126 "gram.y"
                                                                  { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 37792 "gram.cpp"
    break;

  case 1254: /* common_func_opt_item: CALLED ON NULL_P INPUT_P  */
#line 9134 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(FALSE));
				}
#line 37800 "gram.cpp"
    break;

  case 1255: /* common_func_opt_item: RETURNS NULL_P ON NULL_P INPUT_P  */
#line 9138 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
				}
#line 37808 "gram.cpp"
    break;

  case 1256: /* common_func_opt_item: STRICT_P  */
#line 9142 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
				}
#line 37816 "gram.cpp"
    break;

  case 1257: /* common_func_opt_item: IMMUTABLE  */
#line 9146 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("immutable"));
				}
#line 37824 "gram.cpp"
    break;

  case 1258: /* common_func_opt_item: STABLE  */
#line 9150 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("stable"));
				}
#line 37832 "gram.cpp"
    break;

  case 1259: /* common_func_opt_item: VOLATILE  */
#line 9154 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("volatile"));
				}
#line 37840 "gram.cpp"
    break;

  case 1260: /* common_func_opt_item: EXTERNAL SECURITY DEFINER  */
#line 9158 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
				}
#line 37848 "gram.cpp"
    break;

  case 1261: /* common_func_opt_item: EXTERNAL SECURITY INVOKER  */
#line 9162 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
				}
#line 37856 "gram.cpp"
    break;

  case 1262: /* common_func_opt_item: SECURITY DEFINER  */
#line 9166 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
				}
#line 37864 "gram.cpp"
    break;

  case 1263: /* common_func_opt_item: SECURITY INVOKER  */
#line 9170 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
				}
#line 37872 "gram.cpp"
    break;

  case 1264: /* common_func_opt_item: LEAKPROOF  */
#line 9174 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(TRUE));
				}
#line 37880 "gram.cpp"
    break;

  case 1265: /* common_func_opt_item: NOT LEAKPROOF  */
#line 9178 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(FALSE));
				}
#line 37888 "gram.cpp"
    break;

  case 1266: /* common_func_opt_item: COST NumericOnly  */
#line 9182 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cost", (Node *)(yyvsp[0].value));
				}
#line 37896 "gram.cpp"
    break;

  case 1267: /* common_func_opt_item: ROWS NumericOnly  */
#line 9186 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("rows", (Node *)(yyvsp[0].value));
				}
#line 37904 "gram.cpp"
    break;

  case 1268: /* common_func_opt_item: FunctionSetResetClause  */
#line 9190 "gram.y"
                                {
					/* we abuse the normal content of a DefElem here */
					(yyval.defelt) = makeDefElem("set", (Node *)(yyvsp[0].vsetstmt));
				}
#line 37913 "gram.cpp"
    break;

  case 1269: /* common_func_opt_item: NO SQL  */
#line 9195 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("none"));
				}
#line 37921 "gram.cpp"
    break;

  case 1270: /* common_func_opt_item: CONTAINS SQL  */
#line 9199 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("contains"));
				}
#line 37929 "gram.cpp"
    break;

  case 1271: /* common_func_opt_item: READS SQL DATA_P  */
#line 9203 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("reads"));
				}
#line 37937 "gram.cpp"
    break;

  case 1272: /* common_func_opt_item: MODIFIES SQL DATA_P  */
#line 9207 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("modifies"));
				}
#line 37945 "gram.cpp"
    break;

  case 1273: /* common_func_opt_item: EXECUTE ON ANY  */
#line 9211 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("any"));
				}
#line 37953 "gram.cpp"
    break;

  case 1274: /* common_func_opt_item: EXECUTE ON MASTER  */
#line 9215 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("master"));
				}
#line 37961 "gram.cpp"
    break;

  case 1275: /* common_func_opt_item: EXECUTE ON INITPLAN  */
#line 9219 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("initplan"));
				}
#line 37969 "gram.cpp"
    break;

  case 1276: /* common_func_opt_item: EXECUTE ON ALL SEGMENTS  */
#line 9223 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("all_segments"));
				}
#line 37977 "gram.cpp"
    break;

  case 1277: /* createfunc_opt_item: AS func_as  */
#line 9230 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("as", (Node *)(yyvsp[0].list));
				}
#line 37985 "gram.cpp"
    break;

  case 1278: /* createfunc_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
#line 9234 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[0].str)));
				}
#line 37993 "gram.cpp"
    break;

  case 1279: /* createfunc_opt_item: WINDOW  */
#line 9238 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("window", (Node *)makeInteger(TRUE));
				}
#line 38001 "gram.cpp"
    break;

  case 1280: /* createfunc_opt_item: common_func_opt_item  */
#line 9242 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
				}
#line 38009 "gram.cpp"
    break;

  case 1281: /* func_as: Sconst  */
#line 9247 "gram.y"
                                                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 38015 "gram.cpp"
    break;

  case 1282: /* func_as: Sconst ',' Sconst  */
#line 9249 "gram.y"
                                {
					(yyval.list) = list_make2(makeString((yyvsp[-2].str)), makeString((yyvsp[0].str)));
				}
#line 38023 "gram.cpp"
    break;

  case 1283: /* opt_definition: WITH definition  */
#line 9255 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 38029 "gram.cpp"
    break;

  case 1284: /* opt_definition: %empty  */
#line 9256 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 38035 "gram.cpp"
    break;

  case 1285: /* table_func_column: param_name func_type  */
#line 9260 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-1].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = FUNC_PARAM_TABLE;
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 38048 "gram.cpp"
    break;

  case 1286: /* table_func_column_list: table_func_column  */
#line 9272 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].fun_param));
				}
#line 38056 "gram.cpp"
    break;

  case 1287: /* table_func_column_list: table_func_column_list ',' table_func_column  */
#line 9276 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param));
				}
#line 38064 "gram.cpp"
    break;

  case 1288: /* AlterFunctionStmt: ALTER FUNCTION function_with_argtypes alterfunc_opt_list opt_restrict  */
#line 9291 "gram.y"
                                {
					AlterFunctionStmt *n = makeNode(AlterFunctionStmt);
					n->func = (yyvsp[-2].funwithargs);
					n->actions = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 38075 "gram.cpp"
    break;

  case 1289: /* alterfunc_opt_list: common_func_opt_item  */
#line 9301 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 38081 "gram.cpp"
    break;

  case 1290: /* alterfunc_opt_list: alterfunc_opt_list common_func_opt_item  */
#line 9302 "gram.y"
                                                                  { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 38087 "gram.cpp"
    break;

  case 1293: /* RemoveFuncStmt: DROP FUNCTION func_name func_args opt_drop_behavior  */
#line 9324 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FUNCTION;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38102 "gram.cpp"
    break;

  case 1294: /* RemoveFuncStmt: DROP FUNCTION IF_P EXISTS func_name func_args opt_drop_behavior  */
#line 9335 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FUNCTION;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38117 "gram.cpp"
    break;

  case 1295: /* RemoveAggrStmt: DROP AGGREGATE func_name aggr_args opt_drop_behavior  */
#line 9349 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_AGGREGATE;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractAggrArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38132 "gram.cpp"
    break;

  case 1296: /* RemoveAggrStmt: DROP AGGREGATE IF_P EXISTS func_name aggr_args opt_drop_behavior  */
#line 9360 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_AGGREGATE;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractAggrArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38147 "gram.cpp"
    break;

  case 1297: /* RemoveOperStmt: DROP OPERATOR any_operator oper_argtypes opt_drop_behavior  */
#line 9374 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_OPERATOR;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1((yyvsp[-1].list));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38162 "gram.cpp"
    break;

  case 1298: /* RemoveOperStmt: DROP OPERATOR IF_P EXISTS any_operator oper_argtypes opt_drop_behavior  */
#line 9385 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_OPERATOR;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1((yyvsp[-1].list));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38177 "gram.cpp"
    break;

  case 1299: /* oper_argtypes: '(' Typename ')'  */
#line 9399 "gram.y"
                                {
				   ereport(ERROR,
						   errcode(ERRCODE_SYNTAX_ERROR),
							errmsg("missing argument"),
							errhint("Use NONE to denote the missing argument of a unary operator."),
							parser_errposition((yylsp[0])));
				}
#line 38189 "gram.cpp"
    break;

  case 1300: /* oper_argtypes: '(' Typename ',' Typename ')'  */
#line 9407 "gram.y"
                                        { (yyval.list) = list_make2((yyvsp[-3].typnam), (yyvsp[-1].typnam)); }
#line 38195 "gram.cpp"
    break;

  case 1301: /* oper_argtypes: '(' NONE ',' Typename ')'  */
#line 9409 "gram.y"
                                        { (yyval.list) = list_make2(NULL, (yyvsp[-1].typnam)); }
#line 38201 "gram.cpp"
    break;

  case 1302: /* oper_argtypes: '(' Typename ',' NONE ')'  */
#line 9411 "gram.y"
                                        { (yyval.list) = list_make2((yyvsp[-3].typnam), NULL); }
#line 38207 "gram.cpp"
    break;

  case 1303: /* any_operator: all_Op  */
#line 9416 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 38213 "gram.cpp"
    break;

  case 1304: /* any_operator: ColId '.' any_operator  */
#line 9418 "gram.y"
                                        { (yyval.list) = lcons(makeString((yyvsp[-2].str)), (yyvsp[0].list)); }
#line 38219 "gram.cpp"
    break;

  case 1305: /* DoStmt: DO dostmt_opt_list  */
#line 9431 "gram.y"
                                {
					DoStmt *n = makeNode(DoStmt);
					n->args = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 38229 "gram.cpp"
    break;

  case 1306: /* dostmt_opt_list: dostmt_opt_item  */
#line 9439 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 38235 "gram.cpp"
    break;

  case 1307: /* dostmt_opt_list: dostmt_opt_list dostmt_opt_item  */
#line 9440 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 38241 "gram.cpp"
    break;

  case 1308: /* dostmt_opt_item: Sconst  */
#line 9445 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("as", (Node *)makeString((yyvsp[0].str)));
				}
#line 38249 "gram.cpp"
    break;

  case 1309: /* dostmt_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
#line 9449 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[0].str)));
				}
#line 38257 "gram.cpp"
    break;

  case 1310: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH FUNCTION function_with_argtypes cast_context  */
#line 9462 "gram.y"
                                {
					CreateCastStmt *n = makeNode(CreateCastStmt);
					n->sourcetype = (yyvsp[-7].typnam);
					n->targettype = (yyvsp[-5].typnam);
					n->func = (yyvsp[-1].funwithargs);
					n->context = (CoercionContext) (yyvsp[0].ival);
					n->inout = false;
					(yyval.node) = (Node *)n;
				}
#line 38271 "gram.cpp"
    break;

  case 1311: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITHOUT FUNCTION cast_context  */
#line 9473 "gram.y"
                                {
					CreateCastStmt *n = makeNode(CreateCastStmt);
					n->sourcetype = (yyvsp[-6].typnam);
					n->targettype = (yyvsp[-4].typnam);
					n->func = NULL;
					n->context = (CoercionContext) (yyvsp[0].ival);
					n->inout = false;
					(yyval.node) = (Node *)n;
				}
#line 38285 "gram.cpp"
    break;

  case 1312: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH INOUT cast_context  */
#line 9484 "gram.y"
                                {
					CreateCastStmt *n = makeNode(CreateCastStmt);
					n->sourcetype = (yyvsp[-6].typnam);
					n->targettype = (yyvsp[-4].typnam);
					n->func = NULL;
					n->context = (CoercionContext) (yyvsp[0].ival);
					n->inout = true;
					(yyval.node) = (Node *)n;
				}
#line 38299 "gram.cpp"
    break;

  case 1313: /* cast_context: AS IMPLICIT_P  */
#line 9495 "gram.y"
                                                                { (yyval.ival) = COERCION_IMPLICIT; }
#line 38305 "gram.cpp"
    break;

  case 1314: /* cast_context: AS ASSIGNMENT  */
#line 9496 "gram.y"
                                                                                { (yyval.ival) = COERCION_ASSIGNMENT; }
#line 38311 "gram.cpp"
    break;

  case 1315: /* cast_context: %empty  */
#line 9497 "gram.y"
                                                                                        { (yyval.ival) = COERCION_EXPLICIT; }
#line 38317 "gram.cpp"
    break;

  case 1316: /* DropCastStmt: DROP CAST opt_if_exists '(' Typename AS Typename ')' opt_drop_behavior  */
#line 9502 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_CAST;
					n->objects = list_make1(list_make1((yyvsp[-4].typnam)));
					n->arguments = list_make1(list_make1((yyvsp[-2].typnam)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = (yyvsp[-6].boolean);
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38332 "gram.cpp"
    break;

  case 1317: /* opt_if_exists: IF_P EXISTS  */
#line 9514 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 38338 "gram.cpp"
    break;

  case 1318: /* opt_if_exists: %empty  */
#line 9515 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 38344 "gram.cpp"
    break;

  case 1319: /* ReindexStmt: REINDEX reindex_type qualified_name opt_force  */
#line 9530 "gram.y"
                                {
					ReindexStmt *n = makeNode(ReindexStmt);
					n->kind = (yyvsp[-2].objtype);
					n->relation = (yyvsp[-1].range);
					n->name = NULL;
					(yyval.node) = (Node *)n;
				}
#line 38356 "gram.cpp"
    break;

  case 1320: /* ReindexStmt: REINDEX SYSTEM_P name opt_force  */
#line 9538 "gram.y"
                                {
					ReindexStmt *n = makeNode(ReindexStmt);
					n->kind = OBJECT_DATABASE;
					n->name = (yyvsp[-1].str);
					n->relation = NULL;
					n->do_system = true;
					n->do_user = false;
					(yyval.node) = (Node *)n;
				}
#line 38370 "gram.cpp"
    break;

  case 1321: /* ReindexStmt: REINDEX DATABASE name opt_force  */
#line 9548 "gram.y"
                                {
					ReindexStmt *n = makeNode(ReindexStmt);
					n->kind = OBJECT_DATABASE;
					n->name = (yyvsp[-1].str);
					n->relation = NULL;
					n->do_system = true;
					n->do_user = true;
					(yyval.node) = (Node *)n;
				}
#line 38384 "gram.cpp"
    break;

  case 1322: /* reindex_type: INDEX  */
#line 9560 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_INDEX; }
#line 38390 "gram.cpp"
    break;

  case 1323: /* reindex_type: TABLE  */
#line 9561 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_TABLE; }
#line 38396 "gram.cpp"
    break;

  case 1324: /* opt_force: FORCE  */
#line 9564 "gram.y"
                                                                                        {  (yyval.boolean) = TRUE; }
#line 38402 "gram.cpp"
    break;

  case 1325: /* opt_force: %empty  */
#line 9565 "gram.y"
                                                                                        {  (yyval.boolean) = FALSE; }
#line 38408 "gram.cpp"
    break;

  case 1326: /* AlterTypeStmt: ALTER TYPE_P any_name SET DEFAULT ENCODING definition  */
#line 9574 "gram.y"
                                {
					AlterTypeStmt *n = makeNode(AlterTypeStmt);

					n->typeName = (yyvsp[-4].list);
					n->encoding = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 38420 "gram.cpp"
    break;

  case 1327: /* AlterTblSpcStmt: ALTER TABLESPACE name SET reloptions  */
#line 9591 "gram.y"
                                {
					AlterTableSpaceOptionsStmt *n =
						makeNode(AlterTableSpaceOptionsStmt);
					n->tablespacename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					n->isReset = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 38433 "gram.cpp"
    break;

  case 1328: /* AlterTblSpcStmt: ALTER TABLESPACE name RESET reloptions  */
#line 9600 "gram.y"
                                {
					AlterTableSpaceOptionsStmt *n =
						makeNode(AlterTableSpaceOptionsStmt);
					n->tablespacename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					n->isReset = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 38446 "gram.cpp"
    break;

  case 1329: /* RenameStmt: ALTER AGGREGATE func_name aggr_args RENAME TO name  */
#line 9617 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_AGGREGATE;
					n->object = (yyvsp[-4].list);
					n->objarg = extractAggrArgTypes((yyvsp[-3].list));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38460 "gram.cpp"
    break;

  case 1330: /* RenameStmt: ALTER COLLATION any_name RENAME TO name  */
#line 9627 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLLATION;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38473 "gram.cpp"
    break;

  case 1331: /* RenameStmt: ALTER CONVERSION_P any_name RENAME TO name  */
#line 9636 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_CONVERSION;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38486 "gram.cpp"
    break;

  case 1332: /* RenameStmt: ALTER DATABASE database_name RENAME TO database_name  */
#line 9645 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_DATABASE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38499 "gram.cpp"
    break;

  case 1333: /* RenameStmt: ALTER DOMAIN_P any_name RENAME TO name  */
#line 9654 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_DOMAIN;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38512 "gram.cpp"
    break;

  case 1334: /* RenameStmt: ALTER DOMAIN_P any_name RENAME CONSTRAINT name TO name  */
#line 9663 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_CONSTRAINT;
					n->relationType = OBJECT_DOMAIN;
					n->object = (yyvsp[-5].list);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38526 "gram.cpp"
    break;

  case 1335: /* RenameStmt: ALTER FOREIGN DATA_P WRAPPER name RENAME TO name  */
#line 9673 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FDW;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38539 "gram.cpp"
    break;

  case 1336: /* RenameStmt: ALTER FUNCTION function_with_argtypes RENAME TO name  */
#line 9682 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FUNCTION;
					n->object = (yyvsp[-3].funwithargs)->funcname;
					n->objarg = (yyvsp[-3].funwithargs)->funcargs;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38553 "gram.cpp"
    break;

  case 1337: /* RenameStmt: ALTER GROUP_P RoleId RENAME TO RoleId  */
#line 9692 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ROLE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38566 "gram.cpp"
    break;

  case 1338: /* RenameStmt: ALTER opt_procedural LANGUAGE name RENAME TO name  */
#line 9701 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_LANGUAGE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38579 "gram.cpp"
    break;

  case 1339: /* RenameStmt: ALTER OPERATOR CLASS any_name USING access_method RENAME TO name  */
#line 9710 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_OPCLASS;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38593 "gram.cpp"
    break;

  case 1340: /* RenameStmt: ALTER OPERATOR FAMILY any_name USING access_method RENAME TO name  */
#line 9720 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_OPFAMILY;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38607 "gram.cpp"
    break;

  case 1341: /* RenameStmt: ALTER SCHEMA name RENAME TO name  */
#line 9730 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_SCHEMA;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38620 "gram.cpp"
    break;

  case 1342: /* RenameStmt: ALTER SERVER name RENAME TO name  */
#line 9739 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FOREIGN_SERVER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38633 "gram.cpp"
    break;

  case 1343: /* RenameStmt: ALTER TABLE relation_expr RENAME TO name  */
#line 9748 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38647 "gram.cpp"
    break;

  case 1344: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME TO name  */
#line 9758 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38661 "gram.cpp"
    break;

  case 1345: /* RenameStmt: ALTER SEQUENCE qualified_name RENAME TO name  */
#line 9768 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38675 "gram.cpp"
    break;

  case 1346: /* RenameStmt: ALTER SEQUENCE IF_P EXISTS qualified_name RENAME TO name  */
#line 9778 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38689 "gram.cpp"
    break;

  case 1347: /* RenameStmt: ALTER VIEW qualified_name RENAME TO name  */
#line 9788 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38703 "gram.cpp"
    break;

  case 1348: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME TO name  */
#line 9798 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38717 "gram.cpp"
    break;

  case 1349: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME TO name  */
#line 9808 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38731 "gram.cpp"
    break;

  case 1350: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME TO name  */
#line 9818 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38745 "gram.cpp"
    break;

  case 1351: /* RenameStmt: ALTER INDEX qualified_name RENAME TO name  */
#line 9828 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_INDEX;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38759 "gram.cpp"
    break;

  case 1352: /* RenameStmt: ALTER INDEX IF_P EXISTS qualified_name RENAME TO name  */
#line 9838 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_INDEX;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38773 "gram.cpp"
    break;

  case 1353: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME TO name  */
#line 9848 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38787 "gram.cpp"
    break;

  case 1354: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME TO name  */
#line 9858 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38801 "gram.cpp"
    break;

  case 1355: /* RenameStmt: ALTER TABLE relation_expr RENAME opt_column name TO name  */
#line 9868 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38816 "gram.cpp"
    break;

  case 1356: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
#line 9879 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38831 "gram.cpp"
    break;

  case 1357: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME opt_column name TO name  */
#line 9890 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38846 "gram.cpp"
    break;

  case 1358: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name  */
#line 9901 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38861 "gram.cpp"
    break;

  case 1359: /* RenameStmt: ALTER TABLE relation_expr RENAME CONSTRAINT name TO name  */
#line 9912 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_CONSTRAINT;
					n->relationType = OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38875 "gram.cpp"
    break;

  case 1360: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME opt_column name TO name  */
#line 9922 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38890 "gram.cpp"
    break;

  case 1361: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
#line 9933 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38905 "gram.cpp"
    break;

  case 1362: /* RenameStmt: ALTER RULE name ON qualified_name RENAME TO name  */
#line 9944 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_RULE;
					n->relation = (yyvsp[-3].range);
					n->subname = (yyvsp[-5].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38919 "gram.cpp"
    break;

  case 1363: /* RenameStmt: ALTER TRIGGER name ON qualified_name RENAME TO name  */
#line 9954 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TRIGGER;
					n->relation = (yyvsp[-3].range);
					n->subname = (yyvsp[-5].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38933 "gram.cpp"
    break;

  case 1364: /* RenameStmt: ALTER EVENT TRIGGER name RENAME TO name  */
#line 9964 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_EVENT_TRIGGER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38945 "gram.cpp"
    break;

  case 1365: /* RenameStmt: ALTER ROLE RoleId RENAME TO RoleId  */
#line 9972 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ROLE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38958 "gram.cpp"
    break;

  case 1366: /* RenameStmt: ALTER USER RoleId RENAME TO RoleId  */
#line 9981 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ROLE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38971 "gram.cpp"
    break;

  case 1367: /* RenameStmt: ALTER TABLESPACE name RENAME TO name  */
#line 9990 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TABLESPACE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38984 "gram.cpp"
    break;

  case 1368: /* RenameStmt: ALTER TEXT_P SEARCH PARSER any_name RENAME TO name  */
#line 9999 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSPARSER;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38997 "gram.cpp"
    break;

  case 1369: /* RenameStmt: ALTER TEXT_P SEARCH DICTIONARY any_name RENAME TO name  */
#line 10008 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSDICTIONARY;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39010 "gram.cpp"
    break;

  case 1370: /* RenameStmt: ALTER TEXT_P SEARCH TEMPLATE any_name RENAME TO name  */
#line 10017 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSTEMPLATE;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39023 "gram.cpp"
    break;

  case 1371: /* RenameStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name RENAME TO name  */
#line 10026 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSCONFIGURATION;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39036 "gram.cpp"
    break;

  case 1372: /* RenameStmt: ALTER TYPE_P any_name RENAME TO name  */
#line 10035 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TYPE;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39049 "gram.cpp"
    break;

  case 1373: /* RenameStmt: ALTER TYPE_P any_name RENAME ATTRIBUTE name TO name opt_drop_behavior  */
#line 10044 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ATTRIBUTE;
					n->relationType = OBJECT_TYPE;
					n->relation = makeRangeVarFromAnyName((yyvsp[-6].list), (yylsp[-6]), yyscanner);
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39065 "gram.cpp"
    break;

  case 1374: /* RenameStmt: ALTER PROTOCOL any_name RENAME TO name  */
#line 10056 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_EXTPROTOCOL;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39077 "gram.cpp"
    break;

  case 1375: /* opt_column: COLUMN  */
#line 10065 "gram.y"
                                                                                        { (yyval.ival) = COLUMN; }
#line 39083 "gram.cpp"
    break;

  case 1376: /* opt_column: %empty  */
#line 10066 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 39089 "gram.cpp"
    break;

  case 1377: /* opt_set_data: SET DATA_P  */
#line 10069 "gram.y"
                                                                                { (yyval.ival) = 1; }
#line 39095 "gram.cpp"
    break;

  case 1378: /* opt_set_data: %empty  */
#line 10070 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 39101 "gram.cpp"
    break;

  case 1379: /* AlterObjectSchemaStmt: ALTER AGGREGATE func_name aggr_args SET SCHEMA name  */
#line 10081 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_AGGREGATE;
					n->object = (yyvsp[-4].list);
					n->objarg = extractAggrArgTypes((yyvsp[-3].list));
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39115 "gram.cpp"
    break;

  case 1380: /* AlterObjectSchemaStmt: ALTER COLLATION any_name SET SCHEMA name  */
#line 10091 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_COLLATION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39128 "gram.cpp"
    break;

  case 1381: /* AlterObjectSchemaStmt: ALTER CONVERSION_P any_name SET SCHEMA name  */
#line 10100 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_CONVERSION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39141 "gram.cpp"
    break;

  case 1382: /* AlterObjectSchemaStmt: ALTER DOMAIN_P any_name SET SCHEMA name  */
#line 10109 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_DOMAIN;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39154 "gram.cpp"
    break;

  case 1383: /* AlterObjectSchemaStmt: ALTER EXTENSION any_name SET SCHEMA name  */
#line 10118 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_EXTENSION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39167 "gram.cpp"
    break;

  case 1384: /* AlterObjectSchemaStmt: ALTER FUNCTION function_with_argtypes SET SCHEMA name  */
#line 10127 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_FUNCTION;
					n->object = (yyvsp[-3].funwithargs)->funcname;
					n->objarg = (yyvsp[-3].funwithargs)->funcargs;
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39181 "gram.cpp"
    break;

  case 1385: /* AlterObjectSchemaStmt: ALTER OPERATOR any_operator oper_argtypes SET SCHEMA name  */
#line 10137 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_OPERATOR;
					n->object = (yyvsp[-4].list);
					n->objarg = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39195 "gram.cpp"
    break;

  case 1386: /* AlterObjectSchemaStmt: ALTER OPERATOR CLASS any_name USING access_method SET SCHEMA name  */
#line 10147 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_OPCLASS;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39209 "gram.cpp"
    break;

  case 1387: /* AlterObjectSchemaStmt: ALTER OPERATOR FAMILY any_name USING access_method SET SCHEMA name  */
#line 10157 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_OPFAMILY;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39223 "gram.cpp"
    break;

  case 1388: /* AlterObjectSchemaStmt: ALTER TABLE relation_expr SET SCHEMA name  */
#line 10167 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39236 "gram.cpp"
    break;

  case 1389: /* AlterObjectSchemaStmt: ALTER TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
#line 10176 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39249 "gram.cpp"
    break;

  case 1390: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH PARSER any_name SET SCHEMA name  */
#line 10185 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSPARSER;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39262 "gram.cpp"
    break;

  case 1391: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH DICTIONARY any_name SET SCHEMA name  */
#line 10194 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSDICTIONARY;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39275 "gram.cpp"
    break;

  case 1392: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH TEMPLATE any_name SET SCHEMA name  */
#line 10203 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSTEMPLATE;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39288 "gram.cpp"
    break;

  case 1393: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name SET SCHEMA name  */
#line 10212 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSCONFIGURATION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39301 "gram.cpp"
    break;

  case 1394: /* AlterObjectSchemaStmt: ALTER SEQUENCE qualified_name SET SCHEMA name  */
#line 10221 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39314 "gram.cpp"
    break;

  case 1395: /* AlterObjectSchemaStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SET SCHEMA name  */
#line 10230 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39327 "gram.cpp"
    break;

  case 1396: /* AlterObjectSchemaStmt: ALTER VIEW qualified_name SET SCHEMA name  */
#line 10239 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39340 "gram.cpp"
    break;

  case 1397: /* AlterObjectSchemaStmt: ALTER VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
#line 10248 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39353 "gram.cpp"
    break;

  case 1398: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW qualified_name SET SCHEMA name  */
#line 10257 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39366 "gram.cpp"
    break;

  case 1399: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
#line 10266 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39379 "gram.cpp"
    break;

  case 1400: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE relation_expr SET SCHEMA name  */
#line 10275 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39392 "gram.cpp"
    break;

  case 1401: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
#line 10284 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39405 "gram.cpp"
    break;

  case 1402: /* AlterObjectSchemaStmt: ALTER TYPE_P any_name SET SCHEMA name  */
#line 10293 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TYPE;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39418 "gram.cpp"
    break;

  case 1403: /* AlterOwnerStmt: ALTER AGGREGATE func_name aggr_args OWNER TO RoleId  */
#line 10310 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_AGGREGATE;
					n->object = (yyvsp[-4].list);
					n->objarg = extractAggrArgTypes((yyvsp[-3].list));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39431 "gram.cpp"
    break;

  case 1404: /* AlterOwnerStmt: ALTER COLLATION any_name OWNER TO RoleId  */
#line 10319 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_COLLATION;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39443 "gram.cpp"
    break;

  case 1405: /* AlterOwnerStmt: ALTER CONVERSION_P any_name OWNER TO RoleId  */
#line 10327 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_CONVERSION;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39455 "gram.cpp"
    break;

  case 1406: /* AlterOwnerStmt: ALTER DATABASE database_name OWNER TO RoleId  */
#line 10335 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_DATABASE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39467 "gram.cpp"
    break;

  case 1407: /* AlterOwnerStmt: ALTER DOMAIN_P any_name OWNER TO RoleId  */
#line 10343 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_DOMAIN;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39479 "gram.cpp"
    break;

  case 1408: /* AlterOwnerStmt: ALTER FUNCTION function_with_argtypes OWNER TO RoleId  */
#line 10351 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_FUNCTION;
					n->object = (yyvsp[-3].funwithargs)->funcname;
					n->objarg = (yyvsp[-3].funwithargs)->funcargs;
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39492 "gram.cpp"
    break;

  case 1409: /* AlterOwnerStmt: ALTER opt_procedural LANGUAGE name OWNER TO RoleId  */
#line 10360 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_LANGUAGE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39504 "gram.cpp"
    break;

  case 1410: /* AlterOwnerStmt: ALTER LARGE_P OBJECT_P NumericOnly OWNER TO RoleId  */
#line 10368 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_LARGEOBJECT;
					n->object = list_make1((yyvsp[-3].value));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39516 "gram.cpp"
    break;

  case 1411: /* AlterOwnerStmt: ALTER OPERATOR any_operator oper_argtypes OWNER TO RoleId  */
#line 10376 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_OPERATOR;
					n->object = (yyvsp[-4].list);
					n->objarg = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39529 "gram.cpp"
    break;

  case 1412: /* AlterOwnerStmt: ALTER OPERATOR CLASS any_name USING access_method OWNER TO RoleId  */
#line 10385 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_OPCLASS;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39542 "gram.cpp"
    break;

  case 1413: /* AlterOwnerStmt: ALTER OPERATOR FAMILY any_name USING access_method OWNER TO RoleId  */
#line 10394 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_OPFAMILY;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39555 "gram.cpp"
    break;

  case 1414: /* AlterOwnerStmt: ALTER SCHEMA name OWNER TO RoleId  */
#line 10403 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_SCHEMA;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39567 "gram.cpp"
    break;

  case 1415: /* AlterOwnerStmt: ALTER TYPE_P any_name OWNER TO RoleId  */
#line 10411 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TYPE;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39579 "gram.cpp"
    break;

  case 1416: /* AlterOwnerStmt: ALTER TABLESPACE name OWNER TO RoleId  */
#line 10419 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TABLESPACE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39591 "gram.cpp"
    break;

  case 1417: /* AlterOwnerStmt: ALTER PROTOCOL name OWNER TO RoleId  */
#line 10427 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_EXTPROTOCOL;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39603 "gram.cpp"
    break;

  case 1418: /* AlterOwnerStmt: ALTER TEXT_P SEARCH DICTIONARY any_name OWNER TO RoleId  */
#line 10435 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TSDICTIONARY;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39615 "gram.cpp"
    break;

  case 1419: /* AlterOwnerStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name OWNER TO RoleId  */
#line 10443 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TSCONFIGURATION;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39627 "gram.cpp"
    break;

  case 1420: /* AlterOwnerStmt: ALTER FOREIGN DATA_P WRAPPER name OWNER TO RoleId  */
#line 10451 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_FDW;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39639 "gram.cpp"
    break;

  case 1421: /* AlterOwnerStmt: ALTER SERVER name OWNER TO RoleId  */
#line 10459 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_FOREIGN_SERVER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39651 "gram.cpp"
    break;

  case 1422: /* AlterOwnerStmt: ALTER EVENT TRIGGER name OWNER TO RoleId  */
#line 10467 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_EVENT_TRIGGER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39663 "gram.cpp"
    break;

  case 1423: /* RuleStmt: CREATE opt_or_replace RULE name AS ON event TO qualified_name where_clause DO opt_instead RuleActionList  */
#line 10486 "gram.y"
                                {
					RuleStmt *n = makeNode(RuleStmt);
					n->replace = (yyvsp[-11].boolean);
					n->relation = (yyvsp[-4].range);
					n->rulename = (yyvsp[-9].str);
					n->whereClause = (yyvsp[-3].node);
					n->event = static_cast<CmdType>((yyvsp[-6].ival));
					n->instead = (yyvsp[-1].boolean);
					n->actions = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 39679 "gram.cpp"
    break;

  case 1424: /* RuleActionList: NOTHING  */
#line 10500 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 39685 "gram.cpp"
    break;

  case 1425: /* RuleActionList: RuleActionStmt  */
#line 10501 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 39691 "gram.cpp"
    break;

  case 1426: /* RuleActionList: '(' RuleActionMulti ')'  */
#line 10502 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 39697 "gram.cpp"
    break;

  case 1427: /* RuleActionMulti: RuleActionMulti ';' RuleActionStmtOrEmpty  */
#line 10508 "gram.y"
                                { if ((yyvsp[0].node) != NULL)
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				  else
					(yyval.list) = (yyvsp[-2].list);
				}
#line 39707 "gram.cpp"
    break;

  case 1428: /* RuleActionMulti: RuleActionStmtOrEmpty  */
#line 10514 "gram.y"
                                { if ((yyvsp[0].node) != NULL)
					(yyval.list) = list_make1((yyvsp[0].node));
				  else
					(yyval.list) = NIL;
				}
#line 39717 "gram.cpp"
    break;

  case 1434: /* RuleActionStmtOrEmpty: RuleActionStmt  */
#line 10530 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 39723 "gram.cpp"
    break;

  case 1435: /* RuleActionStmtOrEmpty: %empty  */
#line 10531 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 39729 "gram.cpp"
    break;

  case 1436: /* event: SELECT  */
#line 10534 "gram.y"
                                                                                        { (yyval.ival) = CMD_SELECT; }
#line 39735 "gram.cpp"
    break;

  case 1437: /* event: UPDATE  */
#line 10535 "gram.y"
                                                                                                { (yyval.ival) = CMD_UPDATE; }
#line 39741 "gram.cpp"
    break;

  case 1438: /* event: DELETE_P  */
#line 10536 "gram.y"
                                                                                                { (yyval.ival) = CMD_DELETE; }
#line 39747 "gram.cpp"
    break;

  case 1439: /* event: INSERT  */
#line 10537 "gram.y"
                                                                                                { (yyval.ival) = CMD_INSERT; }
#line 39753 "gram.cpp"
    break;

  case 1440: /* opt_instead: INSTEAD  */
#line 10541 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 39759 "gram.cpp"
    break;

  case 1441: /* opt_instead: ALSO  */
#line 10542 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 39765 "gram.cpp"
    break;

  case 1442: /* opt_instead: %empty  */
#line 10543 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 39771 "gram.cpp"
    break;

  case 1443: /* DropRuleStmt: DROP RULE name ON any_name opt_drop_behavior  */
#line 10549 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_RULE;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 39786 "gram.cpp"
    break;

  case 1444: /* DropRuleStmt: DROP RULE IF_P EXISTS name ON any_name opt_drop_behavior  */
#line 10560 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_RULE;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 39801 "gram.cpp"
    break;

  case 1445: /* NotifyStmt: NOTIFY ColId notify_payload  */
#line 10582 "gram.y"
                                {
					NotifyStmt *n = makeNode(NotifyStmt);
					n->conditionname = (yyvsp[-1].str);
					n->payload = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39812 "gram.cpp"
    break;

  case 1446: /* notify_payload: ',' Sconst  */
#line 10591 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 39818 "gram.cpp"
    break;

  case 1447: /* notify_payload: %empty  */
#line 10592 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 39824 "gram.cpp"
    break;

  case 1448: /* ListenStmt: LISTEN ColId  */
#line 10596 "gram.y"
                                {
					ListenStmt *n = makeNode(ListenStmt);
					n->conditionname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39834 "gram.cpp"
    break;

  case 1449: /* UnlistenStmt: UNLISTEN ColId  */
#line 10605 "gram.y"
                                {
					UnlistenStmt *n = makeNode(UnlistenStmt);
					n->conditionname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39844 "gram.cpp"
    break;

  case 1450: /* UnlistenStmt: UNLISTEN '*'  */
#line 10611 "gram.y"
                                {
					UnlistenStmt *n = makeNode(UnlistenStmt);
					n->conditionname = NULL;
					(yyval.node) = (Node *)n;
				}
#line 39854 "gram.cpp"
    break;

  case 1451: /* TransactionStmt: ABORT_P opt_transaction  */
#line 10630 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39865 "gram.cpp"
    break;

  case 1452: /* TransactionStmt: BEGIN_P opt_transaction transaction_mode_list_or_empty  */
#line 10637 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_BEGIN;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 39876 "gram.cpp"
    break;

  case 1453: /* TransactionStmt: START TRANSACTION transaction_mode_list_or_empty  */
#line 10644 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_START;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 39887 "gram.cpp"
    break;

  case 1454: /* TransactionStmt: COMMIT opt_transaction  */
#line 10651 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39898 "gram.cpp"
    break;

  case 1455: /* TransactionStmt: END_P opt_transaction  */
#line 10658 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39909 "gram.cpp"
    break;

  case 1456: /* TransactionStmt: ROLLBACK opt_transaction  */
#line 10665 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39920 "gram.cpp"
    break;

  case 1457: /* TransactionStmt: SAVEPOINT ColId  */
#line 10672 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_SAVEPOINT;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39932 "gram.cpp"
    break;

  case 1458: /* TransactionStmt: RELEASE SAVEPOINT ColId  */
#line 10680 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_RELEASE;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39944 "gram.cpp"
    break;

  case 1459: /* TransactionStmt: RELEASE ColId  */
#line 10688 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_RELEASE;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39956 "gram.cpp"
    break;

  case 1460: /* TransactionStmt: ROLLBACK opt_transaction TO SAVEPOINT ColId  */
#line 10696 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK_TO;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39968 "gram.cpp"
    break;

  case 1461: /* TransactionStmt: ROLLBACK opt_transaction TO ColId  */
#line 10704 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK_TO;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39980 "gram.cpp"
    break;

  case 1462: /* TransactionStmt: PREPARE TRANSACTION Sconst  */
#line 10712 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_PREPARE;
					n->gid = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39991 "gram.cpp"
    break;

  case 1463: /* TransactionStmt: COMMIT PREPARED Sconst  */
#line 10719 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_COMMIT_PREPARED;
					n->gid = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 40002 "gram.cpp"
    break;

  case 1464: /* TransactionStmt: ROLLBACK PREPARED Sconst  */
#line 10726 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK_PREPARED;
					n->gid = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 40013 "gram.cpp"
    break;

  case 1465: /* opt_transaction: WORK  */
#line 10734 "gram.y"
                                                                                {}
#line 40019 "gram.cpp"
    break;

  case 1466: /* opt_transaction: TRANSACTION  */
#line 10735 "gram.y"
                                                                                        {}
#line 40025 "gram.cpp"
    break;

  case 1467: /* opt_transaction: %empty  */
#line 10736 "gram.y"
                                                                                                {}
#line 40031 "gram.cpp"
    break;

  case 1468: /* transaction_mode_item: ISOLATION LEVEL iso_level  */
#line 10741 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_isolation",
									   makeStringConst((yyvsp[0].str), (yylsp[0]))); }
#line 40038 "gram.cpp"
    break;

  case 1469: /* transaction_mode_item: READ ONLY  */
#line 10744 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_read_only",
									   makeIntConst(TRUE, (yylsp[-1]))); }
#line 40045 "gram.cpp"
    break;

  case 1470: /* transaction_mode_item: READ WRITE  */
#line 10747 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_read_only",
									   makeIntConst(FALSE, (yylsp[-1]))); }
#line 40052 "gram.cpp"
    break;

  case 1471: /* transaction_mode_item: DEFERRABLE  */
#line 10750 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_deferrable",
									   makeIntConst(TRUE, (yylsp[0]))); }
#line 40059 "gram.cpp"
    break;

  case 1472: /* transaction_mode_item: NOT DEFERRABLE  */
#line 10753 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_deferrable",
									   makeIntConst(FALSE, (yylsp[-1]))); }
#line 40066 "gram.cpp"
    break;

  case 1473: /* transaction_mode_list: transaction_mode_item  */
#line 10760 "gram.y"
                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 40072 "gram.cpp"
    break;

  case 1474: /* transaction_mode_list: transaction_mode_list ',' transaction_mode_item  */
#line 10762 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 40078 "gram.cpp"
    break;

  case 1475: /* transaction_mode_list: transaction_mode_list transaction_mode_item  */
#line 10764 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 40084 "gram.cpp"
    break;

  case 1477: /* transaction_mode_list_or_empty: %empty  */
#line 10770 "gram.y"
                                        { (yyval.list) = NIL; }
#line 40090 "gram.cpp"
    break;

  case 1478: /* ViewStmt: CREATE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 10784 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-7].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->replace = false;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					(yyval.node) = (Node *) n;
				}
#line 40106 "gram.cpp"
    break;

  case 1479: /* ViewStmt: CREATE OR REPLACE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 10797 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-7].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->replace = true;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					(yyval.node) = (Node *) n;
				}
#line 40122 "gram.cpp"
    break;

  case 1480: /* ViewStmt: CREATE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
#line 10810 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-7].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-5].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[-1].node));
					n->replace = false;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					if (n->withCheckOption != NO_CHECK_OPTION)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[0])));
					(yyval.node) = (Node *) n;
				}
#line 40143 "gram.cpp"
    break;

  case 1481: /* ViewStmt: CREATE OR REPLACE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
#line 10828 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-7].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-5].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[-1].node));
					n->replace = true;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					if (n->withCheckOption != NO_CHECK_OPTION)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[0])));
					(yyval.node) = (Node *) n;
				}
#line 40164 "gram.cpp"
    break;

  case 1482: /* opt_check_option: WITH CHECK OPTION  */
#line 10847 "gram.y"
                                                                { (yyval.ival) = CASCADED_CHECK_OPTION; }
#line 40170 "gram.cpp"
    break;

  case 1483: /* opt_check_option: WITH CASCADED CHECK OPTION  */
#line 10848 "gram.y"
                                                { (yyval.ival) = CASCADED_CHECK_OPTION; }
#line 40176 "gram.cpp"
    break;

  case 1484: /* opt_check_option: WITH LOCAL CHECK OPTION  */
#line 10849 "gram.y"
                                                        { (yyval.ival) = LOCAL_CHECK_OPTION; }
#line 40182 "gram.cpp"
    break;

  case 1485: /* opt_check_option: %empty  */
#line 10850 "gram.y"
                                                                { (yyval.ival) = NO_CHECK_OPTION; }
#line 40188 "gram.cpp"
    break;

  case 1486: /* LoadStmt: LOAD file_name  */
#line 10861 "gram.y"
                                {
					LoadStmt *n = makeNode(LoadStmt);
					n->filename = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 40198 "gram.cpp"
    break;

  case 1487: /* CreatedbStmt: CREATE DATABASE database_name opt_with createdb_opt_list  */
#line 10877 "gram.y"
                                {
					CreatedbStmt *n = makeNode(CreatedbStmt);
					n->dbname = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40209 "gram.cpp"
    break;

  case 1488: /* createdb_opt_list: createdb_opt_list createdb_opt_item  */
#line 10886 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 40215 "gram.cpp"
    break;

  case 1489: /* createdb_opt_list: %empty  */
#line 10887 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 40221 "gram.cpp"
    break;

  case 1490: /* createdb_opt_item: TABLESPACE opt_equal name  */
#line 10892 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("tablespace", (Node *)makeString((yyvsp[0].str)));
				}
#line 40229 "gram.cpp"
    break;

  case 1491: /* createdb_opt_item: TABLESPACE opt_equal DEFAULT  */
#line 10896 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("tablespace", NULL);
				}
#line 40237 "gram.cpp"
    break;

  case 1492: /* createdb_opt_item: LOCATION opt_equal Sconst  */
#line 10900 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("location", (Node *)makeString((yyvsp[0].str)));
				}
#line 40245 "gram.cpp"
    break;

  case 1493: /* createdb_opt_item: LOCATION opt_equal DEFAULT  */
#line 10904 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("location", NULL);
				}
#line 40253 "gram.cpp"
    break;

  case 1494: /* createdb_opt_item: TEMPLATE opt_equal name  */
#line 10908 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("template", (Node *)makeString((yyvsp[0].str)));
				}
#line 40261 "gram.cpp"
    break;

  case 1495: /* createdb_opt_item: TEMPLATE opt_equal DEFAULT  */
#line 10912 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("template", NULL);
				}
#line 40269 "gram.cpp"
    break;

  case 1496: /* createdb_opt_item: ENCODING opt_equal Sconst  */
#line 10916 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[0].str)));
				}
#line 40277 "gram.cpp"
    break;

  case 1497: /* createdb_opt_item: ENCODING opt_equal Iconst  */
#line 10920 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 40285 "gram.cpp"
    break;

  case 1498: /* createdb_opt_item: ENCODING opt_equal DEFAULT  */
#line 10924 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", NULL);
				}
#line 40293 "gram.cpp"
    break;

  case 1499: /* createdb_opt_item: LC_COLLATE_P opt_equal Sconst  */
#line 10928 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_collate", (Node *)makeString((yyvsp[0].str)));
				}
#line 40301 "gram.cpp"
    break;

  case 1500: /* createdb_opt_item: LC_COLLATE_P opt_equal DEFAULT  */
#line 10932 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_collate", NULL);
				}
#line 40309 "gram.cpp"
    break;

  case 1501: /* createdb_opt_item: LC_CTYPE_P opt_equal Sconst  */
#line 10936 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_ctype", (Node *)makeString((yyvsp[0].str)));
				}
#line 40317 "gram.cpp"
    break;

  case 1502: /* createdb_opt_item: LC_CTYPE_P opt_equal DEFAULT  */
#line 10940 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_ctype", NULL);
				}
#line 40325 "gram.cpp"
    break;

  case 1503: /* createdb_opt_item: CONNECTION LIMIT opt_equal SignedIconst  */
#line 10944 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 40333 "gram.cpp"
    break;

  case 1504: /* createdb_opt_item: OWNER opt_equal name  */
#line 10948 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("owner", (Node *)makeString((yyvsp[0].str)));
				}
#line 40341 "gram.cpp"
    break;

  case 1505: /* createdb_opt_item: OWNER opt_equal DEFAULT  */
#line 10952 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("owner", NULL);
				}
#line 40349 "gram.cpp"
    break;

  case 1506: /* opt_equal: '='  */
#line 10961 "gram.y"
                                                                                                {}
#line 40355 "gram.cpp"
    break;

  case 1507: /* opt_equal: %empty  */
#line 10962 "gram.y"
                                                                                                {}
#line 40361 "gram.cpp"
    break;

  case 1508: /* AlterDatabaseStmt: ALTER DATABASE database_name opt_with alterdb_opt_list  */
#line 10974 "gram.y"
                                 {
					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
					n->dbname = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 40372 "gram.cpp"
    break;

  case 1509: /* AlterDatabaseStmt: ALTER DATABASE database_name SET TABLESPACE name  */
#line 10981 "gram.y"
                                 {
					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
					n->dbname = (yyvsp[-3].str);
					n->options = list_make1(makeDefElem("tablespace",
													(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				 }
#line 40384 "gram.cpp"
    break;

  case 1510: /* AlterDatabaseSetStmt: ALTER DATABASE database_name SetResetClause  */
#line 10992 "gram.y"
                                {
					AlterDatabaseSetStmt *n = makeNode(AlterDatabaseSetStmt);
					n->dbname = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 40395 "gram.cpp"
    break;

  case 1511: /* alterdb_opt_list: alterdb_opt_list alterdb_opt_item  */
#line 11002 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 40401 "gram.cpp"
    break;

  case 1512: /* alterdb_opt_list: %empty  */
#line 11003 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 40407 "gram.cpp"
    break;

  case 1513: /* alterdb_opt_item: CONNECTION LIMIT opt_equal SignedIconst  */
#line 11008 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 40415 "gram.cpp"
    break;

  case 1514: /* DropdbStmt: DROP DATABASE database_name  */
#line 11022 "gram.y"
                                {
					DropdbStmt *n = makeNode(DropdbStmt);
					n->dbname = (yyvsp[0].str);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 40426 "gram.cpp"
    break;

  case 1515: /* DropdbStmt: DROP DATABASE IF_P EXISTS database_name  */
#line 11029 "gram.y"
                                {
					DropdbStmt *n = makeNode(DropdbStmt);
					n->dbname = (yyvsp[0].str);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 40437 "gram.cpp"
    break;

  case 1516: /* AlterSystemStmt: ALTER SYSTEM_P SET generic_set  */
#line 11047 "gram.y"
                                {
					AlterSystemStmt *n = makeNode(AlterSystemStmt);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 40447 "gram.cpp"
    break;

  case 1517: /* AlterSystemStmt: ALTER SYSTEM_P RESET generic_reset  */
#line 11053 "gram.y"
                                {
					AlterSystemStmt *n = makeNode(AlterSystemStmt);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 40457 "gram.cpp"
    break;

  case 1518: /* CreateDomainStmt: CREATE DOMAIN_P any_name opt_as Typename ColQualList  */
#line 11069 "gram.y"
                                {
					CreateDomainStmt *n = makeNode(CreateDomainStmt);
					n->domainname = (yyvsp[-3].list);
					n->typeName = (yyvsp[-1].typnam);
					SplitColQualList((yyvsp[0].list), &n->constraints, &n->collClause,
									 yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 40470 "gram.cpp"
    break;

  case 1519: /* AlterDomainStmt: ALTER DOMAIN_P any_name alter_column_default  */
#line 11082 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'T';
					n->typeName = (yyvsp[-1].list);
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 40482 "gram.cpp"
    break;

  case 1520: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP NOT NULL_P  */
#line 11091 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'N';
					n->typeName = (yyvsp[-3].list);
					(yyval.node) = (Node *)n;
				}
#line 40493 "gram.cpp"
    break;

  case 1521: /* AlterDomainStmt: ALTER DOMAIN_P any_name SET NOT NULL_P  */
#line 11099 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'O';
					n->typeName = (yyvsp[-3].list);
					(yyval.node) = (Node *)n;
				}
#line 40504 "gram.cpp"
    break;

  case 1522: /* AlterDomainStmt: ALTER DOMAIN_P any_name ADD_P TableConstraint  */
#line 11107 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'C';
					n->typeName = (yyvsp[-2].list);
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 40516 "gram.cpp"
    break;

  case 1523: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT name opt_drop_behavior  */
#line 11116 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'X';
					n->typeName = (yyvsp[-4].list);
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 40530 "gram.cpp"
    break;

  case 1524: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
#line 11127 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'X';
					n->typeName = (yyvsp[-6].list);
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 40544 "gram.cpp"
    break;

  case 1525: /* AlterDomainStmt: ALTER DOMAIN_P any_name VALIDATE CONSTRAINT name  */
#line 11138 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'V';
					n->typeName = (yyvsp[-3].list);
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 40556 "gram.cpp"
    break;

  case 1526: /* opt_as: AS  */
#line 11147 "gram.y"
                                                                                                {}
#line 40562 "gram.cpp"
    break;

  case 1527: /* opt_as: %empty  */
#line 11148 "gram.y"
                                                                                        {}
#line 40568 "gram.cpp"
    break;

  case 1528: /* AlterTSDictionaryStmt: ALTER TEXT_P SEARCH DICTIONARY any_name definition  */
#line 11160 "gram.y"
                                {
					AlterTSDictionaryStmt *n = makeNode(AlterTSDictionaryStmt);
					n->dictname = (yyvsp[-1].list);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40579 "gram.cpp"
    break;

  case 1529: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ADD_P MAPPING FOR name_list WITH any_name_list  */
#line 11170 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_ADD_MAPPING;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = (yyvsp[-2].list);
					n->dicts = (yyvsp[0].list);
					n->override = false;
					n->replace = false;
					(yyval.node) = (Node*)n;
				}
#line 40594 "gram.cpp"
    break;

  case 1530: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list WITH any_name_list  */
#line 11181 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = (yyvsp[-2].list);
					n->dicts = (yyvsp[0].list);
					n->override = true;
					n->replace = false;
					(yyval.node) = (Node*)n;
				}
#line 40609 "gram.cpp"
    break;

  case 1531: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING REPLACE any_name WITH any_name  */
#line 11192 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_REPLACE_DICT;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = NIL;
					n->dicts = list_make2((yyvsp[-2].list),(yyvsp[0].list));
					n->override = false;
					n->replace = true;
					(yyval.node) = (Node*)n;
				}
#line 40624 "gram.cpp"
    break;

  case 1532: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list REPLACE any_name WITH any_name  */
#line 11203 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN;
					n->cfgname = (yyvsp[-8].list);
					n->tokentype = (yyvsp[-4].list);
					n->dicts = list_make2((yyvsp[-2].list),(yyvsp[0].list));
					n->override = false;
					n->replace = true;
					(yyval.node) = (Node*)n;
				}
#line 40639 "gram.cpp"
    break;

  case 1533: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING FOR name_list  */
#line 11214 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_DROP_MAPPING;
					n->cfgname = (yyvsp[-4].list);
					n->tokentype = (yyvsp[0].list);
					n->missing_ok = false;
					(yyval.node) = (Node*)n;
				}
#line 40652 "gram.cpp"
    break;

  case 1534: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING IF_P EXISTS FOR name_list  */
#line 11223 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_DROP_MAPPING;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = (yyvsp[0].list);
					n->missing_ok = true;
					(yyval.node) = (Node*)n;
				}
#line 40665 "gram.cpp"
    break;

  case 1535: /* CreateConversionStmt: CREATE opt_default CONVERSION_P any_name FOR Sconst TO Sconst FROM any_name  */
#line 11246 "gram.y"
                        {
				CreateConversionStmt *n = makeNode(CreateConversionStmt);
				n->conversion_name = (yyvsp[-6].list);
				n->for_encoding_name = (yyvsp[-4].str);
				n->to_encoding_name = (yyvsp[-2].str);
				n->func_name = (yyvsp[0].list);
				n->def = (yyvsp[-8].boolean);
				(yyval.node) = (Node *)n;
			}
#line 40679 "gram.cpp"
    break;

  case 1536: /* ClusterStmt: CLUSTER opt_verbose qualified_name cluster_index_specification  */
#line 11268 "gram.y"
                                {
					ClusterStmt *n = makeNode(ClusterStmt);
					n->relation = (yyvsp[-1].range);
					n->indexname = (yyvsp[0].str);
					n->verbose = (yyvsp[-2].boolean);
					(yyval.node) = (Node*)n;
				}
#line 40691 "gram.cpp"
    break;

  case 1537: /* ClusterStmt: CLUSTER opt_verbose  */
#line 11276 "gram.y"
                                {
					ClusterStmt *n = makeNode(ClusterStmt);
					n->relation = NULL;
					n->indexname = NULL;
					n->verbose = (yyvsp[0].boolean);
					(yyval.node) = (Node*)n;
				}
#line 40703 "gram.cpp"
    break;

  case 1538: /* ClusterStmt: CLUSTER opt_verbose index_name ON qualified_name  */
#line 11285 "gram.y"
                                {
					ClusterStmt *n = makeNode(ClusterStmt);
					n->relation = (yyvsp[0].range);
					n->indexname = (yyvsp[-2].str);
					n->verbose = (yyvsp[-3].boolean);
					(yyval.node) = (Node*)n;
				}
#line 40715 "gram.cpp"
    break;

  case 1539: /* cluster_index_specification: USING index_name  */
#line 11295 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 40721 "gram.cpp"
    break;

  case 1540: /* cluster_index_specification: %empty  */
#line 11296 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 40727 "gram.cpp"
    break;

  case 1541: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose  */
#line 11309 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM;
					if ((yyvsp[-2].boolean))
						n->options |= VACOPT_FULL;
					if ((yyvsp[0].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->freeze_table_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->multixact_freeze_min_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->multixact_freeze_table_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (Node *)n;
				}
#line 40747 "gram.cpp"
    break;

  case 1542: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose qualified_name  */
#line 11325 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_FULL;
					if ((yyvsp[-1].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->relation = (yyvsp[0].range);
					n->va_cols = NIL;
					(yyval.node) = (Node *)n;
				}
#line 40767 "gram.cpp"
    break;

  case 1543: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose AnalyzeStmt  */
#line 11341 "gram.y"
                                {
					VacuumStmt *n = (VacuumStmt *) (yyvsp[0].node);
					n->options |= VACOPT_VACUUM;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_FULL;
					if ((yyvsp[-1].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					(yyval.node) = (Node *)n;
				}
#line 40785 "gram.cpp"
    break;

  case 1544: /* VacuumStmt: VACUUM '(' vacuum_option_list ')'  */
#line 11355 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM | (yyvsp[-1].ival);
					if (n->options & VACOPT_FREEZE)
					{
						n->freeze_min_age = n->freeze_table_age = 0;
						n->multixact_freeze_min_age = 0;
						n->multixact_freeze_table_age = 0;
					}
					else
					{
						n->freeze_min_age = n->freeze_table_age = -1;
						n->multixact_freeze_min_age = -1;
						n->multixact_freeze_table_age = -1;
					}
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (Node *) n;
				}
#line 40809 "gram.cpp"
    break;

  case 1545: /* VacuumStmt: VACUUM '(' vacuum_option_list ')' qualified_name opt_name_list  */
#line 11375 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM | (yyvsp[-3].ival);
					if (n->options & VACOPT_FREEZE)
					{
						n->freeze_min_age = n->freeze_table_age = 0;
						n->multixact_freeze_min_age = 0;
						n->multixact_freeze_table_age = 0;
					}
					else
					{
						n->freeze_min_age = n->freeze_table_age = -1;
						n->multixact_freeze_min_age = -1;
						n->multixact_freeze_table_age = -1;
					}
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= VACOPT_ANALYZE;
					(yyval.node) = (Node *) n;
				}
#line 40835 "gram.cpp"
    break;

  case 1546: /* vacuum_option_list: vacuum_option_elem  */
#line 11399 "gram.y"
                                                                                                        { (yyval.ival) = (yyvsp[0].ival); }
#line 40841 "gram.cpp"
    break;

  case 1547: /* vacuum_option_list: vacuum_option_list ',' vacuum_option_elem  */
#line 11400 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
#line 40847 "gram.cpp"
    break;

  case 1548: /* vacuum_option_elem: analyze_keyword  */
#line 11404 "gram.y"
                                                { (yyval.ival) = VACOPT_ANALYZE; }
#line 40853 "gram.cpp"
    break;

  case 1549: /* vacuum_option_elem: VERBOSE  */
#line 11405 "gram.y"
                                                        { (yyval.ival) = VACOPT_VERBOSE; }
#line 40859 "gram.cpp"
    break;

  case 1550: /* vacuum_option_elem: FREEZE  */
#line 11406 "gram.y"
                                                        { (yyval.ival) = VACOPT_FREEZE; }
#line 40865 "gram.cpp"
    break;

  case 1551: /* vacuum_option_elem: FULL  */
#line 11407 "gram.y"
                                                        { (yyval.ival) = VACOPT_FULL; }
#line 40871 "gram.cpp"
    break;

  case 1552: /* vacuum_option_elem: YEZZEY  */
#line 11408 "gram.y"
                                                        { (yyval.ival) = VACOPT_YEZZEY; }
#line 40877 "gram.cpp"
    break;

  case 1553: /* AnalyzeStmt: analyze_keyword opt_verbose opt_rootonly_all  */
#line 11413 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-1].boolean))
						n->options |= VACOPT_VERBOSE;
					if ((yyvsp[0].boolean))
						n->options |= VACOPT_ROOTONLY;
					n->freeze_min_age = -1;
					n->freeze_table_age = -1;
					n->multixact_freeze_min_age = -1;
					n->multixact_freeze_table_age = -1;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (Node *)n;
				}
#line 40897 "gram.cpp"
    break;

  case 1554: /* AnalyzeStmt: analyze_keyword opt_verbose qualified_name opt_name_list  */
#line 11429 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-2].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = -1;
					n->freeze_table_age = -1;
					n->multixact_freeze_min_age = -1;
					n->multixact_freeze_table_age = -1;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40915 "gram.cpp"
    break;

  case 1555: /* AnalyzeStmt: analyze_keyword opt_verbose FULLSCAN qualified_name opt_name_list  */
#line 11443 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_VERBOSE;
					n->options |= VACOPT_FULLSCAN;
					n->freeze_min_age = -1;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40931 "gram.cpp"
    break;

  case 1556: /* AnalyzeStmt: analyze_keyword opt_verbose ROOTPARTITION qualified_name opt_name_list  */
#line 11455 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_VERBOSE;
					n->options |= VACOPT_ROOTONLY;
					n->freeze_min_age = -1;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40947 "gram.cpp"
    break;

  case 1557: /* analyze_keyword: ANALYZE  */
#line 11469 "gram.y"
                                                                                                {}
#line 40953 "gram.cpp"
    break;

  case 1558: /* analyze_keyword: ANALYSE  */
#line 11470 "gram.y"
                                                                                {}
#line 40959 "gram.cpp"
    break;

  case 1559: /* opt_verbose: VERBOSE  */
#line 11474 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 40965 "gram.cpp"
    break;

  case 1560: /* opt_verbose: %empty  */
#line 11475 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40971 "gram.cpp"
    break;

  case 1561: /* opt_rootonly_all: ROOTPARTITION ALL  */
#line 11479 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 40977 "gram.cpp"
    break;

  case 1562: /* opt_rootonly_all: %empty  */
#line 11480 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40983 "gram.cpp"
    break;

  case 1563: /* opt_full: FULL  */
#line 11483 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 40989 "gram.cpp"
    break;

  case 1564: /* opt_full: %empty  */
#line 11484 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40995 "gram.cpp"
    break;

  case 1565: /* opt_freeze: FREEZE  */
#line 11487 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 41001 "gram.cpp"
    break;

  case 1566: /* opt_freeze: %empty  */
#line 11488 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 41007 "gram.cpp"
    break;

  case 1567: /* opt_name_list: '(' name_list ')'  */
#line 11492 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 41013 "gram.cpp"
    break;

  case 1568: /* opt_name_list: %empty  */
#line 11493 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 41019 "gram.cpp"
    break;

  case 1569: /* ExplainStmt: EXPLAIN ExplainableStmt  */
#line 11507 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = NIL;
					(yyval.node) = (Node *) n;
				}
#line 41030 "gram.cpp"
    break;

  case 1570: /* ExplainStmt: EXPLAIN analyze_keyword opt_verbose opt_dxl ExplainableStmt  */
#line 11514 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = list_make1(makeDefElem("analyze", NULL));
					if ((yyvsp[-2].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL));
					if ((yyvsp[-1].boolean))
						n->options = lappend(n->options,
											 makeDefElem("dxl", NULL));
					(yyval.node) = (Node *) n;
				}
#line 41047 "gram.cpp"
    break;

  case 1571: /* ExplainStmt: EXPLAIN VERBOSE opt_dxl ExplainableStmt  */
#line 11527 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = list_make1(makeDefElem("verbose", NULL));
					if ((yyvsp[-1].boolean))
						n->options = lappend(n->options,
											 makeDefElem("dxl", NULL));
					(yyval.node) = (Node *) n;
				}
#line 41061 "gram.cpp"
    break;

  case 1572: /* ExplainStmt: EXPLAIN '(' explain_option_list ')' ExplainableStmt  */
#line 11537 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = (yyvsp[-2].list);
					(yyval.node) = (Node *) n;
				}
#line 41072 "gram.cpp"
    break;

  case 1582: /* ExplainableStmt: CreateStmt  */
#line 11556 "gram.y"
                                {
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("cannot EXPLAIN CREATE TABLE without AS "
							 		"clause"));
				}
#line 41083 "gram.cpp"
    break;

  case 1583: /* opt_dxl: DXL  */
#line 11564 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 41089 "gram.cpp"
    break;

  case 1584: /* opt_dxl: %empty  */
#line 11565 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 41095 "gram.cpp"
    break;

  case 1585: /* explain_option_list: explain_option_elem  */
#line 11570 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 41103 "gram.cpp"
    break;

  case 1586: /* explain_option_list: explain_option_list ',' explain_option_elem  */
#line 11574 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 41111 "gram.cpp"
    break;

  case 1587: /* explain_option_elem: explain_option_name explain_option_arg  */
#line 11581 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node));
				}
#line 41119 "gram.cpp"
    break;

  case 1588: /* explain_option_name: NonReservedWord  */
#line 11587 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 41125 "gram.cpp"
    break;

  case 1589: /* explain_option_name: analyze_keyword  */
#line 11588 "gram.y"
                                                        { (yyval.str) = "analyze"; }
#line 41131 "gram.cpp"
    break;

  case 1590: /* explain_option_arg: opt_boolean_or_string  */
#line 11592 "gram.y"
                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 41137 "gram.cpp"
    break;

  case 1591: /* explain_option_arg: NumericOnly  */
#line 11593 "gram.y"
                                                        { (yyval.node) = (Node *) (yyvsp[0].value); }
#line 41143 "gram.cpp"
    break;

  case 1592: /* explain_option_arg: %empty  */
#line 11594 "gram.y"
                                                        { (yyval.node) = NULL; }
#line 41149 "gram.cpp"
    break;

  case 1593: /* PrepareStmt: PREPARE name prep_type_clause AS PreparableStmt  */
#line 11605 "gram.y"
                                {
					PrepareStmt *n = makeNode(PrepareStmt);
					n->name = (yyvsp[-3].str);
					n->argtypes = (yyvsp[-2].list);
					n->query = (yyvsp[0].node);
					(yyval.node) = (Node *) n;
				}
#line 41161 "gram.cpp"
    break;

  case 1594: /* prep_type_clause: '(' type_list ')'  */
#line 11614 "gram.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 41167 "gram.cpp"
    break;

  case 1595: /* prep_type_clause: %empty  */
#line 11615 "gram.y"
                                                                        { (yyval.list) = NIL; }
#line 41173 "gram.cpp"
    break;

  case 1600: /* ExecuteStmt: EXECUTE name execute_param_clause  */
#line 11633 "gram.y"
                                {
					ExecuteStmt *n = makeNode(ExecuteStmt);
					n->name = (yyvsp[-1].str);
					n->params = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 41184 "gram.cpp"
    break;

  case 1601: /* ExecuteStmt: CREATE OptTemp TABLE create_as_target AS EXECUTE name execute_param_clause opt_with_data  */
#line 11641 "gram.y"
                                {
					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
					ExecuteStmt *n = makeNode(ExecuteStmt);
					n->name = (yyvsp[-2].str);
					n->params = (yyvsp[-1].list);
					ctas->query = (Node *) n;
					ctas->into = (yyvsp[-5].into);
					ctas->relkind = OBJECT_TABLE;
					ctas->is_select_into = false;
					/* cram additional flags into the IntoClause */
					(yyvsp[-5].into)->rel->relpersistence = (yyvsp[-7].ival);
					(yyvsp[-5].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (Node *) ctas;
				}
#line 41203 "gram.cpp"
    break;

  case 1602: /* execute_param_clause: '(' expr_list ')'  */
#line 11657 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 41209 "gram.cpp"
    break;

  case 1603: /* execute_param_clause: %empty  */
#line 11658 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 41215 "gram.cpp"
    break;

  case 1604: /* DeallocateStmt: DEALLOCATE name  */
#line 11669 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = (yyvsp[0].str);
						(yyval.node) = (Node *) n;
					}
#line 41225 "gram.cpp"
    break;

  case 1605: /* DeallocateStmt: DEALLOCATE PREPARE name  */
#line 11675 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = (yyvsp[0].str);
						(yyval.node) = (Node *) n;
					}
#line 41235 "gram.cpp"
    break;

  case 1606: /* DeallocateStmt: DEALLOCATE ALL  */
#line 11681 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = NULL;
						(yyval.node) = (Node *) n;
					}
#line 41245 "gram.cpp"
    break;

  case 1607: /* DeallocateStmt: DEALLOCATE PREPARE ALL  */
#line 11687 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = NULL;
						(yyval.node) = (Node *) n;
					}
#line 41255 "gram.cpp"
    break;

  case 1608: /* cdb_string_list: cdb_string  */
#line 11702 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 41261 "gram.cpp"
    break;

  case 1609: /* cdb_string_list: cdb_string_list ',' cdb_string  */
#line 11704 "gram.y"
                                {
					if (list_member((yyvsp[-2].list), (yyvsp[0].node)))
						ereport(ERROR,
								errcode(ERRCODE_INVALID_TABLE_DEFINITION),
								 errmsg("duplicate location uri"),
								 parser_errposition((yylsp[0])));
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 41274 "gram.cpp"
    break;

  case 1610: /* cdb_string: Sconst  */
#line 11717 "gram.y"
                                {
					(yyval.node) = (Node *) makeString((yyvsp[0].str));
				}
#line 41282 "gram.cpp"
    break;

  case 1611: /* InsertStmt: opt_with_clause INSERT INTO relation_expr_opt_alias insert_rest returning_clause  */
#line 11731 "gram.y"
                                {
					(yyvsp[-1].istmt)->relation = (yyvsp[-2].range);
					(yyvsp[-1].istmt)->returningList = (yyvsp[0].list);
					(yyvsp[-1].istmt)->withClause = (yyvsp[-5].with);
					(yyval.node) = (Node *) (yyvsp[-1].istmt);
				}
#line 41293 "gram.cpp"
    break;

  case 1612: /* insert_rest: SelectStmt  */
#line 11741 "gram.y"
                                {
					(yyval.istmt) = makeNode(InsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 41303 "gram.cpp"
    break;

  case 1613: /* insert_rest: '(' insert_column_list ')' SelectStmt  */
#line 11747 "gram.y"
                                {
					(yyval.istmt) = makeNode(InsertStmt);
					(yyval.istmt)->cols = (yyvsp[-2].list);
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 41313 "gram.cpp"
    break;

  case 1614: /* insert_rest: DEFAULT VALUES  */
#line 11753 "gram.y"
                                {
					(yyval.istmt) = makeNode(InsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				}
#line 41323 "gram.cpp"
    break;

  case 1615: /* insert_column_list: insert_column_item  */
#line 11762 "gram.y"
                                        { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 41329 "gram.cpp"
    break;

  case 1616: /* insert_column_list: insert_column_list ',' insert_column_item  */
#line 11764 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 41335 "gram.cpp"
    break;

  case 1617: /* insert_column_item: ColId opt_indirection  */
#line 11769 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[-1].str);
					(yyval.target)->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[-1]);
				}
#line 41347 "gram.cpp"
    break;

  case 1618: /* returning_clause: RETURNING target_list  */
#line 11779 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 41353 "gram.cpp"
    break;

  case 1619: /* returning_clause: %empty  */
#line 11780 "gram.y"
                                                                { (yyval.list) = NIL; }
#line 41359 "gram.cpp"
    break;

  case 1620: /* DeleteStmt: opt_with_clause DELETE_P FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause  */
#line 11793 "gram.y"
                                {
					DeleteStmt *n = makeNode(DeleteStmt);
					n->relation = (yyvsp[-3].range);
					n->usingClause = (yyvsp[-2].list);
					n->whereClause = (yyvsp[-1].node);
					n->returningList = (yyvsp[0].list);
					n->withClause = (yyvsp[-6].with);
					(yyval.node) = (Node *)n;
				}
#line 41373 "gram.cpp"
    break;

  case 1621: /* using_clause: USING from_list  */
#line 11805 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 41379 "gram.cpp"
    break;

  case 1622: /* using_clause: %empty  */
#line 11806 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 41385 "gram.cpp"
    break;

  case 1623: /* LockStmt: LOCK_P opt_table relation_expr_list opt_lock opt_nowait opt_masteronly  */
#line 11818 "gram.y"
                                {
					LockStmt *n = makeNode(LockStmt);

					n->relations = (yyvsp[-3].list);
					n->mode = (yyvsp[-2].ival);
					n->nowait = (yyvsp[-1].boolean);
					n->masteronly = (yyvsp[0].boolean);
					if (n->masteronly && n->mode != AccessShareLock)
					{
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								errmsg("provided lock mode is not supported for MASTER ONLY"),
							 	errhint("Only ACCESS SHARE mode is supported for MASTER ONLY."),
								parser_errposition((yylsp[-2])));
					}
					(yyval.node) = (Node *)n;
				}
#line 41407 "gram.cpp"
    break;

  case 1624: /* opt_lock: IN_P lock_type MODE  */
#line 11837 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-1].ival); }
#line 41413 "gram.cpp"
    break;

  case 1625: /* opt_lock: %empty  */
#line 11838 "gram.y"
                                                                                { (yyval.ival) = AccessExclusiveLock; }
#line 41419 "gram.cpp"
    break;

  case 1626: /* lock_type: ACCESS SHARE  */
#line 11841 "gram.y"
                                                                { (yyval.ival) = AccessShareLock; }
#line 41425 "gram.cpp"
    break;

  case 1627: /* lock_type: ROW SHARE  */
#line 11842 "gram.y"
                                                                                { (yyval.ival) = RowShareLock; }
#line 41431 "gram.cpp"
    break;

  case 1628: /* lock_type: ROW EXCLUSIVE  */
#line 11843 "gram.y"
                                                                        { (yyval.ival) = RowExclusiveLock; }
#line 41437 "gram.cpp"
    break;

  case 1629: /* lock_type: SHARE UPDATE EXCLUSIVE  */
#line 11844 "gram.y"
                                                                { (yyval.ival) = ShareUpdateExclusiveLock; }
#line 41443 "gram.cpp"
    break;

  case 1630: /* lock_type: SHARE  */
#line 11845 "gram.y"
                                                                                { (yyval.ival) = ShareLock; }
#line 41449 "gram.cpp"
    break;

  case 1631: /* lock_type: SHARE ROW EXCLUSIVE  */
#line 11846 "gram.y"
                                                                { (yyval.ival) = ShareRowExclusiveLock; }
#line 41455 "gram.cpp"
    break;

  case 1632: /* lock_type: EXCLUSIVE  */
#line 11847 "gram.y"
                                                                                { (yyval.ival) = ExclusiveLock; }
#line 41461 "gram.cpp"
    break;

  case 1633: /* lock_type: ACCESS EXCLUSIVE  */
#line 11848 "gram.y"
                                                                        { (yyval.ival) = AccessExclusiveLock; }
#line 41467 "gram.cpp"
    break;

  case 1634: /* opt_nowait: NOWAIT  */
#line 11851 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 41473 "gram.cpp"
    break;

  case 1635: /* opt_nowait: %empty  */
#line 11852 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 41479 "gram.cpp"
    break;

  case 1636: /* opt_masteronly: MASTER ONLY  */
#line 11855 "gram.y"
                                                                { (yyval.boolean) = true; }
#line 41485 "gram.cpp"
    break;

  case 1637: /* opt_masteronly: %empty  */
#line 11856 "gram.y"
                                                                                { (yyval.boolean) = false; }
#line 41491 "gram.cpp"
    break;

  case 1638: /* UpdateStmt: opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list from_clause where_or_current_clause returning_clause  */
#line 11871 "gram.y"
                                {
					UpdateStmt *n = makeNode(UpdateStmt);
					n->relation = (yyvsp[-5].range);
					n->targetList = (yyvsp[-3].list);
					n->fromClause = (yyvsp[-2].list);
					n->whereClause = (yyvsp[-1].node);
					n->returningList = (yyvsp[0].list);
					n->withClause = (yyvsp[-7].with);
					(yyval.node) = (Node *)n;
				}
#line 41506 "gram.cpp"
    break;

  case 1639: /* set_clause_list: set_clause  */
#line 11884 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 41512 "gram.cpp"
    break;

  case 1640: /* set_clause_list: set_clause_list ',' set_clause  */
#line 11885 "gram.y"
                                                                { (yyval.list) = list_concat((yyvsp[-2].list),(yyvsp[0].list)); }
#line 41518 "gram.cpp"
    break;

  case 1641: /* set_clause: single_set_clause  */
#line 11889 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 41524 "gram.cpp"
    break;

  case 1642: /* set_clause: multiple_set_clause  */
#line 11890 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 41530 "gram.cpp"
    break;

  case 1643: /* single_set_clause: set_target '=' ctext_expr  */
#line 11895 "gram.y"
                                {
					(yyval.target) = (yyvsp[-2].target);
					(yyval.target)->val = (Node *) (yyvsp[0].node);
				}
#line 41539 "gram.cpp"
    break;

  case 1644: /* multiple_set_clause: '(' set_target_list ')' '=' ctext_row  */
#line 11903 "gram.y"
                                {
					ListCell *col_cell;
					ListCell *val_cell;

					/*
					 * Break the ctext_row apart, merge individual expressions
					 * into the destination ResTargets.  XXX this approach
					 * cannot work for general row expressions as sources.
					 */
					if (list_length((yyvsp[-3].list)) != list_length((yyvsp[0].list)))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("number of columns does not match number of values"),
								 parser_errposition((yylsp[-4])));
					forboth(col_cell, (yyvsp[-3].list), val_cell, (yyvsp[0].list))
					{
						ResTarget *res_col = (ResTarget *) lfirst(col_cell);
						Node *res_val = (Node *) lfirst(val_cell);

						res_col->val = res_val;
					}

					(yyval.list) = (yyvsp[-3].list);
				}
#line 41568 "gram.cpp"
    break;

  case 1645: /* set_target: ColId opt_indirection  */
#line 11931 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[-1].str);
					(yyval.target)->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[-1]);
				}
#line 41580 "gram.cpp"
    break;

  case 1646: /* set_target_list: set_target  */
#line 11941 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 41586 "gram.cpp"
    break;

  case 1647: /* set_target_list: set_target_list ',' set_target  */
#line 11942 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list),(yyvsp[0].target)); }
#line 41592 "gram.cpp"
    break;

  case 1648: /* DeclareCursorStmt: DECLARE cursor_name cursor_options CURSOR opt_hold FOR SelectStmt  */
#line 11953 "gram.y"
                                {
					DeclareCursorStmt *n = makeNode(DeclareCursorStmt);
					n->portalname = (yyvsp[-5].str);
					/* currently we always set FAST_PLAN option */
					n->options = (yyvsp[-4].ival) | (yyvsp[-2].ival) | CURSOR_OPT_FAST_PLAN;
					n->query = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 41605 "gram.cpp"
    break;

  case 1649: /* cursor_name: name  */
#line 11963 "gram.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 41611 "gram.cpp"
    break;

  case 1650: /* cursor_options: %empty  */
#line 11966 "gram.y"
                                                                { (yyval.ival) = 0; }
#line 41617 "gram.cpp"
    break;

  case 1651: /* cursor_options: cursor_options NO SCROLL  */
#line 11967 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-2].ival) | CURSOR_OPT_NO_SCROLL; }
#line 41623 "gram.cpp"
    break;

  case 1652: /* cursor_options: cursor_options SCROLL  */
#line 11968 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_SCROLL; }
#line 41629 "gram.cpp"
    break;

  case 1653: /* cursor_options: cursor_options BINARY  */
#line 11969 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_BINARY; }
#line 41635 "gram.cpp"
    break;

  case 1654: /* cursor_options: cursor_options INSENSITIVE  */
#line 11970 "gram.y"
                                                        { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_INSENSITIVE; }
#line 41641 "gram.cpp"
    break;

  case 1655: /* cursor_options: cursor_options PARALLEL RETRIEVE  */
#line 11971 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-2].ival) | CURSOR_OPT_PARALLEL_RETRIEVE; }
#line 41647 "gram.cpp"
    break;

  case 1656: /* opt_hold: %empty  */
#line 11974 "gram.y"
                                                                { (yyval.ival) = 0; }
#line 41653 "gram.cpp"
    break;

  case 1657: /* opt_hold: WITH HOLD  */
#line 11975 "gram.y"
                                                                                { (yyval.ival) = CURSOR_OPT_HOLD; }
#line 41659 "gram.cpp"
    break;

  case 1658: /* opt_hold: WITHOUT HOLD  */
#line 11976 "gram.y"
                                                                        { (yyval.ival) = 0; }
#line 41665 "gram.cpp"
    break;

  case 1661: /* RetrieveStmt: RETRIEVE SignedIconst FROM ENDPOINT name  */
#line 12030 "gram.y"
                                {
					RetrieveStmt *n = makeNode(RetrieveStmt);
					n->endpoint_name = (yyvsp[0].str);
					n->count = (yyvsp[-3].ival);
					(yyval.node) = (Node *)n;
				}
#line 41676 "gram.cpp"
    break;

  case 1662: /* RetrieveStmt: RETRIEVE ALL FROM ENDPOINT name  */
#line 12037 "gram.y"
                                {
					RetrieveStmt *n = makeNode(RetrieveStmt);
					n->endpoint_name = (yyvsp[0].str);
					n->count = -1;
					n->is_all = true;
					(yyval.node) = (Node *)n;
				}
#line 41688 "gram.cpp"
    break;

  case 1663: /* select_with_parens: '(' select_no_parens ')'  */
#line 12047 "gram.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 41694 "gram.cpp"
    break;

  case 1664: /* select_with_parens: '(' select_with_parens ')'  */
#line 12048 "gram.y"
                                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 41700 "gram.cpp"
    break;

  case 1665: /* select_no_parens: simple_select  */
#line 12063 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 41706 "gram.cpp"
    break;

  case 1666: /* select_no_parens: select_clause sort_clause  */
#line 12065 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-1].node), (yyvsp[0].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-1].node);
				}
#line 41717 "gram.cpp"
    break;

  case 1667: /* select_no_parens: select_clause opt_sort_clause for_locking_clause opt_select_limit  */
#line 12072 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[-1].list),
										list_nth((yyvsp[0].list), 0), list_nth((yyvsp[0].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41729 "gram.cpp"
    break;

  case 1668: /* select_no_parens: select_clause opt_sort_clause select_limit opt_for_locking_clause  */
#line 12080 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[0].list),
										list_nth((yyvsp[-1].list), 0), list_nth((yyvsp[-1].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41741 "gram.cpp"
    break;

  case 1669: /* select_no_parens: with_clause select_clause  */
#line 12088 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[0].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[-1].with),
										yyscanner);
					(yyval.node) = (yyvsp[0].node);
				}
#line 41753 "gram.cpp"
    break;

  case 1670: /* select_no_parens: with_clause select_clause sort_clause  */
#line 12096 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-1].node), (yyvsp[0].list), NIL,
										NULL, NULL,
										(yyvsp[-2].with),
										yyscanner);
					(yyval.node) = (yyvsp[-1].node);
				}
#line 41765 "gram.cpp"
    break;

  case 1671: /* select_no_parens: with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit  */
#line 12104 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[-1].list),
										list_nth((yyvsp[0].list), 0), list_nth((yyvsp[0].list), 1),
										(yyvsp[-4].with),
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41777 "gram.cpp"
    break;

  case 1672: /* select_no_parens: with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause  */
#line 12112 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[0].list),
										list_nth((yyvsp[-1].list), 0), list_nth((yyvsp[-1].list), 1),
										(yyvsp[-4].with),
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41789 "gram.cpp"
    break;

  case 1673: /* select_clause: simple_select  */
#line 12122 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 41795 "gram.cpp"
    break;

  case 1674: /* select_clause: select_with_parens  */
#line 12123 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 41801 "gram.cpp"
    break;

  case 1675: /* simple_select: SELECT opt_distinct opt_target_list into_clause from_clause where_clause group_clause having_clause window_clause  */
#line 12153 "gram.y"
                                {
					SelectStmt *n = makeNode(SelectStmt);
					n->distinctClause = (yyvsp[-7].list);
					n->targetList = (yyvsp[-6].list);
					n->intoClause = (yyvsp[-5].into);
					n->fromClause = (yyvsp[-4].list);
					n->whereClause = (yyvsp[-3].node);
					n->groupClause = (yyvsp[-2].list);
					n->havingClause = (yyvsp[-1].node);
					n->windowClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 41818 "gram.cpp"
    break;

  case 1676: /* simple_select: values_clause  */
#line 12165 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 41824 "gram.cpp"
    break;

  case 1677: /* simple_select: TABLE relation_expr  */
#line 12167 "gram.y"
                                {
					/* same as SELECT * FROM relation_expr */
					ColumnRef *cr = makeNode(ColumnRef);
					ResTarget *rt = makeNode(ResTarget);
					SelectStmt *n = makeNode(SelectStmt);

					cr->fields = list_make1(makeNode(A_Star));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (Node *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[0].range));
					(yyval.node) = (Node *)n;
				}
#line 41847 "gram.cpp"
    break;

  case 1678: /* simple_select: select_clause UNION opt_all select_clause  */
#line 12186 "gram.y"
                                {
					(yyval.node) = makeSetOp(SETOP_UNION, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 41855 "gram.cpp"
    break;

  case 1679: /* simple_select: select_clause INTERSECT opt_all select_clause  */
#line 12190 "gram.y"
                                {
					(yyval.node) = makeSetOp(SETOP_INTERSECT, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 41863 "gram.cpp"
    break;

  case 1680: /* simple_select: select_clause EXCEPT opt_all select_clause  */
#line 12194 "gram.y"
                                {
					(yyval.node) = makeSetOp(SETOP_EXCEPT, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 41871 "gram.cpp"
    break;

  case 1681: /* with_clause: WITH cte_list  */
#line 12209 "gram.y"
                        {
				(yyval.with) = makeNode(WithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[-1]);
			}
#line 41882 "gram.cpp"
    break;

  case 1682: /* with_clause: WITH RECURSIVE cte_list  */
#line 12216 "gram.y"
                        {
				(yyval.with) = makeNode(WithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[-2]);
			}
#line 41893 "gram.cpp"
    break;

  case 1683: /* cte_list: common_table_expr  */
#line 12225 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 41899 "gram.cpp"
    break;

  case 1684: /* cte_list: cte_list ',' common_table_expr  */
#line 12226 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 41905 "gram.cpp"
    break;

  case 1685: /* common_table_expr: name opt_name_list AS '(' PreparableStmt ')'  */
#line 12230 "gram.y"
                        {
				CommonTableExpr *n = makeNode(CommonTableExpr);
				n->ctename = (yyvsp[-5].str);
				n->aliascolnames = (yyvsp[-4].list);
				n->ctequery = (yyvsp[-1].node);
				n->location = (yylsp[-5]);
				(yyval.node) = (Node *) n;
			}
#line 41918 "gram.cpp"
    break;

  case 1686: /* opt_with_clause: with_clause  */
#line 12241 "gram.y"
                                                                                        { (yyval.with) = (yyvsp[0].with); }
#line 41924 "gram.cpp"
    break;

  case 1687: /* opt_with_clause: %empty  */
#line 12242 "gram.y"
                                                                                        { (yyval.with) = NULL; }
#line 41930 "gram.cpp"
    break;

  case 1688: /* into_clause: INTO OptTempTableName  */
#line 12247 "gram.y"
                                {
					(yyval.into) = makeNode(IntoClause);
					(yyval.into)->rel = (yyvsp[0].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = ONCOMMIT_NOOP;
					(yyval.into)->tableSpaceName = NULL;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				}
#line 41945 "gram.cpp"
    break;

  case 1689: /* into_clause: %empty  */
#line 12258 "gram.y"
                                { (yyval.into) = NULL; }
#line 41951 "gram.cpp"
    break;

  case 1690: /* OptTempTableName: TEMPORARY opt_table qualified_name  */
#line 12267 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41960 "gram.cpp"
    break;

  case 1691: /* OptTempTableName: TEMP opt_table qualified_name  */
#line 12272 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41969 "gram.cpp"
    break;

  case 1692: /* OptTempTableName: LOCAL TEMPORARY opt_table qualified_name  */
#line 12277 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41978 "gram.cpp"
    break;

  case 1693: /* OptTempTableName: LOCAL TEMP opt_table qualified_name  */
#line 12282 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41987 "gram.cpp"
    break;

  case 1694: /* OptTempTableName: GLOBAL TEMPORARY opt_table qualified_name  */
#line 12287 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-3])));
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41999 "gram.cpp"
    break;

  case 1695: /* OptTempTableName: GLOBAL TEMP opt_table qualified_name  */
#line 12295 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-3])));
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 42011 "gram.cpp"
    break;

  case 1696: /* OptTempTableName: UNLOGGED opt_table qualified_name  */
#line 12303 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_UNLOGGED;
				}
#line 42020 "gram.cpp"
    break;

  case 1697: /* OptTempTableName: TABLE qualified_name  */
#line 12308 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				}
#line 42029 "gram.cpp"
    break;

  case 1698: /* OptTempTableName: qualified_name  */
#line 12313 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				}
#line 42038 "gram.cpp"
    break;

  case 1699: /* opt_table: TABLE  */
#line 12319 "gram.y"
                                                                                        {}
#line 42044 "gram.cpp"
    break;

  case 1700: /* opt_table: %empty  */
#line 12320 "gram.y"
                                                                                                {}
#line 42050 "gram.cpp"
    break;

  case 1701: /* opt_all: ALL  */
#line 12323 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 42056 "gram.cpp"
    break;

  case 1702: /* opt_all: DISTINCT  */
#line 12324 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 42062 "gram.cpp"
    break;

  case 1703: /* opt_all: %empty  */
#line 12325 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 42068 "gram.cpp"
    break;

  case 1704: /* opt_distinct: DISTINCT  */
#line 12332 "gram.y"
                                                                                                { (yyval.list) = list_make1(NIL); }
#line 42074 "gram.cpp"
    break;

  case 1705: /* opt_distinct: DISTINCT ON '(' expr_list ')'  */
#line 12333 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 42080 "gram.cpp"
    break;

  case 1706: /* opt_distinct: ALL  */
#line 12334 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42086 "gram.cpp"
    break;

  case 1707: /* opt_distinct: %empty  */
#line 12335 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42092 "gram.cpp"
    break;

  case 1708: /* opt_sort_clause: sort_clause  */
#line 12339 "gram.y"
                                                                                                { (yyval.list) = (yyvsp[0].list);}
#line 42098 "gram.cpp"
    break;

  case 1709: /* opt_sort_clause: %empty  */
#line 12340 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42104 "gram.cpp"
    break;

  case 1710: /* sort_clause: ORDER BY sortby_list  */
#line 12344 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42110 "gram.cpp"
    break;

  case 1711: /* sortby_list: sortby  */
#line 12348 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].sortby)); }
#line 42116 "gram.cpp"
    break;

  case 1712: /* sortby_list: sortby_list ',' sortby  */
#line 12349 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].sortby)); }
#line 42122 "gram.cpp"
    break;

  case 1713: /* sortby: a_expr USING qual_all_Op opt_nulls_order  */
#line 12353 "gram.y"
                                {
					(yyval.sortby) = makeNode(SortBy);
					(yyval.sortby)->node = (yyvsp[-3].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = static_cast<SortByNulls>((yyvsp[0].ival));
					(yyval.sortby)->useOp = (yyvsp[-1].list);
					(yyval.sortby)->location = (yylsp[-1]);
				}
#line 42135 "gram.cpp"
    break;

  case 1714: /* sortby: a_expr opt_asc_desc opt_nulls_order  */
#line 12362 "gram.y"
                                {
					(yyval.sortby) = makeNode(SortBy);
					(yyval.sortby)->node = (yyvsp[-2].node);
					(yyval.sortby)->sortby_dir = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.sortby)->sortby_nulls = static_cast<SortByNulls>((yyvsp[0].ival));
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				}
#line 42148 "gram.cpp"
    break;

  case 1715: /* select_limit: limit_clause offset_clause  */
#line 12374 "gram.y"
                                                                        { (yyval.list) = list_make2((yyvsp[0].node), (yyvsp[-1].node)); }
#line 42154 "gram.cpp"
    break;

  case 1716: /* select_limit: offset_clause limit_clause  */
#line 12375 "gram.y"
                                                                { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].node)); }
#line 42160 "gram.cpp"
    break;

  case 1717: /* select_limit: limit_clause  */
#line 12376 "gram.y"
                                                                                { (yyval.list) = list_make2(NULL, (yyvsp[0].node)); }
#line 42166 "gram.cpp"
    break;

  case 1718: /* select_limit: offset_clause  */
#line 12377 "gram.y"
                                                                                { (yyval.list) = list_make2((yyvsp[0].node), NULL); }
#line 42172 "gram.cpp"
    break;

  case 1719: /* opt_select_limit: select_limit  */
#line 12381 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42178 "gram.cpp"
    break;

  case 1720: /* opt_select_limit: %empty  */
#line 12382 "gram.y"
                                                                                { (yyval.list) = list_make2(NULL,NULL); }
#line 42184 "gram.cpp"
    break;

  case 1721: /* limit_clause: LIMIT select_limit_value  */
#line 12387 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 42190 "gram.cpp"
    break;

  case 1722: /* limit_clause: LIMIT select_limit_value ',' select_offset_value  */
#line 12389 "gram.y"
                                {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							errcode(ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[-3])));
				}
#line 42203 "gram.cpp"
    break;

  case 1723: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows ONLY  */
#line 12405 "gram.y"
                                { (yyval.node) = (yyvsp[-2].node); }
#line 42209 "gram.cpp"
    break;

  case 1724: /* limit_clause: FETCH first_or_next row_or_rows ONLY  */
#line 12407 "gram.y"
                                { (yyval.node) = makeIntConst(1, -1); }
#line 42215 "gram.cpp"
    break;

  case 1725: /* offset_clause: OFFSET select_offset_value  */
#line 12412 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 42221 "gram.cpp"
    break;

  case 1726: /* offset_clause: OFFSET select_fetch_first_value row_or_rows  */
#line 12415 "gram.y"
                                { (yyval.node) = (yyvsp[-1].node); }
#line 42227 "gram.cpp"
    break;

  case 1727: /* select_limit_value: a_expr  */
#line 12419 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42233 "gram.cpp"
    break;

  case 1728: /* select_limit_value: ALL  */
#line 12421 "gram.y"
                                {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[0]));
				}
#line 42242 "gram.cpp"
    break;

  case 1729: /* select_offset_value: a_expr  */
#line 12428 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42248 "gram.cpp"
    break;

  case 1730: /* select_fetch_first_value: c_expr  */
#line 12448 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42254 "gram.cpp"
    break;

  case 1731: /* select_fetch_first_value: '+' I_or_F_const  */
#line 12450 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 42260 "gram.cpp"
    break;

  case 1732: /* select_fetch_first_value: '-' I_or_F_const  */
#line 12452 "gram.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 42266 "gram.cpp"
    break;

  case 1733: /* I_or_F_const: Iconst  */
#line 12456 "gram.y"
                                                                                                { (yyval.node) = makeIntConst((yyvsp[0].ival),(yylsp[0])); }
#line 42272 "gram.cpp"
    break;

  case 1734: /* I_or_F_const: FCONST  */
#line 12457 "gram.y"
                                                                                                { (yyval.node) = makeFloatConst((yyvsp[0].str),(yylsp[0])); }
#line 42278 "gram.cpp"
    break;

  case 1735: /* row_or_rows: ROW  */
#line 12461 "gram.y"
                                                                                        { (yyval.ival) = 0; }
#line 42284 "gram.cpp"
    break;

  case 1736: /* row_or_rows: ROWS  */
#line 12462 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 42290 "gram.cpp"
    break;

  case 1737: /* first_or_next: FIRST_P  */
#line 12465 "gram.y"
                                                                                { (yyval.ival) = 0; }
#line 42296 "gram.cpp"
    break;

  case 1738: /* first_or_next: NEXT  */
#line 12466 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 42302 "gram.cpp"
    break;

  case 1739: /* group_clause: GROUP_P BY group_elem_list  */
#line 12471 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42308 "gram.cpp"
    break;

  case 1740: /* group_clause: %empty  */
#line 12472 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42314 "gram.cpp"
    break;

  case 1741: /* group_elem_list: group_elem  */
#line 12476 "gram.y"
                                                      { (yyval.list) = (yyvsp[0].list); }
#line 42320 "gram.cpp"
    break;

  case 1742: /* group_elem_list: group_elem_list ',' group_elem  */
#line 12477 "gram.y"
                                                        { (yyval.list) = list_concat((yyvsp[-2].list), (yyvsp[0].list)); }
#line 42326 "gram.cpp"
    break;

  case 1743: /* group_elem: a_expr  */
#line 12481 "gram.y"
                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 42332 "gram.cpp"
    break;

  case 1744: /* group_elem: ROLLUP '(' expr_list ')'  */
#line 12483 "gram.y"
                {
					GroupingClause *n = makeNode(GroupingClause);
					n->groupType = GROUPINGTYPE_ROLLUP;
					n->groupsets = (yyvsp[-1].list);
					n->location = (yylsp[-3]);
					(yyval.list) = list_make1 ((Node*)n);
				}
#line 42344 "gram.cpp"
    break;

  case 1745: /* group_elem: CUBE '(' expr_list ')'  */
#line 12491 "gram.y"
                {
					GroupingClause *n = makeNode(GroupingClause);
					n->groupType = GROUPINGTYPE_CUBE;
					n->groupsets = (yyvsp[-1].list);
					n->location = (yylsp[-3]);
					(yyval.list) = list_make1 ((Node*)n);
				}
#line 42356 "gram.cpp"
    break;

  case 1746: /* group_elem: GROUPING SETS '(' group_elem_list ')'  */
#line 12499 "gram.y"
                {
					GroupingClause *n = makeNode(GroupingClause);
					n->groupType = GROUPINGTYPE_GROUPING_SETS;
					n->groupsets = (yyvsp[-1].list);
					n->location = (yylsp[-4]);
					(yyval.list) = list_make1 ((Node*)n);
				}
#line 42368 "gram.cpp"
    break;

  case 1747: /* group_elem: '(' ')'  */
#line 12507 "gram.y"
                { (yyval.list) = list_make1(NIL); }
#line 42374 "gram.cpp"
    break;

  case 1748: /* having_clause: HAVING a_expr  */
#line 12511 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 42380 "gram.cpp"
    break;

  case 1749: /* having_clause: %empty  */
#line 12512 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 42386 "gram.cpp"
    break;

  case 1750: /* for_locking_clause: for_locking_items  */
#line 12516 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42392 "gram.cpp"
    break;

  case 1751: /* for_locking_clause: FOR READ ONLY  */
#line 12517 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42398 "gram.cpp"
    break;

  case 1752: /* opt_for_locking_clause: for_locking_clause  */
#line 12521 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42404 "gram.cpp"
    break;

  case 1753: /* opt_for_locking_clause: %empty  */
#line 12522 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42410 "gram.cpp"
    break;

  case 1754: /* for_locking_items: for_locking_item  */
#line 12526 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 42416 "gram.cpp"
    break;

  case 1755: /* for_locking_items: for_locking_items for_locking_item  */
#line 12527 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 42422 "gram.cpp"
    break;

  case 1756: /* for_locking_item: for_locking_strength locked_rels_list opt_nowait  */
#line 12532 "gram.y"
                                {
					LockingClause *n = makeNode(LockingClause);
					n->lockedRels = (yyvsp[-1].list);
					n->strength = static_cast<LockClauseStrength>((yyvsp[-2].ival));
					n->noWait = (yyvsp[0].boolean);
					(yyval.node) = (Node *) n;
				}
#line 42434 "gram.cpp"
    break;

  case 1757: /* for_locking_strength: FOR UPDATE  */
#line 12542 "gram.y"
                                                                                        { (yyval.ival) = LCS_FORUPDATE; }
#line 42440 "gram.cpp"
    break;

  case 1758: /* for_locking_strength: FOR NO KEY UPDATE  */
#line 12543 "gram.y"
                                                                        { (yyval.ival) = LCS_FORNOKEYUPDATE; }
#line 42446 "gram.cpp"
    break;

  case 1759: /* for_locking_strength: FOR SHARE  */
#line 12544 "gram.y"
                                                                                { (yyval.ival) = LCS_FORSHARE; }
#line 42452 "gram.cpp"
    break;

  case 1760: /* for_locking_strength: FOR KEY SHARE  */
#line 12545 "gram.y"
                                                                                { (yyval.ival) = LCS_FORKEYSHARE; }
#line 42458 "gram.cpp"
    break;

  case 1761: /* locked_rels_list: OF qualified_name_list  */
#line 12549 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42464 "gram.cpp"
    break;

  case 1762: /* locked_rels_list: %empty  */
#line 12550 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42470 "gram.cpp"
    break;

  case 1763: /* values_clause: VALUES ctext_row  */
#line 12556 "gram.y"
                                {
					SelectStmt *n = makeNode(SelectStmt);
					n->valuesLists = list_make1((yyvsp[0].list));
					(yyval.node) = (Node *) n;
				}
#line 42480 "gram.cpp"
    break;

  case 1764: /* values_clause: values_clause ',' ctext_row  */
#line 12562 "gram.y"
                                {
					SelectStmt *n = (SelectStmt *) (yyvsp[-2].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[0].list));
					(yyval.node) = (Node *) n;
				}
#line 42490 "gram.cpp"
    break;

  case 1765: /* from_clause: FROM from_list  */
#line 12579 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42496 "gram.cpp"
    break;

  case 1766: /* from_clause: %empty  */
#line 12580 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42502 "gram.cpp"
    break;

  case 1767: /* from_list: table_ref  */
#line 12584 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 42508 "gram.cpp"
    break;

  case 1768: /* from_list: from_list ',' table_ref  */
#line 12585 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 42514 "gram.cpp"
    break;

  case 1769: /* table_ref: relation_expr opt_alias_clause  */
#line 12592 "gram.y"
                                {
					(yyvsp[-1].range)->alias = (yyvsp[0].alias);
					(yyval.node) = (Node *) (yyvsp[-1].range);
				}
#line 42523 "gram.cpp"
    break;

  case 1770: /* table_ref: func_table func_alias_clause  */
#line 12597 "gram.y"
                                {
					RangeFunction *n = (RangeFunction *) (yyvsp[-1].node);
					n->alias = reinterpret_cast<Alias *>(linitial((yyvsp[0].list)));
					n->coldeflist = reinterpret_cast<List *>(lsecond((yyvsp[0].list)));
					(yyval.node) = (Node *) n;
				}
#line 42534 "gram.cpp"
    break;

  case 1771: /* table_ref: LATERAL_P func_table func_alias_clause  */
#line 12604 "gram.y"
                                {
					RangeFunction *n = (RangeFunction *) (yyvsp[-1].node);
					n->lateral = true;
					n->alias =  reinterpret_cast<Alias *>(linitial((yyvsp[0].list)));
					n->coldeflist = reinterpret_cast<List *>(lsecond((yyvsp[0].list)));
					(yyval.node) = (Node *) n;
				}
#line 42546 "gram.cpp"
    break;

  case 1772: /* table_ref: select_with_parens opt_alias_clause  */
#line 12612 "gram.y"
                                {
					RangeSubselect *n = makeNode(RangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[-1].node);
					n->alias = (yyvsp[0].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[0].alias) == NULL)
					{
						if (IsA((yyvsp[-1].node), SelectStmt) &&
							((SelectStmt *) (yyvsp[-1].node))->valuesLists)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
						else
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
					}
					(yyval.node) = (Node *) n;
				}
#line 42585 "gram.cpp"
    break;

  case 1773: /* table_ref: LATERAL_P select_with_parens opt_alias_clause  */
#line 12647 "gram.y"
                                {
					RangeSubselect *n = makeNode(RangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[-1].node);
					n->alias = (yyvsp[0].alias);
					/* same comment as above */
					if ((yyvsp[0].alias) == NULL)
					{
						if (IsA((yyvsp[-1].node), SelectStmt) &&
							((SelectStmt *) (yyvsp[-1].node))->valuesLists)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
						else
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
					}
					(yyval.node) = (Node *) n;
				}
#line 42614 "gram.cpp"
    break;

  case 1774: /* table_ref: joined_table  */
#line 12672 "gram.y"
                                {
					(yyval.node) = (Node *) (yyvsp[0].jexpr);
				}
#line 42622 "gram.cpp"
    break;

  case 1775: /* table_ref: '(' joined_table ')' alias_clause  */
#line 12676 "gram.y"
                                {
					(yyvsp[-2].jexpr)->alias = (yyvsp[0].alias);
					(yyval.node) = (Node *) (yyvsp[-2].jexpr);
				}
#line 42631 "gram.cpp"
    break;

  case 1776: /* joined_table: '(' joined_table ')'  */
#line 12702 "gram.y"
                                {
					(yyval.jexpr) = (yyvsp[-1].jexpr);
				}
#line 42639 "gram.cpp"
    break;

  case 1777: /* joined_table: table_ref CROSS JOIN table_ref  */
#line 12706 "gram.y"
                                {
					/* CROSS JOIN is same as unqualified inner join */
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = JOIN_INNER;
					n->isNatural = FALSE;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				}
#line 42655 "gram.cpp"
    break;

  case 1778: /* joined_table: table_ref join_type JOIN table_ref join_qual  */
#line 12718 "gram.y"
                                {
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = (yyvsp[-3].jtype);
					n->isNatural = FALSE;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), List))
						n->usingClause = (List *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					(yyval.jexpr) = n;
				}
#line 42672 "gram.cpp"
    break;

  case 1779: /* joined_table: table_ref JOIN table_ref join_qual  */
#line 12731 "gram.y"
                                {
					/* letting join_type reduce to empty doesn't work */
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = JOIN_INNER;
					n->isNatural = FALSE;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), List))
						n->usingClause = (List *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					(yyval.jexpr) = n;
				}
#line 42690 "gram.cpp"
    break;

  case 1780: /* joined_table: table_ref NATURAL join_type JOIN table_ref  */
#line 12745 "gram.y"
                                {
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = (yyvsp[-2].jtype);
					n->isNatural = TRUE;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				}
#line 42705 "gram.cpp"
    break;

  case 1781: /* joined_table: table_ref NATURAL JOIN table_ref  */
#line 12756 "gram.y"
                                {
					/* letting join_type reduce to empty doesn't work */
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = JOIN_INNER;
					n->isNatural = TRUE;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				}
#line 42721 "gram.cpp"
    break;

  case 1782: /* alias_clause: AS ColId '(' name_list ')'  */
#line 12771 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[-3].str);
					(yyval.alias)->colnames = (yyvsp[-1].list);
				}
#line 42731 "gram.cpp"
    break;

  case 1783: /* alias_clause: AS ColId  */
#line 12777 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[0].str);
				}
#line 42740 "gram.cpp"
    break;

  case 1784: /* alias_clause: ColId '(' name_list ')'  */
#line 12782 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[-3].str);
					(yyval.alias)->colnames = (yyvsp[-1].list);
				}
#line 42750 "gram.cpp"
    break;

  case 1785: /* alias_clause: ColId  */
#line 12788 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[0].str);
				}
#line 42759 "gram.cpp"
    break;

  case 1786: /* opt_alias_clause: alias_clause  */
#line 12794 "gram.y"
                                                                        { (yyval.alias) = (yyvsp[0].alias); }
#line 42765 "gram.cpp"
    break;

  case 1787: /* opt_alias_clause: %empty  */
#line 12795 "gram.y"
                                                                                                { (yyval.alias) = NULL; }
#line 42771 "gram.cpp"
    break;

  case 1788: /* func_alias_clause: alias_clause  */
#line 12804 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[0].alias), NIL);
				}
#line 42779 "gram.cpp"
    break;

  case 1789: /* func_alias_clause: AS '(' TableFuncElementList ')'  */
#line 12808 "gram.y"
                                {
					(yyval.list) = list_make2(NULL, (yyvsp[-1].list));
				}
#line 42787 "gram.cpp"
    break;

  case 1790: /* func_alias_clause: AS ColId '(' TableFuncElementList ')'  */
#line 12812 "gram.y"
                                {
					Alias *a = makeNode(Alias);
					a->aliasname = (yyvsp[-3].str);
					(yyval.list) = list_make2(a, (yyvsp[-1].list));
				}
#line 42797 "gram.cpp"
    break;

  case 1791: /* func_alias_clause: ColId '(' TableFuncElementList ')'  */
#line 12818 "gram.y"
                                {
					Alias *a = makeNode(Alias);
					a->aliasname = (yyvsp[-3].str);
					(yyval.list) = list_make2(a, (yyvsp[-1].list));
				}
#line 42807 "gram.cpp"
    break;

  case 1792: /* func_alias_clause: %empty  */
#line 12824 "gram.y"
                                {
					(yyval.list) = list_make2(NULL, NIL);
				}
#line 42815 "gram.cpp"
    break;

  case 1793: /* join_type: FULL join_outer  */
#line 12829 "gram.y"
                                                                                { (yyval.jtype) = JOIN_FULL; }
#line 42821 "gram.cpp"
    break;

  case 1794: /* join_type: LEFT join_outer  */
#line 12830 "gram.y"
                                                                                        { (yyval.jtype) = JOIN_LEFT; }
#line 42827 "gram.cpp"
    break;

  case 1795: /* join_type: RIGHT join_outer  */
#line 12831 "gram.y"
                                                                                        { (yyval.jtype) = JOIN_RIGHT; }
#line 42833 "gram.cpp"
    break;

  case 1796: /* join_type: INNER_P  */
#line 12832 "gram.y"
                                                                                                { (yyval.jtype) = JOIN_INNER; }
#line 42839 "gram.cpp"
    break;

  case 1797: /* join_outer: OUTER_P  */
#line 12836 "gram.y"
                                                                                        { (yyval.node) = NULL; }
#line 42845 "gram.cpp"
    break;

  case 1798: /* join_outer: %empty  */
#line 12837 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 42851 "gram.cpp"
    break;

  case 1799: /* join_qual: USING '(' name_list ')'  */
#line 12849 "gram.y"
                                                                        { (yyval.node) = (Node *) (yyvsp[-1].list); }
#line 42857 "gram.cpp"
    break;

  case 1800: /* join_qual: ON a_expr  */
#line 12850 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42863 "gram.cpp"
    break;

  case 1801: /* relation_expr: qualified_name  */
#line 12856 "gram.y"
                                {
					/* default inheritance */
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->inhOpt = INH_DEFAULT;
					(yyval.range)->alias = NULL;
				}
#line 42874 "gram.cpp"
    break;

  case 1802: /* relation_expr: qualified_name '*'  */
#line 12863 "gram.y"
                                {
					/* inheritance query */
					(yyval.range) = (yyvsp[-1].range);
					(yyval.range)->inhOpt = INH_YES;
					(yyval.range)->alias = NULL;
				}
#line 42885 "gram.cpp"
    break;

  case 1803: /* relation_expr: ONLY qualified_name  */
#line 12870 "gram.y"
                                {
					/* no inheritance */
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->inhOpt = INH_NO;
					(yyval.range)->alias = NULL;
				}
#line 42896 "gram.cpp"
    break;

  case 1804: /* relation_expr: ONLY '(' qualified_name ')'  */
#line 12877 "gram.y"
                                {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[-1].range);
					(yyval.range)->inhOpt = INH_NO;
					(yyval.range)->alias = NULL;
				}
#line 42907 "gram.cpp"
    break;

  case 1805: /* relation_expr_list: relation_expr  */
#line 12887 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].range)); }
#line 42913 "gram.cpp"
    break;

  case 1806: /* relation_expr_list: relation_expr_list ',' relation_expr  */
#line 12888 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
#line 42919 "gram.cpp"
    break;

  case 1807: /* relation_expr_opt_alias: relation_expr  */
#line 12902 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
				}
#line 42927 "gram.cpp"
    break;

  case 1808: /* relation_expr_opt_alias: relation_expr ColId  */
#line 12906 "gram.y"
                                {
					Alias *alias = makeNode(Alias);
					alias->aliasname = (yyvsp[0].str);
					(yyvsp[-1].range)->alias = alias;
					(yyval.range) = (yyvsp[-1].range);
				}
#line 42938 "gram.cpp"
    break;

  case 1809: /* relation_expr_opt_alias: relation_expr AS ColId  */
#line 12913 "gram.y"
                                {
					Alias *alias = makeNode(Alias);
					alias->aliasname = (yyvsp[0].str);
					(yyvsp[-2].range)->alias = alias;
					(yyval.range) = (yyvsp[-2].range);
				}
#line 42949 "gram.cpp"
    break;

  case 1810: /* func_table: func_expr_windowless opt_ordinality  */
#line 12934 "gram.y"
                                {
					RangeFunction *n = makeNode(RangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[0].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[-1].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (Node *) n;
				}
#line 42963 "gram.cpp"
    break;

  case 1811: /* func_table: ROWS FROM '(' rowsfrom_list ')' opt_ordinality  */
#line 12944 "gram.y"
                                {
					RangeFunction *n = makeNode(RangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[0].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[-2].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (Node *) n;
				}
#line 42977 "gram.cpp"
    break;

  case 1812: /* rowsfrom_item: func_expr_windowless opt_col_def_list  */
#line 12956 "gram.y"
                                { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].list)); }
#line 42983 "gram.cpp"
    break;

  case 1813: /* rowsfrom_list: rowsfrom_item  */
#line 12960 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 42989 "gram.cpp"
    break;

  case 1814: /* rowsfrom_list: rowsfrom_list ',' rowsfrom_item  */
#line 12961 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 42995 "gram.cpp"
    break;

  case 1815: /* opt_col_def_list: AS '(' TableFuncElementList ')'  */
#line 12964 "gram.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 43001 "gram.cpp"
    break;

  case 1816: /* opt_col_def_list: %empty  */
#line 12965 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 43007 "gram.cpp"
    break;

  case 1817: /* opt_ordinality: WITH_ORDINALITY  */
#line 12968 "gram.y"
                                                                        { (yyval.boolean) = true; }
#line 43013 "gram.cpp"
    break;

  case 1818: /* opt_ordinality: %empty  */
#line 12969 "gram.y"
                                                                                                { (yyval.boolean) = false; }
#line 43019 "gram.cpp"
    break;

  case 1819: /* where_clause: WHERE a_expr  */
#line 12974 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 43025 "gram.cpp"
    break;

  case 1820: /* where_clause: %empty  */
#line 12975 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 43031 "gram.cpp"
    break;

  case 1821: /* where_or_current_clause: WHERE a_expr  */
#line 12980 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 43037 "gram.cpp"
    break;

  case 1822: /* where_or_current_clause: WHERE CURRENT_P OF cursor_name  */
#line 12982 "gram.y"
                                {
					CurrentOfExpr *n = makeNode(CurrentOfExpr);
					/* cvarno is filled in by parse analysis */
					n->cursor_name = (yyvsp[0].str);
					n->cursor_param = 0;
					(yyval.node) = (Node *) n;
				}
#line 43049 "gram.cpp"
    break;

  case 1823: /* where_or_current_clause: %empty  */
#line 12989 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 43055 "gram.cpp"
    break;

  case 1824: /* OptTableFuncElementList: TableFuncElementList  */
#line 12994 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 43061 "gram.cpp"
    break;

  case 1825: /* OptTableFuncElementList: %empty  */
#line 12995 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 43067 "gram.cpp"
    break;

  case 1826: /* TableFuncElementList: TableFuncElement  */
#line 13000 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 43075 "gram.cpp"
    break;

  case 1827: /* TableFuncElementList: TableFuncElementList ',' TableFuncElement  */
#line 13004 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 43083 "gram.cpp"
    break;

  case 1828: /* TableFuncElement: ColId Typename opt_collate_clause  */
#line 13010 "gram.y"
                                {
					ColumnDef *n = makeNode(ColumnDef);
					n->colname = (yyvsp[-2].str);
					n->typeName = (yyvsp[-1].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (CollateClause *) (yyvsp[0].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *)n;
				}
#line 43105 "gram.cpp"
    break;

  case 1829: /* Typename: SimpleTypename opt_array_bounds  */
#line 13040 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
				}
#line 43114 "gram.cpp"
    break;

  case 1830: /* Typename: SETOF SimpleTypename opt_array_bounds  */
#line 13045 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
					(yyval.typnam)->setof = TRUE;
				}
#line 43124 "gram.cpp"
    break;

  case 1831: /* Typename: SimpleTypename ARRAY '[' Iconst ']'  */
#line 13052 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
				}
#line 43133 "gram.cpp"
    break;

  case 1832: /* Typename: SETOF SimpleTypename ARRAY '[' Iconst ']'  */
#line 13057 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
					(yyval.typnam)->setof = TRUE;
				}
#line 43143 "gram.cpp"
    break;

  case 1833: /* Typename: SimpleTypename ARRAY  */
#line 13063 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				}
#line 43152 "gram.cpp"
    break;

  case 1834: /* Typename: SETOF SimpleTypename ARRAY  */
#line 13068 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = TRUE;
				}
#line 43162 "gram.cpp"
    break;

  case 1835: /* NestedTypename: Typename  */
#line 13076 "gram.y"
                                                    { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43168 "gram.cpp"
    break;

  case 1836: /* NestedTypename: Typename '<' nested_type_list '>'  */
#line 13078 "gram.y"
                                {
                    (yyval.typnam) = makeNode(TypeName);
                    (yyval.typnam)->names = NIL; /* indicate nesting */
                    (yyval.typnam)->typmods = lappend(list_make1((yyvsp[-3].typnam)), (yyvsp[-1].list)); /* given types are considered typemods */
                    (yyval.typnam)->typemod = -1;
				}
#line 43179 "gram.cpp"
    break;

  case 1837: /* opt_array_bounds: opt_array_bounds '[' ']'  */
#line 13087 "gram.y"
                                        {  (yyval.list) = lappend((yyvsp[-2].list), makeInteger(-1)); }
#line 43185 "gram.cpp"
    break;

  case 1838: /* opt_array_bounds: opt_array_bounds '[' Iconst ']'  */
#line 13089 "gram.y"
                                        {  (yyval.list) = lappend((yyvsp[-3].list), makeInteger((yyvsp[-1].ival))); }
#line 43191 "gram.cpp"
    break;

  case 1839: /* opt_array_bounds: %empty  */
#line 13091 "gram.y"
                                        {  (yyval.list) = NIL; }
#line 43197 "gram.cpp"
    break;

  case 1840: /* SimpleTypename: GenericType  */
#line 13095 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43203 "gram.cpp"
    break;

  case 1841: /* SimpleTypename: Numeric  */
#line 13096 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43209 "gram.cpp"
    break;

  case 1842: /* SimpleTypename: Bit  */
#line 13097 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43215 "gram.cpp"
    break;

  case 1843: /* SimpleTypename: Character  */
#line 13098 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43221 "gram.cpp"
    break;

  case 1844: /* SimpleTypename: ConstDatetime  */
#line 13099 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43227 "gram.cpp"
    break;

  case 1845: /* SimpleTypename: ConstInterval opt_interval  */
#line 13101 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->typmods = (yyvsp[0].list);
				}
#line 43236 "gram.cpp"
    break;

  case 1846: /* SimpleTypename: ConstInterval '(' Iconst ')' opt_interval  */
#line 13106 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						if (list_length((yyvsp[0].list)) != 1)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("interval precision specified twice"),
									 parser_errposition((yylsp[-4])));
						(yyval.typnam)->typmods = lappend((yyvsp[0].list), makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					}
					else
						(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												 makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
				}
#line 43256 "gram.cpp"
    break;

  case 1847: /* ConstTypename: Numeric  */
#line 13135 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43262 "gram.cpp"
    break;

  case 1848: /* ConstTypename: ConstBit  */
#line 13136 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43268 "gram.cpp"
    break;

  case 1849: /* ConstTypename: ConstCharacter  */
#line 13137 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43274 "gram.cpp"
    break;

  case 1850: /* ConstTypename: ConstDatetime  */
#line 13138 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43280 "gram.cpp"
    break;

  case 1851: /* GenericType: type_function_name opt_type_modifiers  */
#line 13150 "gram.y"
                                {
					(yyval.typnam) = makeTypeName((yyvsp[-1].str));
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43290 "gram.cpp"
    break;

  case 1852: /* GenericType: type_function_name attrs opt_type_modifiers  */
#line 13156 "gram.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-2].str)), (yyvsp[-1].list)));
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-2]);
				}
#line 43300 "gram.cpp"
    break;

  case 1853: /* opt_type_modifiers: '(' expr_list ')'  */
#line 13163 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 43306 "gram.cpp"
    break;

  case 1854: /* opt_type_modifiers: %empty  */
#line 13164 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 43312 "gram.cpp"
    break;

  case 1855: /* Numeric: INT_P  */
#line 13171 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43321 "gram.cpp"
    break;

  case 1856: /* Numeric: INTEGER  */
#line 13176 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43330 "gram.cpp"
    break;

  case 1857: /* Numeric: SMALLINT  */
#line 13181 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43339 "gram.cpp"
    break;

  case 1858: /* Numeric: BIGINT  */
#line 13186 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int8_t");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43348 "gram.cpp"
    break;

  case 1859: /* Numeric: REAL  */
#line 13191 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43357 "gram.cpp"
    break;

  case 1860: /* Numeric: FLOAT_P opt_float  */
#line 13196 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43366 "gram.cpp"
    break;

  case 1861: /* Numeric: DOUBLE_P PRECISION  */
#line 13201 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43375 "gram.cpp"
    break;

  case 1862: /* Numeric: DECIMAL_P opt_type_modifiers  */
#line 13206 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43385 "gram.cpp"
    break;

  case 1863: /* Numeric: DEC opt_type_modifiers  */
#line 13212 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43395 "gram.cpp"
    break;

  case 1864: /* Numeric: NUMERIC opt_type_modifiers  */
#line 13218 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43405 "gram.cpp"
    break;

  case 1865: /* Numeric: BOOLEAN_P  */
#line 13224 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43414 "gram.cpp"
    break;

  case 1866: /* opt_float: '(' Iconst ')'  */
#line 13231 "gram.y"
                                {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[-1].ival) < 1)
						ereport(ERROR,
								errcode(ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[-1])));
					else if ((yyvsp[-1].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[-1].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								errcode(ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[-1])));
				}
#line 43439 "gram.cpp"
    break;

  case 1867: /* opt_float: %empty  */
#line 13252 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("float4");
				}
#line 43447 "gram.cpp"
    break;

  case 1868: /* Bit: BitWithLength  */
#line 13262 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43455 "gram.cpp"
    break;

  case 1869: /* Bit: BitWithoutLength  */
#line 13266 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43463 "gram.cpp"
    break;

  case 1870: /* ConstBit: BitWithLength  */
#line 13274 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43471 "gram.cpp"
    break;

  case 1871: /* ConstBit: BitWithoutLength  */
#line 13278 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->typmods = NIL;
				}
#line 43480 "gram.cpp"
    break;

  case 1872: /* BitWithLength: BIT opt_varying '(' expr_list ')'  */
#line 13286 "gram.y"
                                {
					char *typname;

					typname = (yyvsp[-3].boolean) ? pstrdup("varbit") : pstrdup("bit");
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[-1].list);
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43493 "gram.cpp"
    break;

  case 1873: /* BitWithoutLength: BIT opt_varying  */
#line 13298 "gram.y"
                                {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[0].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43511 "gram.cpp"
    break;

  case 1874: /* Character: CharacterWithLength  */
#line 13319 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43519 "gram.cpp"
    break;

  case 1875: /* Character: CharacterWithoutLength  */
#line 13323 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43527 "gram.cpp"
    break;

  case 1876: /* ConstCharacter: CharacterWithLength  */
#line 13329 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43535 "gram.cpp"
    break;

  case 1877: /* ConstCharacter: CharacterWithoutLength  */
#line 13333 "gram.y"
                                {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->typmods = NIL;
				}
#line 43550 "gram.cpp"
    break;

  case 1878: /* CharacterWithLength: character '(' Iconst ')' opt_charset  */
#line 13346 "gram.y"
                                {
					if (((yyvsp[0].str) != NULL) && (strcmp((yyvsp[0].str), "sql_text") != 0))
						(yyvsp[-4].str) = psprintf("%s_%s", (yyvsp[-4].str), (yyvsp[0].str));

					(yyval.typnam) = SystemTypeName((yyvsp[-4].str));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43563 "gram.cpp"
    break;

  case 1879: /* CharacterWithoutLength: character opt_charset  */
#line 13357 "gram.y"
                                {
					if (((yyvsp[0].str) != NULL) && (strcmp((yyvsp[0].str), "sql_text") != 0))
						(yyvsp[-1].str) = psprintf("%s_%s", (yyvsp[-1].str), (yyvsp[0].str));

					(yyval.typnam) = SystemTypeName((yyvsp[-1].str));

					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[-1].str), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));

					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43580 "gram.cpp"
    break;

  case 1880: /* character: CHARACTER opt_varying  */
#line 13372 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43586 "gram.cpp"
    break;

  case 1881: /* character: CHAR_P opt_varying  */
#line 13374 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43592 "gram.cpp"
    break;

  case 1882: /* character: VARCHAR  */
#line 13376 "gram.y"
                                                                                { (yyval.str) = pstrdup("varchar"); }
#line 43598 "gram.cpp"
    break;

  case 1883: /* character: NATIONAL CHARACTER opt_varying  */
#line 13378 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43604 "gram.cpp"
    break;

  case 1884: /* character: NATIONAL CHAR_P opt_varying  */
#line 13380 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43610 "gram.cpp"
    break;

  case 1885: /* character: NCHAR opt_varying  */
#line 13382 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43616 "gram.cpp"
    break;

  case 1886: /* opt_varying: VARYING  */
#line 13386 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 43622 "gram.cpp"
    break;

  case 1887: /* opt_varying: %empty  */
#line 13387 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 43628 "gram.cpp"
    break;

  case 1888: /* opt_charset: CHARACTER SET ColId  */
#line 13391 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 43634 "gram.cpp"
    break;

  case 1889: /* opt_charset: %empty  */
#line 13392 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 43640 "gram.cpp"
    break;

  case 1890: /* ConstDatetime: TIMESTAMP '(' Iconst ')' opt_timezone  */
#line 13400 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43653 "gram.cpp"
    break;

  case 1891: /* ConstDatetime: TIMESTAMP opt_timezone  */
#line 13409 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43665 "gram.cpp"
    break;

  case 1892: /* ConstDatetime: TIME '(' Iconst ')' opt_timezone  */
#line 13417 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43678 "gram.cpp"
    break;

  case 1893: /* ConstDatetime: TIME opt_timezone  */
#line 13426 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43690 "gram.cpp"
    break;

  case 1894: /* ConstInterval: INTERVAL  */
#line 13437 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43699 "gram.cpp"
    break;

  case 1895: /* opt_timezone: WITH_TIME ZONE  */
#line 13444 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 43705 "gram.cpp"
    break;

  case 1896: /* opt_timezone: WITHOUT TIME ZONE  */
#line 13445 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 43711 "gram.cpp"
    break;

  case 1897: /* opt_timezone: %empty  */
#line 13446 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 43717 "gram.cpp"
    break;

  case 1898: /* opt_interval: YEAR_P  */
#line 13451 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[0]))); }
#line 43723 "gram.cpp"
    break;

  case 1899: /* opt_interval: MONTH_P  */
#line 13453 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[0]))); }
#line 43729 "gram.cpp"
    break;

  case 1900: /* opt_interval: DAY_P  */
#line 13455 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[0]))); }
#line 43735 "gram.cpp"
    break;

  case 1901: /* opt_interval: HOUR_P  */
#line 13457 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[0]))); }
#line 43741 "gram.cpp"
    break;

  case 1902: /* opt_interval: MINUTE_P  */
#line 13459 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[0]))); }
#line 43747 "gram.cpp"
    break;

  case 1903: /* opt_interval: interval_second  */
#line 13461 "gram.y"
                                { (yyval.list) = (yyvsp[0].list); }
#line 43753 "gram.cpp"
    break;

  case 1904: /* opt_interval: YEAR_P TO MONTH_P  */
#line 13463 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[-2])));
				}
#line 43762 "gram.cpp"
    break;

  case 1905: /* opt_interval: DAY_P TO HOUR_P  */
#line 13468 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[-2])));
				}
#line 43771 "gram.cpp"
    break;

  case 1906: /* opt_interval: DAY_P TO MINUTE_P  */
#line 13473 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
				}
#line 43781 "gram.cpp"
    break;

  case 1907: /* opt_interval: DAY_P TO interval_second  */
#line 13479 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[-2]));
				}
#line 43793 "gram.cpp"
    break;

  case 1908: /* opt_interval: HOUR_P TO MINUTE_P  */
#line 13487 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
				}
#line 43802 "gram.cpp"
    break;

  case 1909: /* opt_interval: HOUR_P TO interval_second  */
#line 13492 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[-2]));
				}
#line 43813 "gram.cpp"
    break;

  case 1910: /* opt_interval: MINUTE_P TO interval_second  */
#line 13499 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[-2]));
				}
#line 43823 "gram.cpp"
    break;

  case 1911: /* opt_interval: %empty  */
#line 13505 "gram.y"
                                { (yyval.list) = NIL; }
#line 43829 "gram.cpp"
    break;

  case 1912: /* interval_second: SECOND_P  */
#line 13510 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[0])));
				}
#line 43837 "gram.cpp"
    break;

  case 1913: /* interval_second: SECOND_P '(' Iconst ')'  */
#line 13514 "gram.y"
                                {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[-3])),
									makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
				}
#line 43846 "gram.cpp"
    break;

  case 1914: /* a_expr: c_expr  */
#line 13543 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 43852 "gram.cpp"
    break;

  case 1915: /* a_expr: a_expr TYPECAST Typename  */
#line 13545 "gram.y"
                                        { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); }
#line 43858 "gram.cpp"
    break;

  case 1916: /* a_expr: a_expr COLLATE any_name  */
#line 13547 "gram.y"
                                {
					CollateClause *n = makeNode(CollateClause);
					n->arg = (yyvsp[-2].node);
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *) n;
				}
#line 43870 "gram.cpp"
    break;

  case 1917: /* a_expr: a_expr AT TIME ZONE a_expr  */
#line 13555 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[0].node), (yyvsp[-4].node)),
											   (yylsp[-3]));
				}
#line 43880 "gram.cpp"
    break;

  case 1918: /* a_expr: '+' a_expr  */
#line 13570 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 43886 "gram.cpp"
    break;

  case 1919: /* a_expr: '-' a_expr  */
#line 13572 "gram.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 43892 "gram.cpp"
    break;

  case 1920: /* a_expr: a_expr '+' a_expr  */
#line 13574 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43898 "gram.cpp"
    break;

  case 1921: /* a_expr: a_expr '-' a_expr  */
#line 13576 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43904 "gram.cpp"
    break;

  case 1922: /* a_expr: a_expr '*' a_expr  */
#line 13578 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43910 "gram.cpp"
    break;

  case 1923: /* a_expr: a_expr '/' a_expr  */
#line 13580 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43916 "gram.cpp"
    break;

  case 1924: /* a_expr: a_expr '%' a_expr  */
#line 13582 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43922 "gram.cpp"
    break;

  case 1925: /* a_expr: a_expr '^' a_expr  */
#line 13584 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43928 "gram.cpp"
    break;

  case 1926: /* a_expr: a_expr '<' a_expr  */
#line 13586 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43934 "gram.cpp"
    break;

  case 1927: /* a_expr: a_expr '>' a_expr  */
#line 13588 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43940 "gram.cpp"
    break;

  case 1928: /* a_expr: a_expr '=' a_expr  */
#line 13590 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43946 "gram.cpp"
    break;

  case 1929: /* a_expr: a_expr qual_Op a_expr  */
#line 13593 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43952 "gram.cpp"
    break;

  case 1930: /* a_expr: qual_Op a_expr  */
#line 13595 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 43958 "gram.cpp"
    break;

  case 1931: /* a_expr: a_expr qual_Op  */
#line 13597 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[0].list), (yyvsp[-1].node), NULL, (yylsp[0])); }
#line 43964 "gram.cpp"
    break;

  case 1932: /* a_expr: a_expr AND a_expr  */
#line 13600 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43970 "gram.cpp"
    break;

  case 1933: /* a_expr: a_expr OR a_expr  */
#line 13602 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43976 "gram.cpp"
    break;

  case 1934: /* a_expr: NOT a_expr  */
#line 13604 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 43982 "gram.cpp"
    break;

  case 1935: /* a_expr: a_expr LIKE a_expr  */
#line 13607 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43988 "gram.cpp"
    break;

  case 1936: /* a_expr: a_expr LIKE a_expr ESCAPE a_expr  */
#line 13609 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-3]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
				}
#line 43999 "gram.cpp"
    break;

  case 1937: /* a_expr: a_expr NOT LIKE a_expr  */
#line 13616 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2])); }
#line 44005 "gram.cpp"
    break;

  case 1938: /* a_expr: a_expr NOT LIKE a_expr ESCAPE a_expr  */
#line 13618 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
				}
#line 44016 "gram.cpp"
    break;

  case 1939: /* a_expr: a_expr ILIKE a_expr  */
#line 13625 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44022 "gram.cpp"
    break;

  case 1940: /* a_expr: a_expr ILIKE a_expr ESCAPE a_expr  */
#line 13627 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-3]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
				}
#line 44033 "gram.cpp"
    break;

  case 1941: /* a_expr: a_expr NOT ILIKE a_expr  */
#line 13634 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2])); }
#line 44039 "gram.cpp"
    break;

  case 1942: /* a_expr: a_expr NOT ILIKE a_expr ESCAPE a_expr  */
#line 13636 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
				}
#line 44050 "gram.cpp"
    break;

  case 1943: /* a_expr: a_expr SIMILAR TO a_expr  */
#line 13644 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[0].node), makeNullAConst(-1)),
											   (yylsp[-2]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[-3].node), (Node *) n, (yylsp[-2]));
				}
#line 44061 "gram.cpp"
    break;

  case 1944: /* a_expr: a_expr SIMILAR TO a_expr ESCAPE a_expr  */
#line 13651 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
				}
#line 44072 "gram.cpp"
    break;

  case 1945: /* a_expr: a_expr NOT SIMILAR TO a_expr  */
#line 13658 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[0].node), makeNullAConst(-1)),
											   (yylsp[-3]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
				}
#line 44083 "gram.cpp"
    break;

  case 1946: /* a_expr: a_expr NOT SIMILAR TO a_expr ESCAPE a_expr  */
#line 13665 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-5]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[-6].node), (Node *) n, (yylsp[-5]));
				}
#line 44094 "gram.cpp"
    break;

  case 1947: /* a_expr: a_expr IS NULL_P  */
#line 13682 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-2].node);
					n->nulltesttype = IS_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44105 "gram.cpp"
    break;

  case 1948: /* a_expr: a_expr ISNULL  */
#line 13689 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-1].node);
					n->nulltesttype = IS_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44116 "gram.cpp"
    break;

  case 1949: /* a_expr: a_expr IS NOT NULL_P  */
#line 13696 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-3].node);
					n->nulltesttype = IS_NOT_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44127 "gram.cpp"
    break;

  case 1950: /* a_expr: a_expr NOTNULL  */
#line 13703 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-1].node);
					n->nulltesttype = IS_NOT_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44138 "gram.cpp"
    break;

  case 1951: /* a_expr: row OVERLAPS row  */
#line 13710 "gram.y"
                                {
					if (list_length((yyvsp[-2].list)) != 2)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[-2])));
					if (list_length((yyvsp[0].list)) != 2)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[0])));
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[-2].list), (yyvsp[0].list)),
											   (yylsp[-1]));
				}
#line 44158 "gram.cpp"
    break;

  case 1952: /* a_expr: a_expr IS TRUE_P  */
#line 13726 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-2].node);
					b->booltesttype = IS_TRUE;
					(yyval.node) = (Node *)b;
				}
#line 44169 "gram.cpp"
    break;

  case 1953: /* a_expr: a_expr IS NOT TRUE_P  */
#line 13733 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_TRUE;
					(yyval.node) = (Node *)b;
				}
#line 44180 "gram.cpp"
    break;

  case 1954: /* a_expr: a_expr IS FALSE_P  */
#line 13740 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-2].node);
					b->booltesttype = IS_FALSE;
					(yyval.node) = (Node *)b;
				}
#line 44191 "gram.cpp"
    break;

  case 1955: /* a_expr: a_expr IS NOT FALSE_P  */
#line 13747 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_FALSE;
					(yyval.node) = (Node *)b;
				}
#line 44202 "gram.cpp"
    break;

  case 1956: /* a_expr: a_expr IS UNKNOWN  */
#line 13754 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-2].node);
					b->booltesttype = IS_UNKNOWN;
					(yyval.node) = (Node *)b;
				}
#line 44213 "gram.cpp"
    break;

  case 1957: /* a_expr: a_expr IS NOT UNKNOWN  */
#line 13761 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					(yyval.node) = (Node *)b;
				}
#line 44224 "gram.cpp"
    break;

  case 1958: /* a_expr: a_expr IS DISTINCT FROM a_expr  */
#line 13768 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
				}
#line 44232 "gram.cpp"
    break;

  case 1959: /* a_expr: a_expr IS NOT DISTINCT FROM a_expr  */
#line 13772 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
									(Node *) makeSimpleA_Expr(AEXPR_DISTINCT,
															  "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
											 (yylsp[-4]));

				}
#line 44244 "gram.cpp"
    break;

  case 1960: /* a_expr: a_expr IS OF '(' type_list ')'  */
#line 13780 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[-5].node), (Node *) (yyvsp[-1].list), (yylsp[-4]));
				}
#line 44252 "gram.cpp"
    break;

  case 1961: /* a_expr: a_expr IS NOT OF '(' type_list ')'  */
#line 13784 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[-6].node), (Node *) (yyvsp[-1].list), (yylsp[-5]));
				}
#line 44260 "gram.cpp"
    break;

  case 1962: /* a_expr: a_expr BETWEEN opt_asymmetric b_expr AND b_expr  */
#line 13794 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
						(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-5].node), (yyvsp[-2].node), (yylsp[-4])),
						(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
											 (yylsp[-4]));
				}
#line 44271 "gram.cpp"
    break;

  case 1963: /* a_expr: a_expr NOT BETWEEN opt_asymmetric b_expr AND b_expr  */
#line 13801 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
						(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-6].node), (yyvsp[-2].node), (yylsp[-5])),
						(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-6].node), (yyvsp[0].node), (yylsp[-5])),
											 (yylsp[-5]));
				}
#line 44282 "gram.cpp"
    break;

  case 1964: /* a_expr: a_expr BETWEEN SYMMETRIC b_expr AND b_expr  */
#line 13808 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
						(Node *) makeA_Expr(AEXPR_AND, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-5].node), (yyvsp[-2].node), (yylsp[-4])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
											(yylsp[-4])),
						(Node *) makeA_Expr(AEXPR_AND, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-5].node), (yyvsp[-2].node), (yylsp[-4])),
											(yylsp[-4])),
											 (yylsp[-4]));
				}
#line 44299 "gram.cpp"
    break;

  case 1965: /* a_expr: a_expr NOT BETWEEN SYMMETRIC b_expr AND b_expr  */
#line 13821 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
						(Node *) makeA_Expr(AEXPR_OR, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-6].node), (yyvsp[-2].node), (yylsp[-5])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-6].node), (yyvsp[0].node), (yylsp[-5])),
											(yylsp[-5])),
						(Node *) makeA_Expr(AEXPR_OR, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-6].node), (yyvsp[0].node), (yylsp[-5])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-6].node), (yyvsp[-2].node), (yylsp[-5])),
											(yylsp[-5])),
											 (yylsp[-5]));
				}
#line 44316 "gram.cpp"
    break;

  case 1966: /* a_expr: a_expr IN_P in_expr  */
#line 13834 "gram.y"
                                {
					/* in_expr returns a SubLink or a list of a_exprs */
					if (IsA((yyvsp[0].node), SubLink))
					{
						/* generate foo = ANY (subquery) */
						SubLink *n = (SubLink *) (yyvsp[0].node);
						n->subLinkType = ANY_SUBLINK;
						n->testexpr = (yyvsp[-2].node);
						n->operName = list_make1(makeString("="));
						n->location = (yylsp[-1]);
						(yyval.node) = (Node *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
					}
				}
#line 44339 "gram.cpp"
    break;

  case 1967: /* a_expr: a_expr NOT IN_P in_expr  */
#line 13853 "gram.y"
                                {
					/* in_expr returns a SubLink or a list of a_exprs */
					if (IsA((yyvsp[0].node), SubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						SubLink *n = (SubLink *) (yyvsp[0].node);
						n->subLinkType = ANY_SUBLINK;
						n->testexpr = (yyvsp[-3].node);
						n->operName = list_make1(makeString("="));
						n->location = (yylsp[-1]);
						/* Stick a NOT on top */
						(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (Node *) n, (yylsp[-2]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "<>", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
					}
				}
#line 44364 "gram.cpp"
    break;

  case 1968: /* a_expr: a_expr subquery_Op sub_type select_with_parens  */
#line 13874 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = static_cast<SubLinkType>((yyvsp[-1].ival));
					n->testexpr = (yyvsp[-3].node);
					n->operName = (yyvsp[-2].list);
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *)n;
				}
#line 44378 "gram.cpp"
    break;

  case 1969: /* a_expr: a_expr subquery_Op sub_type '(' a_expr ')'  */
#line 13884 "gram.y"
                                {
					if ((yyvsp[-3].ival) == ANY_SUBLINK)
						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ANY, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
					else
						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ALL, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
				}
#line 44389 "gram.cpp"
    break;

  case 1970: /* a_expr: UNIQUE select_with_parens  */
#line 13891 "gram.y"
                                {
					/* Not sure how to get rid of the parentheses
					 * but there are lots of shift/reduce errors without them.
					 *
					 * Should be able to implement this by plopping the entire
					 * select into a node, then transforming the target expressions
					 * from whatever they are into count(*), and testing the
					 * entire result equal to one.
					 * But, will probably implement a separate node in the executor.
					 */
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("UNIQUE predicate is not yet implemented"),
							 parser_errposition((yylsp[-1])));
				}
#line 44409 "gram.cpp"
    break;

  case 1971: /* a_expr: a_expr IS DOCUMENT_P  */
#line 13907 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
									 list_make1((yyvsp[-2].node)), (yylsp[-1]));
				}
#line 44418 "gram.cpp"
    break;

  case 1972: /* a_expr: a_expr IS NOT DOCUMENT_P  */
#line 13912 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
														 list_make1((yyvsp[-3].node)), (yylsp[-2])),
											 (yylsp[-2]));
				}
#line 44429 "gram.cpp"
    break;

  case 1973: /* b_expr: c_expr  */
#line 13930 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44435 "gram.cpp"
    break;

  case 1974: /* b_expr: b_expr TYPECAST Typename  */
#line 13932 "gram.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); }
#line 44441 "gram.cpp"
    break;

  case 1975: /* b_expr: '+' b_expr  */
#line 13934 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 44447 "gram.cpp"
    break;

  case 1976: /* b_expr: '-' b_expr  */
#line 13936 "gram.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 44453 "gram.cpp"
    break;

  case 1977: /* b_expr: b_expr '+' b_expr  */
#line 13938 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44459 "gram.cpp"
    break;

  case 1978: /* b_expr: b_expr '-' b_expr  */
#line 13940 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44465 "gram.cpp"
    break;

  case 1979: /* b_expr: b_expr '*' b_expr  */
#line 13942 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44471 "gram.cpp"
    break;

  case 1980: /* b_expr: b_expr '/' b_expr  */
#line 13944 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44477 "gram.cpp"
    break;

  case 1981: /* b_expr: b_expr '%' b_expr  */
#line 13946 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44483 "gram.cpp"
    break;

  case 1982: /* b_expr: b_expr '^' b_expr  */
#line 13948 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44489 "gram.cpp"
    break;

  case 1983: /* b_expr: b_expr '<' b_expr  */
#line 13950 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44495 "gram.cpp"
    break;

  case 1984: /* b_expr: b_expr '>' b_expr  */
#line 13952 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44501 "gram.cpp"
    break;

  case 1985: /* b_expr: b_expr '=' b_expr  */
#line 13954 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44507 "gram.cpp"
    break;

  case 1986: /* b_expr: b_expr qual_Op b_expr  */
#line 13956 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44513 "gram.cpp"
    break;

  case 1987: /* b_expr: qual_Op b_expr  */
#line 13958 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 44519 "gram.cpp"
    break;

  case 1988: /* b_expr: b_expr qual_Op  */
#line 13960 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[0].list), (yyvsp[-1].node), NULL, (yylsp[0])); }
#line 44525 "gram.cpp"
    break;

  case 1989: /* b_expr: b_expr IS DISTINCT FROM b_expr  */
#line 13962 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
				}
#line 44533 "gram.cpp"
    break;

  case 1990: /* b_expr: b_expr IS NOT DISTINCT FROM b_expr  */
#line 13966 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL,
						NULL, (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])), (yylsp[-4]));
				}
#line 44542 "gram.cpp"
    break;

  case 1991: /* b_expr: b_expr IS OF '(' type_list ')'  */
#line 13971 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[-5].node), (Node *) (yyvsp[-1].list), (yylsp[-4]));
				}
#line 44550 "gram.cpp"
    break;

  case 1992: /* b_expr: b_expr IS NOT OF '(' type_list ')'  */
#line 13975 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[-6].node), (Node *) (yyvsp[-1].list), (yylsp[-5]));
				}
#line 44558 "gram.cpp"
    break;

  case 1993: /* b_expr: b_expr IS DOCUMENT_P  */
#line 13979 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
									 list_make1((yyvsp[-2].node)), (yylsp[-1]));
				}
#line 44567 "gram.cpp"
    break;

  case 1994: /* b_expr: b_expr IS NOT DOCUMENT_P  */
#line 13984 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
														 list_make1((yyvsp[-3].node)), (yylsp[-2])),
											 (yylsp[-2]));
				}
#line 44578 "gram.cpp"
    break;

  case 1995: /* c_expr: columnref  */
#line 14000 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 44584 "gram.cpp"
    break;

  case 1996: /* c_expr: AexprConst  */
#line 14001 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 44590 "gram.cpp"
    break;

  case 1997: /* c_expr: PARAM opt_indirection  */
#line 14003 "gram.y"
                                {
					ParamRef *p = makeNode(ParamRef);
					p->number = (yyvsp[-1].ival);
					p->location = (yylsp[-1]);
					if ((yyvsp[0].list))
					{
						A_Indirection *n = makeNode(A_Indirection);
						n->arg = (Node *) p;
						n->indirection = check_indirection((yyvsp[0].list), yyscanner);
						(yyval.node) = (Node *) n;
					}
					else
						(yyval.node) = (Node *) p;
				}
#line 44609 "gram.cpp"
    break;

  case 1998: /* c_expr: '(' a_expr ')' opt_indirection  */
#line 14018 "gram.y"
                                {
					if ((yyvsp[0].list))
					{
						A_Indirection *n = makeNode(A_Indirection);
						n->arg = (yyvsp[-2].node);
						n->indirection = check_indirection((yyvsp[0].list), yyscanner);
						(yyval.node) = (Node *)n;
					}
					else
						(yyval.node) = (yyvsp[-2].node);
				}
#line 44625 "gram.cpp"
    break;

  case 1999: /* c_expr: case_expr  */
#line 14030 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44631 "gram.cpp"
    break;

  case 2000: /* c_expr: func_expr  */
#line 14032 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44637 "gram.cpp"
    break;

  case 2001: /* c_expr: decode_expr  */
#line 14034 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44643 "gram.cpp"
    break;

  case 2002: /* c_expr: select_with_parens  */
#line 14036 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = EXPR_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 44657 "gram.cpp"
    break;

  case 2003: /* c_expr: select_with_parens indirection  */
#line 14046 "gram.y"
                                {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					SubLink *n = makeNode(SubLink);
					A_Indirection *a = makeNode(A_Indirection);
					n->subLinkType = EXPR_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[-1].node);
					n->location = (yylsp[-1]);
					a->arg = (Node *)n;
					a->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.node) = (Node *)a;
				}
#line 44684 "gram.cpp"
    break;

  case 2004: /* c_expr: EXISTS select_with_parens  */
#line 14069 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = EXISTS_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 44698 "gram.cpp"
    break;

  case 2005: /* c_expr: ARRAY select_with_parens  */
#line 14079 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = ARRAY_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 44712 "gram.cpp"
    break;

  case 2006: /* c_expr: ARRAY array_expr  */
#line 14089 "gram.y"
                                {
					A_ArrayExpr *n = (A_ArrayExpr *) (yyvsp[0].node);
					Assert(IsA(n, A_ArrayExpr));
					/* point outermost A_ArrayExpr to the ARRAY keyword */
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 44724 "gram.cpp"
    break;

  case 2007: /* c_expr: TABLE '(' table_value_select_clause ')'  */
#line 14097 "gram.y"
                                {
					TableValueExpr *n = makeNode(TableValueExpr);
					n->subquery = (yyvsp[-1].node);
					n->location = (yylsp[-3]);
					(yyval.node) = (Node *)n;
				}
#line 44735 "gram.cpp"
    break;

  case 2008: /* c_expr: row  */
#line 14104 "gram.y"
                                {
					RowExpr *r = makeNode(RowExpr);
					r->args = (yyvsp[0].list);
					r->row_typeid = InvalidOid;	/* not analyzed yet */
					r->colnames = NIL;	/* to be filled in during analysis */
					r->location = (yylsp[0]);
					(yyval.node) = (Node *)r;
				}
#line 44748 "gram.cpp"
    break;

  case 2009: /* scatter_clause: %empty  */
#line 14115 "gram.y"
                                                                        { (yyval.list) = NIL; }
#line 44754 "gram.cpp"
    break;

  case 2010: /* scatter_clause: SCATTER RANDOMLY  */
#line 14116 "gram.y"
                                                                { (yyval.list) = list_make1(NULL); }
#line 44760 "gram.cpp"
    break;

  case 2011: /* scatter_clause: SCATTER BY expr_list  */
#line 14117 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 44766 "gram.cpp"
    break;

  case 2012: /* table_value_select_clause: SelectStmt scatter_clause  */
#line 14122 "gram.y"
                {
			SelectStmt	*s	 = (SelectStmt *) (yyvsp[-1].node);
			s->scatterClause = (yyvsp[0].list);
			(yyval.node) = (Node *) s;
		}
#line 44776 "gram.cpp"
    break;

  case 2013: /* func_application: func_name '(' ')'  */
#line 14130 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall((yyvsp[-2].list), NIL, (yylsp[-2]));
				}
#line 44784 "gram.cpp"
    break;

  case 2014: /* func_application: func_name '(' func_arg_list opt_sort_clause ')'  */
#line 14134 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-4].list), (yyvsp[-2].list), (yylsp[-4]));
					n->agg_order = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 44794 "gram.cpp"
    break;

  case 2015: /* func_application: func_name '(' VARIADIC func_arg_expr opt_sort_clause ')'  */
#line 14140 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-5].list), list_make1((yyvsp[-2].node)), (yylsp[-5]));
					n->func_variadic = TRUE;
					n->agg_order = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 44805 "gram.cpp"
    break;

  case 2016: /* func_application: func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause ')'  */
#line 14147 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-7].list), lappend((yyvsp[-5].list), (yyvsp[-2].node)), (yylsp[-7]));
					n->func_variadic = TRUE;
					n->agg_order = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 44816 "gram.cpp"
    break;

  case 2017: /* func_application: func_name '(' ALL func_arg_list opt_sort_clause ')'  */
#line 14154 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-5].list), (yyvsp[-2].list), (yylsp[-5]));
					n->agg_order = (yyvsp[-1].list);
					/* Ideally we'd mark the FuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in FuncCall at the moment.
					 */
					n->func_variadic = FALSE;
					n->location = (yylsp[-5]);
					n->over = NULL;
					(yyval.node) = (Node *)n;
				}
#line 44833 "gram.cpp"
    break;

  case 2018: /* func_application: func_name '(' DISTINCT func_arg_list opt_sort_clause ')'  */
#line 14167 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-5].list), (yyvsp[-2].list), (yylsp[-5]));
					n->agg_order = (yyvsp[-1].list);
					n->agg_distinct = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 44844 "gram.cpp"
    break;

  case 2019: /* func_application: func_name '(' '*' ')'  */
#line 14174 "gram.y"
                                {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The FuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					FuncCall *n = makeFuncCall((yyvsp[-3].list), NIL, (yylsp[-3]));
					n->agg_star = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 44864 "gram.cpp"
    break;

  case 2020: /* func_expr: func_application within_group_clause filter_clause over_clause  */
#line 14202 "gram.y"
                                {
					FuncCall *n = (FuncCall *) (yyvsp[-3].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[-2].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[-2])));
						if (n->agg_distinct)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[-2])));
						if (n->func_variadic)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[-2])));
						n->agg_order = (yyvsp[-2].list);
						n->agg_within_group = TRUE;
					}
					n->agg_filter = (yyvsp[-1].node);
					n->over = (yyvsp[0].windef);
					(yyval.node) = (Node *) n;
				}
#line 44903 "gram.cpp"
    break;

  case 2021: /* func_expr: func_expr_common_subexpr  */
#line 14237 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44909 "gram.cpp"
    break;

  case 2022: /* func_expr_windowless: func_application  */
#line 14247 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 44915 "gram.cpp"
    break;

  case 2023: /* func_expr_windowless: func_expr_common_subexpr  */
#line 14248 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 44921 "gram.cpp"
    break;

  case 2024: /* func_expr_common_subexpr: COLLATION FOR '(' a_expr ')'  */
#line 14256 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[-1].node)),
											   (yylsp[-4]));
				}
#line 44931 "gram.cpp"
    break;

  case 2025: /* func_expr_common_subexpr: CURRENT_DATE  */
#line 14262 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::date".
					 *
					 * We cannot use "'now'::date" because coerce_type() will
					 * immediately reduce that to a constant representing
					 * today's date.  We need to delay the conversion until
					 * runtime, else the wrong things will happen when
					 * CURRENT_DATE is used in a column default value or rule.
					 *
					 * This could be simplified if we had a way to generate
					 * an expression tree representing runtime application
					 * of type-input conversion functions.  (As of PG 7.3
					 * that is actually possible, but not clear that we want
					 * to rely on it.)
					 *
					 * The token location is attached to the run-time
					 * typecast, not to the Const, for the convenience of
					 * pg_stat_statements (which doesn't want these constructs
					 * to appear to be replaceable constants).
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast(n, SystemTypeName("date"), (yylsp[0]));
				}
#line 44961 "gram.cpp"
    break;

  case 2026: /* func_expr_common_subexpr: CURRENT_TIME  */
#line 14288 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timetz".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast(n, SystemTypeName("timetz"), (yylsp[0]));
				}
#line 44975 "gram.cpp"
    break;

  case 2027: /* func_expr_common_subexpr: CURRENT_TIME '(' Iconst ')'  */
#line 14298 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timetz(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("timetz");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast(n, d, (yylsp[-3]));
				}
#line 44992 "gram.cpp"
    break;

  case 2028: /* func_expr_common_subexpr: CURRENT_TIMESTAMP  */
#line 14311 "gram.y"
                                {
					/*
					 * Translate as "now()", since we have a function that
					 * does exactly what is needed.
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("now"), NIL, (yylsp[0]));
				}
#line 45004 "gram.cpp"
    break;

  case 2029: /* func_expr_common_subexpr: CURRENT_TIMESTAMP '(' Iconst ')'  */
#line 14319 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timestamptz(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("timestamptz");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast(n, d, (yylsp[-3]));
				}
#line 45021 "gram.cpp"
    break;

  case 2030: /* func_expr_common_subexpr: LOCALTIME  */
#line 14332 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::time".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast((Node *)n, SystemTypeName("time"), (yylsp[0]));
				}
#line 45035 "gram.cpp"
    break;

  case 2031: /* func_expr_common_subexpr: LOCALTIME '(' Iconst ')'  */
#line 14342 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::time(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("time");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast((Node *)n, d, (yylsp[-3]));
				}
#line 45052 "gram.cpp"
    break;

  case 2032: /* func_expr_common_subexpr: LOCALTIMESTAMP  */
#line 14355 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timestamp".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast(n, SystemTypeName("timestamp"), (yylsp[0]));
				}
#line 45066 "gram.cpp"
    break;

  case 2033: /* func_expr_common_subexpr: LOCALTIMESTAMP '(' Iconst ')'  */
#line 14365 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timestamp(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("timestamp");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast(n, d, (yylsp[-3]));
				}
#line 45083 "gram.cpp"
    break;

  case 2034: /* func_expr_common_subexpr: CURRENT_ROLE  */
#line 14378 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_user"), NIL, (yylsp[0]));
				}
#line 45091 "gram.cpp"
    break;

  case 2035: /* func_expr_common_subexpr: CURRENT_USER  */
#line 14382 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_user"), NIL, (yylsp[0]));
				}
#line 45099 "gram.cpp"
    break;

  case 2036: /* func_expr_common_subexpr: SESSION_USER  */
#line 14386 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("session_user"), NIL, (yylsp[0]));
				}
#line 45107 "gram.cpp"
    break;

  case 2037: /* func_expr_common_subexpr: USER  */
#line 14390 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_user"), NIL, (yylsp[0]));
				}
#line 45115 "gram.cpp"
    break;

  case 2038: /* func_expr_common_subexpr: CURRENT_CATALOG  */
#line 14394 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_database"), NIL, (yylsp[0]));
				}
#line 45123 "gram.cpp"
    break;

  case 2039: /* func_expr_common_subexpr: CURRENT_SCHEMA  */
#line 14398 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_schema"), NIL, (yylsp[0]));
				}
#line 45131 "gram.cpp"
    break;

  case 2040: /* func_expr_common_subexpr: CAST '(' a_expr AS Typename ')'  */
#line 14402 "gram.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), (yylsp[-5])); }
#line 45137 "gram.cpp"
    break;

  case 2041: /* func_expr_common_subexpr: EXTRACT '(' extract_list ')'  */
#line 14404 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45145 "gram.cpp"
    break;

  case 2042: /* func_expr_common_subexpr: OVERLAY '(' overlay_list ')'  */
#line 14408 "gram.y"
                                {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45158 "gram.cpp"
    break;

  case 2043: /* func_expr_common_subexpr: POSITION '(' position_list ')'  */
#line 14417 "gram.y"
                                {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("position"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45167 "gram.cpp"
    break;

  case 2044: /* func_expr_common_subexpr: SUBSTRING '(' substr_list ')'  */
#line 14422 "gram.y"
                                {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("substring"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45178 "gram.cpp"
    break;

  case 2045: /* func_expr_common_subexpr: TREAT '(' a_expr AS Typename ')'  */
#line 14429 "gram.y"
                                {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName(((Value *)llast((yyvsp[-1].typnam)->names))->val.str),
												list_make1((yyvsp[-3].node)),
												(yylsp[-5]));
				}
#line 45197 "gram.cpp"
    break;

  case 2046: /* func_expr_common_subexpr: TRIM '(' BOTH trim_list ')'  */
#line 14444 "gram.y"
                                {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 45208 "gram.cpp"
    break;

  case 2047: /* func_expr_common_subexpr: TRIM '(' LEADING trim_list ')'  */
#line 14451 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 45216 "gram.cpp"
    break;

  case 2048: /* func_expr_common_subexpr: TRIM '(' TRAILING trim_list ')'  */
#line 14455 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 45224 "gram.cpp"
    break;

  case 2049: /* func_expr_common_subexpr: TRIM '(' trim_list ')'  */
#line 14459 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45232 "gram.cpp"
    break;

  case 2050: /* func_expr_common_subexpr: NULLIF '(' a_expr ',' a_expr ')'  */
#line 14463 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NULLIF, "=", (yyvsp[-3].node), (yyvsp[-1].node), (yylsp[-5]));
				}
#line 45240 "gram.cpp"
    break;

  case 2051: /* func_expr_common_subexpr: COALESCE '(' expr_list ')'  */
#line 14467 "gram.y"
                                {
					CoalesceExpr *c = makeNode(CoalesceExpr);
					c->args = (yyvsp[-1].list);
					c->location = (yylsp[-3]);
					(yyval.node) = (Node *)c;
				}
#line 45251 "gram.cpp"
    break;

  case 2052: /* func_expr_common_subexpr: GREATEST '(' expr_list ')'  */
#line 14474 "gram.y"
                                {
					MinMaxExpr *v = makeNode(MinMaxExpr);
					v->args = (yyvsp[-1].list);
					v->op = IS_GREATEST;
					v->location = (yylsp[-3]);
					(yyval.node) = (Node *)v;
				}
#line 45263 "gram.cpp"
    break;

  case 2053: /* func_expr_common_subexpr: LEAST '(' expr_list ')'  */
#line 14482 "gram.y"
                                {
					MinMaxExpr *v = makeNode(MinMaxExpr);
					v->args = (yyvsp[-1].list);
					v->op = IS_LEAST;
					v->location = (yylsp[-3]);
					(yyval.node) = (Node *)v;
				}
#line 45275 "gram.cpp"
    break;

  case 2054: /* func_expr_common_subexpr: GROUPING '(' expr_list ')'  */
#line 14490 "gram.y"
                {
					GroupingFunc *f = makeNode(GroupingFunc);
					f->args = (yyvsp[-1].list);
					(yyval.node) = (Node*)f;
				}
#line 45285 "gram.cpp"
    break;

  case 2055: /* func_expr_common_subexpr: GROUP_ID '(' ')'  */
#line 14497 "gram.y"
                                {
					GroupId *gid = makeNode(GroupId);
					(yyval.node) = (Node *)gid;
				}
#line 45294 "gram.cpp"
    break;

  case 2056: /* func_expr_common_subexpr: MEDIAN '(' a_expr ')'  */
#line 14502 "gram.y"
                                {
					/*
					 * MEDIAN is parsed as an alias to percentile_cont(0.5).
					 * We keep track of original expression to deparse
					 * it later in views, etc.
					 */
					FuncCall   *n;
					SortBy	   *sortby;

					n = makeNode(FuncCall);
					n->funcname = SystemFuncName("median");
					n->args = list_make1(makeAConst(makeFloat(pstrdup("0.5")), (yylsp[-3])));

					sortby = makeNode(SortBy);
					sortby->node = (yyvsp[-1].node);
					sortby->sortby_dir = SORTBY_DEFAULT;
					sortby->sortby_nulls = SORTBY_NULLS_DEFAULT;
					sortby->useOp = NIL;
					sortby->location = -1;		/* no operator */
					n->agg_order = list_make1(sortby);

					n->agg_within_group = TRUE;
					n->agg_filter = NULL;
					n->over = NULL;
					n->location = (yylsp[-3]);
					(yyval.node) = (Node *) n;
				}
#line 45326 "gram.cpp"
    break;

  case 2057: /* func_expr_common_subexpr: DECODE '(' a_expr ',' a_expr ')'  */
#line 14530 "gram.y"
                                {
					FuncCall *n = makeNode(FuncCall);
					n->funcname = list_make1(makeString("decode"));
					n->args = list_make2((yyvsp[-3].node), (yyvsp[-1].node));
                    n->agg_order = NIL;
					n->agg_star = FALSE;
					n->agg_distinct = FALSE;
					n->func_variadic = FALSE;
					n->agg_filter = NULL;
					n->location = (yylsp[-5]);
					n->over = NULL;
					(yyval.node) = (Node *)n;
				}
#line 45344 "gram.cpp"
    break;

  case 2058: /* func_expr_common_subexpr: XMLCONCAT '(' expr_list ')'  */
#line 14544 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLCONCAT, NULL, NIL, (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45352 "gram.cpp"
    break;

  case 2059: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ')'  */
#line 14548 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-1].str), NIL, NIL, (yylsp[-4]));
				}
#line 45360 "gram.cpp"
    break;

  case 2060: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ')'  */
#line 14552 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-3].str), (yyvsp[-1].list), NIL, (yylsp[-6]));
				}
#line 45368 "gram.cpp"
    break;

  case 2061: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' expr_list ')'  */
#line 14556 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-3].str), NIL, (yyvsp[-1].list), (yylsp[-6]));
				}
#line 45376 "gram.cpp"
    break;

  case 2062: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ',' expr_list ')'  */
#line 14560 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-5].str), (yyvsp[-3].list), (yyvsp[-1].list), (yylsp[-8]));
				}
#line 45384 "gram.cpp"
    break;

  case 2063: /* func_expr_common_subexpr: XMLEXISTS '(' c_expr xmlexists_argument ')'  */
#line 14564 "gram.y"
                                {
					/* xmlexists(A PASSING [BY REF] B [BY REF]) is
					 * converted to xmlexists(A, B)*/
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("xmlexists"), list_make2((yyvsp[-2].node), (yyvsp[-1].node)), (yylsp[-4]));
				}
#line 45394 "gram.cpp"
    break;

  case 2064: /* func_expr_common_subexpr: XMLEXISTS '(' a_expr ',' a_expr ')'  */
#line 14578 "gram.y"
                                {
					FuncCall *n = makeNode(FuncCall);
					n->funcname = SystemFuncName("xmlexists");
					n->args = list_make2((yyvsp[-3].node), (yyvsp[-1].node));
					n->agg_order = NIL;
					n->agg_star = FALSE;
					n->agg_distinct = FALSE;
					n->func_variadic = FALSE;
					n->over = NULL;
					n->location = (yylsp[-5]);
					(yyval.node) = (Node *)n;
				}
#line 45411 "gram.cpp"
    break;

  case 2065: /* func_expr_common_subexpr: XMLFOREST '(' xml_attribute_list ')'  */
#line 14591 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLFOREST, NULL, (yyvsp[-1].list), NIL, (yylsp[-3]));
				}
#line 45419 "gram.cpp"
    break;

  case 2066: /* func_expr_common_subexpr: XMLPARSE '(' document_or_content a_expr xml_whitespace_option ')'  */
#line 14595 "gram.y"
                                {
					XmlExpr *x = (XmlExpr *)
						makeXmlExpr(IS_XMLPARSE, NULL, NIL,
									list_make2((yyvsp[-2].node), makeBoolAConst((yyvsp[-1].boolean), -1)),
									(yylsp[-5]));
					x->xmloption = static_cast<XmlOptionType>((yyvsp[-3].ival));
					(yyval.node) = (Node *)x;
				}
#line 45432 "gram.cpp"
    break;

  case 2067: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ')'  */
#line 14604 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[-1].str), NULL, NIL, (yylsp[-4]));
				}
#line 45440 "gram.cpp"
    break;

  case 2068: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ',' a_expr ')'  */
#line 14608 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[-3].str), NULL, list_make1((yyvsp[-1].node)), (yylsp[-6]));
				}
#line 45448 "gram.cpp"
    break;

  case 2069: /* func_expr_common_subexpr: XMLROOT '(' a_expr ',' xml_root_version opt_xml_root_standalone ')'  */
#line 14612 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLROOT, NULL, NIL,
									 list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[-1].node)), (yylsp[-6]));
				}
#line 45457 "gram.cpp"
    break;

  case 2070: /* func_expr_common_subexpr: XMLSERIALIZE '(' document_or_content a_expr AS SimpleTypename ')'  */
#line 14617 "gram.y"
                                {
					XmlSerialize *n = makeNode(XmlSerialize);
					n->xmloption = static_cast<XmlOptionType>((yyvsp[-4].ival));
					n->expr = (yyvsp[-3].node);
					n->typeName = (yyvsp[-1].typnam);
					n->location = (yylsp[-6]);
					(yyval.node) = (Node *)n;
				}
#line 45470 "gram.cpp"
    break;

  case 2071: /* xml_root_version: VERSION_P a_expr  */
#line 14631 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 45476 "gram.cpp"
    break;

  case 2072: /* xml_root_version: VERSION_P NO VALUE_P  */
#line 14633 "gram.y"
                                { (yyval.node) = makeNullAConst(-1); }
#line 45482 "gram.cpp"
    break;

  case 2073: /* opt_xml_root_standalone: ',' STANDALONE_P YES_P  */
#line 14637 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); }
#line 45488 "gram.cpp"
    break;

  case 2074: /* opt_xml_root_standalone: ',' STANDALONE_P NO  */
#line 14639 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); }
#line 45494 "gram.cpp"
    break;

  case 2075: /* opt_xml_root_standalone: ',' STANDALONE_P NO VALUE_P  */
#line 14641 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); }
#line 45500 "gram.cpp"
    break;

  case 2076: /* opt_xml_root_standalone: %empty  */
#line 14643 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); }
#line 45506 "gram.cpp"
    break;

  case 2077: /* xml_attributes: XMLATTRIBUTES '(' xml_attribute_list ')'  */
#line 14646 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 45512 "gram.cpp"
    break;

  case 2078: /* xml_attribute_list: xml_attribute_el  */
#line 14649 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 45518 "gram.cpp"
    break;

  case 2079: /* xml_attribute_list: xml_attribute_list ',' xml_attribute_el  */
#line 14650 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 45524 "gram.cpp"
    break;

  case 2080: /* xml_attribute_el: a_expr AS ColLabel  */
#line 14654 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *) (yyvsp[-2].node);
					(yyval.target)->location = (yylsp[-2]);
				}
#line 45536 "gram.cpp"
    break;

  case 2081: /* xml_attribute_el: a_expr  */
#line 14662 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *) (yyvsp[0].node);
					(yyval.target)->location = (yylsp[0]);
				}
#line 45548 "gram.cpp"
    break;

  case 2082: /* document_or_content: DOCUMENT_P  */
#line 14671 "gram.y"
                                                                        { (yyval.ival) = XMLOPTION_DOCUMENT; }
#line 45554 "gram.cpp"
    break;

  case 2083: /* document_or_content: CONTENT_P  */
#line 14672 "gram.y"
                                                                                                { (yyval.ival) = XMLOPTION_CONTENT; }
#line 45560 "gram.cpp"
    break;

  case 2084: /* xml_whitespace_option: PRESERVE WHITESPACE_P  */
#line 14675 "gram.y"
                                                        { (yyval.boolean) = TRUE; }
#line 45566 "gram.cpp"
    break;

  case 2085: /* xml_whitespace_option: STRIP_P WHITESPACE_P  */
#line 14676 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 45572 "gram.cpp"
    break;

  case 2086: /* xml_whitespace_option: %empty  */
#line 14677 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 45578 "gram.cpp"
    break;

  case 2087: /* xmlexists_argument: PASSING c_expr  */
#line 14683 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 45586 "gram.cpp"
    break;

  case 2088: /* xmlexists_argument: PASSING c_expr BY REF  */
#line 14687 "gram.y"
                                {
					(yyval.node) = (yyvsp[-2].node);
				}
#line 45594 "gram.cpp"
    break;

  case 2089: /* xmlexists_argument: PASSING BY REF c_expr  */
#line 14691 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 45602 "gram.cpp"
    break;

  case 2090: /* xmlexists_argument: PASSING BY REF c_expr BY REF  */
#line 14695 "gram.y"
                                {
					(yyval.node) = (yyvsp[-2].node);
				}
#line 45610 "gram.cpp"
    break;

  case 2091: /* within_group_clause: WITHIN GROUP_P '(' sort_clause ')'  */
#line 14705 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45616 "gram.cpp"
    break;

  case 2092: /* within_group_clause: %empty  */
#line 14706 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 45622 "gram.cpp"
    break;

  case 2093: /* filter_clause: FILTER '(' WHERE a_expr ')'  */
#line 14710 "gram.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 45628 "gram.cpp"
    break;

  case 2094: /* filter_clause: %empty  */
#line 14711 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 45634 "gram.cpp"
    break;

  case 2095: /* window_clause: WINDOW window_definition_list  */
#line 14719 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 45640 "gram.cpp"
    break;

  case 2096: /* window_clause: %empty  */
#line 14720 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 45646 "gram.cpp"
    break;

  case 2097: /* window_definition_list: window_definition  */
#line 14724 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].windef)); }
#line 45652 "gram.cpp"
    break;

  case 2098: /* window_definition_list: window_definition_list ',' window_definition  */
#line 14726 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].windef)); }
#line 45658 "gram.cpp"
    break;

  case 2099: /* window_definition: ColId AS window_specification  */
#line 14731 "gram.y"
                                {
					WindowDef *n = (yyvsp[0].windef);
					n->name = (yyvsp[-2].str);
					(yyval.windef) = n;
				}
#line 45668 "gram.cpp"
    break;

  case 2100: /* over_clause: OVER window_specification  */
#line 14739 "gram.y"
                                { (yyval.windef) = (yyvsp[0].windef); }
#line 45674 "gram.cpp"
    break;

  case 2101: /* over_clause: OVER ColId  */
#line 14741 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->name = (yyvsp[0].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[0]);
					(yyval.windef) = n;
				}
#line 45691 "gram.cpp"
    break;

  case 2102: /* over_clause: %empty  */
#line 14754 "gram.y"
                                { (yyval.windef) = NULL; }
#line 45697 "gram.cpp"
    break;

  case 2103: /* window_specification: '(' opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause ')'  */
#line 14759 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->name = NULL;
					n->refname = (yyvsp[-4].str);
					n->partitionClause = (yyvsp[-3].list);
					n->orderClause = (yyvsp[-2].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[-1].windef)->frameOptions;
					n->startOffset = (yyvsp[-1].windef)->startOffset;
					n->endOffset = (yyvsp[-1].windef)->endOffset;
					n->location = (yylsp[-5]);
					(yyval.windef) = n;
				}
#line 45715 "gram.cpp"
    break;

  case 2104: /* opt_existing_window_name: ColId  */
#line 14784 "gram.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 45721 "gram.cpp"
    break;

  case 2105: /* opt_existing_window_name: %empty  */
#line 14785 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 45727 "gram.cpp"
    break;

  case 2106: /* opt_partition_clause: PARTITION BY sortby_list  */
#line 14788 "gram.y"
                                               { (yyval.list) = (yyvsp[0].list); }
#line 45733 "gram.cpp"
    break;

  case 2107: /* opt_partition_clause: %empty  */
#line 14789 "gram.y"
                                    { (yyval.list) = NIL; }
#line 45739 "gram.cpp"
    break;

  case 2108: /* opt_frame_clause: RANGE frame_extent window_frame_exclusion  */
#line 14802 "gram.y"
                                {
					WindowDef *n = (yyvsp[-1].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
#if 0
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[-2])));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[-2])));
#endif
					(yyval.windef) = n;
				}
#line 45763 "gram.cpp"
    break;

  case 2109: /* opt_frame_clause: ROWS frame_extent window_frame_exclusion  */
#line 14823 "gram.y"
                                {
					WindowDef *n = (yyvsp[-1].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				}
#line 45773 "gram.cpp"
    break;

  case 2110: /* opt_frame_clause: %empty  */
#line 14829 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45785 "gram.cpp"
    break;

  case 2111: /* frame_extent: frame_bound  */
#line 14839 "gram.y"
                                {
					WindowDef *n = (yyvsp[0].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[0])));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[0])));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				}
#line 45806 "gram.cpp"
    break;

  case 2112: /* frame_extent: BETWEEN frame_bound AND frame_bound  */
#line 14856 "gram.y"
                                {
					WindowDef *n1 = (yyvsp[-2].windef);
					WindowDef *n2 = (yyvsp[0].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[-2])));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[0])));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[0])));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[0])));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				}
#line 45847 "gram.cpp"
    break;

  case 2113: /* frame_bound: UNBOUNDED PRECEDING  */
#line 14901 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45859 "gram.cpp"
    break;

  case 2114: /* frame_bound: UNBOUNDED FOLLOWING  */
#line 14909 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45871 "gram.cpp"
    break;

  case 2115: /* frame_bound: CURRENT_P ROW  */
#line 14917 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45883 "gram.cpp"
    break;

  case 2116: /* frame_bound: a_expr PRECEDING  */
#line 14925 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[-1].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45895 "gram.cpp"
    break;

  case 2117: /* frame_bound: a_expr FOLLOWING  */
#line 14933 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[-1].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45907 "gram.cpp"
    break;

  case 2118: /* window_frame_exclusion: EXCLUDE CURRENT_P ROW  */
#line 14942 "gram.y"
                                              { checkWindowExclude(); (yyval.ival) = 0; }
#line 45913 "gram.cpp"
    break;

  case 2119: /* window_frame_exclusion: EXCLUDE GROUP_P  */
#line 14943 "gram.y"
                                          { checkWindowExclude(); (yyval.ival) = 0; }
#line 45919 "gram.cpp"
    break;

  case 2120: /* window_frame_exclusion: EXCLUDE TIES  */
#line 14944 "gram.y"
                                       { checkWindowExclude(); (yyval.ival) = 0; }
#line 45925 "gram.cpp"
    break;

  case 2121: /* window_frame_exclusion: EXCLUDE NO OTHERS  */
#line 14945 "gram.y"
                                            { checkWindowExclude(); (yyval.ival) = 0; }
#line 45931 "gram.cpp"
    break;

  case 2122: /* window_frame_exclusion: %empty  */
#line 14946 "gram.y"
                                    { (yyval.ival) = 0; }
#line 45937 "gram.cpp"
    break;

  case 2123: /* row: ROW '(' expr_list ')'  */
#line 14960 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45943 "gram.cpp"
    break;

  case 2124: /* row: ROW '(' ')'  */
#line 14961 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 45949 "gram.cpp"
    break;

  case 2125: /* row: '(' expr_list ',' a_expr ')'  */
#line 14962 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-3].list), (yyvsp[-1].node)); }
#line 45955 "gram.cpp"
    break;

  case 2126: /* sub_type: ANY  */
#line 14965 "gram.y"
                                                                                                { (yyval.ival) = ANY_SUBLINK; }
#line 45961 "gram.cpp"
    break;

  case 2127: /* sub_type: SOME  */
#line 14966 "gram.y"
                                                                                                { (yyval.ival) = ANY_SUBLINK; }
#line 45967 "gram.cpp"
    break;

  case 2128: /* sub_type: ALL  */
#line 14967 "gram.y"
                                                                                                { (yyval.ival) = ALL_SUBLINK; }
#line 45973 "gram.cpp"
    break;

  case 2129: /* all_Op: Op  */
#line 14970 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 45979 "gram.cpp"
    break;

  case 2130: /* all_Op: MathOp  */
#line 14971 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 45985 "gram.cpp"
    break;

  case 2131: /* MathOp: '+'  */
#line 14974 "gram.y"
                                                                                        { (yyval.str) = "+"; }
#line 45991 "gram.cpp"
    break;

  case 2132: /* MathOp: '-'  */
#line 14975 "gram.y"
                                                                                                { (yyval.str) = "-"; }
#line 45997 "gram.cpp"
    break;

  case 2133: /* MathOp: '*'  */
#line 14976 "gram.y"
                                                                                                { (yyval.str) = "*"; }
#line 46003 "gram.cpp"
    break;

  case 2134: /* MathOp: '/'  */
#line 14977 "gram.y"
                                                                                                { (yyval.str) = "/"; }
#line 46009 "gram.cpp"
    break;

  case 2135: /* MathOp: '%'  */
#line 14978 "gram.y"
                                                                                                { (yyval.str) = "%"; }
#line 46015 "gram.cpp"
    break;

  case 2136: /* MathOp: '^'  */
#line 14979 "gram.y"
                                                                                                { (yyval.str) = "^"; }
#line 46021 "gram.cpp"
    break;

  case 2137: /* MathOp: '<'  */
#line 14980 "gram.y"
                                                                                                { (yyval.str) = "<"; }
#line 46027 "gram.cpp"
    break;

  case 2138: /* MathOp: '>'  */
#line 14981 "gram.y"
                                                                                                { (yyval.str) = ">"; }
#line 46033 "gram.cpp"
    break;

  case 2139: /* MathOp: '='  */
#line 14982 "gram.y"
                                                                                                { (yyval.str) = "="; }
#line 46039 "gram.cpp"
    break;

  case 2140: /* qual_Op: Op  */
#line 14986 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46045 "gram.cpp"
    break;

  case 2141: /* qual_Op: OPERATOR '(' any_operator ')'  */
#line 14988 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 46051 "gram.cpp"
    break;

  case 2142: /* qual_all_Op: all_Op  */
#line 14993 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46057 "gram.cpp"
    break;

  case 2143: /* qual_all_Op: OPERATOR '(' any_operator ')'  */
#line 14995 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 46063 "gram.cpp"
    break;

  case 2144: /* subquery_Op: all_Op  */
#line 15000 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46069 "gram.cpp"
    break;

  case 2145: /* subquery_Op: OPERATOR '(' any_operator ')'  */
#line 15002 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 46075 "gram.cpp"
    break;

  case 2146: /* subquery_Op: LIKE  */
#line 15004 "gram.y"
                                        { (yyval.list) = list_make1(makeString("~~")); }
#line 46081 "gram.cpp"
    break;

  case 2147: /* subquery_Op: NOT LIKE  */
#line 15006 "gram.y"
                                        { (yyval.list) = list_make1(makeString("!~~")); }
#line 46087 "gram.cpp"
    break;

  case 2148: /* subquery_Op: ILIKE  */
#line 15008 "gram.y"
                                        { (yyval.list) = list_make1(makeString("~~*")); }
#line 46093 "gram.cpp"
    break;

  case 2149: /* subquery_Op: NOT ILIKE  */
#line 15010 "gram.y"
                                        { (yyval.list) = list_make1(makeString("!~~*")); }
#line 46099 "gram.cpp"
    break;

  case 2150: /* expr_list: a_expr  */
#line 15022 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 46107 "gram.cpp"
    break;

  case 2151: /* expr_list: expr_list ',' a_expr  */
#line 15026 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 46115 "gram.cpp"
    break;

  case 2152: /* func_arg_list: func_arg_expr  */
#line 15033 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 46123 "gram.cpp"
    break;

  case 2153: /* func_arg_list: func_arg_list ',' func_arg_expr  */
#line 15037 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 46131 "gram.cpp"
    break;

  case 2154: /* func_arg_expr: a_expr  */
#line 15043 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 46139 "gram.cpp"
    break;

  case 2155: /* func_arg_expr: param_name COLON_EQUALS a_expr  */
#line 15047 "gram.y"
                                {
					NamedArgExpr *na = makeNode(NamedArgExpr);
					na->name = (yyvsp[-2].str);
					na->arg = (Expr *) (yyvsp[0].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[-2]);
					(yyval.node) = (Node *) na;
				}
#line 46152 "gram.cpp"
    break;

  case 2156: /* type_list: Typename  */
#line 15057 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].typnam)); }
#line 46158 "gram.cpp"
    break;

  case 2157: /* type_list: type_list ',' Typename  */
#line 15058 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
#line 46164 "gram.cpp"
    break;

  case 2158: /* nested_type_list: NestedTypename  */
#line 15062 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].typnam)); }
#line 46170 "gram.cpp"
    break;

  case 2159: /* nested_type_list: nested_type_list ',' NestedTypename  */
#line 15063 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
#line 46176 "gram.cpp"
    break;

  case 2160: /* array_expr: '[' expr_list ']'  */
#line 15067 "gram.y"
                                {
					(yyval.node) = makeAArrayExpr((yyvsp[-1].list), (yylsp[-2]));
				}
#line 46184 "gram.cpp"
    break;

  case 2161: /* array_expr: '[' array_expr_list ']'  */
#line 15071 "gram.y"
                                {
					(yyval.node) = makeAArrayExpr((yyvsp[-1].list), (yylsp[-2]));
				}
#line 46192 "gram.cpp"
    break;

  case 2162: /* array_expr: '[' ']'  */
#line 15075 "gram.y"
                                {
					(yyval.node) = makeAArrayExpr(NIL, (yylsp[-1]));
				}
#line 46200 "gram.cpp"
    break;

  case 2163: /* array_expr_list: array_expr  */
#line 15080 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46206 "gram.cpp"
    break;

  case 2164: /* array_expr_list: array_expr_list ',' array_expr  */
#line 15081 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 46212 "gram.cpp"
    break;

  case 2165: /* extract_list: extract_arg FROM a_expr  */
#line 15087 "gram.y"
                                {
					(yyval.list) = list_make2(makeStringConst((yyvsp[-2].str), (yylsp[-2])), (yyvsp[0].node));
				}
#line 46220 "gram.cpp"
    break;

  case 2166: /* extract_list: %empty  */
#line 15090 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 46226 "gram.cpp"
    break;

  case 2167: /* extract_arg: IDENT  */
#line 15097 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46232 "gram.cpp"
    break;

  case 2168: /* extract_arg: YEAR_P  */
#line 15098 "gram.y"
                                                                                                { (yyval.str) = "year"; }
#line 46238 "gram.cpp"
    break;

  case 2169: /* extract_arg: MONTH_P  */
#line 15099 "gram.y"
                                                                                                { (yyval.str) = "month"; }
#line 46244 "gram.cpp"
    break;

  case 2170: /* extract_arg: DAY_P  */
#line 15100 "gram.y"
                                                                                                { (yyval.str) = "day"; }
#line 46250 "gram.cpp"
    break;

  case 2171: /* extract_arg: HOUR_P  */
#line 15101 "gram.y"
                                                                                                { (yyval.str) = "hour"; }
#line 46256 "gram.cpp"
    break;

  case 2172: /* extract_arg: MINUTE_P  */
#line 15102 "gram.y"
                                                                                                { (yyval.str) = "minute"; }
#line 46262 "gram.cpp"
    break;

  case 2173: /* extract_arg: SECOND_P  */
#line 15103 "gram.y"
                                                                                                { (yyval.str) = "second"; }
#line 46268 "gram.cpp"
    break;

  case 2174: /* extract_arg: Sconst  */
#line 15104 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46274 "gram.cpp"
    break;

  case 2175: /* overlay_list: a_expr overlay_placing substr_from substr_for  */
#line 15115 "gram.y"
                                {
					(yyval.list) = list_make4((yyvsp[-3].node), (yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46282 "gram.cpp"
    break;

  case 2176: /* overlay_list: a_expr overlay_placing substr_from  */
#line 15119 "gram.y"
                                {
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46290 "gram.cpp"
    break;

  case 2177: /* overlay_placing: PLACING a_expr  */
#line 15126 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 46296 "gram.cpp"
    break;

  case 2178: /* position_list: b_expr IN_P b_expr  */
#line 15132 "gram.y"
                                                                                        { (yyval.list) = list_make2((yyvsp[0].node), (yyvsp[-2].node)); }
#line 46302 "gram.cpp"
    break;

  case 2179: /* position_list: %empty  */
#line 15133 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 46308 "gram.cpp"
    break;

  case 2180: /* substr_list: a_expr substr_from substr_for  */
#line 15150 "gram.y"
                                {
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46316 "gram.cpp"
    break;

  case 2181: /* substr_list: a_expr substr_for substr_from  */
#line 15154 "gram.y"
                                {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[0].node), (yyvsp[-1].node));
				}
#line 46325 "gram.cpp"
    break;

  case 2182: /* substr_list: a_expr substr_from  */
#line 15159 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46333 "gram.cpp"
    break;

  case 2183: /* substr_list: a_expr substr_for  */
#line 15163 "gram.y"
                                {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[-1].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[0].node),
												 SystemTypeName("int4"), -1));
				}
#line 46352 "gram.cpp"
    break;

  case 2184: /* substr_list: expr_list  */
#line 15178 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
				}
#line 46360 "gram.cpp"
    break;

  case 2185: /* substr_list: %empty  */
#line 15182 "gram.y"
                                { (yyval.list) = NIL; }
#line 46366 "gram.cpp"
    break;

  case 2186: /* substr_from: FROM a_expr  */
#line 15186 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46372 "gram.cpp"
    break;

  case 2187: /* substr_for: FOR a_expr  */
#line 15189 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46378 "gram.cpp"
    break;

  case 2188: /* trim_list: a_expr FROM expr_list  */
#line 15192 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[0].list), (yyvsp[-2].node)); }
#line 46384 "gram.cpp"
    break;

  case 2189: /* trim_list: FROM expr_list  */
#line 15193 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 46390 "gram.cpp"
    break;

  case 2190: /* trim_list: expr_list  */
#line 15194 "gram.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 46396 "gram.cpp"
    break;

  case 2191: /* in_expr: select_with_parens  */
#line 15198 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subselect = (yyvsp[0].node);
					/* other fields will be filled later */
					(yyval.node) = (Node *)n;
				}
#line 46407 "gram.cpp"
    break;

  case 2192: /* in_expr: '(' expr_list ')'  */
#line 15204 "gram.y"
                                                                                        { (yyval.node) = (Node *)(yyvsp[-1].list); }
#line 46413 "gram.cpp"
    break;

  case 2193: /* case_expr: CASE case_arg when_clause_list case_default END_P  */
#line 15215 "gram.y"
                                {
					CaseExpr *c = makeNode(CaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (Expr *) (yyvsp[-3].node);
					c->args = (yyvsp[-2].list);
					c->defresult = (Expr *) (yyvsp[-1].node);
					c->location = (yylsp[-4]);
					(yyval.node) = (Node *)c;
				}
#line 46427 "gram.cpp"
    break;

  case 2194: /* when_clause_list: when_clause  */
#line 15228 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46433 "gram.cpp"
    break;

  case 2195: /* when_clause_list: when_clause_list when_clause  */
#line 15229 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46439 "gram.cpp"
    break;

  case 2196: /* when_clause: WHEN when_operand THEN a_expr  */
#line 15234 "gram.y"
                                {
					CaseWhen *w = makeNode(CaseWhen);
					w->expr = (Expr *) (yyvsp[-2].node);
					w->result = (Expr *) (yyvsp[0].node);
					w->location = (yylsp[-3]);
					(yyval.node) = (Node *)w;
				}
#line 46451 "gram.cpp"
    break;

  case 2197: /* when_operand: a_expr  */
#line 15244 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46457 "gram.cpp"
    break;

  case 2198: /* when_operand: IS NOT DISTINCT FROM a_expr  */
#line 15245 "gram.y"
                                                        { (yyval.node) = makeIsNotDistinctFromNode((yyvsp[0].node),(yylsp[-3])); }
#line 46463 "gram.cpp"
    break;

  case 2199: /* case_default: ELSE a_expr  */
#line 15249 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46469 "gram.cpp"
    break;

  case 2200: /* case_default: %empty  */
#line 15250 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 46475 "gram.cpp"
    break;

  case 2201: /* case_arg: a_expr  */
#line 15253 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 46481 "gram.cpp"
    break;

  case 2202: /* case_arg: %empty  */
#line 15254 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 46487 "gram.cpp"
    break;

  case 2203: /* decode_expr: DECODE '(' a_expr search_result_list decode_default ')'  */
#line 15269 "gram.y"
                                {
					CaseExpr *c = makeNode(CaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (Expr *) (yyvsp[-3].node);
					c->args = (yyvsp[-2].list);
					c->defresult = (Expr *) (yyvsp[-1].node);
					(yyval.node) = (Node *) c;
				}
#line 46500 "gram.cpp"
    break;

  case 2204: /* search_result_list: search_result  */
#line 15280 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46506 "gram.cpp"
    break;

  case 2205: /* search_result_list: search_result_list search_result  */
#line 15281 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46512 "gram.cpp"
    break;

  case 2206: /* search_result: ',' a_expr ',' a_expr  */
#line 15286 "gram.y"
                                {
					Node *n = makeIsNotDistinctFromNode((yyvsp[-2].node),(yylsp[-2]));
					CaseWhen *w = makeNode(CaseWhen);
					w->expr = (Expr *) n;
					w->result = (Expr *) (yyvsp[0].node);
					(yyval.node) = (Node *) w;
				}
#line 46524 "gram.cpp"
    break;

  case 2207: /* decode_default: ',' a_expr  */
#line 15296 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46530 "gram.cpp"
    break;

  case 2208: /* decode_default: %empty  */
#line 15297 "gram.y"
                                                                                { (yyval.node) = NULL; }
#line 46536 "gram.cpp"
    break;

  case 2209: /* columnref: ColId  */
#line 15302 "gram.y"
                                {
					(yyval.node) = makeColumnRef((yyvsp[0].str), NIL, (yylsp[0]), yyscanner);
				}
#line 46544 "gram.cpp"
    break;

  case 2210: /* columnref: ColId indirection  */
#line 15306 "gram.y"
                                {
					(yyval.node) = makeColumnRef((yyvsp[-1].str), (yyvsp[0].list), (yylsp[-1]), yyscanner);
				}
#line 46552 "gram.cpp"
    break;

  case 2211: /* indirection_el: '.' attr_name  */
#line 15313 "gram.y"
                                {
					(yyval.node) = (Node *) makeString((yyvsp[0].str));
				}
#line 46560 "gram.cpp"
    break;

  case 2212: /* indirection_el: '.' '*'  */
#line 15317 "gram.y"
                                {
					(yyval.node) = (Node *) makeNode(A_Star);
				}
#line 46568 "gram.cpp"
    break;

  case 2213: /* indirection_el: '[' a_expr ']'  */
#line 15321 "gram.y"
                                {
					A_Indices *ai = makeNode(A_Indices);
					ai->lidx = NULL;
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (Node *) ai;
				}
#line 46579 "gram.cpp"
    break;

  case 2214: /* indirection_el: '[' a_expr ':' a_expr ']'  */
#line 15328 "gram.y"
                                {
					A_Indices *ai = makeNode(A_Indices);
					ai->lidx = (yyvsp[-3].node);
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (Node *) ai;
				}
#line 46590 "gram.cpp"
    break;

  case 2215: /* indirection: indirection_el  */
#line 15337 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46596 "gram.cpp"
    break;

  case 2216: /* indirection: indirection indirection_el  */
#line 15338 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46602 "gram.cpp"
    break;

  case 2217: /* opt_indirection: %empty  */
#line 15342 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 46608 "gram.cpp"
    break;

  case 2218: /* opt_indirection: opt_indirection indirection_el  */
#line 15343 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46614 "gram.cpp"
    break;

  case 2221: /* ctext_expr: a_expr  */
#line 15358 "gram.y"
                                                                { (yyval.node) = (Node *) (yyvsp[0].node); }
#line 46620 "gram.cpp"
    break;

  case 2222: /* ctext_expr: DEFAULT  */
#line 15360 "gram.y"
                                {
					SetToDefault *n = makeNode(SetToDefault);
					n->location = (yylsp[0]);
					(yyval.node) = (Node *) n;
				}
#line 46630 "gram.cpp"
    break;

  case 2223: /* ctext_expr_list: ctext_expr  */
#line 15368 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46636 "gram.cpp"
    break;

  case 2224: /* ctext_expr_list: ctext_expr_list ',' ctext_expr  */
#line 15369 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 46642 "gram.cpp"
    break;

  case 2225: /* ctext_row: '(' ctext_expr_list ')'  */
#line 15377 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 46648 "gram.cpp"
    break;

  case 2226: /* opt_target_list: target_list  */
#line 15387 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 46654 "gram.cpp"
    break;

  case 2227: /* opt_target_list: %empty  */
#line 15388 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 46660 "gram.cpp"
    break;

  case 2228: /* target_list: target_el  */
#line 15392 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 46666 "gram.cpp"
    break;

  case 2229: /* target_list: target_list ',' target_el  */
#line 15393 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 46672 "gram.cpp"
    break;

  case 2230: /* target_el: a_expr AS ColLabel  */
#line 15397 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[-2].node);
					(yyval.target)->location = (yylsp[-2]);
				}
#line 46684 "gram.cpp"
    break;

  case 2231: /* target_el: a_expr IDENT  */
#line 15419 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[-1].node);
					(yyval.target)->location = (yylsp[-1]);
				}
#line 46696 "gram.cpp"
    break;

  case 2232: /* target_el: a_expr ColLabelNoAs  */
#line 15427 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[-1].node);
					(yyval.target)->location = (yylsp[-1]);
				}
#line 46708 "gram.cpp"
    break;

  case 2233: /* target_el: a_expr  */
#line 15435 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[0].node);
					(yyval.target)->location = (yylsp[0]);
				}
#line 46720 "gram.cpp"
    break;

  case 2234: /* target_el: '*'  */
#line 15443 "gram.y"
                                {
					ColumnRef *n = makeNode(ColumnRef);
					n->fields = list_make1(makeNode(A_Star));
					n->location = (yylsp[0]);

					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)n;
					(yyval.target)->location = (yylsp[0]);
				}
#line 46736 "gram.cpp"
    break;

  case 2235: /* qualified_name_list: qualified_name  */
#line 15464 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].range)); }
#line 46742 "gram.cpp"
    break;

  case 2236: /* qualified_name_list: qualified_name_list ',' qualified_name  */
#line 15465 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
#line 46748 "gram.cpp"
    break;

  case 2237: /* qualified_name: ColId  */
#line 15477 "gram.y"
                                {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[0].str), (yylsp[0]));
				}
#line 46756 "gram.cpp"
    break;

  case 2238: /* qualified_name: ColId indirection  */
#line 15481 "gram.y"
                                {
					check_qualified_name((yyvsp[0].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[-1]));
					switch (list_length((yyvsp[0].list)))
					{
						case 1:
						    (yyval.range)->uid = NULL;
							(yyval.range)->catalogname = (yyvsp[-1].str);
							(yyval.range)->schemaname = NULL;
							(yyval.range)->relname = strVal(linitial((yyvsp[0].list)));
							break;
						case 2:
						    (yyval.range)->uid = NULL;
							(yyval.range)->catalogname = (yyvsp[-1].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[0].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[0].list)));
							break;
						case 3:
						    (yyval.range)->uid = (yyvsp[-1].str);
							(yyval.range)->catalogname = strVal(linitial((yyvsp[0].list)));
							(yyval.range)->schemaname = strVal(lsecond((yyvsp[0].list)));
							(yyval.range)->relname = strVal(lthird((yyvsp[0].list)));
							break;
						default:
							//ereport(ERROR, mdxn: ereport NameListToString
							//		errcode(ERRCODE_SYNTAX_ERROR),
							//		 errmsg("improper qualified name (too many dotted names): %s",
							//				NameListToString(lcons(makeString($1), $2))),
							//		 parser_errposition(@1));
							break;
					}
				}
#line 46793 "gram.cpp"
    break;

  case 2239: /* name_list: name  */
#line 15516 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46799 "gram.cpp"
    break;

  case 2240: /* name_list: name_list ',' name  */
#line 15518 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 46805 "gram.cpp"
    break;

  case 2241: /* name: ColId  */
#line 15522 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46811 "gram.cpp"
    break;

  case 2242: /* database_name: ColId  */
#line 15525 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46817 "gram.cpp"
    break;

  case 2243: /* access_method: ColId  */
#line 15528 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46823 "gram.cpp"
    break;

  case 2244: /* attr_name: ColLabel  */
#line 15530 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46829 "gram.cpp"
    break;

  case 2245: /* index_name: ColId  */
#line 15532 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46835 "gram.cpp"
    break;

  case 2246: /* file_name: Sconst  */
#line 15534 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46841 "gram.cpp"
    break;

  case 2247: /* func_name: type_function_name  */
#line 15545 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46847 "gram.cpp"
    break;

  case 2248: /* func_name: ColId indirection  */
#line 15547 "gram.y"
                                        {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)),
											 yyscanner);
					}
#line 46856 "gram.cpp"
    break;

  case 2249: /* AexprConst: Iconst  */
#line 15558 "gram.y"
                                {
					(yyval.node) = makeIntConst((yyvsp[0].ival), (yylsp[0]));
				}
#line 46864 "gram.cpp"
    break;

  case 2250: /* AexprConst: FCONST  */
#line 15562 "gram.y"
                                {
					(yyval.node) = makeFloatConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46872 "gram.cpp"
    break;

  case 2251: /* AexprConst: Sconst  */
#line 15566 "gram.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46880 "gram.cpp"
    break;

  case 2252: /* AexprConst: BCONST  */
#line 15570 "gram.y"
                                {
					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46888 "gram.cpp"
    break;

  case 2253: /* AexprConst: XCONST  */
#line 15574 "gram.y"
                                {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46901 "gram.cpp"
    break;

  case 2254: /* AexprConst: func_name Sconst  */
#line 15583 "gram.y"
                                {
					/* generic type 'literal' syntax */
					TypeName *t = makeTypeNameFromNameList((yyvsp[-1].list));
					t->location = (yylsp[-1]);
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 46912 "gram.cpp"
    break;

  case 2255: /* AexprConst: func_name '(' func_arg_list opt_sort_clause ')' Sconst  */
#line 15590 "gram.y"
                                {
					/* generic syntax with a type modifier */
					TypeName *t = makeTypeNameFromNameList((yyvsp[-5].list));
					ListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow NamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[-3].list))
					{
						NamedArgExpr *arg = (NamedArgExpr *) lfirst(lc);

						if (IsA(arg, NamedArgExpr))
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location));
					}
					if ((yyvsp[-2].list) != NIL)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[-2])));

					t->typmods = (yyvsp[-3].list);
					t->location = (yylsp[-5]);
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 46948 "gram.cpp"
    break;

  case 2256: /* AexprConst: ConstTypename Sconst  */
#line 15622 "gram.y"
                                {
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), (yyvsp[-1].typnam));
				}
#line 46956 "gram.cpp"
    break;

  case 2257: /* AexprConst: ConstInterval Sconst opt_interval  */
#line 15626 "gram.y"
                                {
					TypeName *t = (yyvsp[-2].typnam);
					t->typmods = (yyvsp[0].list);
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 46966 "gram.cpp"
    break;

  case 2258: /* AexprConst: ConstInterval '(' Iconst ')' Sconst opt_interval  */
#line 15632 "gram.y"
                                {
					TypeName *t = (yyvsp[-5].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						if (list_length((yyvsp[0].list)) != 1)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("interval precision specified twice"),
									 parser_errposition((yylsp[-5])));
						t->typmods = lappend((yyvsp[0].list), makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 46987 "gram.cpp"
    break;

  case 2259: /* AexprConst: TRUE_P  */
#line 15649 "gram.y"
                                {
					(yyval.node) = makeBoolAConst(TRUE, (yylsp[0]));
				}
#line 46995 "gram.cpp"
    break;

  case 2260: /* AexprConst: FALSE_P  */
#line 15653 "gram.y"
                                {
					(yyval.node) = makeBoolAConst(FALSE, (yylsp[0]));
				}
#line 47003 "gram.cpp"
    break;

  case 2261: /* AexprConst: NULL_P  */
#line 15657 "gram.y"
                                {
					(yyval.node) = makeNullAConst((yylsp[0]));
				}
#line 47011 "gram.cpp"
    break;

  case 2262: /* Iconst: ICONST  */
#line 15662 "gram.y"
                                                                                        { (yyval.ival) = (yyvsp[0].ival); }
#line 47017 "gram.cpp"
    break;

  case 2263: /* Sconst: SCONST  */
#line 15663 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 47023 "gram.cpp"
    break;

  case 2264: /* RoleId: NonReservedWord  */
#line 15664 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 47029 "gram.cpp"
    break;

  case 2265: /* QueueId: NonReservedWord  */
#line 15665 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 47035 "gram.cpp"
    break;

  case 2266: /* role_list: RoleId  */
#line 15668 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 47041 "gram.cpp"
    break;

  case 2267: /* role_list: role_list ',' RoleId  */
#line 15670 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 47047 "gram.cpp"
    break;

  case 2268: /* SignedIconst: Iconst  */
#line 15673 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 47053 "gram.cpp"
    break;

  case 2269: /* SignedIconst: '+' Iconst  */
#line 15674 "gram.y"
                                                                                        { (yyval.ival) = + (yyvsp[0].ival); }
#line 47059 "gram.cpp"
    break;

  case 2270: /* SignedIconst: '-' Iconst  */
#line 15675 "gram.y"
                                                                                        { (yyval.ival) = - (yyvsp[0].ival); }
#line 47065 "gram.cpp"
    break;

  case 2271: /* ColId: IDENT  */
#line 15691 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 47071 "gram.cpp"
    break;

  case 2272: /* ColId: unreserved_keyword  */
#line 15692 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47077 "gram.cpp"
    break;

  case 2273: /* ColId: col_name_keyword  */
#line 15693 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47083 "gram.cpp"
    break;

  case 2274: /* type_function_name: IDENT  */
#line 15698 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 47089 "gram.cpp"
    break;

  case 2275: /* type_function_name: unreserved_keyword  */
#line 15699 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47095 "gram.cpp"
    break;

  case 2276: /* type_function_name: type_func_name_keyword  */
#line 15700 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47101 "gram.cpp"
    break;

  case 2277: /* NonReservedWord: IDENT  */
#line 15705 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 47107 "gram.cpp"
    break;

  case 2278: /* NonReservedWord: unreserved_keyword  */
#line 15706 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47113 "gram.cpp"
    break;

  case 2279: /* NonReservedWord: col_name_keyword  */
#line 15707 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47119 "gram.cpp"
    break;

  case 2280: /* NonReservedWord: type_func_name_keyword  */
#line 15708 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47125 "gram.cpp"
    break;

  case 2281: /* ColLabel: IDENT  */
#line 15714 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 47131 "gram.cpp"
    break;

  case 2282: /* ColLabel: unreserved_keyword  */
#line 15715 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47137 "gram.cpp"
    break;

  case 2283: /* ColLabel: col_name_keyword  */
#line 15716 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47143 "gram.cpp"
    break;

  case 2284: /* ColLabel: type_func_name_keyword  */
#line 15717 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47149 "gram.cpp"
    break;

  case 2285: /* ColLabel: reserved_keyword  */
#line 15718 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47155 "gram.cpp"
    break;

  case 2602: /* ColLabelNoAs: keywords_ok_in_alias_no_as  */
#line 16067 "gram.y"
                                             { (yyval.str)=pstrdup((yyvsp[0].keyword)); }
#line 47161 "gram.cpp"
    break;

  case 2608: /* PartitionColId: PartitionIdentKeyword  */
#line 16077 "gram.y"
                                      { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47167 "gram.cpp"
    break;

  case 2609: /* PartitionColId: IDENT  */
#line 16078 "gram.y"
                                { (yyval.str) = pstrdup((yyvsp[0].str)); }
#line 47173 "gram.cpp"
    break;


#line 47177 "gram.cpp"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
    }

  yyerror_range[1] = yylloc;
  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, yyscanner);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  ++yylsp;
  YYLLOC_DEFAULT (*yylsp, yyerror_range, 2);

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, yyscanner);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

#line 16555 "gram.y"


/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static Node *
makeColumnRef(char *colname, List *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a ColumnRef node, with an A_Indirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the ColumnRef node.
	 */
	ColumnRef  *c = makeNode(ColumnRef);
	int		nfields = 0;
	ListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), A_Indices))
		{
			A_Indirection *i = makeNode(A_Indirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to A_Indirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = reinterpret_cast<Node *>(c);
			return reinterpret_cast<Node *>(i);
		}
		else if (IsA(lfirst(l), A_Star))
		{
			/* We only allow '*' at the end of a ColumnRef */
			if (_it_ != indirection->lst.end())
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return reinterpret_cast<Node *>(c);
}

static Node *
makeTypeCast(Node *arg, TypeName *type, int location)
{
	TypeCast *n = makeNode(TypeCast);
	n->arg = arg;
	n->typeName = type;
	n->location = location;
	return (Node *) n;
}

static Node *
makeStringConst(char *str, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_String;
	n->val.val.str = str;
	n->location = location;

	return (Node *)n;
}

static Node *
makeStringConstCast(char *str, int location, TypeName *type)
{
	Node *s = makeStringConst(str, location);

	return makeTypeCast(s, type, -1);
}

static Node *
makeIntConst(int val, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_Integer;
	n->val.val.ival = val;
	n->location = location;

	return (Node *)n;
}

static Node *
makeFloatConst(char *str, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_Float;
	n->val.val.str = str;
	n->location = location;

	return reinterpret_cast<Node *>(n);
}

static Node *
makeBitStringConst(char *str, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_BitString;
	n->val.val.str = str;
	n->location = location;

	return reinterpret_cast<Node *>(n);
}

static Node *
makeNullAConst(int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_Null;
	n->location = location;

	return reinterpret_cast<Node *>(n);
}

static Node *
makeAConst(Value *v, int location)
{
	Node *n;

	switch (v->type)
	{
		case T_Float:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_Integer:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_String:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an A_Const string node and put it inside a boolean cast.
 */
static Node *
makeBoolAConst(bool state, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_String;
	n->val.val.str = (state ? pstrdup("t") : pstrdup("f"));
	n->location = location;

	return makeTypeCast(reinterpret_cast<Node *>(n), SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(List *names, core_yyscan_t yyscanner)
{
	ListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), String))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static List *
check_func_name(List *names, core_yyscan_t yyscanner)
{
	ListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), String))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static List *
check_indirection(List *indirection, core_yyscan_t yyscanner)
{
	ListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), A_Star))
		{
			if (++_it_ != indirection->lst.end())
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* extractArgTypes()
 * Given a list of FunctionParameter nodes, extract a list of just the
 * argument types (TypeNames) for input parameters only.  This is what
 * is needed to look up an existing function, which is what is wanted by
 * the productions that use this call.
 */
static List *
extractArgTypes(List *parameters)
{
	List	   *result = NIL;
	ListCell   *i;

	foreach(i, parameters)
	{
		FunctionParameter *p = reinterpret_cast<FunctionParameter *>(lfirst(i));

		if (p->mode != FUNC_PARAM_OUT && p->mode != FUNC_PARAM_TABLE)
			result = lappend(result, p->argType);
	}
	return result;
}

/* extractAggrArgTypes()
 * As above, but work from the output of the aggr_args production.
 */
static List *
extractAggrArgTypes(List *aggrargs)
{
	Assert(list_length(aggrargs) == 2);
	return extractArgTypes(reinterpret_cast<List *>(linitial(aggrargs)));
}

/* makeOrderedSetArgs()
 * Build the result of the aggr_args production (which see the comments for).
 * This handles only the case where both given lists are nonempty, so that
 * we have to deal with multiple VARIADIC arguments.
 */
static List *
makeOrderedSetArgs(List *directargs, List *orderedargs,
				   core_yyscan_t yyscanner)
{
	FunctionParameter *lastd = reinterpret_cast<FunctionParameter *>(llast(directargs));
	int			ndirectargs;

	/* No restriction unless last direct arg is VARIADIC */
	if (lastd->mode == FUNC_PARAM_VARIADIC)
	{
		FunctionParameter *firsto = reinterpret_cast<FunctionParameter *>(linitial(orderedargs));

		/*
		 * We ignore the names, though the aggr_arg production allows them;
		 * it doesn't allow default values, so those need not be checked.
		 */
		if (list_length(orderedargs) != 1 ||
			firsto->mode != FUNC_PARAM_VARIADIC ||
			!equal(lastd->argType, firsto->argType))
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 errmsg("an ordered-set aggregate with a VARIADIC direct argument must have one VARIADIC aggregated argument of the same data type"),
					 parser_errposition(exprLocation(reinterpret_cast<Node *>(firsto))));

		/* OK, drop the duplicate VARIADIC argument from the internal form */
		orderedargs = NIL;
	}

	/* don't merge into the next line, as list_concat changes directargs */
	ndirectargs = list_length(directargs);

	return list_make2(list_concat(directargs, orderedargs),
					  makeInteger(ndirectargs));
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in SelectStmt productions.
 */
static void
insertSelectOptions(SelectStmt *stmt,
					List *sortClause, List *lockingClause,
					Node *limitOffset, Node *limitCount,
					WithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, SelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation(reinterpret_cast<Node *>(sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset)));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount)));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation(reinterpret_cast<Node *>(withClause))));
		stmt->withClause = withClause;
	}
}

static Node *
makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg)
{
	SelectStmt *n = makeNode(SelectStmt);

	n->op = op;
	n->all = all;
	n->larg = reinterpret_cast<SelectStmt *>(larg);
	n->rarg = reinterpret_cast<SelectStmt *>(rarg);
	return (Node *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
List *
SystemFuncName(char *name)
{
	return list_make2(makeString("pg_catalog"), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
TypeName *
SystemTypeName(char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString("pg_catalog"),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static Node *
doNegate(Node *n, int location)
{
	if (IsA(n, A_Const))
	{
		A_Const *con = reinterpret_cast<A_Const *>(n);

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_Integer)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_Float)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (Node *) makeSimpleA_Expr(AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(Value *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, Float));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static Node *
makeAArrayExpr(List *elements, int location)
{
	A_ArrayExpr *n = makeNode(A_ArrayExpr);

	n->elements = elements;
	n->location = location;
	return (Node *) n;
}

static Node *
makeXmlExpr(XmlExprOp op, char *name, List *named_args, List *args,
			int location)
{
	XmlExpr		*x = makeNode(XmlExpr);

	x->op = op;
	x->name = name;
	/*
	 * named_args is a list of ResTarget; it'll be split apart into separate
	 * expression and name lists in transformXmlExpr().
	 */
	x->named_args = named_args;
	x->arg_names = NIL;
	x->args = args;
	/* xmloption, if relevant, must be filled in by caller */
	/* type and typmod will be filled in during parse analysis */
	x->type = InvalidOid;			/* marks the node as not analyzed */
	x->location = location;
	return reinterpret_cast<Node *>(x);
}

/*
 * Merge the input and output parameters of a table function.
 */
static List *
mergeTableFuncParameters(List *func_args, List *columns)
{
	ListCell   *lc;

	/* Explicit OUT and INOUT parameters shouldn't be used in this syntax */
	foreach(lc, func_args)
	{
		FunctionParameter *p = reinterpret_cast<FunctionParameter *>(lfirst(lc));

		switch (p->mode)
		{
			/* Input modes */
			case FUNC_PARAM_IN:
			case FUNC_PARAM_VARIADIC:
				break;

			/* Output modes */
			case FUNC_PARAM_TABLE:
				Insist(false);  /* not feasible */
				break;
			case FUNC_PARAM_OUT:
				ereport(ERROR,
						errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("OUT arguments aren't allowed in TABLE functions"));
				break;
			case FUNC_PARAM_INOUT:
				ereport(ERROR,
						errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("INOUT arguments aren't allowed in TABLE functions"));
				break;
		}
	}

	return list_concat(func_args, columns);
}

/*
 * Determine return type of a TABLE function.  A single result column
 * returns setof that column's type; otherwise return setof record.
 */
static TypeName *
TableFuncTypeName(List *columns)
{
	TypeName *result;

	if (list_length(columns) == 1)
	{
		FunctionParameter *p = reinterpret_cast<FunctionParameter *>(linitial(columns));

		result = reinterpret_cast<TypeName *>(copyObject(p->argType));
	}
	else
		result = SystemTypeName("record");

	result->setof = true;

	return result;
}

static void
checkWindowExclude(void)
{
	/*
	 * because the syntax has historically existed without doing anything
	 * we have chosen to add a guc to allow simply ignoring the exclude clause
	 * rather than raising an error.
	 */
	if (gp_ignore_window_exclude)
		return;

	/* MPP-13628 */
	ereport(ERROR,
			errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
			 errmsg("window EXCLUDE clause not yet implemented"));
}

/*
 * Create the IS_NOT_DISTINCT_FROM expression node
 *     used by CASE x WHEN IS NOT DISTINCT FROM and DECODE()
 */
static Node*
makeIsNotDistinctFromNode(Node *expr, int position)
{
	Node *n = reinterpret_cast<Node *>(makeA_Expr(AEXPR_NOT, NIL, NULL,
								reinterpret_cast<Node *>(makeSimpleA_Expr(AEXPR_DISTINCT,
	 													"=", NULL, expr, position)), position));
	return n;
}

/*
 * Convert a list of (dotted) names to a RangeVar (like
 * makeRangeVarFromNameList, but with position support).  The
 * "AnyName" refers to the any_name production in the grammar.
 */
static RangeVar *
makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner)
{
	RangeVar *r = makeNode(RangeVar);

	switch (list_length(names))
	{
		case 1:
			r->catalogname = NULL;
			r->schemaname = NULL;
			r->relname = strVal(linitial(names));
			break;
		case 2:
			r->catalogname = NULL;
			r->schemaname = strVal(linitial(names));
			r->relname = strVal(lsecond(names));
			break;
		case 3:
			r->catalogname = strVal(linitial(names));
			r->schemaname = strVal(lsecond(names));
			r->relname = strVal(lthird(names));
			break;
		default:
			//ereport(ERROR, mdxn: ereport NameListToString
			//		errcode(ERRCODE_SYNTAX_ERROR),
			//		 errmsg("improper qualified name (too many dotted names): %s",
			//				NameListToString(names)),
			//		 parser_errposition(position));
			break;
	}

	r->relpersistence = RELPERSISTENCE_PERMANENT;
	r->location = position;

	return r;
}

/* Separate Constraint nodes from COLLATE clauses in a ColQualList */
static void
SplitColQualList(List *qualList,
				 List **constraintList, CollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	*collClause = NULL;
	for (auto cell = qualList->lst.begin(); cell != qualList->lst.end(); )
	{
		Node   *n = reinterpret_cast<Node *>(lfirst(cell));
		if (IsA(n, Constraint))
		{
			/* keep it in list */
			++cell;
			continue;
		}
		if (IsA(n, CollateClause))
		{
			CollateClause *c = reinterpret_cast<CollateClause *>(n);

			if (*collClause)
				ereport(ERROR,
						errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		cell = qualList->lst.erase(cell);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view definition as the query.
 * ----------
 */
static Node *
makeRecursiveViewSelect(char *relname, List *aliases, Node *query)
{
	SelectStmt *s = makeNode(SelectStmt);
	WithClause *w = makeNode(WithClause);
	CommonTableExpr *cte = makeNode(CommonTableExpr);
	List	   *tl = NIL;
	ListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		ResTarget *rt = makeNode(ResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return reinterpret_cast<Node *>(s);
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}
