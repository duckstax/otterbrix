/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         base_yyparse
#define yylex           base_yylex
#define yyerror         base_yyerror
#define yydebug         base_yydebug
#define yynerrs         base_yynerrs

/* First part of user prologue.  */
#line 1 "gram.y"


/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 2006-2010, Greenplum inc
 * Portions Copyright (c) 2012-Present Pivotal Software, Inc.
 * Portions Copyright (c) 1996-2014, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET SQL_inheritance TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.  The handling of SQL_inheritance is
 *	  a good example.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include <ctype.h>
#include <cstring>
#include <limits.h>
#include "pg_functions.h"
#include "guc.h"
#include "nodes/makefuncs.h"
#include "nodes/parsenodes.h"
#include "gramparse.h"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree

/* Private struct for the result of privilege_target production */
typedef struct PrivTarget
{
	GrantTargetType targtype;
	GrantObjectType objtype;
	List	   *objs;
} PrivTarget;

/* ConstraintAttributeSpec yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static Node *makeColumnRef(char *colname, List *indirection,
						   int location, core_yyscan_t yyscanner);
static Node *makeTypeCast(Node *arg, TypeName *type, int location);
static Node *makeStringConst(char *str, int location);
static Node *makeStringConstCast(char *str, int location, TypeName *type);
static Node *makeIntConst(int val, int location);
static Node *makeFloatConst(char *str, int location);
static Node *makeBitStringConst(char *str, int location);
static Node *makeNullAConst(int location);
static Node *makeAConst(Value *v, int location);
static Node *makeBoolAConst(bool state, int location);
static void check_qualified_name(List *names, core_yyscan_t yyscanner);
static List *check_func_name(List *names, core_yyscan_t yyscanner);
static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
static List *extractArgTypes(List *parameters);
static List *extractAggrArgTypes(List *aggrargs);
static List *makeOrderedSetArgs(List *directargs, List *orderedargs,
								core_yyscan_t yyscanner);
static void insertSelectOptions(SelectStmt *stmt,
								List *sortClause, List *lockingClause,
								Node *limitOffset, Node *limitCount,
								WithClause *withClause,
								core_yyscan_t yyscanner);
static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
static Node *doNegate(Node *n, int location);
static void doNegateFloat(Value *v);
static Node *makeAArrayExpr(List *elements, int location);
static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
						 List *args, int location);
static List *mergeTableFuncParameters(List *func_args, List *columns);
static TypeName *TableFuncTypeName(List *columns);
static RangeVar *makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner);
static void SplitColQualList(List *qualList,
							 List **constraintList, CollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);

static void checkWindowExclude(void);
static Node *makeIsNotDistinctFromNode(Node *expr, int position);
List *SystemFuncName(char *name);
TypeName *SystemTypeName(char *name);


#line 240 "gram.cpp"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "gram.hpp"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_IDENT = 3,                      /* IDENT  */
  YYSYMBOL_FCONST = 4,                     /* FCONST  */
  YYSYMBOL_SCONST = 5,                     /* SCONST  */
  YYSYMBOL_BCONST = 6,                     /* BCONST  */
  YYSYMBOL_XCONST = 7,                     /* XCONST  */
  YYSYMBOL_Op = 8,                         /* Op  */
  YYSYMBOL_ICONST = 9,                     /* ICONST  */
  YYSYMBOL_PARAM = 10,                     /* PARAM  */
  YYSYMBOL_TYPECAST = 11,                  /* TYPECAST  */
  YYSYMBOL_DOT_DOT = 12,                   /* DOT_DOT  */
  YYSYMBOL_COLON_EQUALS = 13,              /* COLON_EQUALS  */
  YYSYMBOL_ABORT_P = 14,                   /* ABORT_P  */
  YYSYMBOL_ABSOLUTE_P = 15,                /* ABSOLUTE_P  */
  YYSYMBOL_ACCESS = 16,                    /* ACCESS  */
  YYSYMBOL_ACTION = 17,                    /* ACTION  */
  YYSYMBOL_ADD_P = 18,                     /* ADD_P  */
  YYSYMBOL_ADMIN = 19,                     /* ADMIN  */
  YYSYMBOL_AFTER = 20,                     /* AFTER  */
  YYSYMBOL_AGGREGATE = 21,                 /* AGGREGATE  */
  YYSYMBOL_ALL = 22,                       /* ALL  */
  YYSYMBOL_ALSO = 23,                      /* ALSO  */
  YYSYMBOL_ALTER = 24,                     /* ALTER  */
  YYSYMBOL_ALWAYS = 25,                    /* ALWAYS  */
  YYSYMBOL_ANALYSE = 26,                   /* ANALYSE  */
  YYSYMBOL_ANALYZE = 27,                   /* ANALYZE  */
  YYSYMBOL_AND = 28,                       /* AND  */
  YYSYMBOL_ANY = 29,                       /* ANY  */
  YYSYMBOL_ARRAY = 30,                     /* ARRAY  */
  YYSYMBOL_AS = 31,                        /* AS  */
  YYSYMBOL_ASC = 32,                       /* ASC  */
  YYSYMBOL_ASSERTION = 33,                 /* ASSERTION  */
  YYSYMBOL_ASSIGNMENT = 34,                /* ASSIGNMENT  */
  YYSYMBOL_ASYMMETRIC = 35,                /* ASYMMETRIC  */
  YYSYMBOL_AT = 36,                        /* AT  */
  YYSYMBOL_ATTRIBUTE = 37,                 /* ATTRIBUTE  */
  YYSYMBOL_AUTHORIZATION = 38,             /* AUTHORIZATION  */
  YYSYMBOL_BACKWARD = 39,                  /* BACKWARD  */
  YYSYMBOL_BEFORE = 40,                    /* BEFORE  */
  YYSYMBOL_BEGIN_P = 41,                   /* BEGIN_P  */
  YYSYMBOL_BETWEEN = 42,                   /* BETWEEN  */
  YYSYMBOL_BIGINT = 43,                    /* BIGINT  */
  YYSYMBOL_BINARY = 44,                    /* BINARY  */
  YYSYMBOL_BIT = 45,                       /* BIT  */
  YYSYMBOL_BOOLEAN_P = 46,                 /* BOOLEAN_P  */
  YYSYMBOL_BOTH = 47,                      /* BOTH  */
  YYSYMBOL_BY = 48,                        /* BY  */
  YYSYMBOL_CACHE = 49,                     /* CACHE  */
  YYSYMBOL_CALLED = 50,                    /* CALLED  */
  YYSYMBOL_CASCADE = 51,                   /* CASCADE  */
  YYSYMBOL_CASCADED = 52,                  /* CASCADED  */
  YYSYMBOL_CASE = 53,                      /* CASE  */
  YYSYMBOL_CAST = 54,                      /* CAST  */
  YYSYMBOL_CATALOG_P = 55,                 /* CATALOG_P  */
  YYSYMBOL_CHAIN = 56,                     /* CHAIN  */
  YYSYMBOL_CHAR_P = 57,                    /* CHAR_P  */
  YYSYMBOL_CHARACTER = 58,                 /* CHARACTER  */
  YYSYMBOL_CHARACTERISTICS = 59,           /* CHARACTERISTICS  */
  YYSYMBOL_CHECK = 60,                     /* CHECK  */
  YYSYMBOL_CHECKPOINT = 61,                /* CHECKPOINT  */
  YYSYMBOL_CLASS = 62,                     /* CLASS  */
  YYSYMBOL_CLOSE = 63,                     /* CLOSE  */
  YYSYMBOL_CLUSTER = 64,                   /* CLUSTER  */
  YYSYMBOL_COALESCE = 65,                  /* COALESCE  */
  YYSYMBOL_COLLATE = 66,                   /* COLLATE  */
  YYSYMBOL_COLLATION = 67,                 /* COLLATION  */
  YYSYMBOL_COLUMN = 68,                    /* COLUMN  */
  YYSYMBOL_COMMENT = 69,                   /* COMMENT  */
  YYSYMBOL_COMMENTS = 70,                  /* COMMENTS  */
  YYSYMBOL_COMMIT = 71,                    /* COMMIT  */
  YYSYMBOL_COMMITTED = 72,                 /* COMMITTED  */
  YYSYMBOL_CONCURRENCY = 73,               /* CONCURRENCY  */
  YYSYMBOL_CONCURRENTLY = 74,              /* CONCURRENTLY  */
  YYSYMBOL_CONFIGURATION = 75,             /* CONFIGURATION  */
  YYSYMBOL_CONNECTION = 76,                /* CONNECTION  */
  YYSYMBOL_CONSTRAINT = 77,                /* CONSTRAINT  */
  YYSYMBOL_CONSTRAINTS = 78,               /* CONSTRAINTS  */
  YYSYMBOL_CONTENT_P = 79,                 /* CONTENT_P  */
  YYSYMBOL_CONTINUE_P = 80,                /* CONTINUE_P  */
  YYSYMBOL_CONVERSION_P = 81,              /* CONVERSION_P  */
  YYSYMBOL_COPY = 82,                      /* COPY  */
  YYSYMBOL_COST = 83,                      /* COST  */
  YYSYMBOL_CREATE = 84,                    /* CREATE  */
  YYSYMBOL_CROSS = 85,                     /* CROSS  */
  YYSYMBOL_CSV = 86,                       /* CSV  */
  YYSYMBOL_CURRENT_P = 87,                 /* CURRENT_P  */
  YYSYMBOL_CURRENT_CATALOG = 88,           /* CURRENT_CATALOG  */
  YYSYMBOL_CURRENT_DATE = 89,              /* CURRENT_DATE  */
  YYSYMBOL_CURRENT_ROLE = 90,              /* CURRENT_ROLE  */
  YYSYMBOL_CURRENT_SCHEMA = 91,            /* CURRENT_SCHEMA  */
  YYSYMBOL_CURRENT_TIME = 92,              /* CURRENT_TIME  */
  YYSYMBOL_CURRENT_TIMESTAMP = 93,         /* CURRENT_TIMESTAMP  */
  YYSYMBOL_CURRENT_USER = 94,              /* CURRENT_USER  */
  YYSYMBOL_CURSOR = 95,                    /* CURSOR  */
  YYSYMBOL_CYCLE = 96,                     /* CYCLE  */
  YYSYMBOL_DATA_P = 97,                    /* DATA_P  */
  YYSYMBOL_DATABASE = 98,                  /* DATABASE  */
  YYSYMBOL_DAY_P = 99,                     /* DAY_P  */
  YYSYMBOL_DEALLOCATE = 100,               /* DEALLOCATE  */
  YYSYMBOL_DEC = 101,                      /* DEC  */
  YYSYMBOL_DECIMAL_P = 102,                /* DECIMAL_P  */
  YYSYMBOL_DECLARE = 103,                  /* DECLARE  */
  YYSYMBOL_DEFAULT = 104,                  /* DEFAULT  */
  YYSYMBOL_DEFAULTS = 105,                 /* DEFAULTS  */
  YYSYMBOL_DEFERRABLE = 106,               /* DEFERRABLE  */
  YYSYMBOL_DEFERRED = 107,                 /* DEFERRED  */
  YYSYMBOL_DEFINER = 108,                  /* DEFINER  */
  YYSYMBOL_DELETE_P = 109,                 /* DELETE_P  */
  YYSYMBOL_DELIMITER = 110,                /* DELIMITER  */
  YYSYMBOL_DELIMITERS = 111,               /* DELIMITERS  */
  YYSYMBOL_DESC = 112,                     /* DESC  */
  YYSYMBOL_DICTIONARY = 113,               /* DICTIONARY  */
  YYSYMBOL_DISABLE_P = 114,                /* DISABLE_P  */
  YYSYMBOL_DISCARD = 115,                  /* DISCARD  */
  YYSYMBOL_DISTINCT = 116,                 /* DISTINCT  */
  YYSYMBOL_DO = 117,                       /* DO  */
  YYSYMBOL_DOCUMENT_P = 118,               /* DOCUMENT_P  */
  YYSYMBOL_DOMAIN_P = 119,                 /* DOMAIN_P  */
  YYSYMBOL_DOUBLE_P = 120,                 /* DOUBLE_P  */
  YYSYMBOL_DROP = 121,                     /* DROP  */
  YYSYMBOL_EACH = 122,                     /* EACH  */
  YYSYMBOL_ELSE = 123,                     /* ELSE  */
  YYSYMBOL_ENABLE_P = 124,                 /* ENABLE_P  */
  YYSYMBOL_ENCODING = 125,                 /* ENCODING  */
  YYSYMBOL_ENCRYPTED = 126,                /* ENCRYPTED  */
  YYSYMBOL_END_P = 127,                    /* END_P  */
  YYSYMBOL_ENDPOINT = 128,                 /* ENDPOINT  */
  YYSYMBOL_ENUM_P = 129,                   /* ENUM_P  */
  YYSYMBOL_ESCAPE = 130,                   /* ESCAPE  */
  YYSYMBOL_EVENT = 131,                    /* EVENT  */
  YYSYMBOL_EXCEPT = 132,                   /* EXCEPT  */
  YYSYMBOL_EXCLUDE = 133,                  /* EXCLUDE  */
  YYSYMBOL_EXCLUDING = 134,                /* EXCLUDING  */
  YYSYMBOL_EXCLUSIVE = 135,                /* EXCLUSIVE  */
  YYSYMBOL_EXECUTE = 136,                  /* EXECUTE  */
  YYSYMBOL_EXISTS = 137,                   /* EXISTS  */
  YYSYMBOL_EXPLAIN = 138,                  /* EXPLAIN  */
  YYSYMBOL_EXTENSION = 139,                /* EXTENSION  */
  YYSYMBOL_EXTERNAL = 140,                 /* EXTERNAL  */
  YYSYMBOL_EXTRACT = 141,                  /* EXTRACT  */
  YYSYMBOL_FALSE_P = 142,                  /* FALSE_P  */
  YYSYMBOL_FAMILY = 143,                   /* FAMILY  */
  YYSYMBOL_FETCH = 144,                    /* FETCH  */
  YYSYMBOL_FILTER = 145,                   /* FILTER  */
  YYSYMBOL_FIRST_P = 146,                  /* FIRST_P  */
  YYSYMBOL_FLOAT_P = 147,                  /* FLOAT_P  */
  YYSYMBOL_FOLLOWING = 148,                /* FOLLOWING  */
  YYSYMBOL_FOR = 149,                      /* FOR  */
  YYSYMBOL_FORCE = 150,                    /* FORCE  */
  YYSYMBOL_FOREIGN = 151,                  /* FOREIGN  */
  YYSYMBOL_FORWARD = 152,                  /* FORWARD  */
  YYSYMBOL_FREEZE = 153,                   /* FREEZE  */
  YYSYMBOL_FROM = 154,                     /* FROM  */
  YYSYMBOL_FULL = 155,                     /* FULL  */
  YYSYMBOL_FUNCTION = 156,                 /* FUNCTION  */
  YYSYMBOL_FUNCTIONS = 157,                /* FUNCTIONS  */
  YYSYMBOL_GLOBAL = 158,                   /* GLOBAL  */
  YYSYMBOL_GRANT = 159,                    /* GRANT  */
  YYSYMBOL_GRANTED = 160,                  /* GRANTED  */
  YYSYMBOL_GREATEST = 161,                 /* GREATEST  */
  YYSYMBOL_GROUP_P = 162,                  /* GROUP_P  */
  YYSYMBOL_HANDLER = 163,                  /* HANDLER  */
  YYSYMBOL_HAVING = 164,                   /* HAVING  */
  YYSYMBOL_HEADER_P = 165,                 /* HEADER_P  */
  YYSYMBOL_HOLD = 166,                     /* HOLD  */
  YYSYMBOL_HOUR_P = 167,                   /* HOUR_P  */
  YYSYMBOL_IDENTITY_P = 168,               /* IDENTITY_P  */
  YYSYMBOL_IF_P = 169,                     /* IF_P  */
  YYSYMBOL_ILIKE = 170,                    /* ILIKE  */
  YYSYMBOL_IMMEDIATE = 171,                /* IMMEDIATE  */
  YYSYMBOL_IMMUTABLE = 172,                /* IMMUTABLE  */
  YYSYMBOL_IMPLICIT_P = 173,               /* IMPLICIT_P  */
  YYSYMBOL_IN_P = 174,                     /* IN_P  */
  YYSYMBOL_INCLUDING = 175,                /* INCLUDING  */
  YYSYMBOL_INCREMENT = 176,                /* INCREMENT  */
  YYSYMBOL_INDEX = 177,                    /* INDEX  */
  YYSYMBOL_INDEXES = 178,                  /* INDEXES  */
  YYSYMBOL_INHERIT = 179,                  /* INHERIT  */
  YYSYMBOL_INHERITS = 180,                 /* INHERITS  */
  YYSYMBOL_INITIALLY = 181,                /* INITIALLY  */
  YYSYMBOL_INLINE_P = 182,                 /* INLINE_P  */
  YYSYMBOL_INNER_P = 183,                  /* INNER_P  */
  YYSYMBOL_INOUT = 184,                    /* INOUT  */
  YYSYMBOL_INPUT_P = 185,                  /* INPUT_P  */
  YYSYMBOL_INSENSITIVE = 186,              /* INSENSITIVE  */
  YYSYMBOL_INSERT = 187,                   /* INSERT  */
  YYSYMBOL_INSTEAD = 188,                  /* INSTEAD  */
  YYSYMBOL_INT_P = 189,                    /* INT_P  */
  YYSYMBOL_INTEGER = 190,                  /* INTEGER  */
  YYSYMBOL_INTERSECT = 191,                /* INTERSECT  */
  YYSYMBOL_INTERVAL = 192,                 /* INTERVAL  */
  YYSYMBOL_INTO = 193,                     /* INTO  */
  YYSYMBOL_INVOKER = 194,                  /* INVOKER  */
  YYSYMBOL_IS = 195,                       /* IS  */
  YYSYMBOL_ISNULL = 196,                   /* ISNULL  */
  YYSYMBOL_ISOLATION = 197,                /* ISOLATION  */
  YYSYMBOL_JOIN = 198,                     /* JOIN  */
  YYSYMBOL_KEY = 199,                      /* KEY  */
  YYSYMBOL_LABEL = 200,                    /* LABEL  */
  YYSYMBOL_LANGUAGE = 201,                 /* LANGUAGE  */
  YYSYMBOL_LARGE_P = 202,                  /* LARGE_P  */
  YYSYMBOL_LAST_P = 203,                   /* LAST_P  */
  YYSYMBOL_LATERAL_P = 204,                /* LATERAL_P  */
  YYSYMBOL_LC_COLLATE_P = 205,             /* LC_COLLATE_P  */
  YYSYMBOL_LC_CTYPE_P = 206,               /* LC_CTYPE_P  */
  YYSYMBOL_LEADING = 207,                  /* LEADING  */
  YYSYMBOL_LEAKPROOF = 208,                /* LEAKPROOF  */
  YYSYMBOL_LEAST = 209,                    /* LEAST  */
  YYSYMBOL_LEFT = 210,                     /* LEFT  */
  YYSYMBOL_LEVEL = 211,                    /* LEVEL  */
  YYSYMBOL_LIKE = 212,                     /* LIKE  */
  YYSYMBOL_LIMIT = 213,                    /* LIMIT  */
  YYSYMBOL_LISTEN = 214,                   /* LISTEN  */
  YYSYMBOL_LOAD = 215,                     /* LOAD  */
  YYSYMBOL_LOCAL = 216,                    /* LOCAL  */
  YYSYMBOL_LOCALTIME = 217,                /* LOCALTIME  */
  YYSYMBOL_LOCALTIMESTAMP = 218,           /* LOCALTIMESTAMP  */
  YYSYMBOL_LOCATION = 219,                 /* LOCATION  */
  YYSYMBOL_LOCK_P = 220,                   /* LOCK_P  */
  YYSYMBOL_MAPPING = 221,                  /* MAPPING  */
  YYSYMBOL_MATCH = 222,                    /* MATCH  */
  YYSYMBOL_MATERIALIZED = 223,             /* MATERIALIZED  */
  YYSYMBOL_MAXVALUE = 224,                 /* MAXVALUE  */
  YYSYMBOL_MEMORY_LIMIT = 225,             /* MEMORY_LIMIT  */
  YYSYMBOL_MEMORY_SHARED_QUOTA = 226,      /* MEMORY_SHARED_QUOTA  */
  YYSYMBOL_MEMORY_SPILL_RATIO = 227,       /* MEMORY_SPILL_RATIO  */
  YYSYMBOL_MINUTE_P = 228,                 /* MINUTE_P  */
  YYSYMBOL_MINVALUE = 229,                 /* MINVALUE  */
  YYSYMBOL_MODE = 230,                     /* MODE  */
  YYSYMBOL_MONTH_P = 231,                  /* MONTH_P  */
  YYSYMBOL_MOVE = 232,                     /* MOVE  */
  YYSYMBOL_NAME_P = 233,                   /* NAME_P  */
  YYSYMBOL_NAMES = 234,                    /* NAMES  */
  YYSYMBOL_NATIONAL = 235,                 /* NATIONAL  */
  YYSYMBOL_NATURAL = 236,                  /* NATURAL  */
  YYSYMBOL_NCHAR = 237,                    /* NCHAR  */
  YYSYMBOL_NEXT = 238,                     /* NEXT  */
  YYSYMBOL_NO = 239,                       /* NO  */
  YYSYMBOL_NONE = 240,                     /* NONE  */
  YYSYMBOL_NOT = 241,                      /* NOT  */
  YYSYMBOL_NOTHING = 242,                  /* NOTHING  */
  YYSYMBOL_NOTIFY = 243,                   /* NOTIFY  */
  YYSYMBOL_NOTNULL = 244,                  /* NOTNULL  */
  YYSYMBOL_NOWAIT = 245,                   /* NOWAIT  */
  YYSYMBOL_NULL_P = 246,                   /* NULL_P  */
  YYSYMBOL_NULLIF = 247,                   /* NULLIF  */
  YYSYMBOL_NULLS_P = 248,                  /* NULLS_P  */
  YYSYMBOL_NUMERIC = 249,                  /* NUMERIC  */
  YYSYMBOL_OBJECT_P = 250,                 /* OBJECT_P  */
  YYSYMBOL_OF = 251,                       /* OF  */
  YYSYMBOL_OFF = 252,                      /* OFF  */
  YYSYMBOL_OFFSET = 253,                   /* OFFSET  */
  YYSYMBOL_OIDS = 254,                     /* OIDS  */
  YYSYMBOL_ON = 255,                       /* ON  */
  YYSYMBOL_ONLY = 256,                     /* ONLY  */
  YYSYMBOL_OPERATOR = 257,                 /* OPERATOR  */
  YYSYMBOL_OPTION = 258,                   /* OPTION  */
  YYSYMBOL_OPTIONS = 259,                  /* OPTIONS  */
  YYSYMBOL_OR = 260,                       /* OR  */
  YYSYMBOL_ORDER = 261,                    /* ORDER  */
  YYSYMBOL_ORDINALITY = 262,               /* ORDINALITY  */
  YYSYMBOL_OUT_P = 263,                    /* OUT_P  */
  YYSYMBOL_OUTER_P = 264,                  /* OUTER_P  */
  YYSYMBOL_OVER = 265,                     /* OVER  */
  YYSYMBOL_OVERLAPS = 266,                 /* OVERLAPS  */
  YYSYMBOL_OVERLAY = 267,                  /* OVERLAY  */
  YYSYMBOL_OWNED = 268,                    /* OWNED  */
  YYSYMBOL_OWNER = 269,                    /* OWNER  */
  YYSYMBOL_PARSER = 270,                   /* PARSER  */
  YYSYMBOL_PARTIAL = 271,                  /* PARTIAL  */
  YYSYMBOL_PARTITION = 272,                /* PARTITION  */
  YYSYMBOL_PASSING = 273,                  /* PASSING  */
  YYSYMBOL_PASSWORD = 274,                 /* PASSWORD  */
  YYSYMBOL_PLACING = 275,                  /* PLACING  */
  YYSYMBOL_PLANS = 276,                    /* PLANS  */
  YYSYMBOL_POSITION = 277,                 /* POSITION  */
  YYSYMBOL_PRECEDING = 278,                /* PRECEDING  */
  YYSYMBOL_PRECISION = 279,                /* PRECISION  */
  YYSYMBOL_PRESERVE = 280,                 /* PRESERVE  */
  YYSYMBOL_PREPARE = 281,                  /* PREPARE  */
  YYSYMBOL_PREPARED = 282,                 /* PREPARED  */
  YYSYMBOL_PRIMARY = 283,                  /* PRIMARY  */
  YYSYMBOL_PRIOR = 284,                    /* PRIOR  */
  YYSYMBOL_PRIVILEGES = 285,               /* PRIVILEGES  */
  YYSYMBOL_PROCEDURAL = 286,               /* PROCEDURAL  */
  YYSYMBOL_PROCEDURE = 287,                /* PROCEDURE  */
  YYSYMBOL_PROGRAM = 288,                  /* PROGRAM  */
  YYSYMBOL_QUOTE = 289,                    /* QUOTE  */
  YYSYMBOL_RANGE = 290,                    /* RANGE  */
  YYSYMBOL_READ = 291,                     /* READ  */
  YYSYMBOL_REAL = 292,                     /* REAL  */
  YYSYMBOL_REASSIGN = 293,                 /* REASSIGN  */
  YYSYMBOL_RECHECK = 294,                  /* RECHECK  */
  YYSYMBOL_RECURSIVE = 295,                /* RECURSIVE  */
  YYSYMBOL_REF = 296,                      /* REF  */
  YYSYMBOL_REFERENCES = 297,               /* REFERENCES  */
  YYSYMBOL_REFRESH = 298,                  /* REFRESH  */
  YYSYMBOL_REINDEX = 299,                  /* REINDEX  */
  YYSYMBOL_RELATIVE_P = 300,               /* RELATIVE_P  */
  YYSYMBOL_RELEASE = 301,                  /* RELEASE  */
  YYSYMBOL_RENAME = 302,                   /* RENAME  */
  YYSYMBOL_REPEATABLE = 303,               /* REPEATABLE  */
  YYSYMBOL_REPLACE = 304,                  /* REPLACE  */
  YYSYMBOL_REPLICA = 305,                  /* REPLICA  */
  YYSYMBOL_RESET = 306,                    /* RESET  */
  YYSYMBOL_RESTART = 307,                  /* RESTART  */
  YYSYMBOL_RESTRICT = 308,                 /* RESTRICT  */
  YYSYMBOL_RETURNING = 309,                /* RETURNING  */
  YYSYMBOL_RETURNS = 310,                  /* RETURNS  */
  YYSYMBOL_REVOKE = 311,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 312,                    /* RIGHT  */
  YYSYMBOL_ROLE = 313,                     /* ROLE  */
  YYSYMBOL_ROLLBACK = 314,                 /* ROLLBACK  */
  YYSYMBOL_ROW = 315,                      /* ROW  */
  YYSYMBOL_ROWS = 316,                     /* ROWS  */
  YYSYMBOL_RULE = 317,                     /* RULE  */
  YYSYMBOL_SAVEPOINT = 318,                /* SAVEPOINT  */
  YYSYMBOL_SCHEMA = 319,                   /* SCHEMA  */
  YYSYMBOL_SCROLL = 320,                   /* SCROLL  */
  YYSYMBOL_SEARCH = 321,                   /* SEARCH  */
  YYSYMBOL_SECOND_P = 322,                 /* SECOND_P  */
  YYSYMBOL_SECURITY = 323,                 /* SECURITY  */
  YYSYMBOL_SELECT = 324,                   /* SELECT  */
  YYSYMBOL_SEQUENCE = 325,                 /* SEQUENCE  */
  YYSYMBOL_SEQUENCES = 326,                /* SEQUENCES  */
  YYSYMBOL_SERIALIZABLE = 327,             /* SERIALIZABLE  */
  YYSYMBOL_SERVER = 328,                   /* SERVER  */
  YYSYMBOL_SESSION = 329,                  /* SESSION  */
  YYSYMBOL_SESSION_USER = 330,             /* SESSION_USER  */
  YYSYMBOL_SET = 331,                      /* SET  */
  YYSYMBOL_SETOF = 332,                    /* SETOF  */
  YYSYMBOL_SHARE = 333,                    /* SHARE  */
  YYSYMBOL_SHOW = 334,                     /* SHOW  */
  YYSYMBOL_SIMILAR = 335,                  /* SIMILAR  */
  YYSYMBOL_SIMPLE = 336,                   /* SIMPLE  */
  YYSYMBOL_SMALLINT = 337,                 /* SMALLINT  */
  YYSYMBOL_SNAPSHOT = 338,                 /* SNAPSHOT  */
  YYSYMBOL_SOME = 339,                     /* SOME  */
  YYSYMBOL_STABLE = 340,                   /* STABLE  */
  YYSYMBOL_STANDALONE_P = 341,             /* STANDALONE_P  */
  YYSYMBOL_START = 342,                    /* START  */
  YYSYMBOL_STATEMENT = 343,                /* STATEMENT  */
  YYSYMBOL_STATISTICS = 344,               /* STATISTICS  */
  YYSYMBOL_STDIN = 345,                    /* STDIN  */
  YYSYMBOL_STDOUT = 346,                   /* STDOUT  */
  YYSYMBOL_STORAGE = 347,                  /* STORAGE  */
  YYSYMBOL_STRICT_P = 348,                 /* STRICT_P  */
  YYSYMBOL_STRIP_P = 349,                  /* STRIP_P  */
  YYSYMBOL_SUBSTRING = 350,                /* SUBSTRING  */
  YYSYMBOL_SYMMETRIC = 351,                /* SYMMETRIC  */
  YYSYMBOL_SYSID = 352,                    /* SYSID  */
  YYSYMBOL_SYSTEM_P = 353,                 /* SYSTEM_P  */
  YYSYMBOL_TABLE = 354,                    /* TABLE  */
  YYSYMBOL_TABLES = 355,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 356,               /* TABLESPACE  */
  YYSYMBOL_TEMP = 357,                     /* TEMP  */
  YYSYMBOL_TEMPLATE = 358,                 /* TEMPLATE  */
  YYSYMBOL_TEMPORARY = 359,                /* TEMPORARY  */
  YYSYMBOL_TEXT_P = 360,                   /* TEXT_P  */
  YYSYMBOL_THEN = 361,                     /* THEN  */
  YYSYMBOL_TIME = 362,                     /* TIME  */
  YYSYMBOL_TIMESTAMP = 363,                /* TIMESTAMP  */
  YYSYMBOL_TO = 364,                       /* TO  */
  YYSYMBOL_TRAILING = 365,                 /* TRAILING  */
  YYSYMBOL_TRANSACTION = 366,              /* TRANSACTION  */
  YYSYMBOL_TREAT = 367,                    /* TREAT  */
  YYSYMBOL_TRIGGER = 368,                  /* TRIGGER  */
  YYSYMBOL_TRIM = 369,                     /* TRIM  */
  YYSYMBOL_TRUE_P = 370,                   /* TRUE_P  */
  YYSYMBOL_TRUNCATE = 371,                 /* TRUNCATE  */
  YYSYMBOL_TRUSTED = 372,                  /* TRUSTED  */
  YYSYMBOL_TYPE_P = 373,                   /* TYPE_P  */
  YYSYMBOL_TYPES_P = 374,                  /* TYPES_P  */
  YYSYMBOL_UNBOUNDED = 375,                /* UNBOUNDED  */
  YYSYMBOL_UNCOMMITTED = 376,              /* UNCOMMITTED  */
  YYSYMBOL_UNENCRYPTED = 377,              /* UNENCRYPTED  */
  YYSYMBOL_UNION = 378,                    /* UNION  */
  YYSYMBOL_UNIQUE = 379,                   /* UNIQUE  */
  YYSYMBOL_UNKNOWN = 380,                  /* UNKNOWN  */
  YYSYMBOL_UNLISTEN = 381,                 /* UNLISTEN  */
  YYSYMBOL_UNLOGGED = 382,                 /* UNLOGGED  */
  YYSYMBOL_UNTIL = 383,                    /* UNTIL  */
  YYSYMBOL_UPDATE = 384,                   /* UPDATE  */
  YYSYMBOL_USER = 385,                     /* USER  */
  YYSYMBOL_USING = 386,                    /* USING  */
  YYSYMBOL_VACUUM = 387,                   /* VACUUM  */
  YYSYMBOL_VALID = 388,                    /* VALID  */
  YYSYMBOL_VALIDATE = 389,                 /* VALIDATE  */
  YYSYMBOL_VALIDATOR = 390,                /* VALIDATOR  */
  YYSYMBOL_VALUE_P = 391,                  /* VALUE_P  */
  YYSYMBOL_VALUES = 392,                   /* VALUES  */
  YYSYMBOL_VARCHAR = 393,                  /* VARCHAR  */
  YYSYMBOL_VARIADIC = 394,                 /* VARIADIC  */
  YYSYMBOL_VARYING = 395,                  /* VARYING  */
  YYSYMBOL_VERBOSE = 396,                  /* VERBOSE  */
  YYSYMBOL_VERSION_P = 397,                /* VERSION_P  */
  YYSYMBOL_VIEW = 398,                     /* VIEW  */
  YYSYMBOL_VIEWS = 399,                    /* VIEWS  */
  YYSYMBOL_VOLATILE = 400,                 /* VOLATILE  */
  YYSYMBOL_WHEN = 401,                     /* WHEN  */
  YYSYMBOL_WHERE = 402,                    /* WHERE  */
  YYSYMBOL_WHITESPACE_P = 403,             /* WHITESPACE_P  */
  YYSYMBOL_WINDOW = 404,                   /* WINDOW  */
  YYSYMBOL_WITH = 405,                     /* WITH  */
  YYSYMBOL_WITHIN = 406,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 407,                  /* WITHOUT  */
  YYSYMBOL_WORK = 408,                     /* WORK  */
  YYSYMBOL_WRAPPER = 409,                  /* WRAPPER  */
  YYSYMBOL_WRITE = 410,                    /* WRITE  */
  YYSYMBOL_XML_P = 411,                    /* XML_P  */
  YYSYMBOL_XMLATTRIBUTES = 412,            /* XMLATTRIBUTES  */
  YYSYMBOL_XMLCONCAT = 413,                /* XMLCONCAT  */
  YYSYMBOL_XMLELEMENT = 414,               /* XMLELEMENT  */
  YYSYMBOL_XMLEXISTS = 415,                /* XMLEXISTS  */
  YYSYMBOL_XMLFOREST = 416,                /* XMLFOREST  */
  YYSYMBOL_XMLPARSE = 417,                 /* XMLPARSE  */
  YYSYMBOL_XMLPI = 418,                    /* XMLPI  */
  YYSYMBOL_XMLROOT = 419,                  /* XMLROOT  */
  YYSYMBOL_XMLSERIALIZE = 420,             /* XMLSERIALIZE  */
  YYSYMBOL_YEAR_P = 421,                   /* YEAR_P  */
  YYSYMBOL_YES_P = 422,                    /* YES_P  */
  YYSYMBOL_ZONE = 423,                     /* ZONE  */
  YYSYMBOL_ACTIVE = 424,                   /* ACTIVE  */
  YYSYMBOL_CONTAINS = 425,                 /* CONTAINS  */
  YYSYMBOL_CPUSET = 426,                   /* CPUSET  */
  YYSYMBOL_CPU_RATE_LIMIT = 427,           /* CPU_RATE_LIMIT  */
  YYSYMBOL_CREATEEXTTABLE = 428,           /* CREATEEXTTABLE  */
  YYSYMBOL_CUBE = 429,                     /* CUBE  */
  YYSYMBOL_DECODE = 430,                   /* DECODE  */
  YYSYMBOL_DENY = 431,                     /* DENY  */
  YYSYMBOL_DISTRIBUTED = 432,              /* DISTRIBUTED  */
  YYSYMBOL_DXL = 433,                      /* DXL  */
  YYSYMBOL_ERRORS = 434,                   /* ERRORS  */
  YYSYMBOL_EVERY = 435,                    /* EVERY  */
  YYSYMBOL_EXCHANGE = 436,                 /* EXCHANGE  */
  YYSYMBOL_EXPAND = 437,                   /* EXPAND  */
  YYSYMBOL_FIELDS = 438,                   /* FIELDS  */
  YYSYMBOL_FILL = 439,                     /* FILL  */
  YYSYMBOL_FORMAT = 440,                   /* FORMAT  */
  YYSYMBOL_FULLSCAN = 441,                 /* FULLSCAN  */
  YYSYMBOL_GROUP_ID = 442,                 /* GROUP_ID  */
  YYSYMBOL_GROUPING = 443,                 /* GROUPING  */
  YYSYMBOL_HASH = 444,                     /* HASH  */
  YYSYMBOL_HOST = 445,                     /* HOST  */
  YYSYMBOL_IGNORE_P = 446,                 /* IGNORE_P  */
  YYSYMBOL_INCLUSIVE = 447,                /* INCLUSIVE  */
  YYSYMBOL_INITPLAN = 448,                 /* INITPLAN  */
  YYSYMBOL_LIST = 449,                     /* LIST  */
  YYSYMBOL_LOG_P = 450,                    /* LOG_P  */
  YYSYMBOL_MASTER = 451,                   /* MASTER  */
  YYSYMBOL_MEDIAN = 452,                   /* MEDIAN  */
  YYSYMBOL_MISSING = 453,                  /* MISSING  */
  YYSYMBOL_MODIFIES = 454,                 /* MODIFIES  */
  YYSYMBOL_NEWLINE = 455,                  /* NEWLINE  */
  YYSYMBOL_NOCREATEEXTTABLE = 456,         /* NOCREATEEXTTABLE  */
  YYSYMBOL_NOOVERCOMMIT = 457,             /* NOOVERCOMMIT  */
  YYSYMBOL_ORDERED = 458,                  /* ORDERED  */
  YYSYMBOL_OTHERS = 459,                   /* OTHERS  */
  YYSYMBOL_OVERCOMMIT = 460,               /* OVERCOMMIT  */
  YYSYMBOL_PARALLEL = 461,                 /* PARALLEL  */
  YYSYMBOL_RETRIEVE = 462,                 /* RETRIEVE  */
  YYSYMBOL_PARTITIONS = 463,               /* PARTITIONS  */
  YYSYMBOL_PERCENT = 464,                  /* PERCENT  */
  YYSYMBOL_PERSISTENTLY = 465,             /* PERSISTENTLY  */
  YYSYMBOL_PROTOCOL = 466,                 /* PROTOCOL  */
  YYSYMBOL_QUEUE = 467,                    /* QUEUE  */
  YYSYMBOL_RANDOMLY = 468,                 /* RANDOMLY  */
  YYSYMBOL_READABLE = 469,                 /* READABLE  */
  YYSYMBOL_READS = 470,                    /* READS  */
  YYSYMBOL_REJECT_P = 471,                 /* REJECT_P  */
  YYSYMBOL_REPLICATED = 472,               /* REPLICATED  */
  YYSYMBOL_RESOURCE = 473,                 /* RESOURCE  */
  YYSYMBOL_ROLLUP = 474,                   /* ROLLUP  */
  YYSYMBOL_ROOTPARTITION = 475,            /* ROOTPARTITION  */
  YYSYMBOL_SCATTER = 476,                  /* SCATTER  */
  YYSYMBOL_SEGMENT = 477,                  /* SEGMENT  */
  YYSYMBOL_SEGMENTS = 478,                 /* SEGMENTS  */
  YYSYMBOL_SETS = 479,                     /* SETS  */
  YYSYMBOL_SPLIT = 480,                    /* SPLIT  */
  YYSYMBOL_SQL = 481,                      /* SQL  */
  YYSYMBOL_SUBPARTITION = 482,             /* SUBPARTITION  */
  YYSYMBOL_THRESHOLD = 483,                /* THRESHOLD  */
  YYSYMBOL_TIES = 484,                     /* TIES  */
  YYSYMBOL_VALIDATION = 485,               /* VALIDATION  */
  YYSYMBOL_WEB = 486,                      /* WEB  */
  YYSYMBOL_WRITABLE = 487,                 /* WRITABLE  */
  YYSYMBOL_YEZZEY = 488,                   /* YEZZEY  */
  YYSYMBOL_NULLS_FIRST = 489,              /* NULLS_FIRST  */
  YYSYMBOL_NULLS_LAST = 490,               /* NULLS_LAST  */
  YYSYMBOL_WITH_ORDINALITY = 491,          /* WITH_ORDINALITY  */
  YYSYMBOL_WITH_TIME = 492,                /* WITH_TIME  */
  YYSYMBOL_493_ = 493,                     /* '='  */
  YYSYMBOL_494_ = 494,                     /* '<'  */
  YYSYMBOL_495_ = 495,                     /* '>'  */
  YYSYMBOL_POSTFIXOP = 496,                /* POSTFIXOP  */
  YYSYMBOL_497_ = 497,                     /* '+'  */
  YYSYMBOL_498_ = 498,                     /* '-'  */
  YYSYMBOL_499_ = 499,                     /* '*'  */
  YYSYMBOL_500_ = 500,                     /* '/'  */
  YYSYMBOL_501_ = 501,                     /* '%'  */
  YYSYMBOL_502_ = 502,                     /* '^'  */
  YYSYMBOL_UMINUS = 503,                   /* UMINUS  */
  YYSYMBOL_504_ = 504,                     /* '['  */
  YYSYMBOL_505_ = 505,                     /* ']'  */
  YYSYMBOL_506_ = 506,                     /* '{'  */
  YYSYMBOL_507_ = 507,                     /* '}'  */
  YYSYMBOL_508_ = 508,                     /* '('  */
  YYSYMBOL_509_ = 509,                     /* ')'  */
  YYSYMBOL_510_ = 510,                     /* '.'  */
  YYSYMBOL_511_ = 511,                     /* ';'  */
  YYSYMBOL_512_ = 512,                     /* ','  */
  YYSYMBOL_513_ = 513,                     /* ':'  */
  YYSYMBOL_YYACCEPT = 514,                 /* $accept  */
  YYSYMBOL_stmtblock = 515,                /* stmtblock  */
  YYSYMBOL_stmtmulti = 516,                /* stmtmulti  */
  YYSYMBOL_stmt = 517,                     /* stmt  */
  YYSYMBOL_CreateQueueStmt = 518,          /* CreateQueueStmt  */
  YYSYMBOL_OptQueueList = 519,             /* OptQueueList  */
  YYSYMBOL_OptQueueElem = 520,             /* OptQueueElem  */
  YYSYMBOL_AlterQueueStmt = 521,           /* AlterQueueStmt  */
  YYSYMBOL_DropQueueStmt = 522,            /* DropQueueStmt  */
  YYSYMBOL_CreateResourceGroupStmt = 523,  /* CreateResourceGroupStmt  */
  YYSYMBOL_DropResourceGroupStmt = 524,    /* DropResourceGroupStmt  */
  YYSYMBOL_AlterResourceGroupStmt = 525,   /* AlterResourceGroupStmt  */
  YYSYMBOL_OptResourceGroupList = 526,     /* OptResourceGroupList  */
  YYSYMBOL_OptResourceGroupElem = 527,     /* OptResourceGroupElem  */
  YYSYMBOL_CreateRoleStmt = 528,           /* CreateRoleStmt  */
  YYSYMBOL_opt_with = 529,                 /* opt_with  */
  YYSYMBOL_OptRoleList = 530,              /* OptRoleList  */
  YYSYMBOL_AlterOptRoleList = 531,         /* AlterOptRoleList  */
  YYSYMBOL_AlterOnlyOptRoleElem = 532,     /* AlterOnlyOptRoleElem  */
  YYSYMBOL_AlterOptRoleElem = 533,         /* AlterOptRoleElem  */
  YYSYMBOL_CreateOptRoleElem = 534,        /* CreateOptRoleElem  */
  YYSYMBOL_deny_login_role = 535,          /* deny_login_role  */
  YYSYMBOL_deny_interval = 536,            /* deny_interval  */
  YYSYMBOL_deny_day_specifier = 537,       /* deny_day_specifier  */
  YYSYMBOL_deny_point = 538,               /* deny_point  */
  YYSYMBOL_opt_time = 539,                 /* opt_time  */
  YYSYMBOL_exttab_auth_list = 540,         /* exttab_auth_list  */
  YYSYMBOL_keyvalue_list = 541,            /* keyvalue_list  */
  YYSYMBOL_keyvalue_pair = 542,            /* keyvalue_pair  */
  YYSYMBOL_CreateUserStmt = 543,           /* CreateUserStmt  */
  YYSYMBOL_AlterRoleStmt = 544,            /* AlterRoleStmt  */
  YYSYMBOL_opt_in_database = 545,          /* opt_in_database  */
  YYSYMBOL_AlterRoleSetStmt = 546,         /* AlterRoleSetStmt  */
  YYSYMBOL_AlterUserStmt = 547,            /* AlterUserStmt  */
  YYSYMBOL_AlterUserSetStmt = 548,         /* AlterUserSetStmt  */
  YYSYMBOL_DropRoleStmt = 549,             /* DropRoleStmt  */
  YYSYMBOL_DropUserStmt = 550,             /* DropUserStmt  */
  YYSYMBOL_CreateGroupStmt = 551,          /* CreateGroupStmt  */
  YYSYMBOL_AlterGroupStmt = 552,           /* AlterGroupStmt  */
  YYSYMBOL_add_drop = 553,                 /* add_drop  */
  YYSYMBOL_DropGroupStmt = 554,            /* DropGroupStmt  */
  YYSYMBOL_CreateSchemaStmt = 555,         /* CreateSchemaStmt  */
  YYSYMBOL_OptSchemaName = 556,            /* OptSchemaName  */
  YYSYMBOL_OptSchemaEltList = 557,         /* OptSchemaEltList  */
  YYSYMBOL_schema_stmt = 558,              /* schema_stmt  */
  YYSYMBOL_VariableSetStmt = 559,          /* VariableSetStmt  */
  YYSYMBOL_set_rest = 560,                 /* set_rest  */
  YYSYMBOL_generic_set = 561,              /* generic_set  */
  YYSYMBOL_set_rest_more = 562,            /* set_rest_more  */
  YYSYMBOL_var_name = 563,                 /* var_name  */
  YYSYMBOL_var_list = 564,                 /* var_list  */
  YYSYMBOL_var_value = 565,                /* var_value  */
  YYSYMBOL_iso_level = 566,                /* iso_level  */
  YYSYMBOL_opt_boolean_or_string = 567,    /* opt_boolean_or_string  */
  YYSYMBOL_zone_value = 568,               /* zone_value  */
  YYSYMBOL_opt_encoding = 569,             /* opt_encoding  */
  YYSYMBOL_NonReservedWord_or_Sconst = 570, /* NonReservedWord_or_Sconst  */
  YYSYMBOL_VariableResetStmt = 571,        /* VariableResetStmt  */
  YYSYMBOL_reset_rest = 572,               /* reset_rest  */
  YYSYMBOL_generic_reset = 573,            /* generic_reset  */
  YYSYMBOL_SetResetClause = 574,           /* SetResetClause  */
  YYSYMBOL_FunctionSetResetClause = 575,   /* FunctionSetResetClause  */
  YYSYMBOL_VariableShowStmt = 576,         /* VariableShowStmt  */
  YYSYMBOL_ConstraintsSetStmt = 577,       /* ConstraintsSetStmt  */
  YYSYMBOL_constraints_set_list = 578,     /* constraints_set_list  */
  YYSYMBOL_constraints_set_mode = 579,     /* constraints_set_mode  */
  YYSYMBOL_CheckPointStmt = 580,           /* CheckPointStmt  */
  YYSYMBOL_DiscardStmt = 581,              /* DiscardStmt  */
  YYSYMBOL_AlterTableStmt = 582,           /* AlterTableStmt  */
  YYSYMBOL_alter_table_cmds = 583,         /* alter_table_cmds  */
  YYSYMBOL_alter_table_cmd = 584,          /* alter_table_cmd  */
  YYSYMBOL_alter_column_default = 585,     /* alter_column_default  */
  YYSYMBOL_opt_drop_behavior = 586,        /* opt_drop_behavior  */
  YYSYMBOL_opt_collate_clause = 587,       /* opt_collate_clause  */
  YYSYMBOL_alter_using = 588,              /* alter_using  */
  YYSYMBOL_replica_identity = 589,         /* replica_identity  */
  YYSYMBOL_reloptions = 590,               /* reloptions  */
  YYSYMBOL_opt_reloptions = 591,           /* opt_reloptions  */
  YYSYMBOL_reloption_list = 592,           /* reloption_list  */
  YYSYMBOL_reloption_elem = 593,           /* reloption_elem  */
  YYSYMBOL_opt_table_partition_split_into = 594, /* opt_table_partition_split_into  */
  YYSYMBOL_opt_table_partition_exchange_validate = 595, /* opt_table_partition_exchange_validate  */
  YYSYMBOL_alter_table_partition_id_spec = 596, /* alter_table_partition_id_spec  */
  YYSYMBOL_alter_table_partition_id_spec_with_opt_default = 597, /* alter_table_partition_id_spec_with_opt_default  */
  YYSYMBOL_alter_table_partition_cmd = 598, /* alter_table_partition_cmd  */
  YYSYMBOL_AlterCompositeTypeStmt = 599,   /* AlterCompositeTypeStmt  */
  YYSYMBOL_alter_type_cmds = 600,          /* alter_type_cmds  */
  YYSYMBOL_alter_type_cmd = 601,           /* alter_type_cmd  */
  YYSYMBOL_ClosePortalStmt = 602,          /* ClosePortalStmt  */
  YYSYMBOL_CopyStmt = 603,                 /* CopyStmt  */
  YYSYMBOL_copy_from = 604,                /* copy_from  */
  YYSYMBOL_opt_program = 605,              /* opt_program  */
  YYSYMBOL_skip_external_partition = 606,  /* skip_external_partition  */
  YYSYMBOL_copy_file_name = 607,           /* copy_file_name  */
  YYSYMBOL_copy_options = 608,             /* copy_options  */
  YYSYMBOL_copy_opt_list = 609,            /* copy_opt_list  */
  YYSYMBOL_copy_opt_item = 610,            /* copy_opt_item  */
  YYSYMBOL_opt_binary = 611,               /* opt_binary  */
  YYSYMBOL_opt_oids = 612,                 /* opt_oids  */
  YYSYMBOL_copy_delimiter = 613,           /* copy_delimiter  */
  YYSYMBOL_opt_using = 614,                /* opt_using  */
  YYSYMBOL_copy_generic_opt_list = 615,    /* copy_generic_opt_list  */
  YYSYMBOL_copy_generic_opt_elem = 616,    /* copy_generic_opt_elem  */
  YYSYMBOL_copy_generic_opt_arg = 617,     /* copy_generic_opt_arg  */
  YYSYMBOL_copy_generic_opt_arg_list = 618, /* copy_generic_opt_arg_list  */
  YYSYMBOL_copy_generic_opt_arg_list_item = 619, /* copy_generic_opt_arg_list_item  */
  YYSYMBOL_CreateStmt = 620,               /* CreateStmt  */
  YYSYMBOL_OptTemp = 621,                  /* OptTemp  */
  YYSYMBOL_OptTableElementList = 622,      /* OptTableElementList  */
  YYSYMBOL_OptTypedTableElementList = 623, /* OptTypedTableElementList  */
  YYSYMBOL_TableElementList = 624,         /* TableElementList  */
  YYSYMBOL_TypedTableElementList = 625,    /* TypedTableElementList  */
  YYSYMBOL_TableElement = 626,             /* TableElement  */
  YYSYMBOL_TypedTableElement = 627,        /* TypedTableElement  */
  YYSYMBOL_column_reference_storage_directive = 628, /* column_reference_storage_directive  */
  YYSYMBOL_columnDef = 629,                /* columnDef  */
  YYSYMBOL_columnOptions = 630,            /* columnOptions  */
  YYSYMBOL_ColQualList = 631,              /* ColQualList  */
  YYSYMBOL_ColConstraint = 632,            /* ColConstraint  */
  YYSYMBOL_opt_storage_encoding = 633,     /* opt_storage_encoding  */
  YYSYMBOL_ColConstraintElem = 634,        /* ColConstraintElem  */
  YYSYMBOL_ConstraintAttr = 635,           /* ConstraintAttr  */
  YYSYMBOL_TableLikeClause = 636,          /* TableLikeClause  */
  YYSYMBOL_TableLikeOptionList = 637,      /* TableLikeOptionList  */
  YYSYMBOL_TableLikeOption = 638,          /* TableLikeOption  */
  YYSYMBOL_TableConstraint = 639,          /* TableConstraint  */
  YYSYMBOL_ConstraintElem = 640,           /* ConstraintElem  */
  YYSYMBOL_opt_no_inherit = 641,           /* opt_no_inherit  */
  YYSYMBOL_opt_column_list = 642,          /* opt_column_list  */
  YYSYMBOL_columnList = 643,               /* columnList  */
  YYSYMBOL_columnElem = 644,               /* columnElem  */
  YYSYMBOL_distributed_by_list = 645,      /* distributed_by_list  */
  YYSYMBOL_distributed_by_elem = 646,      /* distributed_by_elem  */
  YYSYMBOL_key_match = 647,                /* key_match  */
  YYSYMBOL_ExclusionConstraintList = 648,  /* ExclusionConstraintList  */
  YYSYMBOL_ExclusionConstraintElem = 649,  /* ExclusionConstraintElem  */
  YYSYMBOL_ExclusionWhereClause = 650,     /* ExclusionWhereClause  */
  YYSYMBOL_key_actions = 651,              /* key_actions  */
  YYSYMBOL_key_update = 652,               /* key_update  */
  YYSYMBOL_key_delete = 653,               /* key_delete  */
  YYSYMBOL_key_action = 654,               /* key_action  */
  YYSYMBOL_OptInherit = 655,               /* OptInherit  */
  YYSYMBOL_OptWith = 656,                  /* OptWith  */
  YYSYMBOL_OnCommitOption = 657,           /* OnCommitOption  */
  YYSYMBOL_OptTableSpace = 658,            /* OptTableSpace  */
  YYSYMBOL_OptConsTableSpace = 659,        /* OptConsTableSpace  */
  YYSYMBOL_ExistingIndex = 660,            /* ExistingIndex  */
  YYSYMBOL_optNumsegments = 661,           /* optNumsegments  */
  YYSYMBOL_DistributedBy = 662,            /* DistributedBy  */
  YYSYMBOL_OptDistributedBy = 663,         /* OptDistributedBy  */
  YYSYMBOL_OptTabPartitionColumnEncList = 664, /* OptTabPartitionColumnEncList  */
  YYSYMBOL_TabPartitionColumnEncList = 665, /* TabPartitionColumnEncList  */
  YYSYMBOL_OptTabPartitionStorageAttr = 666, /* OptTabPartitionStorageAttr  */
  YYSYMBOL_OptTabPartitionSpec = 667,      /* OptTabPartitionSpec  */
  YYSYMBOL_OptTabSubPartitionSpec = 668,   /* OptTabSubPartitionSpec  */
  YYSYMBOL_TabPartitionElemList = 669,     /* TabPartitionElemList  */
  YYSYMBOL_TabSubPartitionElemList = 670,  /* TabSubPartitionElemList  */
  YYSYMBOL_tab_part_val_no_paran = 671,    /* tab_part_val_no_paran  */
  YYSYMBOL_tab_part_val = 672,             /* tab_part_val  */
  YYSYMBOL_TabPartitionBoundarySpecValList = 673, /* TabPartitionBoundarySpecValList  */
  YYSYMBOL_OptTabPartitionRangeInclusive = 674, /* OptTabPartitionRangeInclusive  */
  YYSYMBOL_TabPartitionBoundarySpecStart = 675, /* TabPartitionBoundarySpecStart  */
  YYSYMBOL_TabPartitionBoundarySpecEnd = 676, /* TabPartitionBoundarySpecEnd  */
  YYSYMBOL_OptTabPartitionBoundarySpecEvery = 677, /* OptTabPartitionBoundarySpecEvery  */
  YYSYMBOL_OptTabPartitionBoundarySpecEnd = 678, /* OptTabPartitionBoundarySpecEnd  */
  YYSYMBOL_TabPartitionBoundarySpec = 679, /* TabPartitionBoundarySpec  */
  YYSYMBOL_OptTabPartitionBoundarySpec = 680, /* OptTabPartitionBoundarySpec  */
  YYSYMBOL_multi_spec_value_list = 681,    /* multi_spec_value_list  */
  YYSYMBOL_part_values_single = 682,       /* part_values_single  */
  YYSYMBOL_part_values_clause = 683,       /* part_values_clause  */
  YYSYMBOL_part_values_or_spec_list = 684, /* part_values_or_spec_list  */
  YYSYMBOL_TabPartitionElem = 685,         /* TabPartitionElem  */
  YYSYMBOL_TabSubPartitionElem = 686,      /* TabSubPartitionElem  */
  YYSYMBOL_TabPartitionNameDecl = 687,     /* TabPartitionNameDecl  */
  YYSYMBOL_TabPartitionDefaultNameDecl = 688, /* TabPartitionDefaultNameDecl  */
  YYSYMBOL_TabSubPartitionNameDecl = 689,  /* TabSubPartitionNameDecl  */
  YYSYMBOL_TabSubPartitionDefaultNameDecl = 690, /* TabSubPartitionDefaultNameDecl  */
  YYSYMBOL_TabPartitionByType = 691,       /* TabPartitionByType  */
  YYSYMBOL_OptTabPartitionBy = 692,        /* OptTabPartitionBy  */
  YYSYMBOL_TabSubPartitionTemplate = 693,  /* TabSubPartitionTemplate  */
  YYSYMBOL_opt_list_subparts = 694,        /* opt_list_subparts  */
  YYSYMBOL_TabSubPartitionBy = 695,        /* TabSubPartitionBy  */
  YYSYMBOL_TabSubPartition = 696,          /* TabSubPartition  */
  YYSYMBOL_CreateAsStmt = 697,             /* CreateAsStmt  */
  YYSYMBOL_create_as_target = 698,         /* create_as_target  */
  YYSYMBOL_opt_with_data = 699,            /* opt_with_data  */
  YYSYMBOL_CreateExternalStmt = 700,       /* CreateExternalStmt  */
  YYSYMBOL_OptWritable = 701,              /* OptWritable  */
  YYSYMBOL_OptWeb = 702,                   /* OptWeb  */
  YYSYMBOL_ExtTypedesc = 703,              /* ExtTypedesc  */
  YYSYMBOL_ext_on_clause_list = 704,       /* ext_on_clause_list  */
  YYSYMBOL_ext_on_clause_item = 705,       /* ext_on_clause_item  */
  YYSYMBOL_format_opt = 706,               /* format_opt  */
  YYSYMBOL_format_opt_list = 707,          /* format_opt_list  */
  YYSYMBOL_format_def_list = 708,          /* format_def_list  */
  YYSYMBOL_format_def_item = 709,          /* format_def_item  */
  YYSYMBOL_format_opt_item = 710,          /* format_opt_item  */
  YYSYMBOL_ext_options_opt = 711,          /* ext_options_opt  */
  YYSYMBOL_ext_options = 712,              /* ext_options  */
  YYSYMBOL_ext_options_list = 713,         /* ext_options_list  */
  YYSYMBOL_ext_options_item = 714,         /* ext_options_item  */
  YYSYMBOL_OptExtTableElementList = 715,   /* OptExtTableElementList  */
  YYSYMBOL_ExtTableElementList = 716,      /* ExtTableElementList  */
  YYSYMBOL_ExtTableElement = 717,          /* ExtTableElement  */
  YYSYMBOL_ExtcolumnDef = 718,             /* ExtcolumnDef  */
  YYSYMBOL_OptSingleRowErrorHandling = 719, /* OptSingleRowErrorHandling  */
  YYSYMBOL_OptLogErrorTable = 720,         /* OptLogErrorTable  */
  YYSYMBOL_ExtSingleRowErrorHandling = 721, /* ExtSingleRowErrorHandling  */
  YYSYMBOL_ExtLogErrorTable = 722,         /* ExtLogErrorTable  */
  YYSYMBOL_OptSrehLimitType = 723,         /* OptSrehLimitType  */
  YYSYMBOL_ext_opt_encoding_list = 724,    /* ext_opt_encoding_list  */
  YYSYMBOL_ext_opt_encoding_item = 725,    /* ext_opt_encoding_item  */
  YYSYMBOL_CreateMatViewStmt = 726,        /* CreateMatViewStmt  */
  YYSYMBOL_create_mv_target = 727,         /* create_mv_target  */
  YYSYMBOL_OptNoLog = 728,                 /* OptNoLog  */
  YYSYMBOL_RefreshMatViewStmt = 729,       /* RefreshMatViewStmt  */
  YYSYMBOL_CreateSeqStmt = 730,            /* CreateSeqStmt  */
  YYSYMBOL_AlterSeqStmt = 731,             /* AlterSeqStmt  */
  YYSYMBOL_OptSeqOptList = 732,            /* OptSeqOptList  */
  YYSYMBOL_SeqOptList = 733,               /* SeqOptList  */
  YYSYMBOL_SeqOptElem = 734,               /* SeqOptElem  */
  YYSYMBOL_opt_by = 735,                   /* opt_by  */
  YYSYMBOL_NumericOnly = 736,              /* NumericOnly  */
  YYSYMBOL_NumericOnly_list = 737,         /* NumericOnly_list  */
  YYSYMBOL_CreatePLangStmt = 738,          /* CreatePLangStmt  */
  YYSYMBOL_opt_trusted = 739,              /* opt_trusted  */
  YYSYMBOL_handler_name = 740,             /* handler_name  */
  YYSYMBOL_opt_inline_handler = 741,       /* opt_inline_handler  */
  YYSYMBOL_validator_clause = 742,         /* validator_clause  */
  YYSYMBOL_opt_validator = 743,            /* opt_validator  */
  YYSYMBOL_DropPLangStmt = 744,            /* DropPLangStmt  */
  YYSYMBOL_opt_procedural = 745,           /* opt_procedural  */
  YYSYMBOL_CreateTableSpaceStmt = 746,     /* CreateTableSpaceStmt  */
  YYSYMBOL_OptTableSpaceOwner = 747,       /* OptTableSpaceOwner  */
  YYSYMBOL_DropTableSpaceStmt = 748,       /* DropTableSpaceStmt  */
  YYSYMBOL_CreateExtensionStmt = 749,      /* CreateExtensionStmt  */
  YYSYMBOL_create_extension_opt_list = 750, /* create_extension_opt_list  */
  YYSYMBOL_create_extension_opt_item = 751, /* create_extension_opt_item  */
  YYSYMBOL_AlterExtensionStmt = 752,       /* AlterExtensionStmt  */
  YYSYMBOL_alter_extension_opt_list = 753, /* alter_extension_opt_list  */
  YYSYMBOL_alter_extension_opt_item = 754, /* alter_extension_opt_item  */
  YYSYMBOL_AlterExtensionContentsStmt = 755, /* AlterExtensionContentsStmt  */
  YYSYMBOL_CreateFdwStmt = 756,            /* CreateFdwStmt  */
  YYSYMBOL_fdw_option = 757,               /* fdw_option  */
  YYSYMBOL_fdw_options = 758,              /* fdw_options  */
  YYSYMBOL_opt_fdw_options = 759,          /* opt_fdw_options  */
  YYSYMBOL_DropFdwStmt = 760,              /* DropFdwStmt  */
  YYSYMBOL_AlterFdwStmt = 761,             /* AlterFdwStmt  */
  YYSYMBOL_create_generic_options = 762,   /* create_generic_options  */
  YYSYMBOL_generic_option_list = 763,      /* generic_option_list  */
  YYSYMBOL_alter_generic_options = 764,    /* alter_generic_options  */
  YYSYMBOL_alter_generic_option_list = 765, /* alter_generic_option_list  */
  YYSYMBOL_alter_generic_option_elem = 766, /* alter_generic_option_elem  */
  YYSYMBOL_generic_option_elem = 767,      /* generic_option_elem  */
  YYSYMBOL_generic_option_name = 768,      /* generic_option_name  */
  YYSYMBOL_generic_option_arg = 769,       /* generic_option_arg  */
  YYSYMBOL_CreateForeignServerStmt = 770,  /* CreateForeignServerStmt  */
  YYSYMBOL_opt_type = 771,                 /* opt_type  */
  YYSYMBOL_foreign_server_version = 772,   /* foreign_server_version  */
  YYSYMBOL_opt_foreign_server_version = 773, /* opt_foreign_server_version  */
  YYSYMBOL_DropForeignServerStmt = 774,    /* DropForeignServerStmt  */
  YYSYMBOL_AlterForeignServerStmt = 775,   /* AlterForeignServerStmt  */
  YYSYMBOL_CreateForeignTableStmt = 776,   /* CreateForeignTableStmt  */
  YYSYMBOL_AlterForeignTableStmt = 777,    /* AlterForeignTableStmt  */
  YYSYMBOL_CreateUserMappingStmt = 778,    /* CreateUserMappingStmt  */
  YYSYMBOL_auth_ident = 779,               /* auth_ident  */
  YYSYMBOL_DropUserMappingStmt = 780,      /* DropUserMappingStmt  */
  YYSYMBOL_AlterUserMappingStmt = 781,     /* AlterUserMappingStmt  */
  YYSYMBOL_CreateTrigStmt = 782,           /* CreateTrigStmt  */
  YYSYMBOL_TriggerActionTime = 783,        /* TriggerActionTime  */
  YYSYMBOL_TriggerEvents = 784,            /* TriggerEvents  */
  YYSYMBOL_TriggerOneEvent = 785,          /* TriggerOneEvent  */
  YYSYMBOL_TriggerForSpec = 786,           /* TriggerForSpec  */
  YYSYMBOL_TriggerForOptEach = 787,        /* TriggerForOptEach  */
  YYSYMBOL_TriggerForType = 788,           /* TriggerForType  */
  YYSYMBOL_TriggerWhen = 789,              /* TriggerWhen  */
  YYSYMBOL_TriggerFuncArgs = 790,          /* TriggerFuncArgs  */
  YYSYMBOL_TriggerFuncArg = 791,           /* TriggerFuncArg  */
  YYSYMBOL_OptConstrFromTable = 792,       /* OptConstrFromTable  */
  YYSYMBOL_ConstraintAttributeSpec = 793,  /* ConstraintAttributeSpec  */
  YYSYMBOL_ConstraintAttributeElem = 794,  /* ConstraintAttributeElem  */
  YYSYMBOL_DropTrigStmt = 795,             /* DropTrigStmt  */
  YYSYMBOL_CreateEventTrigStmt = 796,      /* CreateEventTrigStmt  */
  YYSYMBOL_event_trigger_when_list = 797,  /* event_trigger_when_list  */
  YYSYMBOL_event_trigger_when_item = 798,  /* event_trigger_when_item  */
  YYSYMBOL_event_trigger_value_list = 799, /* event_trigger_value_list  */
  YYSYMBOL_AlterEventTrigStmt = 800,       /* AlterEventTrigStmt  */
  YYSYMBOL_enable_trigger = 801,           /* enable_trigger  */
  YYSYMBOL_CreateAssertStmt = 802,         /* CreateAssertStmt  */
  YYSYMBOL_DropAssertStmt = 803,           /* DropAssertStmt  */
  YYSYMBOL_DefineStmt = 804,               /* DefineStmt  */
  YYSYMBOL_opt_ordered = 805,              /* opt_ordered  */
  YYSYMBOL_definition = 806,               /* definition  */
  YYSYMBOL_def_list = 807,                 /* def_list  */
  YYSYMBOL_def_elem = 808,                 /* def_elem  */
  YYSYMBOL_def_arg = 809,                  /* def_arg  */
  YYSYMBOL_old_aggr_definition = 810,      /* old_aggr_definition  */
  YYSYMBOL_old_aggr_list = 811,            /* old_aggr_list  */
  YYSYMBOL_old_aggr_elem = 812,            /* old_aggr_elem  */
  YYSYMBOL_opt_enum_val_list = 813,        /* opt_enum_val_list  */
  YYSYMBOL_enum_val_list = 814,            /* enum_val_list  */
  YYSYMBOL_AlterEnumStmt = 815,            /* AlterEnumStmt  */
  YYSYMBOL_opt_if_not_exists = 816,        /* opt_if_not_exists  */
  YYSYMBOL_CreateOpClassStmt = 817,        /* CreateOpClassStmt  */
  YYSYMBOL_opclass_item_list = 818,        /* opclass_item_list  */
  YYSYMBOL_opclass_item = 819,             /* opclass_item  */
  YYSYMBOL_opt_default = 820,              /* opt_default  */
  YYSYMBOL_opt_opfamily = 821,             /* opt_opfamily  */
  YYSYMBOL_opclass_purpose = 822,          /* opclass_purpose  */
  YYSYMBOL_opt_recheck = 823,              /* opt_recheck  */
  YYSYMBOL_CreateOpFamilyStmt = 824,       /* CreateOpFamilyStmt  */
  YYSYMBOL_AlterOpFamilyStmt = 825,        /* AlterOpFamilyStmt  */
  YYSYMBOL_opclass_drop_list = 826,        /* opclass_drop_list  */
  YYSYMBOL_opclass_drop = 827,             /* opclass_drop  */
  YYSYMBOL_DropOpClassStmt = 828,          /* DropOpClassStmt  */
  YYSYMBOL_DropOpFamilyStmt = 829,         /* DropOpFamilyStmt  */
  YYSYMBOL_DropOwnedStmt = 830,            /* DropOwnedStmt  */
  YYSYMBOL_ReassignOwnedStmt = 831,        /* ReassignOwnedStmt  */
  YYSYMBOL_DropStmt = 832,                 /* DropStmt  */
  YYSYMBOL_drop_type = 833,                /* drop_type  */
  YYSYMBOL_any_name_list = 834,            /* any_name_list  */
  YYSYMBOL_any_name = 835,                 /* any_name  */
  YYSYMBOL_attrs = 836,                    /* attrs  */
  YYSYMBOL_TruncateStmt = 837,             /* TruncateStmt  */
  YYSYMBOL_opt_restart_seqs = 838,         /* opt_restart_seqs  */
  YYSYMBOL_CommentStmt = 839,              /* CommentStmt  */
  YYSYMBOL_comment_type = 840,             /* comment_type  */
  YYSYMBOL_comment_text = 841,             /* comment_text  */
  YYSYMBOL_SecLabelStmt = 842,             /* SecLabelStmt  */
  YYSYMBOL_opt_provider = 843,             /* opt_provider  */
  YYSYMBOL_security_label_type = 844,      /* security_label_type  */
  YYSYMBOL_security_label = 845,           /* security_label  */
  YYSYMBOL_FetchStmt = 846,                /* FetchStmt  */
  YYSYMBOL_fetch_args = 847,               /* fetch_args  */
  YYSYMBOL_from_in = 848,                  /* from_in  */
  YYSYMBOL_opt_from_in = 849,              /* opt_from_in  */
  YYSYMBOL_GrantStmt = 850,                /* GrantStmt  */
  YYSYMBOL_RevokeStmt = 851,               /* RevokeStmt  */
  YYSYMBOL_privileges = 852,               /* privileges  */
  YYSYMBOL_privilege_list = 853,           /* privilege_list  */
  YYSYMBOL_privilege = 854,                /* privilege  */
  YYSYMBOL_privilege_target = 855,         /* privilege_target  */
  YYSYMBOL_grantee_list = 856,             /* grantee_list  */
  YYSYMBOL_grantee = 857,                  /* grantee  */
  YYSYMBOL_opt_grant_grant_option = 858,   /* opt_grant_grant_option  */
  YYSYMBOL_function_with_argtypes_list = 859, /* function_with_argtypes_list  */
  YYSYMBOL_function_with_argtypes = 860,   /* function_with_argtypes  */
  YYSYMBOL_GrantRoleStmt = 861,            /* GrantRoleStmt  */
  YYSYMBOL_RevokeRoleStmt = 862,           /* RevokeRoleStmt  */
  YYSYMBOL_opt_grant_admin_option = 863,   /* opt_grant_admin_option  */
  YYSYMBOL_opt_granted_by = 864,           /* opt_granted_by  */
  YYSYMBOL_AlterDefaultPrivilegesStmt = 865, /* AlterDefaultPrivilegesStmt  */
  YYSYMBOL_DefACLOptionList = 866,         /* DefACLOptionList  */
  YYSYMBOL_DefACLOption = 867,             /* DefACLOption  */
  YYSYMBOL_DefACLAction = 868,             /* DefACLAction  */
  YYSYMBOL_defacl_privilege_target = 869,  /* defacl_privilege_target  */
  YYSYMBOL_IndexStmt = 870,                /* IndexStmt  */
  YYSYMBOL_opt_unique = 871,               /* opt_unique  */
  YYSYMBOL_opt_concurrently = 872,         /* opt_concurrently  */
  YYSYMBOL_opt_index_name = 873,           /* opt_index_name  */
  YYSYMBOL_access_method_clause = 874,     /* access_method_clause  */
  YYSYMBOL_index_params = 875,             /* index_params  */
  YYSYMBOL_index_elem = 876,               /* index_elem  */
  YYSYMBOL_opt_collate = 877,              /* opt_collate  */
  YYSYMBOL_opt_class = 878,                /* opt_class  */
  YYSYMBOL_opt_asc_desc = 879,             /* opt_asc_desc  */
  YYSYMBOL_opt_nulls_order = 880,          /* opt_nulls_order  */
  YYSYMBOL_CreateFunctionStmt = 881,       /* CreateFunctionStmt  */
  YYSYMBOL_opt_or_replace = 882,           /* opt_or_replace  */
  YYSYMBOL_func_args = 883,                /* func_args  */
  YYSYMBOL_func_args_list = 884,           /* func_args_list  */
  YYSYMBOL_func_args_with_defaults = 885,  /* func_args_with_defaults  */
  YYSYMBOL_func_args_with_defaults_list = 886, /* func_args_with_defaults_list  */
  YYSYMBOL_func_arg = 887,                 /* func_arg  */
  YYSYMBOL_arg_class = 888,                /* arg_class  */
  YYSYMBOL_param_name = 889,               /* param_name  */
  YYSYMBOL_func_return = 890,              /* func_return  */
  YYSYMBOL_func_type = 891,                /* func_type  */
  YYSYMBOL_func_arg_with_default = 892,    /* func_arg_with_default  */
  YYSYMBOL_aggr_arg = 893,                 /* aggr_arg  */
  YYSYMBOL_aggr_args = 894,                /* aggr_args  */
  YYSYMBOL_aggr_args_list = 895,           /* aggr_args_list  */
  YYSYMBOL_createfunc_opt_list = 896,      /* createfunc_opt_list  */
  YYSYMBOL_common_func_opt_item = 897,     /* common_func_opt_item  */
  YYSYMBOL_createfunc_opt_item = 898,      /* createfunc_opt_item  */
  YYSYMBOL_func_as = 899,                  /* func_as  */
  YYSYMBOL_opt_definition = 900,           /* opt_definition  */
  YYSYMBOL_table_func_column = 901,        /* table_func_column  */
  YYSYMBOL_table_func_column_list = 902,   /* table_func_column_list  */
  YYSYMBOL_AlterFunctionStmt = 903,        /* AlterFunctionStmt  */
  YYSYMBOL_alterfunc_opt_list = 904,       /* alterfunc_opt_list  */
  YYSYMBOL_opt_restrict = 905,             /* opt_restrict  */
  YYSYMBOL_RemoveFuncStmt = 906,           /* RemoveFuncStmt  */
  YYSYMBOL_RemoveAggrStmt = 907,           /* RemoveAggrStmt  */
  YYSYMBOL_RemoveOperStmt = 908,           /* RemoveOperStmt  */
  YYSYMBOL_oper_argtypes = 909,            /* oper_argtypes  */
  YYSYMBOL_any_operator = 910,             /* any_operator  */
  YYSYMBOL_DoStmt = 911,                   /* DoStmt  */
  YYSYMBOL_dostmt_opt_list = 912,          /* dostmt_opt_list  */
  YYSYMBOL_dostmt_opt_item = 913,          /* dostmt_opt_item  */
  YYSYMBOL_CreateCastStmt = 914,           /* CreateCastStmt  */
  YYSYMBOL_cast_context = 915,             /* cast_context  */
  YYSYMBOL_DropCastStmt = 916,             /* DropCastStmt  */
  YYSYMBOL_opt_if_exists = 917,            /* opt_if_exists  */
  YYSYMBOL_ReindexStmt = 918,              /* ReindexStmt  */
  YYSYMBOL_reindex_type = 919,             /* reindex_type  */
  YYSYMBOL_opt_force = 920,                /* opt_force  */
  YYSYMBOL_AlterTypeStmt = 921,            /* AlterTypeStmt  */
  YYSYMBOL_AlterTblSpcStmt = 922,          /* AlterTblSpcStmt  */
  YYSYMBOL_RenameStmt = 923,               /* RenameStmt  */
  YYSYMBOL_opt_column = 924,               /* opt_column  */
  YYSYMBOL_opt_set_data = 925,             /* opt_set_data  */
  YYSYMBOL_AlterObjectSchemaStmt = 926,    /* AlterObjectSchemaStmt  */
  YYSYMBOL_AlterOwnerStmt = 927,           /* AlterOwnerStmt  */
  YYSYMBOL_RuleStmt = 928,                 /* RuleStmt  */
  YYSYMBOL_RuleActionList = 929,           /* RuleActionList  */
  YYSYMBOL_RuleActionMulti = 930,          /* RuleActionMulti  */
  YYSYMBOL_RuleActionStmt = 931,           /* RuleActionStmt  */
  YYSYMBOL_RuleActionStmtOrEmpty = 932,    /* RuleActionStmtOrEmpty  */
  YYSYMBOL_event = 933,                    /* event  */
  YYSYMBOL_opt_instead = 934,              /* opt_instead  */
  YYSYMBOL_DropRuleStmt = 935,             /* DropRuleStmt  */
  YYSYMBOL_NotifyStmt = 936,               /* NotifyStmt  */
  YYSYMBOL_notify_payload = 937,           /* notify_payload  */
  YYSYMBOL_ListenStmt = 938,               /* ListenStmt  */
  YYSYMBOL_UnlistenStmt = 939,             /* UnlistenStmt  */
  YYSYMBOL_TransactionStmt = 940,          /* TransactionStmt  */
  YYSYMBOL_opt_transaction = 941,          /* opt_transaction  */
  YYSYMBOL_transaction_mode_item = 942,    /* transaction_mode_item  */
  YYSYMBOL_transaction_mode_list = 943,    /* transaction_mode_list  */
  YYSYMBOL_transaction_mode_list_or_empty = 944, /* transaction_mode_list_or_empty  */
  YYSYMBOL_ViewStmt = 945,                 /* ViewStmt  */
  YYSYMBOL_opt_check_option = 946,         /* opt_check_option  */
  YYSYMBOL_LoadStmt = 947,                 /* LoadStmt  */
  YYSYMBOL_CreatedbStmt = 948,             /* CreatedbStmt  */
  YYSYMBOL_createdb_opt_list = 949,        /* createdb_opt_list  */
  YYSYMBOL_createdb_opt_item = 950,        /* createdb_opt_item  */
  YYSYMBOL_opt_equal = 951,                /* opt_equal  */
  YYSYMBOL_AlterDatabaseStmt = 952,        /* AlterDatabaseStmt  */
  YYSYMBOL_AlterDatabaseSetStmt = 953,     /* AlterDatabaseSetStmt  */
  YYSYMBOL_alterdb_opt_list = 954,         /* alterdb_opt_list  */
  YYSYMBOL_alterdb_opt_item = 955,         /* alterdb_opt_item  */
  YYSYMBOL_DropdbStmt = 956,               /* DropdbStmt  */
  YYSYMBOL_AlterSystemStmt = 957,          /* AlterSystemStmt  */
  YYSYMBOL_CreateDomainStmt = 958,         /* CreateDomainStmt  */
  YYSYMBOL_AlterDomainStmt = 959,          /* AlterDomainStmt  */
  YYSYMBOL_opt_as = 960,                   /* opt_as  */
  YYSYMBOL_AlterTSDictionaryStmt = 961,    /* AlterTSDictionaryStmt  */
  YYSYMBOL_AlterTSConfigurationStmt = 962, /* AlterTSConfigurationStmt  */
  YYSYMBOL_CreateConversionStmt = 963,     /* CreateConversionStmt  */
  YYSYMBOL_ClusterStmt = 964,              /* ClusterStmt  */
  YYSYMBOL_cluster_index_specification = 965, /* cluster_index_specification  */
  YYSYMBOL_VacuumStmt = 966,               /* VacuumStmt  */
  YYSYMBOL_vacuum_option_list = 967,       /* vacuum_option_list  */
  YYSYMBOL_vacuum_option_elem = 968,       /* vacuum_option_elem  */
  YYSYMBOL_AnalyzeStmt = 969,              /* AnalyzeStmt  */
  YYSYMBOL_analyze_keyword = 970,          /* analyze_keyword  */
  YYSYMBOL_opt_verbose = 971,              /* opt_verbose  */
  YYSYMBOL_opt_rootonly_all = 972,         /* opt_rootonly_all  */
  YYSYMBOL_opt_full = 973,                 /* opt_full  */
  YYSYMBOL_opt_freeze = 974,               /* opt_freeze  */
  YYSYMBOL_opt_name_list = 975,            /* opt_name_list  */
  YYSYMBOL_ExplainStmt = 976,              /* ExplainStmt  */
  YYSYMBOL_ExplainableStmt = 977,          /* ExplainableStmt  */
  YYSYMBOL_opt_dxl = 978,                  /* opt_dxl  */
  YYSYMBOL_explain_option_list = 979,      /* explain_option_list  */
  YYSYMBOL_explain_option_elem = 980,      /* explain_option_elem  */
  YYSYMBOL_explain_option_name = 981,      /* explain_option_name  */
  YYSYMBOL_explain_option_arg = 982,       /* explain_option_arg  */
  YYSYMBOL_PrepareStmt = 983,              /* PrepareStmt  */
  YYSYMBOL_prep_type_clause = 984,         /* prep_type_clause  */
  YYSYMBOL_PreparableStmt = 985,           /* PreparableStmt  */
  YYSYMBOL_ExecuteStmt = 986,              /* ExecuteStmt  */
  YYSYMBOL_execute_param_clause = 987,     /* execute_param_clause  */
  YYSYMBOL_DeallocateStmt = 988,           /* DeallocateStmt  */
  YYSYMBOL_cdb_string_list = 989,          /* cdb_string_list  */
  YYSYMBOL_cdb_string = 990,               /* cdb_string  */
  YYSYMBOL_InsertStmt = 991,               /* InsertStmt  */
  YYSYMBOL_insert_rest = 992,              /* insert_rest  */
  YYSYMBOL_insert_column_list = 993,       /* insert_column_list  */
  YYSYMBOL_insert_column_item = 994,       /* insert_column_item  */
  YYSYMBOL_returning_clause = 995,         /* returning_clause  */
  YYSYMBOL_DeleteStmt = 996,               /* DeleteStmt  */
  YYSYMBOL_using_clause = 997,             /* using_clause  */
  YYSYMBOL_LockStmt = 998,                 /* LockStmt  */
  YYSYMBOL_opt_lock = 999,                 /* opt_lock  */
  YYSYMBOL_lock_type = 1000,               /* lock_type  */
  YYSYMBOL_opt_nowait = 1001,              /* opt_nowait  */
  YYSYMBOL_opt_masteronly = 1002,          /* opt_masteronly  */
  YYSYMBOL_UpdateStmt = 1003,              /* UpdateStmt  */
  YYSYMBOL_set_clause_list = 1004,         /* set_clause_list  */
  YYSYMBOL_set_clause = 1005,              /* set_clause  */
  YYSYMBOL_single_set_clause = 1006,       /* single_set_clause  */
  YYSYMBOL_multiple_set_clause = 1007,     /* multiple_set_clause  */
  YYSYMBOL_set_target = 1008,              /* set_target  */
  YYSYMBOL_set_target_list = 1009,         /* set_target_list  */
  YYSYMBOL_DeclareCursorStmt = 1010,       /* DeclareCursorStmt  */
  YYSYMBOL_cursor_name = 1011,             /* cursor_name  */
  YYSYMBOL_cursor_options = 1012,          /* cursor_options  */
  YYSYMBOL_opt_hold = 1013,                /* opt_hold  */
  YYSYMBOL_SelectStmt = 1014,              /* SelectStmt  */
  YYSYMBOL_RetrieveStmt = 1015,            /* RetrieveStmt  */
  YYSYMBOL_select_with_parens = 1016,      /* select_with_parens  */
  YYSYMBOL_select_no_parens = 1017,        /* select_no_parens  */
  YYSYMBOL_select_clause = 1018,           /* select_clause  */
  YYSYMBOL_simple_select = 1019,           /* simple_select  */
  YYSYMBOL_with_clause = 1020,             /* with_clause  */
  YYSYMBOL_cte_list = 1021,                /* cte_list  */
  YYSYMBOL_common_table_expr = 1022,       /* common_table_expr  */
  YYSYMBOL_opt_with_clause = 1023,         /* opt_with_clause  */
  YYSYMBOL_into_clause = 1024,             /* into_clause  */
  YYSYMBOL_OptTempTableName = 1025,        /* OptTempTableName  */
  YYSYMBOL_opt_table = 1026,               /* opt_table  */
  YYSYMBOL_opt_all = 1027,                 /* opt_all  */
  YYSYMBOL_opt_distinct = 1028,            /* opt_distinct  */
  YYSYMBOL_opt_sort_clause = 1029,         /* opt_sort_clause  */
  YYSYMBOL_sort_clause = 1030,             /* sort_clause  */
  YYSYMBOL_sortby_list = 1031,             /* sortby_list  */
  YYSYMBOL_sortby = 1032,                  /* sortby  */
  YYSYMBOL_select_limit = 1033,            /* select_limit  */
  YYSYMBOL_opt_select_limit = 1034,        /* opt_select_limit  */
  YYSYMBOL_limit_clause = 1035,            /* limit_clause  */
  YYSYMBOL_offset_clause = 1036,           /* offset_clause  */
  YYSYMBOL_select_limit_value = 1037,      /* select_limit_value  */
  YYSYMBOL_select_offset_value = 1038,     /* select_offset_value  */
  YYSYMBOL_select_fetch_first_value = 1039, /* select_fetch_first_value  */
  YYSYMBOL_I_or_F_const = 1040,            /* I_or_F_const  */
  YYSYMBOL_row_or_rows = 1041,             /* row_or_rows  */
  YYSYMBOL_first_or_next = 1042,           /* first_or_next  */
  YYSYMBOL_group_clause = 1043,            /* group_clause  */
  YYSYMBOL_group_elem_list = 1044,         /* group_elem_list  */
  YYSYMBOL_group_elem = 1045,              /* group_elem  */
  YYSYMBOL_having_clause = 1046,           /* having_clause  */
  YYSYMBOL_for_locking_clause = 1047,      /* for_locking_clause  */
  YYSYMBOL_opt_for_locking_clause = 1048,  /* opt_for_locking_clause  */
  YYSYMBOL_for_locking_items = 1049,       /* for_locking_items  */
  YYSYMBOL_for_locking_item = 1050,        /* for_locking_item  */
  YYSYMBOL_for_locking_strength = 1051,    /* for_locking_strength  */
  YYSYMBOL_locked_rels_list = 1052,        /* locked_rels_list  */
  YYSYMBOL_values_clause = 1053,           /* values_clause  */
  YYSYMBOL_from_clause = 1054,             /* from_clause  */
  YYSYMBOL_from_list = 1055,               /* from_list  */
  YYSYMBOL_table_ref = 1056,               /* table_ref  */
  YYSYMBOL_joined_table = 1057,            /* joined_table  */
  YYSYMBOL_alias_clause = 1058,            /* alias_clause  */
  YYSYMBOL_opt_alias_clause = 1059,        /* opt_alias_clause  */
  YYSYMBOL_func_alias_clause = 1060,       /* func_alias_clause  */
  YYSYMBOL_join_type = 1061,               /* join_type  */
  YYSYMBOL_join_outer = 1062,              /* join_outer  */
  YYSYMBOL_join_qual = 1063,               /* join_qual  */
  YYSYMBOL_relation_expr = 1064,           /* relation_expr  */
  YYSYMBOL_relation_expr_list = 1065,      /* relation_expr_list  */
  YYSYMBOL_relation_expr_opt_alias = 1066, /* relation_expr_opt_alias  */
  YYSYMBOL_func_table = 1067,              /* func_table  */
  YYSYMBOL_rowsfrom_item = 1068,           /* rowsfrom_item  */
  YYSYMBOL_rowsfrom_list = 1069,           /* rowsfrom_list  */
  YYSYMBOL_opt_col_def_list = 1070,        /* opt_col_def_list  */
  YYSYMBOL_opt_ordinality = 1071,          /* opt_ordinality  */
  YYSYMBOL_where_clause = 1072,            /* where_clause  */
  YYSYMBOL_where_or_current_clause = 1073, /* where_or_current_clause  */
  YYSYMBOL_OptTableFuncElementList = 1074, /* OptTableFuncElementList  */
  YYSYMBOL_TableFuncElementList = 1075,    /* TableFuncElementList  */
  YYSYMBOL_TableFuncElement = 1076,        /* TableFuncElement  */
  YYSYMBOL_Typename = 1077,                /* Typename  */
  YYSYMBOL_NestedTypename = 1078,          /* NestedTypename  */
  YYSYMBOL_opt_array_bounds = 1079,        /* opt_array_bounds  */
  YYSYMBOL_SimpleTypename = 1080,          /* SimpleTypename  */
  YYSYMBOL_ConstTypename = 1081,           /* ConstTypename  */
  YYSYMBOL_GenericType = 1082,             /* GenericType  */
  YYSYMBOL_opt_type_modifiers = 1083,      /* opt_type_modifiers  */
  YYSYMBOL_Numeric = 1084,                 /* Numeric  */
  YYSYMBOL_opt_float = 1085,               /* opt_float  */
  YYSYMBOL_Bit = 1086,                     /* Bit  */
  YYSYMBOL_ConstBit = 1087,                /* ConstBit  */
  YYSYMBOL_BitWithLength = 1088,           /* BitWithLength  */
  YYSYMBOL_BitWithoutLength = 1089,        /* BitWithoutLength  */
  YYSYMBOL_Character = 1090,               /* Character  */
  YYSYMBOL_ConstCharacter = 1091,          /* ConstCharacter  */
  YYSYMBOL_CharacterWithLength = 1092,     /* CharacterWithLength  */
  YYSYMBOL_CharacterWithoutLength = 1093,  /* CharacterWithoutLength  */
  YYSYMBOL_character = 1094,               /* character  */
  YYSYMBOL_opt_varying = 1095,             /* opt_varying  */
  YYSYMBOL_opt_charset = 1096,             /* opt_charset  */
  YYSYMBOL_ConstDatetime = 1097,           /* ConstDatetime  */
  YYSYMBOL_ConstInterval = 1098,           /* ConstInterval  */
  YYSYMBOL_opt_timezone = 1099,            /* opt_timezone  */
  YYSYMBOL_opt_interval = 1100,            /* opt_interval  */
  YYSYMBOL_interval_second = 1101,         /* interval_second  */
  YYSYMBOL_a_expr = 1102,                  /* a_expr  */
  YYSYMBOL_b_expr = 1103,                  /* b_expr  */
  YYSYMBOL_c_expr = 1104,                  /* c_expr  */
  YYSYMBOL_scatter_clause = 1105,          /* scatter_clause  */
  YYSYMBOL_table_value_select_clause = 1106, /* table_value_select_clause  */
  YYSYMBOL_func_application = 1107,        /* func_application  */
  YYSYMBOL_func_expr = 1108,               /* func_expr  */
  YYSYMBOL_func_expr_windowless = 1109,    /* func_expr_windowless  */
  YYSYMBOL_func_expr_common_subexpr = 1110, /* func_expr_common_subexpr  */
  YYSYMBOL_xml_root_version = 1111,        /* xml_root_version  */
  YYSYMBOL_opt_xml_root_standalone = 1112, /* opt_xml_root_standalone  */
  YYSYMBOL_xml_attributes = 1113,          /* xml_attributes  */
  YYSYMBOL_xml_attribute_list = 1114,      /* xml_attribute_list  */
  YYSYMBOL_xml_attribute_el = 1115,        /* xml_attribute_el  */
  YYSYMBOL_document_or_content = 1116,     /* document_or_content  */
  YYSYMBOL_xml_whitespace_option = 1117,   /* xml_whitespace_option  */
  YYSYMBOL_xmlexists_argument = 1118,      /* xmlexists_argument  */
  YYSYMBOL_within_group_clause = 1119,     /* within_group_clause  */
  YYSYMBOL_filter_clause = 1120,           /* filter_clause  */
  YYSYMBOL_window_clause = 1121,           /* window_clause  */
  YYSYMBOL_window_definition_list = 1122,  /* window_definition_list  */
  YYSYMBOL_window_definition = 1123,       /* window_definition  */
  YYSYMBOL_over_clause = 1124,             /* over_clause  */
  YYSYMBOL_window_specification = 1125,    /* window_specification  */
  YYSYMBOL_opt_existing_window_name = 1126, /* opt_existing_window_name  */
  YYSYMBOL_opt_partition_clause = 1127,    /* opt_partition_clause  */
  YYSYMBOL_opt_frame_clause = 1128,        /* opt_frame_clause  */
  YYSYMBOL_frame_extent = 1129,            /* frame_extent  */
  YYSYMBOL_frame_bound = 1130,             /* frame_bound  */
  YYSYMBOL_window_frame_exclusion = 1131,  /* window_frame_exclusion  */
  YYSYMBOL_row = 1132,                     /* row  */
  YYSYMBOL_sub_type = 1133,                /* sub_type  */
  YYSYMBOL_all_Op = 1134,                  /* all_Op  */
  YYSYMBOL_MathOp = 1135,                  /* MathOp  */
  YYSYMBOL_qual_Op = 1136,                 /* qual_Op  */
  YYSYMBOL_qual_all_Op = 1137,             /* qual_all_Op  */
  YYSYMBOL_subquery_Op = 1138,             /* subquery_Op  */
  YYSYMBOL_expr_list = 1139,               /* expr_list  */
  YYSYMBOL_func_arg_list = 1140,           /* func_arg_list  */
  YYSYMBOL_func_arg_expr = 1141,           /* func_arg_expr  */
  YYSYMBOL_type_list = 1142,               /* type_list  */
  YYSYMBOL_nested_type_list = 1143,        /* nested_type_list  */
  YYSYMBOL_array_expr = 1144,              /* array_expr  */
  YYSYMBOL_array_expr_list = 1145,         /* array_expr_list  */
  YYSYMBOL_extract_list = 1146,            /* extract_list  */
  YYSYMBOL_extract_arg = 1147,             /* extract_arg  */
  YYSYMBOL_overlay_list = 1148,            /* overlay_list  */
  YYSYMBOL_overlay_placing = 1149,         /* overlay_placing  */
  YYSYMBOL_position_list = 1150,           /* position_list  */
  YYSYMBOL_substr_list = 1151,             /* substr_list  */
  YYSYMBOL_substr_from = 1152,             /* substr_from  */
  YYSYMBOL_substr_for = 1153,              /* substr_for  */
  YYSYMBOL_trim_list = 1154,               /* trim_list  */
  YYSYMBOL_in_expr = 1155,                 /* in_expr  */
  YYSYMBOL_case_expr = 1156,               /* case_expr  */
  YYSYMBOL_when_clause_list = 1157,        /* when_clause_list  */
  YYSYMBOL_when_clause = 1158,             /* when_clause  */
  YYSYMBOL_when_operand = 1159,            /* when_operand  */
  YYSYMBOL_case_default = 1160,            /* case_default  */
  YYSYMBOL_case_arg = 1161,                /* case_arg  */
  YYSYMBOL_decode_expr = 1162,             /* decode_expr  */
  YYSYMBOL_search_result_list = 1163,      /* search_result_list  */
  YYSYMBOL_search_result = 1164,           /* search_result  */
  YYSYMBOL_decode_default = 1165,          /* decode_default  */
  YYSYMBOL_columnref = 1166,               /* columnref  */
  YYSYMBOL_indirection_el = 1167,          /* indirection_el  */
  YYSYMBOL_indirection = 1168,             /* indirection  */
  YYSYMBOL_opt_indirection = 1169,         /* opt_indirection  */
  YYSYMBOL_opt_asymmetric = 1170,          /* opt_asymmetric  */
  YYSYMBOL_ctext_expr = 1171,              /* ctext_expr  */
  YYSYMBOL_ctext_expr_list = 1172,         /* ctext_expr_list  */
  YYSYMBOL_ctext_row = 1173,               /* ctext_row  */
  YYSYMBOL_opt_target_list = 1174,         /* opt_target_list  */
  YYSYMBOL_target_list = 1175,             /* target_list  */
  YYSYMBOL_target_el = 1176,               /* target_el  */
  YYSYMBOL_qualified_name_list = 1177,     /* qualified_name_list  */
  YYSYMBOL_qualified_name = 1178,          /* qualified_name  */
  YYSYMBOL_name_list = 1179,               /* name_list  */
  YYSYMBOL_name = 1180,                    /* name  */
  YYSYMBOL_database_name = 1181,           /* database_name  */
  YYSYMBOL_access_method = 1182,           /* access_method  */
  YYSYMBOL_attr_name = 1183,               /* attr_name  */
  YYSYMBOL_index_name = 1184,              /* index_name  */
  YYSYMBOL_file_name = 1185,               /* file_name  */
  YYSYMBOL_func_name = 1186,               /* func_name  */
  YYSYMBOL_AexprConst = 1187,              /* AexprConst  */
  YYSYMBOL_Iconst = 1188,                  /* Iconst  */
  YYSYMBOL_Sconst = 1189,                  /* Sconst  */
  YYSYMBOL_RoleId = 1190,                  /* RoleId  */
  YYSYMBOL_QueueId = 1191,                 /* QueueId  */
  YYSYMBOL_role_list = 1192,               /* role_list  */
  YYSYMBOL_SignedIconst = 1193,            /* SignedIconst  */
  YYSYMBOL_ColId = 1194,                   /* ColId  */
  YYSYMBOL_type_function_name = 1195,      /* type_function_name  */
  YYSYMBOL_NonReservedWord = 1196,         /* NonReservedWord  */
  YYSYMBOL_ColLabel = 1197,                /* ColLabel  */
  YYSYMBOL_unreserved_keyword = 1198,      /* unreserved_keyword  */
  YYSYMBOL_ColLabelNoAs = 1199,            /* ColLabelNoAs  */
  YYSYMBOL_keywords_ok_in_alias_no_as = 1200, /* keywords_ok_in_alias_no_as  */
  YYSYMBOL_PartitionColId = 1201,          /* PartitionColId  */
  YYSYMBOL_PartitionIdentKeyword = 1202,   /* PartitionIdentKeyword  */
  YYSYMBOL_col_name_keyword = 1203,        /* col_name_keyword  */
  YYSYMBOL_type_func_name_keyword = 1204,  /* type_func_name_keyword  */
  YYSYMBOL_reserved_keyword = 1205         /* reserved_keyword  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;




#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE) \
             + YYSIZEOF (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  813
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   106217

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  514
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  692
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3046
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5657

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   749


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   501,     2,     2,
     508,   509,   499,   497,   512,   498,   510,   500,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   513,   511,
     494,   493,   495,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   504,     2,   505,   502,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   506,     2,   507,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   496,   503
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  1135,  1135,  1142,  1149,  1159,  1160,  1161,  1162,  1163,
    1164,  1165,  1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,
    1174,  1175,  1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,
    1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,
    1204,  1205,  1206,  1207,  1208,  1209,  1210,  1211,  1212,  1213,
    1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,
    1224,  1225,  1226,  1227,  1228,  1229,  1230,  1231,  1232,  1233,
    1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1242,  1243,
    1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,
    1254,  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1262,  1263,
    1264,  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,
    1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,
    1285,  1295,  1305,  1321,  1322,  1326,  1331,  1336,  1341,  1346,
    1360,  1367,  1381,  1395,  1419,  1434,  1450,  1464,  1476,  1480,
    1485,  1489,  1493,  1497,  1501,  1514,  1525,  1526,  1535,  1536,
    1540,  1541,  1551,  1552,  1556,  1561,  1565,  1570,  1575,  1579,
    1583,  1587,  1591,  1595,  1599,  1604,  1608,  1612,  1666,  1668,
    1672,  1676,  1680,  1684,  1690,  1691,  1694,  1703,  1704,  1707,
    1716,  1717,  1721,  1722,  1726,  1727,  1731,  1745,  1763,  1774,
    1775,  1779,  1787,  1805,  1817,  1825,  1846,  1853,  1872,  1879,
    1896,  1914,  1925,  1926,  1938,  1945,  1962,  1975,  1985,  2003,
    2021,  2022,  2026,  2033,  2041,  2042,  2043,  2044,  2045,  2046,
    2060,  2066,  2072,  2081,  2089,  2097,  2101,  2109,  2117,  2124,
    2134,  2135,  2143,  2154,  2162,  2170,  2181,  2189,  2197,  2204,
    2213,  2223,  2224,  2228,  2229,  2232,  2234,  2238,  2239,  2240,
    2241,  2245,  2246,  2247,  2253,  2265,  2269,  2273,  2288,  2311,
    2312,  2313,  2317,  2318,  2319,  2323,  2324,  2328,  2332,  2333,
    2340,  2347,  2357,  2364,  2374,  2375,  2380,  2381,  2386,  2392,
    2398,  2404,  2410,  2420,  2430,  2431,  2435,  2436,  2444,  2459,
    2465,  2471,  2477,  2483,  2502,  2511,  2520,  2528,  2539,  2550,
    2559,  2568,  2579,  2590,  2599,  2608,  2617,  2626,  2635,  2644,
    2655,  2669,  2670,  2675,  2683,  2691,  2703,  2711,  2719,  2728,
    2737,  2746,  2755,  2765,  2778,  2793,  2802,  2810,  2825,  2833,
    2843,  2853,  2860,  2867,  2875,  2883,  2891,  2899,  2907,  2914,
    2921,  2929,  2936,  2943,  2951,  2959,  2967,  2975,  2983,  2992,
    3000,  3008,  3015,  3020,  3027,  3034,  3044,  3051,  3059,  3067,
    3075,  3083,  3090,  3100,  3101,  3105,  3106,  3107,  3111,  3119,
    3123,  3124,  3128,  3135,  3142,  3149,  3159,  3162,  3163,  3167,
    3168,  3173,  3187,  3200,  3205,  3212,  3224,  3228,  3229,  3230,
    3234,  3242,  3273,  3312,  3317,  3323,  3334,  3366,  3398,  3431,
    3451,  3477,  3507,  3533,  3562,  3581,  3596,  3659,  3674,  3696,
    3718,  3754,  3767,  3768,  3773,  3782,  3792,  3802,  3828,  3834,
    3864,  3916,  3955,  3956,  3960,  3961,  3965,  3966,  3975,  3976,
    3977,  3980,  3981,  3986,  3987,  3991,  3995,  3999,  4003,  4007,
    4011,  4015,  4019,  4023,  4027,  4031,  4035,  4039,  4043,  4047,
    4051,  4055,  4064,  4068,  4072,  4076,  4080,  4084,  4088,  4089,
    4094,  4098,  4105,  4112,  4113,  4114,  4115,  4116,  4120,  4124,
    4132,  4143,  4162,  4182,  4202,  4235,  4236,  4237,  4238,  4239,
    4246,  4253,  4254,  4258,  4259,  4263,  4264,  4268,  4272,  4279,
    4283,  4290,  4291,  4292,  4293,  4297,  4298,  4302,  4311,  4323,
    4345,  4366,  4367,  4371,  4379,  4380,  4381,  4396,  4397,  4416,
    4423,  4430,  4441,  4452,  4462,  4471,  4504,  4511,  4518,  4525,
    4536,  4546,  4547,  4548,  4552,  4553,  4554,  4555,  4556,  4557,
    4566,  4574,  4578,  4591,  4606,  4620,  4635,  4649,  4667,  4688,
    4689,  4693,  4694,  4698,  4699,  4702,  4709,  4710,  4730,  4741,
    4745,  4753,  4758,  4764,  4765,  4769,  4774,  4781,  4782,  4792,
    4794,  4796,  4798,  4801,  4804,  4807,  4811,  4812,  4813,  4814,
    4815,  4818,  4819,  4824,  4825,  4826,  4827,  4830,  4831,  4832,
    4833,  4836,  4837,  4840,  4841,  4844,  4848,  4853,  4858,  4866,
    4874,  4882,  4893,  4894,  4899,  4900,  4904,  4905,  4911,  4921,
    4931,  4941,  4944,  4952,  4956,  4964,  4968,  4969,  4973,  4974,
    4978,  4979,  4983,  4987,  4990,  4991,  4992,  4999,  5000,  5005,
    5006,  5007,  5011,  5027,  5043,  5051,  5055,  5056,  5061,  5069,
    5082,  5097,  5098,  5101,  5111,  5123,  5127,  5134,  5138,  5144,
    5145,  5150,  5168,  5184,  5200,  5207,  5224,  5240,  5256,  5262,
    5267,  5273,  5279,  5286,  5287,  5289,  5299,  5320,  5324,  5360,
    5361,  5365,  5382,  5390,  5391,  5397,  5419,  5442,  5456,  5457,
    5458,  5468,  5528,  5529,  5530,  5533,  5534,  5538,  5548,  5561,
    5562,  5566,  5570,  5574,  5578,  5582,  5586,  5593,  5594,  5595,
    5596,  5600,  5604,  5611,  5615,  5622,  5626,  5633,  5637,  5641,
    5645,  5649,  5653,  5657,  5661,  5665,  5669,  5673,  5680,  5681,
    5685,  5686,  5690,  5694,  5701,  5708,  5709,  5713,  5717,  5724,
    5725,  5729,  5745,  5767,  5771,  5790,  5791,  5794,  5816,  5820,
    5821,  5825,  5826,  5827,  5834,  5835,  5839,  5843,  5857,  5874,
    5887,  5888,  5900,  5920,  5932,  5940,  5951,  5952,  5955,  5956,
    5959,  5963,  5967,  5971,  5975,  5979,  5983,  5987,  5991,  5995,
    5999,  6003,  6009,  6010,  6014,  6015,  6016,  6021,  6024,  6025,
    6037,  6049,  6064,  6065,  6073,  6074,  6078,  6079,  6083,  6084,
    6088,  6089,  6093,  6104,  6117,  6118,  6128,  6139,  6140,  6153,
    6160,  6177,  6185,  6196,  6199,  6203,  6207,  6211,  6223,  6233,
    6236,  6240,  6253,  6263,  6273,  6282,  6291,  6300,  6310,  6319,
    6329,  6339,  6349,  6358,  6367,  6376,  6385,  6394,  6403,  6412,
    6421,  6430,  6439,  6448,  6457,  6466,  6484,  6495,  6496,  6497,
    6498,  6502,  6503,  6507,  6508,  6518,  6529,  6549,  6557,  6569,
    6570,  6574,  6578,  6586,  6590,  6594,  6601,  6605,  6610,  6615,
    6622,  6629,  6634,  6644,  6658,  6659,  6664,  6665,  6669,  6670,
    6680,  6691,  6711,  6720,  6728,  6745,  6760,  6785,  6794,  6812,
    6824,  6825,  6826,  6836,  6844,  6861,  6880,  6900,  6925,  6926,
    6927,  6931,  6933,  6955,  6957,  6959,  6961,  6963,  6968,  6973,
    6983,  6984,  6988,  6989,  6993,  6994,  6998,  6999,  7000,  7004,
    7010,  7011,  7012,  7016,  7017,  7022,  7023,  7050,  7051,  7052,
    7053,  7054,  7055,  7060,  7071,  7094,  7104,  7118,  7120,  7125,
    7130,  7132,  7137,  7147,  7148,  7149,  7150,  7162,  7182,  7205,
    7215,  7226,  7236,  7246,  7257,  7266,  7287,  7294,  7301,  7310,
    7319,  7328,  7337,  7346,  7357,  7358,  7361,  7364,  7365,  7368,
    7382,  7389,  7391,  7392,  7393,  7394,  7395,  7402,  7405,  7408,
    7409,  7417,  7424,  7425,  7428,  7430,  7441,  7451,  7461,  7473,
    7474,  7490,  7505,  7506,  7510,  7520,  7531,  7540,  7550,  7559,
    7560,  7563,  7564,  7567,  7568,  7569,  7572,  7586,  7591,  7601,
    7610,  7622,  7623,  7627,  7635,  7647,  7658,  7672,  7683,  7706,
    7716,  7734,  7745,  7756,  7767,  7781,  7782,  7783,  7784,  7785,
    7786,  7787,  7788,  7789,  7790,  7791,  7792,  7793,  7794,  7795,
    7796,  7797,  7798,  7799,  7800,  7804,  7805,  7808,  7809,  7812,
    7814,  7827,  7838,  7839,  7840,  7872,  7881,  7890,  7899,  7908,
    7917,  7926,  7936,  7945,  7954,  7963,  7972,  7981,  7993,  7994,
    7995,  7996,  7997,  7998,  7999,  8000,  8001,  8002,  8003,  8004,
    8005,  8006,  8007,  8008,  8009,  8010,  8011,  8012,  8013,  8014,
    8015,  8016,  8017,  8021,  8022,  8036,  8047,  8058,  8069,  8080,
    8093,  8094,  8098,  8099,  8100,  8101,  8102,  8103,  8104,  8105,
    8106,  8107,  8108,  8109,  8110,  8113,  8114,  8124,  8130,  8138,
    8146,  8154,  8162,  8170,  8178,  8186,  8194,  8202,  8210,  8218,
    8226,  8234,  8242,  8250,  8258,  8268,  8269,  8272,  8273,  8283,
    8299,  8313,  8339,  8341,  8343,  8345,  8352,  8361,  8362,  8365,
    8372,  8379,  8386,  8400,  8408,  8416,  8424,  8432,  8440,  8448,
    8456,  8464,  8472,  8480,  8488,  8496,  8504,  8512,  8520,  8528,
    8540,  8541,  8544,  8554,  8568,  8569,  8573,  8574,  8579,  8595,
    8608,  8618,  8630,  8631,  8634,  8635,  8645,  8655,  8656,  8660,
    8664,  8668,  8679,  8692,  8706,  8723,  8724,  8725,  8726,  8738,
    8774,  8775,  8779,  8780,  8784,  8785,  8789,  8790,  8793,  8794,
    8802,  8813,  8824,  8837,  8838,  8841,  8842,  8843,  8846,  8847,
    8848,  8851,  8852,  8853,  8869,  8881,  8894,  8909,  8910,  8913,
    8914,  8918,  8919,  8927,  8928,  8932,  8933,  8948,  8957,  8966,
    8975,  8984,  8996,  8997,  8998,  8999,  9000,  9006,  9010,  9025,
    9026,  9032,  9042,  9046,  9051,  9059,  9100,  9104,  9108,  9112,
    9120,  9121,  9126,  9127,  9134,  9138,  9142,  9146,  9150,  9154,
    9158,  9162,  9166,  9170,  9174,  9178,  9182,  9186,  9190,  9195,
    9199,  9203,  9207,  9211,  9215,  9219,  9223,  9230,  9234,  9238,
    9242,  9248,  9249,  9256,  9257,  9260,  9272,  9276,  9291,  9302,
    9303,  9308,  9309,  9324,  9335,  9349,  9360,  9374,  9385,  9399,
    9407,  9409,  9411,  9416,  9418,  9431,  9440,  9441,  9445,  9449,
    9461,  9472,  9483,  9496,  9497,  9498,  9502,  9515,  9516,  9530,
    9538,  9548,  9561,  9562,  9565,  9566,  9574,  9591,  9600,  9617,
    9627,  9636,  9645,  9654,  9663,  9673,  9682,  9692,  9701,  9710,
    9720,  9730,  9739,  9748,  9758,  9768,  9778,  9788,  9798,  9808,
    9818,  9828,  9838,  9848,  9858,  9868,  9879,  9890,  9901,  9912,
    9922,  9933,  9944,  9954,  9964,  9972,  9981,  9990,  9999, 10008,
   10017, 10026, 10035, 10044, 10056, 10066, 10067, 10070, 10071, 10081,
   10091, 10100, 10109, 10118, 10127, 10137, 10147, 10157, 10167, 10176,
   10185, 10194, 10203, 10212, 10221, 10230, 10239, 10248, 10257, 10266,
   10275, 10284, 10293, 10310, 10319, 10327, 10335, 10343, 10351, 10360,
   10368, 10376, 10385, 10394, 10403, 10411, 10419, 10427, 10435, 10443,
   10451, 10459, 10467, 10484, 10501, 10502, 10503, 10508, 10514, 10523,
   10524, 10525, 10526, 10527, 10531, 10532, 10535, 10536, 10537, 10538,
   10542, 10543, 10544, 10549, 10560, 10582, 10592, 10593, 10596, 10605,
   10611, 10630, 10637, 10644, 10651, 10658, 10665, 10672, 10680, 10688,
   10696, 10704, 10712, 10719, 10726, 10735, 10736, 10737, 10741, 10744,
   10747, 10750, 10753, 10760, 10762, 10764, 10769, 10771, 10783, 10796,
   10809, 10827, 10848, 10849, 10850, 10851, 10861, 10877, 10887, 10888,
   10892, 10896, 10900, 10904, 10908, 10912, 10916, 10920, 10924, 10928,
   10932, 10936, 10940, 10944, 10948, 10952, 10962, 10963, 10974, 10981,
   10992, 11003, 11004, 11008, 11022, 11029, 11047, 11053, 11069, 11082,
   11091, 11099, 11107, 11116, 11127, 11138, 11148, 11149, 11160, 11170,
   11181, 11192, 11203, 11214, 11223, 11245, 11268, 11276, 11285, 11296,
   11297, 11309, 11325, 11341, 11355, 11375, 11400, 11401, 11405, 11406,
   11407, 11408, 11409, 11413, 11429, 11443, 11455, 11470, 11471, 11475,
   11476, 11480, 11481, 11484, 11485, 11488, 11489, 11493, 11494, 11507,
   11514, 11527, 11537, 11547, 11548, 11549, 11550, 11551, 11552, 11553,
   11554, 11555, 11556, 11565, 11566, 11570, 11574, 11581, 11588, 11589,
   11593, 11594, 11595, 11605, 11615, 11616, 11620, 11621, 11622, 11623,
   11633, 11640, 11658, 11659, 11669, 11675, 11681, 11687, 11703, 11704,
   11717, 11731, 11741, 11747, 11753, 11762, 11764, 11769, 11780, 11781,
   11792, 11806, 11807, 11818, 11838, 11839, 11842, 11843, 11844, 11845,
   11846, 11847, 11848, 11849, 11852, 11853, 11856, 11857, 11867, 11885,
   11886, 11890, 11891, 11895, 11903, 11931, 11942, 11943, 11953, 11964,
   11967, 11968, 11969, 11970, 11971, 11972, 11975, 11976, 11977, 12025,
   12026, 12030, 12037, 12048, 12049, 12064, 12065, 12072, 12080, 12088,
   12096, 12104, 12112, 12123, 12124, 12151, 12166, 12167, 12186, 12190,
   12194, 12209, 12216, 12226, 12227, 12230, 12242, 12243, 12247, 12259,
   12267, 12272, 12277, 12282, 12287, 12295, 12303, 12308, 12313, 12320,
   12321, 12324, 12325, 12326, 12333, 12334, 12335, 12336, 12340, 12341,
   12345, 12349, 12350, 12353, 12362, 12375, 12376, 12377, 12378, 12382,
   12383, 12387, 12389, 12405, 12407, 12412, 12415, 12420, 12421, 12429,
   12449, 12450, 12452, 12457, 12458, 12462, 12463, 12466, 12467, 12472,
   12473, 12477, 12478, 12482, 12483, 12491, 12499, 12507, 12512, 12513,
   12517, 12518, 12522, 12523, 12527, 12528, 12532, 12543, 12544, 12545,
   12546, 12550, 12551, 12556, 12562, 12580, 12581, 12585, 12586, 12592,
   12597, 12604, 12612, 12647, 12672, 12676, 12702, 12706, 12718, 12731,
   12745, 12756, 12771, 12777, 12782, 12788, 12795, 12796, 12804, 12808,
   12812, 12818, 12825, 12830, 12831, 12832, 12833, 12837, 12838, 12850,
   12851, 12856, 12863, 12870, 12877, 12888, 12889, 12902, 12906, 12913,
   12934, 12944, 12956, 12961, 12962, 12965, 12966, 12969, 12970, 12975,
   12976, 12981, 12982, 12990, 12995, 12996, 13000, 13004, 13010, 13040,
   13045, 13052, 13057, 13063, 13068, 13077, 13078, 13087, 13089, 13092,
   13096, 13097, 13098, 13099, 13100, 13101, 13106, 13136, 13137, 13138,
   13139, 13150, 13156, 13164, 13165, 13171, 13176, 13181, 13186, 13191,
   13196, 13201, 13206, 13212, 13218, 13224, 13231, 13253, 13262, 13266,
   13274, 13278, 13286, 13298, 13319, 13323, 13329, 13333, 13346, 13357,
   13372, 13374, 13376, 13378, 13380, 13382, 13387, 13388, 13392, 13393,
   13400, 13409, 13417, 13426, 13437, 13445, 13446, 13447, 13451, 13453,
   13455, 13457, 13459, 13461, 13463, 13468, 13473, 13479, 13487, 13492,
   13499, 13506, 13510, 13514, 13544, 13545, 13547, 13555, 13570, 13572,
   13574, 13576, 13578, 13580, 13582, 13584, 13586, 13588, 13590, 13593,
   13595, 13597, 13600, 13602, 13604, 13607, 13609, 13616, 13618, 13625,
   13627, 13634, 13636, 13644, 13651, 13658, 13665, 13682, 13689, 13696,
   13703, 13710, 13726, 13733, 13740, 13747, 13754, 13761, 13768, 13772,
   13780, 13784, 13794, 13801, 13808, 13821, 13834, 13853, 13874, 13884,
   13891, 13907, 13912, 13930, 13932, 13934, 13936, 13938, 13940, 13942,
   13944, 13946, 13948, 13950, 13952, 13954, 13956, 13958, 13960, 13962,
   13966, 13971, 13975, 13979, 13984, 14001, 14002, 14003, 14018, 14030,
   14032, 14034, 14036, 14046, 14069, 14079, 14089, 14097, 14104, 14116,
   14117, 14118, 14122, 14130, 14134, 14140, 14147, 14154, 14167, 14174,
   14202, 14237, 14248, 14249, 14256, 14262, 14288, 14298, 14311, 14319,
   14332, 14342, 14355, 14365, 14378, 14382, 14386, 14390, 14394, 14398,
   14402, 14404, 14408, 14417, 14422, 14429, 14444, 14451, 14455, 14459,
   14463, 14467, 14474, 14482, 14490, 14497, 14502, 14530, 14544, 14548,
   14552, 14556, 14560, 14564, 14578, 14591, 14595, 14604, 14608, 14612,
   14617, 14631, 14633, 14637, 14639, 14641, 14644, 14647, 14650, 14651,
   14654, 14662, 14672, 14673, 14676, 14677, 14678, 14683, 14687, 14691,
   14695, 14706, 14707, 14711, 14712, 14720, 14721, 14725, 14726, 14731,
   14739, 14741, 14755, 14758, 14785, 14786, 14789, 14790, 14801, 14822,
   14830, 14839, 14856, 14901, 14909, 14917, 14925, 14933, 14943, 14944,
   14945, 14946, 14947, 14961, 14962, 14963, 14966, 14967, 14968, 14971,
   14972, 14975, 14976, 14977, 14978, 14979, 14980, 14981, 14982, 14983,
   14986, 14988, 14993, 14995, 15000, 15002, 15004, 15006, 15008, 15010,
   15022, 15026, 15033, 15037, 15043, 15047, 15058, 15059, 15063, 15064,
   15067, 15071, 15075, 15081, 15082, 15087, 15091, 15098, 15099, 15100,
   15101, 15102, 15103, 15104, 15105, 15115, 15119, 15126, 15133, 15134,
   15150, 15154, 15159, 15163, 15178, 15183, 15187, 15190, 15193, 15194,
   15195, 15198, 15205, 15215, 15229, 15230, 15234, 15245, 15246, 15250,
   15251, 15254, 15255, 15269, 15281, 15282, 15286, 15297, 15298, 15302,
   15306, 15313, 15317, 15321, 15328, 15338, 15339, 15343, 15344, 15347,
   15348, 15359, 15360, 15369, 15370, 15378, 15388, 15389, 15393, 15394,
   15397, 15419, 15427, 15435, 15443, 15465, 15466, 15477, 15481, 15516,
   15518, 15523, 15526, 15529, 15531, 15533, 15535, 15545, 15547, 15558,
   15562, 15566, 15570, 15574, 15583, 15590, 15622, 15626, 15632, 15649,
   15653, 15657, 15663, 15664, 15665, 15666, 15668, 15670, 15674, 15675,
   15676, 15692, 15693, 15694, 15699, 15700, 15701, 15706, 15707, 15708,
   15709, 15715, 15716, 15717, 15718, 15719, 15739, 15740, 15741, 15742,
   15743, 15744, 15745, 15746, 15747, 15748, 15749, 15750, 15751, 15752,
   15753, 15754, 15755, 15756, 15757, 15758, 15759, 15760, 15761, 15762,
   15763, 15764, 15765, 15766, 15767, 15768, 15769, 15770, 15771, 15772,
   15773, 15774, 15775, 15776, 15777, 15778, 15779, 15780, 15781, 15782,
   15783, 15784, 15785, 15786, 15787, 15788, 15789, 15790, 15791, 15792,
   15793, 15794, 15795, 15796, 15797, 15798, 15799, 15800, 15801, 15802,
   15803, 15804, 15805, 15806, 15807, 15808, 15809, 15810, 15811, 15812,
   15813, 15814, 15815, 15816, 15817, 15818, 15819, 15820, 15821, 15822,
   15823, 15824, 15825, 15826, 15827, 15828, 15829, 15830, 15831, 15832,
   15833, 15834, 15835, 15836, 15837, 15838, 15839, 15840, 15841, 15842,
   15843, 15844, 15845, 15846, 15847, 15848, 15849, 15850, 15851, 15852,
   15853, 15854, 15855, 15856, 15857, 15858, 15859, 15860, 15861, 15862,
   15863, 15864, 15865, 15866, 15867, 15868, 15869, 15870, 15871, 15872,
   15873, 15874, 15875, 15876, 15877, 15878, 15879, 15880, 15881, 15882,
   15883, 15884, 15885, 15886, 15887, 15888, 15889, 15890, 15891, 15892,
   15893, 15894, 15895, 15896, 15897, 15898, 15899, 15900, 15901, 15902,
   15903, 15904, 15905, 15906, 15907, 15908, 15909, 15910, 15911, 15912,
   15913, 15914, 15915, 15916, 15917, 15918, 15919, 15920, 15921, 15922,
   15923, 15924, 15925, 15926, 15927, 15928, 15929, 15930, 15931, 15932,
   15933, 15934, 15935, 15936, 15937, 15938, 15939, 15940, 15941, 15942,
   15943, 15944, 15945, 15946, 15947, 15948, 15949, 15950, 15951, 15952,
   15953, 15954, 15955, 15956, 15957, 15958, 15959, 15960, 15961, 15962,
   15963, 15964, 15965, 15966, 15967, 15968, 15969, 15970, 15971, 15972,
   15973, 15974, 15975, 15976, 15977, 15978, 15979, 15980, 15981, 15982,
   15983, 15984, 15985, 15986, 15987, 15988, 15989, 15990, 15991, 15992,
   15993, 15994, 15995, 15996, 15997, 15998, 15999, 16000, 16001, 16002,
   16003, 16004, 16005, 16006, 16007, 16008, 16009, 16010, 16011, 16012,
   16013, 16014, 16015, 16016, 16017, 16018, 16019, 16020, 16021, 16022,
   16023, 16024, 16025, 16026, 16027, 16028, 16029, 16030, 16031, 16032,
   16033, 16034, 16035, 16036, 16037, 16038, 16039, 16040, 16041, 16042,
   16043, 16044, 16045, 16046, 16047, 16048, 16049, 16050, 16051, 16052,
   16053, 16054, 16068, 16071, 16072, 16073, 16074, 16075, 16078, 16079,
   16082, 16083, 16084, 16085, 16086, 16087, 16088, 16089, 16090, 16091,
   16092, 16093, 16094, 16095, 16096, 16097, 16098, 16099, 16100, 16101,
   16102, 16103, 16104, 16105, 16106, 16107, 16108, 16109, 16110, 16111,
   16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121,
   16122, 16123, 16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131,
   16132, 16133, 16134, 16135, 16136, 16137, 16138, 16139, 16140, 16141,
   16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149, 16150, 16151,
   16152, 16153, 16154, 16155, 16156, 16157, 16158, 16159, 16160, 16161,
   16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171,
   16172, 16173, 16174, 16175, 16176, 16177, 16178, 16179, 16180, 16181,
   16182, 16183, 16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191,
   16192, 16193, 16194, 16195, 16196, 16197, 16198, 16199, 16200, 16201,
   16202, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16210, 16211,
   16212, 16213, 16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221,
   16222, 16223, 16224, 16225, 16226, 16227, 16228, 16229, 16230, 16231,
   16232, 16233, 16234, 16235, 16236, 16237, 16238, 16239, 16240, 16241,
   16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249, 16250, 16251,
   16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261,
   16262, 16263, 16264, 16265, 16266, 16267, 16268, 16269, 16270, 16271,
   16272, 16273, 16274, 16275, 16276, 16277, 16278, 16279, 16280, 16281,
   16282, 16283, 16284, 16285, 16286, 16287, 16288, 16289, 16290, 16291,
   16292, 16293, 16294, 16295, 16296, 16297, 16298, 16299, 16300, 16301,
   16302, 16303, 16304, 16305, 16306, 16307, 16308, 16309, 16310, 16311,
   16312, 16313, 16314, 16315, 16316, 16317, 16318, 16319, 16320, 16321,
   16322, 16323, 16324, 16325, 16326, 16327, 16328, 16329, 16330, 16331,
   16332, 16333, 16334, 16335, 16336, 16337, 16338, 16339, 16340, 16341,
   16342, 16343, 16344, 16345, 16346, 16347, 16348, 16349, 16350, 16351,
   16352, 16353, 16354, 16355, 16356, 16357, 16358, 16359, 16373, 16374,
   16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382, 16383, 16384,
   16385, 16386, 16387, 16388, 16389, 16390, 16391, 16392, 16393, 16394,
   16395, 16396, 16397, 16398, 16399, 16400, 16401, 16402, 16403, 16404,
   16405, 16406, 16407, 16408, 16409, 16410, 16411, 16412, 16413, 16414,
   16415, 16416, 16417, 16418, 16419, 16420, 16421, 16422, 16423, 16424,
   16438, 16439, 16440, 16441, 16442, 16443, 16444, 16445, 16446, 16447,
   16448, 16449, 16450, 16451, 16452, 16453, 16454, 16455, 16456, 16457,
   16458, 16459, 16469, 16470, 16471, 16472, 16473, 16474, 16475, 16476,
   16477, 16478, 16479, 16480, 16481, 16482, 16483, 16484, 16485, 16486,
   16487, 16488, 16489, 16490, 16491, 16492, 16493, 16494, 16495, 16496,
   16497, 16498, 16499, 16500, 16501, 16502, 16503, 16504, 16505, 16506,
   16507, 16508, 16509, 16510, 16511, 16512, 16513, 16514, 16515, 16516,
   16517, 16518, 16519, 16520, 16521, 16522, 16523, 16524, 16525, 16526,
   16527, 16528, 16529, 16530, 16531, 16532, 16533, 16534, 16535, 16536,
   16537, 16538, 16539, 16540, 16541, 16542, 16543, 16544, 16545, 16546,
   16547, 16548, 16549, 16550, 16551, 16552, 16553
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "IDENT", "FCONST",
  "SCONST", "BCONST", "XCONST", "Op", "ICONST", "PARAM", "TYPECAST",
  "DOT_DOT", "COLON_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION",
  "ADD_P", "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED",
  "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENCY", "CONCURRENTLY", "CONFIGURATION",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE", "CROSS", "CSV", "CURRENT_P",
  "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA",
  "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR", "CYCLE",
  "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC", "DECIMAL_P",
  "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER",
  "DELETE_P", "DELIMITER", "DELIMITERS", "DESC", "DICTIONARY", "DISABLE_P",
  "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P",
  "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P",
  "ENDPOINT", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE",
  "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GLOBAL", "GRANT", "GRANTED",
  "GREATEST", "GROUP_P", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LC_COLLATE_P", "LC_CTYPE_P", "LEADING", "LEAKPROOF", "LEAST", "LEFT",
  "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "MEMORY_LIMIT", "MEMORY_SHARED_QUOTA",
  "MEMORY_SPILL_RATIO", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE",
  "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "ON",
  "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY",
  "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OWNED", "OWNER",
  "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD", "PLACING",
  "PLANS", "POSITION", "PRECEDING", "PRECISION", "PRESERVE", "PREPARE",
  "PREPARED", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "QUOTE", "RANGE", "READ", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE",
  "ROLLBACK", "ROW", "ROWS", "RULE", "SAVEPOINT", "SCHEMA", "SCROLL",
  "SEARCH", "SECOND_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SMALLINT", "SNAPSHOT", "SOME",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSTRING", "SYMMETRIC",
  "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE",
  "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "YEAR_P", "YES_P", "ZONE", "ACTIVE", "CONTAINS", "CPUSET",
  "CPU_RATE_LIMIT", "CREATEEXTTABLE", "CUBE", "DECODE", "DENY",
  "DISTRIBUTED", "DXL", "ERRORS", "EVERY", "EXCHANGE", "EXPAND", "FIELDS",
  "FILL", "FORMAT", "FULLSCAN", "GROUP_ID", "GROUPING", "HASH", "HOST",
  "IGNORE_P", "INCLUSIVE", "INITPLAN", "LIST", "LOG_P", "MASTER", "MEDIAN",
  "MISSING", "MODIFIES", "NEWLINE", "NOCREATEEXTTABLE", "NOOVERCOMMIT",
  "ORDERED", "OTHERS", "OVERCOMMIT", "PARALLEL", "RETRIEVE", "PARTITIONS",
  "PERCENT", "PERSISTENTLY", "PROTOCOL", "QUEUE", "RANDOMLY", "READABLE",
  "READS", "REJECT_P", "REPLICATED", "RESOURCE", "ROLLUP", "ROOTPARTITION",
  "SCATTER", "SEGMENT", "SEGMENTS", "SETS", "SPLIT", "SQL", "SUBPARTITION",
  "THRESHOLD", "TIES", "VALIDATION", "WEB", "WRITABLE", "YEZZEY",
  "NULLS_FIRST", "NULLS_LAST", "WITH_ORDINALITY", "WITH_TIME", "'='",
  "'<'", "'>'", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'",
  "UMINUS", "'['", "']'", "'{'", "'}'", "'('", "')'", "'.'", "';'", "','",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "CreateQueueStmt",
  "OptQueueList", "OptQueueElem", "AlterQueueStmt", "DropQueueStmt",
  "CreateResourceGroupStmt", "DropResourceGroupStmt",
  "AlterResourceGroupStmt", "OptResourceGroupList", "OptResourceGroupElem",
  "CreateRoleStmt", "opt_with", "OptRoleList", "AlterOptRoleList",
  "AlterOnlyOptRoleElem", "AlterOptRoleElem", "CreateOptRoleElem",
  "deny_login_role", "deny_interval", "deny_day_specifier", "deny_point",
  "opt_time", "exttab_auth_list", "keyvalue_list", "keyvalue_pair",
  "CreateUserStmt", "AlterRoleStmt", "opt_in_database", "AlterRoleSetStmt",
  "AlterUserStmt", "AlterUserSetStmt", "DropRoleStmt", "DropUserStmt",
  "CreateGroupStmt", "AlterGroupStmt", "add_drop", "DropGroupStmt",
  "CreateSchemaStmt", "OptSchemaName", "OptSchemaEltList", "schema_stmt",
  "VariableSetStmt", "set_rest", "generic_set", "set_rest_more",
  "var_name", "var_list", "var_value", "iso_level",
  "opt_boolean_or_string", "zone_value", "opt_encoding",
  "NonReservedWord_or_Sconst", "VariableResetStmt", "reset_rest",
  "generic_reset", "SetResetClause", "FunctionSetResetClause",
  "VariableShowStmt", "ConstraintsSetStmt", "constraints_set_list",
  "constraints_set_mode", "CheckPointStmt", "DiscardStmt",
  "AlterTableStmt", "alter_table_cmds", "alter_table_cmd",
  "alter_column_default", "opt_drop_behavior", "opt_collate_clause",
  "alter_using", "replica_identity", "reloptions", "opt_reloptions",
  "reloption_list", "reloption_elem", "opt_table_partition_split_into",
  "opt_table_partition_exchange_validate", "alter_table_partition_id_spec",
  "alter_table_partition_id_spec_with_opt_default",
  "alter_table_partition_cmd", "AlterCompositeTypeStmt", "alter_type_cmds",
  "alter_type_cmd", "ClosePortalStmt", "CopyStmt", "copy_from",
  "opt_program", "skip_external_partition", "copy_file_name",
  "copy_options", "copy_opt_list", "copy_opt_item", "opt_binary",
  "opt_oids", "copy_delimiter", "opt_using", "copy_generic_opt_list",
  "copy_generic_opt_elem", "copy_generic_opt_arg",
  "copy_generic_opt_arg_list", "copy_generic_opt_arg_list_item",
  "CreateStmt", "OptTemp", "OptTableElementList",
  "OptTypedTableElementList", "TableElementList", "TypedTableElementList",
  "TableElement", "TypedTableElement",
  "column_reference_storage_directive", "columnDef", "columnOptions",
  "ColQualList", "ColConstraint", "opt_storage_encoding",
  "ColConstraintElem", "ConstraintAttr", "TableLikeClause",
  "TableLikeOptionList", "TableLikeOption", "TableConstraint",
  "ConstraintElem", "opt_no_inherit", "opt_column_list", "columnList",
  "columnElem", "distributed_by_list", "distributed_by_elem", "key_match",
  "ExclusionConstraintList", "ExclusionConstraintElem",
  "ExclusionWhereClause", "key_actions", "key_update", "key_delete",
  "key_action", "OptInherit", "OptWith", "OnCommitOption", "OptTableSpace",
  "OptConsTableSpace", "ExistingIndex", "optNumsegments", "DistributedBy",
  "OptDistributedBy", "OptTabPartitionColumnEncList",
  "TabPartitionColumnEncList", "OptTabPartitionStorageAttr",
  "OptTabPartitionSpec", "OptTabSubPartitionSpec", "TabPartitionElemList",
  "TabSubPartitionElemList", "tab_part_val_no_paran", "tab_part_val",
  "TabPartitionBoundarySpecValList", "OptTabPartitionRangeInclusive",
  "TabPartitionBoundarySpecStart", "TabPartitionBoundarySpecEnd",
  "OptTabPartitionBoundarySpecEvery", "OptTabPartitionBoundarySpecEnd",
  "TabPartitionBoundarySpec", "OptTabPartitionBoundarySpec",
  "multi_spec_value_list", "part_values_single", "part_values_clause",
  "part_values_or_spec_list", "TabPartitionElem", "TabSubPartitionElem",
  "TabPartitionNameDecl", "TabPartitionDefaultNameDecl",
  "TabSubPartitionNameDecl", "TabSubPartitionDefaultNameDecl",
  "TabPartitionByType", "OptTabPartitionBy", "TabSubPartitionTemplate",
  "opt_list_subparts", "TabSubPartitionBy", "TabSubPartition",
  "CreateAsStmt", "create_as_target", "opt_with_data",
  "CreateExternalStmt", "OptWritable", "OptWeb", "ExtTypedesc",
  "ext_on_clause_list", "ext_on_clause_item", "format_opt",
  "format_opt_list", "format_def_list", "format_def_item",
  "format_opt_item", "ext_options_opt", "ext_options", "ext_options_list",
  "ext_options_item", "OptExtTableElementList", "ExtTableElementList",
  "ExtTableElement", "ExtcolumnDef", "OptSingleRowErrorHandling",
  "OptLogErrorTable", "ExtSingleRowErrorHandling", "ExtLogErrorTable",
  "OptSrehLimitType", "ext_opt_encoding_list", "ext_opt_encoding_item",
  "CreateMatViewStmt", "create_mv_target", "OptNoLog",
  "RefreshMatViewStmt", "CreateSeqStmt", "AlterSeqStmt", "OptSeqOptList",
  "SeqOptList", "SeqOptElem", "opt_by", "NumericOnly", "NumericOnly_list",
  "CreatePLangStmt", "opt_trusted", "handler_name", "opt_inline_handler",
  "validator_clause", "opt_validator", "DropPLangStmt", "opt_procedural",
  "CreateTableSpaceStmt", "OptTableSpaceOwner", "DropTableSpaceStmt",
  "CreateExtensionStmt", "create_extension_opt_list",
  "create_extension_opt_item", "AlterExtensionStmt",
  "alter_extension_opt_list", "alter_extension_opt_item",
  "AlterExtensionContentsStmt", "CreateFdwStmt", "fdw_option",
  "fdw_options", "opt_fdw_options", "DropFdwStmt", "AlterFdwStmt",
  "create_generic_options", "generic_option_list", "alter_generic_options",
  "alter_generic_option_list", "alter_generic_option_elem",
  "generic_option_elem", "generic_option_name", "generic_option_arg",
  "CreateForeignServerStmt", "opt_type", "foreign_server_version",
  "opt_foreign_server_version", "DropForeignServerStmt",
  "AlterForeignServerStmt", "CreateForeignTableStmt",
  "AlterForeignTableStmt", "CreateUserMappingStmt", "auth_ident",
  "DropUserMappingStmt", "AlterUserMappingStmt", "CreateTrigStmt",
  "TriggerActionTime", "TriggerEvents", "TriggerOneEvent",
  "TriggerForSpec", "TriggerForOptEach", "TriggerForType", "TriggerWhen",
  "TriggerFuncArgs", "TriggerFuncArg", "OptConstrFromTable",
  "ConstraintAttributeSpec", "ConstraintAttributeElem", "DropTrigStmt",
  "CreateEventTrigStmt", "event_trigger_when_list",
  "event_trigger_when_item", "event_trigger_value_list",
  "AlterEventTrigStmt", "enable_trigger", "CreateAssertStmt",
  "DropAssertStmt", "DefineStmt", "opt_ordered", "definition", "def_list",
  "def_elem", "def_arg", "old_aggr_definition", "old_aggr_list",
  "old_aggr_elem", "opt_enum_val_list", "enum_val_list", "AlterEnumStmt",
  "opt_if_not_exists", "CreateOpClassStmt", "opclass_item_list",
  "opclass_item", "opt_default", "opt_opfamily", "opclass_purpose",
  "opt_recheck", "CreateOpFamilyStmt", "AlterOpFamilyStmt",
  "opclass_drop_list", "opclass_drop", "DropOpClassStmt",
  "DropOpFamilyStmt", "DropOwnedStmt", "ReassignOwnedStmt", "DropStmt",
  "drop_type", "any_name_list", "any_name", "attrs", "TruncateStmt",
  "opt_restart_seqs", "CommentStmt", "comment_type", "comment_text",
  "SecLabelStmt", "opt_provider", "security_label_type", "security_label",
  "FetchStmt", "fetch_args", "from_in", "opt_from_in", "GrantStmt",
  "RevokeStmt", "privileges", "privilege_list", "privilege",
  "privilege_target", "grantee_list", "grantee", "opt_grant_grant_option",
  "function_with_argtypes_list", "function_with_argtypes", "GrantRoleStmt",
  "RevokeRoleStmt", "opt_grant_admin_option", "opt_granted_by",
  "AlterDefaultPrivilegesStmt", "DefACLOptionList", "DefACLOption",
  "DefACLAction", "defacl_privilege_target", "IndexStmt", "opt_unique",
  "opt_concurrently", "opt_index_name", "access_method_clause",
  "index_params", "index_elem", "opt_collate", "opt_class", "opt_asc_desc",
  "opt_nulls_order", "CreateFunctionStmt", "opt_or_replace", "func_args",
  "func_args_list", "func_args_with_defaults",
  "func_args_with_defaults_list", "func_arg", "arg_class", "param_name",
  "func_return", "func_type", "func_arg_with_default", "aggr_arg",
  "aggr_args", "aggr_args_list", "createfunc_opt_list",
  "common_func_opt_item", "createfunc_opt_item", "func_as",
  "opt_definition", "table_func_column", "table_func_column_list",
  "AlterFunctionStmt", "alterfunc_opt_list", "opt_restrict",
  "RemoveFuncStmt", "RemoveAggrStmt", "RemoveOperStmt", "oper_argtypes",
  "any_operator", "DoStmt", "dostmt_opt_list", "dostmt_opt_item",
  "CreateCastStmt", "cast_context", "DropCastStmt", "opt_if_exists",
  "ReindexStmt", "reindex_type", "opt_force", "AlterTypeStmt",
  "AlterTblSpcStmt", "RenameStmt", "opt_column", "opt_set_data",
  "AlterObjectSchemaStmt", "AlterOwnerStmt", "RuleStmt", "RuleActionList",
  "RuleActionMulti", "RuleActionStmt", "RuleActionStmtOrEmpty", "event",
  "opt_instead", "DropRuleStmt", "NotifyStmt", "notify_payload",
  "ListenStmt", "UnlistenStmt", "TransactionStmt", "opt_transaction",
  "transaction_mode_item", "transaction_mode_list",
  "transaction_mode_list_or_empty", "ViewStmt", "opt_check_option",
  "LoadStmt", "CreatedbStmt", "createdb_opt_list", "createdb_opt_item",
  "opt_equal", "AlterDatabaseStmt", "AlterDatabaseSetStmt",
  "alterdb_opt_list", "alterdb_opt_item", "DropdbStmt", "AlterSystemStmt",
  "CreateDomainStmt", "AlterDomainStmt", "opt_as", "AlterTSDictionaryStmt",
  "AlterTSConfigurationStmt", "CreateConversionStmt", "ClusterStmt",
  "cluster_index_specification", "VacuumStmt", "vacuum_option_list",
  "vacuum_option_elem", "AnalyzeStmt", "analyze_keyword", "opt_verbose",
  "opt_rootonly_all", "opt_full", "opt_freeze", "opt_name_list",
  "ExplainStmt", "ExplainableStmt", "opt_dxl", "explain_option_list",
  "explain_option_elem", "explain_option_name", "explain_option_arg",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "ExecuteStmt",
  "execute_param_clause", "DeallocateStmt", "cdb_string_list",
  "cdb_string", "InsertStmt", "insert_rest", "insert_column_list",
  "insert_column_item", "returning_clause", "DeleteStmt", "using_clause",
  "LockStmt", "opt_lock", "lock_type", "opt_nowait", "opt_masteronly",
  "UpdateStmt", "set_clause_list", "set_clause", "single_set_clause",
  "multiple_set_clause", "set_target", "set_target_list",
  "DeclareCursorStmt", "cursor_name", "cursor_options", "opt_hold",
  "SelectStmt", "RetrieveStmt", "select_with_parens", "select_no_parens",
  "select_clause", "simple_select", "with_clause", "cte_list",
  "common_table_expr", "opt_with_clause", "into_clause",
  "OptTempTableName", "opt_table", "opt_all", "opt_distinct",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "select_limit", "opt_select_limit", "limit_clause", "offset_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_elem_list", "group_elem", "having_clause", "for_locking_clause",
  "opt_for_locking_clause", "for_locking_items", "for_locking_item",
  "for_locking_strength", "locked_rels_list", "values_clause",
  "from_clause", "from_list", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "relation_expr_list",
  "relation_expr_opt_alias", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "where_or_current_clause", "OptTableFuncElementList",
  "TableFuncElementList", "TableFuncElement", "Typename", "NestedTypename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "opt_charset", "ConstDatetime", "ConstInterval",
  "opt_timezone", "opt_interval", "interval_second", "a_expr", "b_expr",
  "c_expr", "scatter_clause", "table_value_select_clause",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "xml_root_version",
  "opt_xml_root_standalone", "xml_attributes", "xml_attribute_list",
  "xml_attribute_el", "document_or_content", "xml_whitespace_option",
  "xmlexists_argument", "within_group_clause", "filter_clause",
  "window_clause", "window_definition_list", "window_definition",
  "over_clause", "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "window_frame_exclusion", "row", "sub_type", "all_Op",
  "MathOp", "qual_Op", "qual_all_Op", "subquery_Op", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "nested_type_list",
  "array_expr", "array_expr_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "when_operand", "case_default",
  "case_arg", "decode_expr", "search_result_list", "search_result",
  "decode_default", "columnref", "indirection_el", "indirection",
  "opt_indirection", "opt_asymmetric", "ctext_expr", "ctext_expr_list",
  "ctext_row", "opt_target_list", "target_list", "target_el",
  "qualified_name_list", "qualified_name", "name_list", "name",
  "database_name", "access_method", "attr_name", "index_name", "file_name",
  "func_name", "AexprConst", "Iconst", "Sconst", "RoleId", "QueueId",
  "role_list", "SignedIconst", "ColId", "type_function_name",
  "NonReservedWord", "ColLabel", "unreserved_keyword", "ColLabelNoAs",
  "keywords_ok_in_alias_no_as", "PartitionColId", "PartitionIdentKeyword",
  "col_name_keyword", "type_func_name_keyword", "reserved_keyword", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-4825)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3016)

#define yytable_value_is_error(Yyn) \
  ((Yyn) == YYTABLE_NINF)

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
    5461,   673, 14567, -4825, -4825,   673, -4825, 72363,    97,   954,
    1397,   188, 13446, 72849, 83055,   812,   355, 14915,   673, 83055,
    2220, 55839, 68961, 83055,  1355,  1144, 55839, 83055, 83541,  1341,
    1336,  1248, 84027, 73335, 67989,  1431, 83055,  1495,  1344, 84513,
   73821,  1264, 74307,  1144, 51465,   157,  1208, 84999,   331,  1601,
    1706,  1275, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825,    97, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  1943,
   -4825,  1321,  2199,  1593,   931,  1307, -4825, -4825, -4825, 62643,
   83055, 83055, 83055,  1590, 83055,  1525, 83055,  1556,   230, 62643,
   63129, 74793,  1742,  1607, 46990, -4825, 60213, 83055, 83055, 85485,
   83055,  1442, 70419, 83055,  1693, 83055, 83055, 60699, 85971, 83055,
     142,  1845,  1580, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, 83055,
    4273,  1355, -4825, -4825, 83055,  1705, 83055,  1606, 83055,  1763,
   83055, -4825, 83055,  1811, 86457,   799,  1848, 63129,  1867, 47490,
    1911, 63129, 86943, 83055, 83055, -4825, -4825,  1945, 83055, 83055,
   -4825,  2065, 63615, -4825, -4825,   152, -4825,  1801,  2130,  2078,
    2271,  2231,  2141,  1166, -4825, 75279, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, 61185,   355, -4825, -4825, 64101, 83055,
    2160, -4825, -4825, 87429, -4825,  1965, -4825,    56,   854, 64587,
   65073,  2268,  1966, 47990,  2320, 65559, 87915, -4825, -4825, 88401,
   -4825, 88887,  2055, 89373, -4825, 66045, -4825, -4825,   396,  2229,
   89859, -4825,  1949,  1843,  2031, 42593, -4825, -4825, -4825, -4825,
      97, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,   349,
    1990,   283,   227,   289, -4825, -4825,   239,   244,   249,   349,
    2463,  2463, -4825, 83055, -4825, -4825,  1990,    69,  1970,  1970,
    1970,  2246,  1025, -4825,  1970, -4825, -4825, -4825, -4825, 74307,
   -4825,  1994,  1355,  2005,  2471,  2118, 83055, -4825, 83055, -4825,
   83055, 83055, -4825, -4825,  2485,  2104,  2335,  2026, -4825, -4825,
   -4825,  2285,  2310,  2325,   120,  1355,  2211, -4825,  2447, -4825,
    2354, 28003,  1355, 75765, 90345,   272, 61185,  1355, 76251,  2204,
    1400,  2373, -4825, -4825, -4825,   165, -4825,  2595,  2230,  2465,
    2026,  1580, 44537, -4825,  2173,  1526, 74307, -4825, -4825, -4825,
     225,  2513, 28489, -4825, 83055,  2156, -4825,  2168,  2524,  2527,
    2185,  2189,  1593, -4825,  5461, 90831,  1365,  1365,  2659,  1365,
    2018,  2216, -4825,  2205, -4825,  2554,  2516, 74307,  1208,   237,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825,  2217,  1526, -4825,   254, -4825,   178,  2214,  1980,
    1859, -4825, -4825,   325, 83055,  2398,   253,   820, 74307,  2326,
   76737,  3862,  2235, -4825,   323, -4825, -4825, -4825, -4825,  2563,
    2616,  7121,   329, 77223, -4825, 83055, 83055, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825,  2241, -4825, -4825,  2247,
    2585,  1430,  2510,   201,  2637,  6677,  1821, 77709, 83055,  2601,
    2644,  7523,  2072,  1001,  2542,  1054,  2585,  2633,  1528,  2662,
    7631,  2501,  2545, 83055, 63129, 83055, -4825,  2596,  2712,  1183,
   -4825,   746, -4825,  2434,  2576,    82, 62643,  2333, -4825, -4825,
   83055, -4825, -4825, -4825,  2475, -4825,   899, 62643, -4825,  2583,
    2458, 48490, -4825, 83055, -4825, -4825, -4825, -4825, -4825,  2540,
   83055, -4825, -4825,   410,  2665, 83055, -4825,  1970,  2579,  2785,
  100997,   122, 83055,  2469,  2837, 83055,  2634,  2469,  2467, 91317,
   -4825, -4825,  2469, -4825, -4825, 83055, 83055,  2372,  1585,  2469,
    2655,  2843,  2847,  2519,  2617,  1159,   366,   209,  2761,  2469,
   83055, 63129,  2521, 83055, 91803, 83055,  2425,  2523, 62643, 83055,
    2841, 62643, 83055, -4825,   123, -4825, -4825,  1149, -4825, -4825,
   -4825, -4825,  2794,  2217,   300,  2795,  2433,  2796, -4825, -4825,
   -4825,  2589,  2555, -4825,  2819,  2235,  2825, -4825,  2456, 92289,
   -4825, 92775, 93261,  2838,  2241, 63129,  2844,  2456,  2850,  2737,
    2863,   300,  2865, -4825,  1315,  2867,  2767,  2889,  2019,  2456,
   83055, 63129, 61671,  2891,   213, -4825, 31415, -4825,  2680, -4825,
    1259,  1208, -4825,  1613, -4825, 55353, -4825,  2031,  1990, -4825,
   83055,  1990, 83055,  1990, 83055,  1990, 83055,  1990, 83055, 83055,
   83055,  1990, -4825, -4825, -4825, 83055,  2534, 83055, 83055, -4825,
   -4825, -4825, 69447, 63129, 69933, -4825, -4825,   111,  1355, -4825,
   -4825,100997,  3019, 63129,  2841,  2917,  2917,  2917, -4825, -4825,
   -4825,  2861, 83055,  2924,  2936, 69447, 63129, -4825, 93747, 61185,
    2836,  2593, -4825, -4825, -4825, -4825, -4825,   563,  3112,   220,
    3117, 31415,  2618,   243,   243,  2635,  2985, -4825, -4825, -4825,
     260,  2648,  2660, -4825,   264,   264,  2868,  2666,  2682, -4825,
     282,  2683,  3161,  3174,   294,  2688,  2689,  2690,  1774,   243,
   31415, -4825,  2692,   264,  2693,  2694,  2695,  3200,  2698, -4825,
    3202,  2704,  2706,   250,   261,  2708,  2710, -4825,  2666, -4825,
     263,  2711,  2718,  2719,  2720,  2724,  2729,  2730,  2731,  2732,
    2733,  2734,  2735, 31415, 31415, -4825, 27011,  1526,  1355, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825,   189, -4825,   295, 50490,
   -4825,  2823, -4825, -4825,  2980, 31415, -4825, -4825, -4825,  3054,
    2740, -4825,   298, -4825, -4825, -4825,  1526, -4825, -4825,   968,
    2742, -4825,   440, -4825, -4825, -4825, -4825, -4825, -4825, 58755,
    3218, -4825,   386,  1355,   746,   379,  3168, 54381, 54867, -4825,
   -4825,  3046, -4825, 83055, -4825, -4825, 31415, 50979, -4825,  1526,
     166, -4825, -4825, -4825, -4825,  1661, -4825, -4825, -4825,    97,
   -4825, 13137, -4825,  1892,  2156, 83055, 83055,  3227,  3131,  3132,
   -4825, -4825, -4825, 83055, 78195, -4825,  2168, -4825, -4825,  1593,
    1593, 31415,  1593,  1296,  1833, 28985, 31901,  3113,  3008,  1188,
    1778,  3114, -4825,  3013,  2018,  2216, 74307, 74307, 98121,  2937,
   -4825, 52923,  2004,  1526,  2911,  2912,  2958, 56811,  2768,  2915,
    2916,  2962,  2919,  2920, 94233, -4825, -4825, -4825, -4825,  1876,
    1068,  1535,  2921,   258,  1277,  3205, -4825,  1524,  2967, -4825,
   -4825, -4825,  5953, 10017, 83055,  3150, 10741,  3034,   329,  3035,
    2968, -4825, -4825,  2812,  3086,  2931,  2932,  3052,   329,   332,
   94719, -4825, -4825, -4825,  2826,  2827,  2828, -4825, -4825, -4825,
    4721, 25036, -4825,  2940,  2935,  2950, 83055, 66531,  1620,  3066,
     151,  1652,   293, 83055,  3143,  3073, 83055,  2818,  2961,   911,
    3159,  2820,  1779,   273,  3253,   273,  1089,  1254,  2829, -4825,
   -4825, -4825, -4825,   487,  2082,  3080, -4825,  3177,  3198, 11526,
    2956,  2972,100045,  1435, 48990,  3256,  1626,  2995, -4825,  1626,
   83055,  2996,  2997, 83055,   329, -4825,  3314,   329,   329,  2015,
    3315,   946,   378,  2165,  2469,  2829,  1864, -4825,  3000,  3001,
     455, -4825,  3107, -4825, -4825,  1317,  3011, 74307,   814,  2294,
    2829,  3004,  3006,  2820,  2820, 83055, 83055, 83055, 83055, 83055,
     276,  3334,  3336,  3010,   287,   245,  2864, -4825,  1626, 59241,
    3015, -4825,  1626, 83055,  1199,  2309,  2829,  3018,  3020,  3055,
   -4825, -4825,  1129,  1632, -4825, -4825, -4825,  1580, -4825, 83055,
   -4825, 83055,  2217,100997,  3122, -4825,  2974, -4825,  2235,   329,
   -4825, 83055, 83055,  2241,   259,  1383,  3130, -4825, -4825, 83055,
    3192,  2983, -4825,   340,  2885, -4825, -4825,  3002, -4825,  3002,
    3002,  2888,  2888,  2890, -4825, -4825, -4825,  1774,  3002,  2888,
   -4825,101949, -4825,    25,  1541, -4825,  3368,  3370, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825,   139,  1906, -4825,
   83055, 56811, -4825,  3381, -4825, -4825,100997,  3147,  3266, -4825,
   83055,  3163,  2897, -4825,  3302,  3021, -4825, -4825,  1124, -4825,
    3272, 63129,   351,  1355,  3024, 83055,  3191, 83055, 83055, 83055,
   83055, -4825, -4825,  3171,   917,   132, -4825, 59241, -4825,  3023,
   -4825, 83055,  1864,  3183,  3394,    99,  1970, -4825,  1720, 83055,
    2923,  3277, -4825, 83055,  2925,  3398, 83055,  3231, -4825,  1946,
   -4825,  3115, -4825,  2975, 62643,   300, -4825, -4825, -4825, -4825,
  100997, 83055, -4825, 95205, 62643,   300, 63129, 63129,  3297,   213,
    3299,  3053,  3301,  3057, 48990,   300,   279, 63129, 83055, 83055,
   83055, -4825, 83055, -4825, -4825, -4825, -4825, 83055, 83055, 63129,
   59241,  3303, -4825, -4825,  3308,   300, 83055, 83055, -4825, 13137,
    1901, -4825,  1259, 59727, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825,  1259, 83055, -4825, 83055, -4825, 83055, -4825, 83055, -4825,
   83055, -4825, -4825, -4825, 83055, -4825, 83055,  1914, -4825, -4825,
    1947,  1320, 83055, 83055,   885, 62643, 83055,  3196, 83055, 83055,
   83055, 83055, 83055, 83055,  3084,  2742,    23, -4825,   534, 74307,
    3204, -4825, -4825,  1976,  1601,  1088, 83055, -4825, -4825, -4825,
   -4825, -4825, -4825, 69933, 68961,  3293,   102, 83055, -4825, -4825,
    4794, 31415,  1526, 27497, -4825, -4825, -4825,  2942, 13137,  3050,
   31415, -4825, -4825, 31415,  2944,  2463,  2463, 31415, -4825, -4825,
   -4825, -4825,   918,  2463, -4825, 31415, 31415,  2463,  2463,  3002,
    3002, -4825,  2918, 31415, -4825, 48990, 31415, 35303, 24053, 31415,
    1601,  3091,  3032,  2463, -4825,  2463, -4825, 31415, 26525, -4825,
   31415,  3223, 31415, 31415,   379,  3224, 31415,   379, 31415,  2949,
   31415, 31415,  3448,  3448, 44051,  2721,  7305,  2953,  1526, -4825,
    3135,  2463, -4825,  2463,  1177, -4825,   498,100997, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, 31415, 56811,
   -4825, -4825,  3099, -4825, -4825, -4825, -4825,   322, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, 83055, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   31415, -4825, -4825, -4825,  2954, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
    1633, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, 31415,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
    1312, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825,  2959, -4825, -4825, 31415, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825,  3104, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, 31415, 31415, 31415, 31415, 31415, 31415, 31415,
   31415, 31415, -4825, 37733,   501, -4825, -4825, -4825,  3310,  3325,
     627,  1314, 78681,  3319, 28003, 23060, -4825,   288, -4825, -4825,
   -4825, 83055,  3218, -4825, -4825,  3108, -4825, -4825, -4825, -4825,
   -4825,   302, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  2964,
   -4825, -4825, -4825, -4825,  2964, -4825,  2970,  2582, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825,  3309,  3312,   300, 83055,   225, 70905,  3099,  2959,
   -4825, 28489, -4825,  1998, -4825,  2973, 83055, 83055,  2168, -4825,
    2168, -4825,  3295, -4825,  2977, -4825, 10730,  3295, -4825, -4825,
   35789,  3151,  3288,  3235, -4825, -4825, -4825,  2982, 13137, 32387,
   32387, -4825,  1792, 13137,  2126, -4825, -4825, -4825, -4825, -4825,
   -4825,  1710, -4825, 83055,  3204,  3113,  1778,  3106,   928, 83055,
   -4825, 45023,  3232, -4825,  3449, -4825,101949, -4825,  2987, -4825,
  101473, 99093, -4825, -4825,   804, -4825,  1125,  3136,  3144,  3188,
   63129, 83055, 83055, -4825, 56811, 63129, 83055, 83055, 63129, 83055,
   83055, -4825,  3434,   128, 68961,  3190, 68475, -4825, -4825,  3003,
   83055,  3126,  3316,  3318,    41, -4825, -4825, 95691, -4825,  3268,
   63129, 83055, 83055, 31415,  3273, 83055, 83055, -4825,   319,  3154,
    3156, -4825, 83055,  3157, 62643,  3016, 83055, 83055, 83055,  3155,
     900, 62643,  3127, 49490, 83055, 83055, 83055, 83055,  3207, 83055,
   83055,  3328,   273,  2829,  1831, 74307,   882,  2340,  2829,  3280,
   -4825,   402,   926, -4825, -4825, 63129, 83055,  3279, -4825, -4825,
   -4825, 79167,  3494,  3197, -4825, -4825,  3439,  3442, -4825, 96177,
   -4825, -4825, -4825,  2002, -4825, 63129, 63129, 83055, 12557, 83055,
    3269,102901, -4825, -4825,100997, -4825, 83055,  3271,103373, 10017,
   83055, 83055, 83055, 71391, 96663,  3274,103845,   300, 97149,  1294,
    1487, 83055, 71877, -4825, 83055, -4825, -4825, 57297, 63129, 83055,
    3180,   211, 56811, -4825, 83055,    93,  1257,   454,  3187, -4825,
   -4825,   300, 83055,  3142,  3267, -4825,  3281,  3515, 10017, -4825,
   -4825,  3193,  3199, 83055,  1241,  2355,  2829, 83055, 83055,  3042,
    2003,  3194,  3237, -4825, 83055, 90345, -4825, 63129,  2709, -4825,
    3257, 63129, 83055, 13622, -4825, -4825,   329, -4825, -4825, -4825,
   -4825, -4825, 83055, 83055,   329, 83055,   329,  1844, -4825, 63129,
   83055, -4825, -4825, -4825, 83055, 13716, 83055, 83055, 83055, 83055,
   63129, 83055, -4825, -4825,  1071,    77,   164,   167,  3258, 83055,
    3393, 83055, 97635, 63129, 83055, 83055,  3438, 83055,  1932, -4825,
   -4825, -4825,  3238, -4825, 63129,  2709, -4825, 13971, 83055, 83055,
   83055, 63129,   822,   895,  3201,  3203,   466,  3278, -4825, -4825,
   -4825, -4825, -4825, -4825,  3373,  3539, 83055, -4825,  3377,  3378,
    3189,  3195,  3379,   904, 83055, -4825, -4825, -4825, -4825, 83055,
    3382,   904,  3324,   219, -4825, -4825,  2469, -4825, 31415,  3549,
  100997,  3076,  3078,  3219,  3220,  3221, -4825,  3079,  3222,  2463,
   -4825, -4825,  1969, -4825, -4825,  2008, -4825,  3095,   917,  1583,
   -4825, 56811, 83055,   777,   830,  3453, 67017,  2378,  3444, 83055,
    3206, 83055,  2378, 83055, -4825,  1795, 68961, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825,  3440, -4825,  1355,  2372,
    2372,  2372,  2372, -4825, -4825, -4825, -4825,  3343,  1972, -4825,
    3088,  2372, 83055,  3270,  2378,  2372,   171,  3089, -4825,  1864,
    3462,   810, 83055, 67017,  2087,  3208,  3247,  3571,  1970, 53409,
   -4825,  2372,  1355,  3350, -4825, 25523,  8295,  3351,  2372, 61185,
    3446,  3451,  3459, -4825, -4825,  2217, -4825,  3579, -4825,  3477,
     300,  2235, -4825,  2456, -4825, 83055, -4825, 83055, 83055, 83055,
   83055,  2241, -4825, -4825,  2456,  3360,   300,   300, -4825,  3363,
     300,  2456,  3292,  3472, 61185, -4825,   213, -4825, -4825, 31415,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  2041,
   -4825, 83055, -4825,  3450,  3456,  3457,  3110,  3120,  3214, 83055,
    3123, -4825,  3110,   329,  3110,  2742,  2742,  3110,  3120,  3110,
   62157,  3606,  3467,   234, -4825,   780,   124,  3404, -4825, -4825,
    3185, -4825,100997, -4825, -4825, -4825, -4825, -4825, 83055,  3233,
     121,  3386,  3125, 62157,  3594,   300, -4825, 62643, -4825, -4825,
   -4825,  3284,  3300, 62643,  3405,  3262, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825,  3461, 83055,  2042, -4825, -4825,  1178, -4825,
    1573, 31415, 32873,   579, -4825, 11775,  2047, 31415,  3158,  3160,
    2075, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  3162,  3509,
   -4825,  3170,  2092,  2093,  3173,  3176, -4825, -4825,  5684,  3178,
   12164,  3179, 35303, 35303,  1522, -4825, -4825, 35303,  3182, -4825,
    2094, 11242,  3153,  3209,  3216,  3210,  3243, -4825,  3211,  3212,
   11851, 29471, 31415, 29471, 29471, 12525,  3153,  3215,  2102, 56811,
    6052,  3395, 12744,  2117, -4825, 31415, 56811,  6387, 31415,  6492,
   -4825,  2137,  7683, -4825, 31415, 83055,  3217,  3225, -4825, -4825,
    2918, -4825,  3276, -4825, 35303, 35303, -4825,  2063, 27011, -4825,
   -4825,  3522, -4825, -4825,  1385, -4825,  3172, -4825, -4825,  2187,
     326, 31415,  2954, 31415,  3330, 48990,  6826, 31415,  3433,  2040,
    2040,   439,   439,   306,   306,   306,  2147,  1314, -4825, -4825,
   -4825,  3228,  3229,  3230,  3431,  2698, 31415, -4825,  2027,  2167,
   83055,  2700,  3339,  5637, -4825, -4825, 39191,  3298, -4825, 31415,
   31415, 31415,  3226, -4825,  3693, 13137,   181, -4825,  3694, -4825,
    1580,  2463,  1177, 55353, -4825, -4825, 31415, -4825, -4825, -4825,
    2168, -4825, -4825, -4825, -4825, -4825, 83055,  1601, -4825, -4825,
   -4825, -4825, 31415, -4825, -4825,   768,  1657,   725,  3452,  2256,
    2256,  1792,  3458, -4825, -4825,  3329, -4825, 31415,  2345, -4825,
    2377, -4825, -4825, -4825, -4825,  2742, -4825, -4825, -4825, 39191,
    3307,  3320, 43565,  3406, -4825, -4825, 83055,   148, -4825, -4825,
   -4825,  3236, -4825, -4825, 99093,  1906, -4825,101473, -4825,101473,
   -4825,  1906,  3668, -4825, 99093,  1879, 63129, 83055, 83055, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  3512,
   -4825, 63129, 63129,  3473, 83055,  3474,  3476, 31415,  1224, 83055,
    3234,  3239,    47,  3556, 83055, -4825,  3602,   300, -4825, -4825,
    3376, -4825, 13137, -4825, -4825, -4825, -4825, -4825, 63129, 83055,
   -4825, 61185, -4825,  2217,100997, -4825, -4825, -4825, 83055,  3342,
   83055, -4825, 83055, 83055, 83055,  2241, -4825, -4825, -4825, -4825,
    1387, -4825, -4825, 83055, 83055,   750,  3389,  3390, 83055, -4825,
    1401,  3107, 13982, 83055, 83055, 83055,  3560,  3282, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825,  3511, -4825, -4825, -4825, -4825,
   99093, -4825,  2456,  1409,  1222,  2829, -4825,103373, -4825,  3250,
    3251, -4825,  3259,  3261,   932,  3628,  3326, -4825,  1114, -4825,
   -4825, -4825,  3260,  3505, -4825,105261, -4825, -4825,  1493, -4825,
   -4825, -4825, -4825, -4825,  3633,   300,104317,  3635, -4825,  3636,
     300, 83055, 83055, 83055, 83055, -4825, -4825, -4825, -4825, -4825,
   56811, 56811, 56811,  2142, -4825, -4825,  1355, -4825, -4825, -4825,
    3772, -4825, -4825, -4825,  3599, -4825,  2146, -4825,   560, -4825,
   -4825,  3345, -4825, -4825,  3275, -4825,  3304, -4825,  3286, -4825,
   -4825,  3424, -4825,104789,  3287, -4825, 63129, 83055, 14118, 83055,
   83055, 83055,  2014, -4825,   912,100997, -4825,100521, 63129, 83055,
   -4825, -4825, -4825,  3566,  3349,  3507, -4825,   986,  3510, 63129,
    3402,  3290,  1049,  3290,   411, -4825, -4825, -4825,  3422, -4825,
   -4825,  1223,  2408,  2829,  1864, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825,  1637,  1244,  2517,  2829,  3423, -4825,  3425,
   -4825, -4825, -4825,  3567,  3569,  3578,  3436,  3437,  3483,  3441,
    3455,  3484, -4825,  3460,  3485,  3463,  3493,  3464,   300,100997,
    3576,  1355,  3489,  3686,   300, -4825,  3466, -4825,  2372, -4825,
    3794, -4825, 83055, -4825,  1305,  2533,  2829, -4825, -4825, -4825,
   -4825,   349,   349,   349,   349,  1355,   349, -4825, -4825,  3354,
    2372,  2372,  3355,  3356, -4825, -4825, -4825, 63129, 83055, -4825,
   -4825, -4825,   904,100997,  3637,   904,   904, 83055, 83055,   904,
   -4825, -4825, -4825,  3645,  3647,   904, -4825, -4825, -4825, -4825,
    2579,  3337,  7875,  3340,  3078,  3338,  2463,   221,  1198,  1511,
    3524,  2463,  3621,  3346, -4825, -4825, 56811, 46490,  2007,  3641,
    3364,  3364,  3364,  3364,  3364,  3364,  3364, -4825,  3111,   271,
    2469, 61185, 83055, 61185, -4825,   830,  3505, 83055, 83055,  3788,
   83055,  3352,  3347, -4825, -4825, -4825, -4825, -4825, 63129,  1191,
   63129,  2463, -4825, -4825,  3487, -4825, 83055,  1970,  3824,  2847,
     351,  3559,  1961,  3768,  3208, -4825, -4825, -4825, -4825, 83055,
   83055,   917,  1355, -4825,  3357,  3358, -4825, 83055, -4825,  2372,
   83055, 83055, 83055,  3233,  3359,  3362,100997,   636,  3615,  3618,
    2820,  3841, 83055,  1601,  3208,  3388,  2171, -4825, -4825,  3525,
   83055, -4825,  2193,   156, -4825,  1355, 61185, 99569, -4825,  6498,
   -4825, -4825,  1463, -4825,  3712, -4825, -4825,  1601,   300,100997,
   83055, -4825,   300,   213,  3500,   300,  3504,   300,   300, 83055,
   -4825, -4825, 83055, -4825, 83055, 59241,   300, -4825, 13137, -4825,
   -4825,  3572,  3573,  3575, 83055,  3110, 62643, -4825,  3383, 63129,
     617, -4825, -4825,  3638, -4825, -4825, -4825, -4825, -4825,  3763,
    3764, -4825,  3644, -4825, -4825, -4825,   324, -4825, 63129, 69447,
     285, 63129, -4825,  2217, -4825, -4825,  2235,   329, -4825, 83055,
    3706, -4825, -4825, -4825,  3399,  2209,  3661, 13137,  3543, 31415,
   -4825,  3778,100997, -4825,  8209, -4825, -4825, -4825, -4825, 31415,
   -4825, -4825, -4825, -4825, -4825, 31415, -4825, 31415,  3752, -4825,
    3897,  3897,100997, 35303,  1979,  2693, 35303, 35303, 35303, 35303,
   35303, 35303, 35303, 35303, 35303, 38219,   660, -4825, -4825, 31415,
   31415,  3760,  3752, -4825,   208, -4825, -4825, -4825,  1291,  1291,
  100997,  3401,  3153,  3409,  3410, 31415, -4825, -4825,  2210, 31415,
   36761,  3411, 56811, -4825, 31415, 11253,  2222,  3514, 12864, 31415,
    3403, -4825, -4825, -4825,  1526,  8558, -4825,  3856,  1355, 31415,
    1563,  2400, 31415,  2227, 31415,  3767, -4825, -4825, -4825,  3415,
   -4825, -4825,100997, 31415, 35303, 35303,  3553, -4825,  3965, 31415,
    3420,  4664, 27011, -4825,  3663,  3535, 45509, -4825,  1144,  1144,
    1144,  1144, -4825, 83055, 83055, 83055, 39677,  3784,  3432, 38705,
   79653,  3427,  1771, -4825, 79653, 80139, -4825,  3465, -4825,  3435,
    1526, 31415,  3780,   802,   802,  3663, -4825, 31415, 29957,  3443,
   -4825,   746,  3468, -4825, -4825,  8621, -4825, -4825,  3469, -4825,
    3454, -4825,  1657, -4825, -4825, -4825, -4825, -4825,  3688, -4825,
   -4825, -4825,  3427, 33359,  3406, -4825,  2242, -4825, -4825, 28003,
   -4825, -4825,  2249, 45023,  3307, 28489,  1526,  2259,  1899, -4825,
   -4825, 99093, -4825,  3584, -4825, -4825, -4825,  3364,  2456,  2456,
    1319,  3110,  3797,  1319,  8963, -4825, -4825, 40163, 83055, 83055,
   -4825, 83055,  2261,  2069, 83055, -4825, 83055, -4825, -4825, -4825,
   -4825,  3918, -4825, 83055, -4825, -4825,  3565,  3574, -4825, 83055,
   83055, 83055, 83055, -4825, -4825,  2214, -4825, -4825, 63129, 83055,
   -4825, -4825, -4825,  1308,  2638,  2829, -4825,  3595, -4825, -4825,
   -4825,  3773, -4825,  3916,  3610, 83055,   932, 40649, 40649, 40649,
   41135,  3259,  3261,  1114, -4825,  3326,  3471, -4825, 83055,  2372,
    3475,100997,  3480, -4825,  2069, -4825,  1425,  2820,   964, -4825,
   -4825,  3596, 83055, -4825,  3830,103373, 83055, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, 57297, -4825, -4825, -4825,
   83055, -4825, 56811, 46490, 56811, -4825, 83055,  3959, -4825,   915,
   83055,  3628, 41621, -4825,  1714,  1316,  2691,  2829, -4825,  3607,
   -4825,  3611,  3616,  3651,  1218,   809,  3625,  3626,  3662,  3482,
    3486,  3490, -4825, -4825,   349,  3833,  1355, -4825, -4825,  1355,
    2456,  1355, 56811, -4825,  3893,  2176, -4825, -4825, -4825, 83055,
   83055, 83055, 83055, 83055,  3945,  3648, 83055, 83055, 83055, 83055,
   83055,  3851,   235,  2020, 63129, 83055, 83055, 63129, 83055, 83055,
   83055, 83055, 83055, 83055, 83055, -4825,  3937,  3868,  2152,  3909,
    3639, 83055, -4825, 83055, -4825,  3107, 83055, 83055, -4825, -4825,
   -4825, -4825, -4825, -4825,   329,  3601, -4825,   329,   329, -4825,
   -4825, -4825,  3501,   904, -4825, -4825,  3816,  3822, -4825,   904,
     904, -4825,   340, 56811, -4825,  3083, -4825,  2463,  2162,  3513,
   -4825,  3516, -4825, -4825, -4825, -4825, -4825, -4825,  3518, -4825,
    1177, -4825, -4825,  3454, -4825,   487,  2082, -4825, -4825, -4825,
   -4825, -4825, -4825, 83055,  3364, -4825,  1886,   447,   923,   996,
   80625, 81111, 81597,  3517, 83055, 83055, 35303, -4825,  1382,  1228,
   -4825,  3820, 83055,  3619, -4825, -4825, -4825,  3733, 83055, -4825,
   -4825, -4825, -4825, -4825,  3520,  3898,  3904, -4825,  3702, 67017,
    2456, 63129, 63129,  2456, -4825,100997,  3527,  3208, 63129,   351,
    1720, 91803,  3613, -4825,  3521,  3883, -4825,  3528,  3526, -4825,
   -4825, 83055,  3505, -4825,  2280,   751,  1949,  3345, 67503,  2087,
    3859, -4825, -4825, -4825,  3970,  3700, -4825,  1601,  3534,  3233,
    3700, 46490, -4825,  4041,  1355,  3126, -4825, 99093, 31415, 31415,
   -4825,  3537, -4825,  3552,  8964, -4825,  2372, -4825, -4825, -4825,
   -4825, -4825, -4825,  3697, 83055, -4825, -4825,  3548,   300, -4825,
   -4825, 83055, -4825, 83055, -4825, -4825,   300,   300, -4825,  3735,
   -4825, 83055, 83055, 83055,  3110, -4825,   329, -4825,  3905, 62157,
   -4825, -4825, -4825, -4825, -4825, -4825,  3968,   102,  3912, -4825,
   -4825,  3874,  3876,  3877,  3878,  1018, -4825, -4825,  3958, 31415,
   13137, -4825,  3568, -4825, 13137,  9004, 13137,  3760, -4825,  2817,
    3921, -4825,  1571,  3580,  2817,  1122,  1122,   475,   475,   299,
     299,   299,  3897,   660, 13137, 13137, -4825, -4825, 31415, -4825,
   -4825, -4825,  3570, -4825, -4825, -4825,  3153, -4825, 33845,  9135,
    3785,  4028, -4825, -4825, -4825,  3677,  3679,  3581, -4825, 31415,
   34331,  3577,101949,  5661, 31415, -4825,  3582, -4825, -4825,  1177,
    1421, 35303, 35303,  1399, -4825,   471, 31415,100997,  2281,  1399,
    2538,  2772, 31415, 31415,  5013,   559, 31415,  9443,  3583, 31415,
   98607, -4825, -4825, 83055, 83055, 83055, 83055, -4825, -4825, -4825,
   79653, 80139,  3585, 31415, 24549,  1771,  3587, 83055, -4825, -4825,
    3586, 39191,  3885,  3834, -4825, 39191,  3834,  1993,  3834,  3886,
   -4825, 45995, -4825, -4825,  3589, -4825, -4825, 23060,  1747, 13137,
    4051,  3936, 31415,  3593,  3597,  3598, 13137, 31415, -4825,  1355,
    1355, -4825, -4825, 48990, -4825, -4825,  3853, 13137, -4825,  1601,
   83055,  1526,  2740,  3612, 83055, -4825,  3406, -4825, -4825,  3736,
    2292, -4825,   349, -4825, -4825, -4825, -4825,  3744, 68961,  3956,
   -4825, 31415,  2296, -4825,  3707,  4045,   177,  2307,  2315,  2069,
   -4825,  3619, -4825,  1775,  3934,   217, -4825,   300, -4825,100997,
   -4825, 83055, 83055, -4825, -4825, -4825, -4825,  2768, -4825, -4825,
   83055, 83055, 83055, 83055, -4825, 63129, 83055, -4825,  1114,  3608,
   53895, 53895,  4106, -4825,  2338,   303, -4825,  2346,   304,  2348,
   53895,  4106,  2395,  2396,  3475, -4825, 40649, -4825,  3762,   228,
   -4825, -4825,  1756, 56811,  2053,  3873, -4825, -4825,  3875,   349,
   83055, -4825,100997,   300,   300,   300,   300, -4825, -4825, -4825,
   -4825,  3627,  2397, -4825, 82083, -4825,   202,105733, -4825, -4825,
    2411,  1114, -4825,   932,   932,  2174,  3929,  3261,  3614, -4825,
    3620,  4076,  3769, 83055, 83055, 83055, 83055, 63129, 83055, 83055,
    2463,  2463,100997,  3622, -4825,  2463,  2463,  3624, -4825, 63129,
   83055, 83055, -4825, -4825, -4825, -4825,  3893, -4825, -4825, -4825,
    2416, -4825,  3640,  4100,  3770, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, 63129, 83055, -4825,  3766, -4825, -4825, -4825, 83055,
   83055, 83055, 83055,  4001, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, 83055, -4825, -4825,  1355,  1355,
  100997,   300,   300, -4825, -4825, -4825, -4825,  2372, -4825, -4825,
    3946, -4825,   904,   904, -4825, -4825,   183,  2418, -4825, 42107,
   -4825, -4825,  2837,  1355,  2837,   233, -4825, -4825,  2837, -4825,
    3665,  2837,  3687,  2837, -4825,  2069,  3642,   320,  3987, -4825,
   -4825, -4825, -4825,  3990,   349, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
   31415, -4825,   800,  2817, -4825, -4825, -4825, -4825,  3619,  1970,
    3759, 62643,  1395, -4825,  3972,   777, 67017,  2372,  2372,  1827,
   83055, -4825,  2456,  2456,  3765, 83055,  4118, -4825,   752, 83055,
    4030,  3749, -4825,  1355, -4825, -4825,  3208, 83055, 67017,  3233,
   -4825,  3882,  2430, -4825, -4825, -4825,  3750,  3618,  3650,  2087,
     291, 83055, -4825,  3751, 82569,  3345, -4825, -4825,  3388, -4825,
    4005,  3654, -4825, 13137, 13137,  1355,102425,  6498, -4825, 83055,
    3981,   300, -4825,   300,   300, -4825, -4825, 83055,  3110,  3110,
    3110, -4825,  3907, -4825, -4825,   300, 62157,  1018,  1018,  1018,
    1018, -4825, -4825, -4825,  4012, 13137, -4825, -4825, -4825, 35303,
    4013, -4825,  3666,100997,  3153, -4825,  3667,  2436,  2446, -4825,
   37247,  3880, -4825, -4825, -4825,  9479,  3779, 13137,  3832,  3670,
    3671, -4825, 31415,  6587, -4825, -4825,  1047,  1047,   471,  2457,
   -4825, 35303, 35303,  1399,  1399, 31415,  1399, -4825, -4825,  9523,
    3899, -4825, -4825, -4825, -4825, -4825, -4825, -4825, 57783,  7181,
   79653,  3673, 83055,  1771, 39191, -4825, -4825,  2169, -4825, 39191,
    3984, -4825, 39191, 83055,  3675, 83055,   181, 34817, 31415,  3782,
   -4825, -4825, -4825,  3663, -4825,  1177,  3680, 83055, -4825, -4825,
    1208, -4825, -4825, -4825, -4825, -4825, 62157,  3933, 62157,  2069,
    9671,  3619, 40163, 49990, 83055, 82083, 82083,  3887,  3619,  3759,
   -4825, -4825, -4825, -4825, -4825, -4825,  3681, -4825, -4825, -4825,
    3827, -4825, -4825,    40,  3204,  3475, 40649,  4106,   223,100997,
     153, 40649, 31415, -4825, 31415,   153,  2464, -4825,  3684, -4825,
   53895, -4825,  2468, 83055,  2489, -4825,100997,  2499, -4825,  2372,
   -4825, -4825, -4825, -4825, -4825,  3937, -4825, -4825, -4825, -4825,
   46490,  3304, 83055, 83055, -4825, -4825,105733, -4825, -4825,   228,
     994,  1114,  1114,  3710,  3711, -4825,  3689, -4825,  3929, 63129,
   83055, -4825,  3835, -4825, -4825, -4825, -4825, -4825, 43079, 48990,
   -4825,  1218,  3690,  3695,   809, -4825, -4825, -4825, -4825, -4825,
   56811,  1355,  3893,  1355, -4825,   575,  3204, 83055,   631,   688,
    3796,  3110,  4055, -4825, -4825, -4825,  3937, -4825, -4825, -4825,
     904, -4825, -4825, -4825,  2469,  4094, -4825, 56811, -4825, 58269,
   -4825, -4825, -4825,  1355, -4825,  1355,  3960, 83055, 51951,  1355,
   -4825,  1355,  3774,  1355, -4825, 62643,  4176,  4176, 83055, -4825,
   -4825, 10219,  3962, -4825,  3759,  3989,  4036, -4825,  3709, 83055,
    3932,  3715,  3717, -4825, -4825,   857,   857,  3505, 83055,  2505,
    1601,   351, 67017,  3505, -4825,  1543,  3716,  4084, -4825,  4197,
    3359,  3721, -4825,  4184, -4825, -4825, 67503,  3974,  3700, 83055,
    3618,  3919, -4825,  3922, -4825,  1592, -4825, -4825,  3725,  3728,
   -4825, -4825,100997, -4825, 83055, 40163, -4825,101473, -4825,  2509,
   -4825, -4825,  3298, 83055,   146, -4825, -4825, -4825, -4825, -4825,
   -4825,   285, -4825, -4825, -4825, -4825, 31415,   697, 35303,100997,
    2511, 31415, -4825, 31415, -4825,  4189, -4825, -4825, -4825,   144,
   -4825, -4825, 13137, -4825,  1047,  1047,  1399, -4825,  4193,  3663,
   -4825,  2515,  4211, 31415, -4825, 83055,  2537, -4825, 31415,  3740,
   -4825, -4825, 39191,  2169,  2547, 83055,  2548,100997,  3734,  3741,
    1346,  3742, 23557,  3732, -4825, 13137, 13137, 83055, -4825,  3743,
   -4825, -4825, -4825, -4825,   617,  1319,   285,  4045,  3759, -4825,
    3745, -4825, -4825,   406,   406, 83055,  3759, -4825, -4825, 83055,
    3895, -4825, -4825,  4223,  4245, -4825, -4825, -4825, -4825, -4825,
     802,   802, -4825, -4825, 53895,  4106, -4825, -4825, -4825, -4825,
   -4825, 56811, -4825,  3879, -4825, -4825, -4825, -4825, -4825, -4825,
   -4825,  3475,   994,   994,   994, -4825, -4825,   273, -4825,   879,
    3204, 83055,100997,  2235,   108, -4825,100997,100997, -4825, -4825,
   -4825, -4825, -4825,  3903, -4825, -4825, 83055, 83055, 83055, 83055,
   83055,   300, -4825,  3337,  1355, -4825, -4825,  2549, -4825, -4825,
   -4825, 83055,  3521, -4825,  3521, -4825, -4825, -4825, -4825,  4176,
     368, -4825, -4825, -4825,  2132,  4024, -4825,  1423,  4011,  3911,
    3775, -4825, 62643,  4263,  3941, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825,  4128,  3208,  3751, -4825, -4825, -4825,
   -4825, 31415,  3986,  1601,  2087,  3859,   677, -4825, -4825,  3345,
    2553,  3700, -4825, -4825,  4214,  4020,  4219,   309, 82569, -4825,
   -4825,  2557, -4825, -4825,  8964,102425,  4164, -4825,  3892, 83055,
   -4825, -4825, -4825, 13137,   697,  2559, -4825,  2581,  2591,  3992,
    3894, -4825, 31415,  1751,  3465, 57783,  3781, -4825, 10292,  2598,
   -4825, 13137, 83055, -4825, -4825, -4825,  2599, -4825, -4825, 31415,
    3783, 31415, -4825, 34817,  3771, -4825,  4262, -4825, -4825,  4141,
   -4825, 82083,  3900, 48990,  1657,  1657,  1970, -4825,  2069, -4825,
   83055,100997,100997,  3787,  3790,  2600, -4825, 31415, -4825, -4825,
   -4825,  3475,  3475,  3789,  3947, -4825, -4825,  2606, -4825,   791,
    4003,  4155,  2607,  2612, 83055,  3120,  3901,  3120, -4825,  3110,
   -4825,  1454, -4825, -4825, 58269,  3521, -4825, -4825, -4825,  4183,
    4129, -4825, -4825, -4825, -4825,   796, -4825,  4054,  4056, 83055,
   -4825,  3802, -4825,  2619, 83055, 83055,  4281,  4282, -4825, 10331,
   62643,  3751,  3618,  2087, -4825, -4825,  3806,  3111,  3882, -4825,
    3345,  4059, -4825,  4060,  1355,  3811,  3881, -4825,  3208, 40163,
    6498, -4825,   914, -4825, -4825, -4825, -4825, -4825, -4825, -4825,
    2977, 30443, 30443,  3813, -4825, -4825, 83055, -4825,  2624, -4825,
    2626, 34817,  2630, -4825, 83055,  3812, 62157,   406,  3815, -4825,
    3819, -4825, -4825,  3989,  2069,  3204,  3821, -4825,  1355,   226,
   -4825, 13137, -4825, -4825,   273, 83055, 62643,  4276, -4825, -4825,
   -4825,  4003, -4825, -4825,  3204, 83055,  3891,  3888,  3852, -4825,
    4016, -4825,  1194,  1194,  4228, -4825,  3955, -4825, -4825,  3836,
   -4825,  4337,  3505, -4825,  1218,  1601, -4825,  3838, -4825,  3700,
    3618, 83055, -4825,  3882, -4825, -4825, -4825,  1355,  1355,  3700,
   -4825, -4825, -4825, -4825,  1634, 36275,  4032,   281, 11626,  4210,
   -4825,  4210, -4825,  2639, -4825, -4825,  2640, -4825, -4825, -4825,
     285,  1657, 31415,  2069, -4825,  4011, -4825, -4825, -4825,  3839,
    3204,  2235, 83055, -4825, -4825, -4825,  4156,  4212, -4825,  3884,
    3749, -4825,  4334, -4825,   316, -4825, -4825, -4825, -4825, -4825,
    3622,  3751, 56325,  3345,  3700,  2641, -4825,  4098,  2645, -4825,
   -4825,  3849,  3298, -4825,  1642, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825,  4331, -4825, -4825, -4825, -4825, -4825,   158, -4825,
   -4825, -4825, -4825, -4825, -4825, 10559, -4825, -4825, -4825, -4825,
   -4825, 83055,  3902,  4147,  4225, -4825, -4825, -4825, -4825, -4825,
    2646, -4825, -4825, -4825, -4825,  3882,  3345,  3890,   539, -4825,
   -4825,  1355, 22068,  4103, -4825,  2077, -4825, -4825,  2083,  2189,
   30929,  4048, -4825,  3914, -4825, -4825,  2069, -4825, -4825,  2463,
    4077, -4825, 56325, -4825,  3882,  4318,  3867,  3896, -4825, -4825,
    1355, -4825,  2463, -4825,  4098, -4825,  3889,   210,   337,  1689,
    3906,   361,   380,  3917,   388, -4825,  1688,  2651, -4825, -4825,
    3908,  3869, -4825, -4825,  1642, -4825, -4825, -4825,  1102, 62643,
   -4825, -4825,   677,  1064, -4825,   238,  3890, -4825, -4825, -4825,
    1355,  1355,  4130, 52437,  1355,  1355,  3943,  1355, -4825,  2837,
    2837,  1689, -4825,  2837,  2837,  3917,  2837, -4825, -4825, -4825,
   56811, 26019, 22564, -4825,   214, -4825, -4825, -4825, -4825,  3910,
    3913,   296,105733, -4825,  2652,  1114, -4825,   932,   932,  3915,
   -4825, -4825, -4825, 83055, -4825,  3521, -4825, -4825, -4825, -4825,
   -4825, 83055, -4825, -4825,  2658, -4825,  1355,  3364,  3949, -4825,
    3345,  3920, -4825, 56325, 83055,105733, -4825, -4825,  1064,   994,
    1114,  1114,   228,  3521,  2669, -4825, 56811, -4825,  2176,   138,
   -4825,  3923,  2671,  2675, -4825, -4825,  3475,   994,   994,  2677,
   -4825, -4825, -4825, -4825, -4825,  4173, -4825, -4825, -4825,  3475,
    3475, -4825,  2463, -4825, -4825,  1102, -4825
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
    1687,  1467,   795,  1558,  1557,  1467,   298,     0,  1560,     0,
    1467,   463,  1218,     0,     0,     0,     0,   795,  1467,     0,
    1687,     0,     0,     0,     0,  1700,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1467,     0,     0,  1707,     0,
       0,     0,     0,  1700,     0,  1564,     0,     0,     0,     0,
       0,     2,     4,    59,    20,    86,    60,    87,    21,    67,
      68,    23,    22,    34,    33,    92,    93,    53,    17,    81,
      61,   126,   125,   127,    40,    36,    75,    29,    30,    37,
      41,    63,    42,    48,    54,   104,    62,    24,    58,    85,
      64,    90,    47,    11,    12,    49,    79,    13,    50,    80,
      14,    51,    15,    69,    94,    32,    65,    91,    66,     5,
      43,    77,    73,    10,    55,    56,    57,    82,    83,    84,
     109,    89,   121,    39,   118,    98,    99,   115,   100,   116,
       8,   101,    52,    16,   112,   111,   113,    76,    44,    78,
     110,    31,    26,   114,    18,    19,   117,    88,   107,   103,
     122,   120,   128,   105,    70,     6,     7,    95,    25,    46,
       9,    28,    27,    45,    38,   124,    35,  1560,    97,   108,
      96,    71,   102,    74,   106,   123,    72,   119,   129,  1660,
    1659,  1709,  1665,  1686,     0,  1676,  1466,  1465,  1451,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   794,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1477,  2271,  2286,  2287,  2288,  2289,  2291,  2292,
    2293,  2294,   429,  2295,  2296,  2297,  2298,  2299,  2300,  2301,
    2302,  2303,  2304,  2888,  2889,  2890,  2891,  2305,  2306,  2307,
    2308,  2309,  2310,  2311,  2892,  2893,  2312,  2313,  2314,  2315,
    2316,  2894,  2317,  2318,  2319,  2320,  2321,  2322,  2323,  2324,
    2326,  2327,  2328,  2329,  2330,  2334,  2336,  2337,  2338,  2339,
    2340,  2341,  2342,  2895,  2896,  2343,  2344,  2345,  2346,  2347,
    2348,  2349,  2351,  2352,  2353,  2354,  2355,  2356,  2357,  2359,
    2360,  2361,  2362,  2363,  2364,  2366,  2367,  2370,  2371,  2372,
    2897,  2374,  2375,  2376,  2898,  2377,  2380,  2381,  2899,  2382,
    2384,  2386,  2387,  2388,  2389,  2900,  2390,  2392,  2393,  2395,
    2396,  2397,  2399,  2400,  2401,  2402,  2404,  2405,  2406,  2407,
    2408,  2410,  2903,  2411,  2412,  2413,  2414,  2904,  2905,  2906,
    2415,  2416,  2417,  2418,  2419,  2420,  2421,  2422,  2423,  2424,
    2907,  2425,  2427,  2428,  2429,  2430,  2431,  2433,  2435,  2436,
    2437,  2438,  2439,  2440,  2441,  2442,  2444,  2446,  2447,  2448,
    2449,  2909,  2910,  2451,  2452,  2911,  2455,  2456,  2457,  2912,
    2458,  2913,  2459,  2460,  2461,  2462,  2463,  2464,  2465,  2467,
    2914,  2469,  2915,  2471,  2472,  2474,  2475,  2477,  2478,  2481,
    2916,  2917,  2484,  2482,  2483,  2485,  2486,  2487,  2488,  2489,
    2492,  2494,  2495,  2918,  2498,  2499,  2500,  2501,  2502,  2503,
    2505,  2506,  2507,  2508,  2509,  2510,  2512,  2514,  2515,  2517,
    2518,  2519,  2520,  2920,  2522,  2523,  2524,  2525,  2526,  2527,
    2528,  2529,  2532,  2533,  2534,  2535,  2536,  2537,  2921,  2538,
    2539,  2540,  2923,  2541,  2544,  2545,  2546,  2547,  2548,  2549,
    2550,  2551,  2552,  2553,  2924,  2555,  2556,  2557,  2558,  2559,
    2560,  2561,  2562,  2925,  2926,  2565,  2927,  2566,  2928,  2567,
    2568,  2569,  2570,  2571,  2572,  2573,  2574,  2575,  2576,  2577,
    2578,  2579,  2580,  2582,  2583,  2929,  2930,  2584,  2585,  2586,
    2587,  2588,  2590,  2591,  2592,  2593,  2594,  2596,  2597,  2931,
    2932,  2933,  2934,  2935,  2936,  2937,  2938,  2939,  2598,  2599,
    2601,  2290,  2325,  2331,  2332,  2333,  2335,  2350,  2358,  2365,
    2368,  2369,  2373,  2378,  2379,  2383,  2385,  2902,  2901,  2391,
    2394,  2398,  2403,  2409,  2426,  2432,  2434,  2908,  2443,  2445,
    2450,  2453,  2454,  2466,  2468,  2470,  2473,  2516,  2476,  2479,
    2480,  2490,  2491,  2493,  2496,  2497,  2504,  2511,  2513,  2919,
    2521,  2530,  2531,  2922,  2542,  2543,  2554,  2563,  2564,  2581,
    2589,  2595,  2600,   428,  1649,  2241,  2272,  2273,  1559,  1537,
     795,     0,  1454,   462,     0,     0,     0,     0,     0,     0,
       0,   989,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   221,     0,     0,   486,   485,     0,     0,     0,
    1190,   491,     0,   954,   683,     0,   682,     0,     0,     0,
       0,     0,     0,   783,  1606,  2482,  1604,  1650,   299,   302,
     303,   300,   301,  2263,     0,  1305,  1306,  1308,     0,     0,
    1318,  1026,  1027,     0,  1025,     0,  1029,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,  1028,  1018,     0,
    1015,     0,     0,     0,  1024,     0,  1019,  1034,     0,     0,
       0,  1455,  1603,   492,  1584,     0,  1582,  1578,  1579,  1580,
    1560,  1569,  1581,  1574,  1576,  1575,  1577,  1573,  2262,  2287,
    1128,  1128,  1128,  1128,  1125,  1126,  1128,  1128,  1128,  2505,
       0,     0,  1107,     0,  1109,  2268,  1128,  1133,   552,   552,
     552,     0,  1132,  1137,   552,  1448,  1486,  2246,  1699,     0,
    1108,  1447,  2565,  1595,     0,     0,     0,  1322,     0,  1323,
       0,  2524,  1459,   283,  2536,  2925,  2565,   282,   277,   278,
     251,  2292,     0,     0,  1132,     0,  1456,  1457,  1091,  1706,
    1704,  2227,  2310,  2324,  2429,   274,  2519,  2525,  2536,  2925,
    2565,  2597,   230,   240,   235,     0,   292,  2536,  2925,  2565,
     288,  1477,     0,  1677,  1801,  2237,     0,  1450,  1449,  1563,
       0,  1566,     0,  1763,  2500,  1681,  1683,  1568,     0,     0,
    1674,     0,     0,     1,  1687,  1562,  1703,  1703,     0,  1703,
       0,  1666,  1674,  1669,  1673,     0,     0,     0,     0,  2271,
    2940,  2941,  2942,  2943,  2944,  2945,  2946,  2947,  2948,  2949,
    2950,  2951,  2952,  2953,  2954,  2955,  2956,  2957,  2958,  2959,
    2960,  2961,     0,     0,  2247,  2272,  2276,     0,  1037,     0,
     157,  2242,  1178,     0,     0,     0,     0,  2241,     0,     0,
       0,     0,     0,  2277,     0,  2264,  2278,  2279,  2280,     0,
    2397,     0,     0,     0,  2129,  2314,  2377,  2139,  2137,  2138,
    2131,  2132,  2133,  2134,  2135,  2136,     0,  1303,  2130,     0,
     199,   157,     0,     0,  2397,     0,     0,     0,     0,     0,
    2397,     0,     0,     0,     0,     0,   199,  2433,   157,  2397,
       0,     0,     0,     0,     0,     0,  1471,     0,     0,     0,
    1473,  1476,  1452,  1540,     0,  2237,     0,     0,  1068,  1058,
       0,  1069,  1059,  1064,     0,  1071,     0,     0,  1061,     0,
       0,     0,  1072,     0,  1060,  1062,  1074,  1063,  1070,     0,
       0,  1065,  1066,     0,     0,     0,  1463,   552,   435,     0,
       0,     0,     0,   157,  1527,     0,  2397,   157,     0,     0,
     490,   489,   157,   488,   487,  2314,  2377,     0,  1217,   157,
    2397,     0,   223,   865,   798,     0,     0,   943,  2433,   157,
       0,     0,     0,     0,     0,     0,   686,     0,     0,     0,
    1193,     0,     0,   782,   795,  1607,  1605,     0,  1309,   276,
     275,  1307,  2397,     0,   377,     0,     0,  2397,  1514,  1023,
    1016,     0,     0,  1022,  2397,     0,  2397,  2266,   214,     0,
    1020,  2314,  2377,  2397,     0,     0,  2397,   206,  2397,     0,
    2397,   377,  2397,   799,     0,  2397,     0,  2397,  2433,   208,
       0,     0,     0,  2397,   377,  1035,     0,  1600,     0,  1583,
    1687,  2929,  1589,     0,  1585,  1592,  1588,  1584,  1128,  1127,
       0,  1128,     0,  1128,     0,  1128,     0,  1128,     0,     0,
       0,  1128,  2269,  2270,  1110,     0,  1134,     0,     0,  1141,
    1140,  1139,     0,     0,     0,  1142,  1805,  1625,     0,  1445,
    1462,     0,     0,     0,  1193,  1325,  1325,  1325,  1458,   281,
     279,     0,     0,     0,     0,     0,     0,  1464,     0,     0,
       0,     0,  2250,  2252,  2253,  2140,  2217,     0,  2889,  2890,
    2891,  2202,     0,  2892,  2893,  2894,  2942,  2038,  2025,  2034,
    2039,  2026,  2028,  2035,  2895,  2896,  2356,  2897,  2898,  2260,
    2899,  2900,  2904,  2905,  2906,  2907,  2030,  2032,  2909,  2910,
       0,  2261,  2912,  2913,  2463,  2915,  2916,  2918,  2920,  2036,
    2923,  2924,     0,  2925,  2926,  2927,  2928,  2259,     0,  2037,
    2930,  2932,  2933,  2934,  2935,  2936,  2937,  2938,  2939,     0,
    2902,  2901,  2908,     0,     0,  2234,     0,  2002,     0,  1847,
    1848,  1870,  1871,  1849,  1876,  1877,  1889,  1850,     0,  2233,
    1914,  2092,  2000,  2021,  2008,     0,  1999,  2001,  1995,  1689,
    2226,  2228,     0,  1996,  2249,  2251,  2209,   243,   294,     0,
     295,  2235,  2536,   231,   273,   245,   272,   246,   244,     0,
    2312,   232,     0,     0,   233,     0,     0,     0,     0,   291,
     289,     0,  1453,     0,  1803,  1802,     0,     0,  2215,  2238,
    1044,  1550,  1551,  1549,  1552,     0,  1546,  1548,  1565,  1560,
    2222,  2221,  2223,     0,  1682,     0,     0,     0,     0,     0,
    1664,  1663,     3,  2385,  2521,  1553,  1568,  1701,  1702,     0,
       0,     0,     0,     0,     0,     0,     0,  1753,  1717,  1718,
    1720,  1750,  1754,  1762,     0,  1670,     0,     0,  1807,     0,
    1764,     0,     0,  2248,     0,     0,     0,     0,  1038,     0,
       0,     0,     0,     0,     0,   156,  1512,   285,  1510,     0,
       0,     0,     0,     0,     0,     0,  1519,     0,     0,   212,
     213,   810,   795,     0,     0,  2397,     0,     0,     0,     0,
       0,  1257,  1264,     0,     0,     0,     0,     0,     0,     0,
       0,  1258,  1256,  1259,     0,     0,     0,   287,  1268,  1289,
    1292,     0,  1168,     0,     0,     0,     0,     0,  1376,     0,
       0,  1376,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   321,
     362,   372,   774,     0,     0,     0,   777,     0,  2397,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   161,     0,
       0,     0,     0,     0,     0,   761,   773,     0,     0,     0,
       0,     0,   770,     0,   157,   313,   754,   758,     0,     0,
       0,   874,   873,  1517,  1516,     0,     0,     0,  1376,     0,
     304,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   421,   422,     0,     0,
       0,   161,     0,     0,     0,     0,   315,     0,     0,     0,
     134,  2265,     0,     0,  1472,  1469,  1470,     0,  1475,     0,
    1536,     0,     0,     0,     0,  1076,     0,  1073,     0,     0,
    1067,  2314,  2377,     0,     0,     0,     0,  1082,  1081,     0,
       0,   465,   434,     0,     0,  2274,  1858,  1887,  1865,  1887,
    1887,  1854,  1854,  1867,  1855,  1856,  1894,     0,  1887,  1854,
    1859,     0,  1857,  1897,  1897,  1882,     0,  1839,  1840,  1841,
    1842,  1868,  1869,  1843,  1874,  1875,  1844,  1911,  1854,  2275,
       0,     0,   952,     0,  1489,  1526,     0,     0,     0,   804,
       0,  2397,     0,   159,   990,     0,   941,   491,     0,   159,
       0,     0,   217,     0,   869,     0,     0,     0,     0,     0,
       0,   889,   888,     0,     0,     0,   942,     0,   159,     0,
     134,     0,   757,  2397,     0,   552,   552,   685,   492,     0,
       0,     0,  1192,  1195,     0,     0,     0,     0,  1653,  1656,
    1654,     0,  1652,     0,     0,   377,   375,   376,   938,  1317,
       0,     0,  1017,     0,     0,   377,     0,     0,  2397,   377,
    2397,     0,  2397,     0,     0,   377,   377,     0,     0,     0,
       0,   870,     0,  1033,  1031,  1030,  1032,     0,     0,     0,
       0,     0,   146,   144,  2397,   377,     0,     0,  1012,  2150,
       0,  1571,  1687,     0,   262,   263,   261,  1590,   264,  1591,
    1587,  1687,     0,  1118,     0,  1122,     0,  1113,     0,  1119,
       0,  1114,  1111,  1112,     0,  1117,     0,     0,   553,   555,
       0,     0,  2340,  2355,     0,  2386,  2419,  2420,  2525,  2532,
       0,  2558,  2569,  2490,     0,  1143,  1173,  1138,     0,     0,
    1635,  1446,  2156,     0,  1687,     0,     0,  1324,  1321,  1320,
    1319,   280,   252,     0,     0,     0,  1175,  2524,  1461,  1090,
     795,     0,  1997,     0,  2005,  2006,  1886,  1873,  2201,     0,
       0,  1881,  1880,     0,     0,     0,     0,     0,  1863,  1862,
    1861,  2004,  2166,     0,  1860,     0,     0,     0,     0,  1887,
    1887,  1885,  1934,     0,  1864,     0,     0,  2179,     0,  2185,
       0,     0,     0,     0,  1893,     0,  1891,     0,     0,  1970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1918,  1919,     0,  2002,  2150,     0,  2003,  2256,
       0,     0,  1879,     0,  1911,  2231,  2140,     0,  2610,  2611,
    2612,  2613,  2605,  2615,  2616,  2617,  2618,  2606,     0,     0,
    2619,  2620,  2607,  2882,  2621,  2622,  2623,  2220,  2842,  2883,
    2843,  2844,  2624,  2625,  2626,  2627,  2628,  2629,  2630,  2631,
    2632,  2633,  2634,  2845,     0,  2635,  2636,  2637,  2638,  2639,
    2640,  2642,  2643,  2644,  2645,  2649,  2650,  2651,  2652,  2653,
    2847,  2848,  2654,  2655,  2656,  2657,  2658,  2659,  2660,  2661,
    2662,  2663,  2664,  2665,  2666,  2667,  2668,  2669,  2671,  2672,
    2675,  2676,  2677,  2849,  2678,  2679,  2850,  2682,  2851,  2683,
    2685,  2884,  2686,  2687,  2688,  2852,  2689,  2691,  2692,  2694,
    2148,  2695,  2696,  2697,     0,  2698,  2700,  2701,  2702,  2703,
    2704,  2855,  2705,  2706,  2707,  2708,  2856,  2857,  2858,  2709,
       0,  1948,  2710,  2711,  2712,  2713,  2714,  2859,  2715,  2146,
    2717,  2718,  2719,  2720,  2721,  2723,  2724,  2725,  2726,  2727,
    2728,  2730,  2732,  2733,  2734,  2860,  2861,  2736,  2737,  2862,
       0,  2739,  2740,  1950,  2741,  2863,  2742,  2864,  2743,  2744,
    2745,  2746,  2747,  2748,     0,  2865,  2886,  2866,  2751,  2752,
    2754,  2756,  2867,  2868,  2761,  2759,  2760,  2762,  2763,  2764,
    2765,  2768,  2769,  2770,  2869,  2771,  2772,  2773,  2774,  2775,
    2776,  2777,  2778,  2779,  2781,  2782,  2783,  2784,  2785,  2786,
    2871,  2787,  2788,  2789,  2790,  2791,  2792,  2793,  2796,  2797,
    2798,  2799,  2872,  2800,  2801,     0,  2802,  2874,  2805,  2806,
    2807,  2808,  2809,  2810,  2811,  2812,  2875,  2814,  2815,  2604,
    2816,  2817,  2818,  2876,  2877,  2821,  2878,  2822,  2879,  2823,
    2824,  2825,  2826,  2827,  2828,  2829,  2830,  2831,  2832,  2833,
    2834,  2837,  2880,  2881,  2887,  2835,  2836,  2838,  2839,  2840,
    2841,  2614,  2641,  2646,  2647,  2648,  2846,  2670,  2673,  2674,
    2680,  2681,  2684,  2853,  2854,  2690,  2693,  2699,  2716,  2885,
    2722,  2729,  2731,  2735,  2738,  2749,  2750,  2753,  2755,  2757,
    2758,  2766,  2767,  2780,  2870,  2794,  2795,  2873,  2803,  2804,
    2813,  2819,  2820,  2139,  2137,  2138,  2131,  2132,  2133,  2134,
    2135,  2136,  2144,  1931,     0,  2232,  2602,  2603,     0,  2094,
       0,  1930,     0,  1766,     0,     0,  2254,  2210,   296,   297,
     293,     0,     0,   248,   247,     0,   266,   270,   271,   242,
     269,     0,   265,   250,  2083,  2082,   249,   241,   238,   236,
     253,   255,   256,   239,   237,   290,     0,     0,  2281,  2962,
    2963,  2964,  2965,  2966,  2967,  2968,  2969,  2970,  2971,  2972,
    2973,  2974,  2975,  2976,  2977,  2978,  2979,  2980,  2981,  2982,
    2983,  2984,  2986,  2987,  2988,  2989,  2991,  2992,  2993,  2994,
    2995,  2996,  2997,  2998,  2999,  3000,  3001,  3002,  3003,  3004,
    3005,  3006,  3007,  3008,  3009,  3010,  3011,  3012,  3013,  3014,
    3015,  3016,  3017,  3018,  3019,  3020,  3021,  3022,  3023,  3024,
    3025,  3026,  3028,  3029,  3030,  3031,  3032,  3033,  3034,  3035,
    3036,  3037,  3038,  3039,  3040,  3041,  3042,  3043,  3044,  3045,
    3046,  2985,  2990,  3027,  2212,  2211,  2244,  2282,  2283,  2284,
    2285,  2216,     0,     0,   377,  1544,     0,  1541,     0,     0,
    2225,     0,  1684,     0,  2239,     0,     0,     0,  1568,  1561,
    1568,  1554,  1680,  1679,  1710,  1711,  1210,  1678,  1737,  1738,
       0,     0,     0,     0,  1759,  1757,  1728,  1721,  1727,     0,
       0,  1725,     0,  1729,  1914,  1752,  1668,  1715,  1716,  1719,
    1667,     0,  1755,     0,  1635,  1753,  1720,  1622,     0,     0,
    1808,     0,  1232,  1234,     0,  1233,     0,  1236,     0,  1245,
       0,     0,  1231,  1250,     0,  1239,  1237,     0,     0,     0,
       0,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
    2558,   284,  1508,     0,     0,     0,     0,  1177,  1176,     0,
       0,  1197,     0,     0,     0,  1522,   541,     0,   374,     0,
       0,     0,     0,     0,     0,     0,     0,   936,   933,     0,
       0,   932,     0,   808,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   306,   844,     0,  1376,     0,   877,     0,
    1266,     0,     0,  1269,  1265,     0,     0,     0,  1267,  1262,
    1263,  2525,  2536,  2565,   286,  1270,     0,     0,  1291,     0,
    1290,  1288,  1220,     0,  1221,     0,     0,     0,     0,     0,
       0,   642,   323,   336,     0,  1375,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   413,   377,     0,     0,
       0,     0,     0,   357,     0,   366,   365,     0,     0,     0,
       0,     0,     0,   370,     0,     0,     0,     0,     0,   369,
     359,   377,     0,     0,     0,   363,     0,     0,     0,   775,
     776,     0,     0,     0,  1376,     0,   317,     0,     0,     0,
       0,     0,     0,  1304,     0,     0,   202,     0,   198,   201,
       0,     0,     0,     0,   760,   772,     0,   764,   765,   762,
     766,   767,     0,     0,     0,     0,     0,     0,   759,     0,
       0,   867,   866,   872,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,  1327,     0,     0,     0,     0,     0,     0,
     980,     0,     0,     0,     0,     0,     0,     0,     0,   205,
     880,   881,     0,   882,     0,   203,   204,     0,     0,     0,
       0,     0,     0,   140,     0,     0,     0,     0,   260,  1468,
    1474,  1539,  2245,  1538,     0,     0,     0,  1075,     0,     0,
       0,     0,     0,     0,     0,  1077,  1078,  1079,  1080,     0,
       0,     0,     0,     0,   439,   440,   157,   438,     0,  1839,
       0,  1833,  1829,  1900,  1901,  1902,  1899,  1912,  1898,     0,
    1845,  1903,  1854,  1851,   953,     0,   957,   960,     0,  1487,
     512,     0,     0,   801,   844,     0,   494,   210,     0,     0,
       0,     0,   155,   221,   223,   492,     0,   222,   224,   226,
     227,   228,   225,   229,   864,   868,     0,   797,     0,     0,
       0,     0,     0,   890,   894,   893,   897,   895,     0,   891,
       0,     0,  1825,     0,   197,     0,   131,     0,   753,   756,
       0,     0,     0,   494,   586,   388,     0,     0,   552,     0,
     940,     0,     0,     0,  1194,     0,     0,     0,     0,     0,
       0,     0,     0,  1651,  1655,     0,  1295,     0,  1515,  2397,
     377,     0,  1293,   215,  2267,     0,  1013,     0,     0,     0,
       0,     0,  1297,  1009,   207,     0,   377,   377,   800,     0,
     377,   209,     0,     0,     0,   792,   377,  1036,  1602,     0,
    1572,  1586,  1570,  1115,  1124,  1123,  1121,  1120,  1116,     0,
    1135,     0,   551,     0,     0,     0,  1149,  1150,     0,     0,
    1148,  1166,  1151,     0,  1153,  1145,  1144,  1154,  1156,  1155,
       0,     0,  1175,     0,  1632,     0,  1630,     0,  1806,  1634,
    1637,  1594,     0,  1593,  1597,  1599,  1598,  1596,     0,   680,
       0,     0,  1132,     0,     0,   377,  1460,     0,  1092,  1093,
    1099,     0,     0,     0,     0,     0,  1100,  1096,  1097,  1098,
    1101,  1102,  1103,     0,     0,     0,  2218,  2162,     0,  2163,
       0,     0,     0,  2200,  2194,     0,     0,     0,     0,     0,
       0,  2167,  2170,  2171,  2172,  2169,  2173,  2168,     0,     0,
    2174,     0,     0,     0,     0,     0,  1884,  1883,     0,     0,
       0,     0,     0,     0,     0,  1973,  2008,     0,     0,  2124,
       0,  2150,  2184,     0,  2009,     0,     0,  1895,     0,     0,
       0,     0,     0,     0,     0,  2150,  2190,     0,     0,     0,
       0,  1914,  2081,     0,  2078,     0,     0,     0,     0,     0,
    2055,     0,     0,  2217,     0,     0,     0,     0,  2257,  1915,
    1932,  2230,     0,  2219,     0,     0,  1916,  1939,     0,  2191,
    1966,     0,  1971,  1954,     0,  1947,     0,  1952,  1956,  1935,
    2220,  2149,     0,  2147,     0,     0,  1933,     0,  1928,  1926,
    1927,  1920,  1921,  1922,  1923,  1924,  1925,  1929,  2128,  2126,
    2127,     0,     0,     0,  2102,     0,     0,  1951,  2388,  2429,
       0,  1700,  1700,  1700,  1688,  1698,     0,  1820,  2229,     0,
       0,     0,     0,  2013,     0,  2154,  1709,  2152,  2247,  2236,
       0,     0,  1911,     0,  1804,  2213,     0,  1042,  1043,  1041,
    1568,  1547,  1543,  1542,  2224,  1567,     0,  1687,  1662,  1661,
    1555,  1556,     0,  1208,  1209,     0,  1213,  2920,  2522,     0,
       0,     0,     0,  1730,  1760,     0,  1751,     0,  2250,  1731,
    2249,  1732,  1735,  1736,  1726,  1761,  1756,  1672,  1671,     0,
    1823,     0,     0,  1619,  1612,  1809,     0,  1766,  1639,  1641,
    1642,     0,  2217,  1235,     0,  1854,  1246,     0,  1230,     0,
    1229,  1854,     0,  1247,     0,  1854,     0,     0,     0,  1404,
    1330,  1380,  1040,  1405,  1331,  1381,  1406,  1332,  1509,     0,
    1511,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   915,  2397,   377,  1520,  1407,
       0,  1333,   373,  1521,  1382,  1525,   935,   934,     0,     0,
    1383,     0,   809,     0,     0,   814,   815,   816,     0,     0,
       0,   817,     0,  2314,  2377,     0,   822,   829,   834,   824,
       0,   835,   830,     0,     0,     0,     0,     0,     0,   841,
     848,     0,     0,     0,     0,     0,     0,     0,  1273,  1275,
    1274,  1260,  1261,  1408,  1336,     0,  1384,  1272,  1271,  1219,
       0,  1337,   211,     0,     0,   310,   324,     0,  2609,     0,
       0,  2746,  2806,  2880,   642,   637,   635,   641,   611,   638,
     400,  2608,  1835,   850,   915,   405,   403,   409,  1378,   343,
     356,   351,   352,   350,  2397,   377,   405,  2694,   412,  2397,
     377,     0,     0,     0,     0,   353,   348,   349,   345,   358,
    2291,  2357,  2537,     0,   854,   856,     0,   861,   367,  1351,
       0,   384,   383,   382,     0,   371,     0,   389,   392,   368,
     341,   361,   344,   342,     0,   601,   597,   600,     0,   420,
     338,     0,   364,   405,     0,   322,     0,     0,     0,     0,
       0,     0,     0,  2243,     0,     0,  1299,     0,     0,     0,
     200,  1365,   177,     0,     0,     0,   168,     0,     0,     0,
       0,   193,     0,   193,     0,   160,   162,   176,     0,  1414,
    1341,     0,     0,   314,   755,   763,   768,  1345,   771,  1394,
     769,  1421,  1342,     0,  1376,     0,   305,     0,  1343,     0,
    1388,  1416,  1367,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1528,     0,     0,     0,     0,     0,   377,     0,
       0,     0,  1378,  2397,   377,  1415,     0,  1372,     0,  1402,
       0,   423,     0,  1366,     0,     0,   316,  1347,  1396,  1374,
    1417,     0,     0,     0,     0,     0,     0,   147,   148,     0,
       0,     0,     0,     0,   139,   138,   133,     0,     0,   258,
     257,   259,     0,     0,     0,     0,     0,     0,     0,     0,
    1084,  1051,  1083,     0,     0,     0,  1045,   464,   432,   433,
     435,   444,     0,  1834,  1830,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1852,   956,     0,     0,     0,     0,
    1507,  1507,  1507,  1507,  1507,  1507,  1507,  1488,  1518,     0,
     157,     0,     0,     0,   803,   843,   850,     0,     0,     0,
       0,     0,   493,   497,   504,   501,   502,   503,     0,     0,
       0,     0,   178,   158,     0,   998,     0,   552,     0,   223,
     216,     0,     0,     0,   388,   951,   949,   948,   950,     0,
       0,     0,   973,   947,     0,  1824,  1826,     0,   145,     0,
       0,     0,     0,   680,   496,     0,   555,     0,     0,   590,
       0,     0,     0,     0,   388,  2274,     0,   969,   939,     0,
       0,  1224,     0,  1242,  1225,     0,     0,     0,  1279,  1284,
    1280,  1252,     0,   945,   780,  1657,  1658,     0,   377,     0,
       0,   845,   377,   377,     0,   377,     0,   377,   377,     0,
    1443,   871,     0,   923,     0,     0,   377,  1011,  2151,  1136,
     554,     0,     0,     0,     0,  1147,     0,   778,  1152,     0,
    1165,  1160,  1162,     0,  1169,  1633,  1626,  1628,  1627,     0,
       0,  1624,     0,  1623,  2157,  1010,     0,   752,     0,     0,
     377,     0,  1170,     0,  1094,  1095,     0,     0,  1104,     0,
       0,  1705,  2160,  2161,     0,     0,  2950,  2197,     0,     0,
    2195,     0,     0,  2051,     0,  2027,  2029,  1853,  2041,     0,
    1866,  2052,  2053,  2031,  2033,     0,  2141,     0,     0,  2042,
    1975,  1976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1988,  1987,  2043,  2123,     0,
       0,  2182,  2183,  2044,     0,  2012,  2007,  1896,  1897,  1897,
       0,     0,  2189,     0,     0,     0,  2049,  2058,     0,     0,
       0,     0,     0,  2065,     0,  2086,     0,     0,     0,     0,
    2208,  2204,  2054,  2056,  1998,  2151,  1888,  1889,     0,     0,
       0,     0,     0,     0,     0,     0,  1972,  1955,  1949,     0,
    1953,  1957,     0,     0,     0,     0,  1941,  1967,  1937,     0,
       0,  1943,     0,  1968,     0,     0,     0,  2020,  1700,  1700,
    1700,  1700,  1697,     0,     0,     0,     0,  2522,     0,     0,
    1787,  1765,  1767,  1774,  1787,  1792,  2022,  1818,  2023,     0,
    2237,     0,  1740,  1709,  1709,  1709,  2019,     0,     0,     0,
    1708,   234,     0,   267,   254,     0,  1545,  2240,     0,  1712,
       0,  2142,  1213,  1211,  1212,  1714,  1734,  1733,     0,  1724,
    1758,  1722,  1621,     0,  1619,  1614,     0,  1615,  2217,     0,
    1611,  1646,     0,     0,  1823,     0,  1645,     0,  1854,  1227,
    1228,     0,  1251,     0,  1403,  1329,  1379,  1507,  1180,  1181,
       0,  1179,     0,     0,     0,   540,  1196,     0,     0,     0,
     915,     0,     0,   544,     0,  1523,     0,  1422,  1364,   811,
     812,     0,   823,     0,   832,   831,     0,     0,   819,     0,
       0,     0,     0,   818,   837,   784,   838,   840,     0,     0,
     839,   842,   847,  1376,     0,   878,  1353,     0,  1400,  1254,
    1276,     0,  1222,     0,     0,     0,   642,     0,     0,     0,
       0,     0,     0,   611,   636,   635,     0,   640,     0,     0,
     615,     0,     0,   512,   337,   404,     0,     0,     0,   325,
     335,     0,     0,   340,  2694,     0,     0,   333,   354,   346,
     355,   347,   858,   859,   857,   853,     0,   860,   862,   415,
       0,   386,     0,     0,     0,   360,     0,     0,   599,     0,
       0,     0,     0,  1410,     0,  1376,     0,   318,  1349,     0,
    1398,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1411,  1385,     0,     0,     0,   165,   164,     0,
     175,     0,     0,   173,     0,     0,   184,   185,   174,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   424,   379,     0,   976,     0,
       0,     0,   426,     0,  1326,     0,     0,     0,   149,   153,
     152,   154,   151,   150,     0,   141,   142,     0,     0,  1409,
    1338,  1046,     0,     0,  1047,  1055,     0,     0,  1048,     0,
       0,  1057,     0,     0,   431,   441,   915,     0,     0,     0,
    1837,     0,  1905,  1906,  1907,  1908,  1909,  1910,     0,  1904,
    1911,   958,   967,  2463,   962,  2131,  2132,   965,   959,   961,
     964,   966,   963,     0,  1507,  1506,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   526,     0,     0,
     520,     0,     0,  1284,   511,   514,   515,     0,     0,   804,
     807,   805,   806,   836,     0,     0,     0,   533,     0,     0,
     180,     0,     0,   181,   179,     0,     0,   388,     0,   219,
     492,     0,     0,   796,   896,   899,   892,     0,   972,   974,
     944,     0,   850,   132,     0,     0,  1603,   603,     0,   586,
     582,   584,   583,   585,     0,   592,   387,     0,     0,   680,
     592,     0,   968,     0,     0,  1197,  1223,     0,     0,     0,
    1277,  1281,  1278,     0,     0,  1238,     0,  1253,  1216,  1438,
    1439,  1436,  1437,     0,     0,  1648,  1296,     0,   377,  1294,
    1014,     0,  1005,     0,  1007,  1298,   377,   377,   883,     0,
     793,     0,     0,     0,  1146,  1167,     0,  1163,     0,     0,
    1129,  1172,  1631,  1629,  1636,   678,     0,  1175,     0,  1130,
    1174,     0,     0,     0,     0,     0,  2164,  1872,     0,     0,
    2199,  2193,     0,  2024,  2165,     0,  2177,  2176,  1974,  2178,
       0,  1993,     0,     0,  1985,  1983,  1984,  1977,  1978,  1979,
    1980,  1981,  1982,  1986,  2187,  2186,  2180,  2181,     0,  2010,
    1892,  1890,     0,  2046,  2047,  2048,  2188,  2059,     0,     0,
    2305,  2087,  2063,  2080,  2079,     0,     0,     0,  2067,     0,
       0,  2076,     0,     0,     0,  2205,     0,  2125,  1878,  1911,
    1917,     0,     0,  1940,  2192,  1958,     0,     0,     0,  1936,
       0,     0,     0,     0,  1945,  2141,     0,     0,     0,     0,
    2105,  2100,  2101,     0,     0,     0,     0,  1691,  1690,  1696,
    1787,  1792,     0,     0,  1674,     0,  1774,     0,  1786,  1772,
    1785,     0,     0,  1798,  1796,     0,  1798,     0,  1798,     0,
    1769,     0,  1788,  1770,  1785,  1817,  1810,     0,  2238,  1819,
       0,  1749,     0,     0,     0,     0,  2155,     0,  2153,  2014,
       0,  2214,  1685,     0,  1713,  1723,  2336,  1821,  1620,     0,
       0,  1617,  1618,     0,     0,  1640,  1619,  1643,  1248,     0,
       0,  1240,     0,  1186,  1187,  1185,  1188,     0,     0,     0,
     915,     0,     0,   563,     0,  1204,  1204,     0,     0,   546,
     595,  1284,   918,     0,     0,     0,   916,   377,  1334,     0,
     833,     0,     0,   828,   826,   825,   827,   785,  1420,  1335,
       0,     0,     0,     0,  1255,     0,     0,  1352,   611,     0,
       0,     0,   624,   627,     0,     0,   620,     0,     0,     0,
       0,   645,     0,     0,   615,   639,     0,   610,   609,     0,
     406,  2158,     0,     0,   518,     0,   330,  1377,     0,     0,
       0,   329,     0,   377,   377,   377,   377,   855,   385,   390,
     391,   394,     0,   556,  1207,   596,     0,     0,   417,   658,
       0,   611,   618,   642,   642,   399,   396,  2929,   649,   650,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   999,   982,     0,     0,  1000,  1001,     0,
       0,     0,  1301,  1302,  1300,   169,     0,   166,   167,   170,
       0,   194,     0,     0,   191,   188,   187,   172,   171,  1362,
    1346,  1395,     0,     0,  1344,     0,  1389,  1359,  1355,     0,
       0,     0,     0,     0,  1419,  1371,  1393,  1418,  1369,  1391,
    1368,  1390,  1370,  1392,  1363,     0,  1828,   979,     0,     0,
       0,   377,   377,   885,  1348,  1397,   136,     0,   135,   137,
       0,  1049,     0,     0,  1050,  1052,   467,     0,   470,   477,
     445,   450,  1527,     0,  1527,     0,   447,   451,  1527,   446,
       0,  1527,     0,  1527,   443,   937,     0,     0,     0,  1831,
    1838,  1913,  1846,   914,     0,  1498,  1497,  1496,  1500,  1499,
    1502,  1501,  1493,  1492,  1505,  1504,  1491,  1490,  1495,  1494,
       0,   516,     0,   524,   528,   529,   527,   519,  1284,   552,
     594,     0,     0,   927,     0,   802,   494,     0,     0,   530,
       0,   498,   183,   182,     0,     0,     0,   223,     0,     0,
     901,   905,   946,     0,  1827,   879,   388,     0,   494,   680,
     602,   667,     0,   499,   505,   506,     0,   590,     0,   586,
       0,     0,   677,  1485,   726,   603,   749,   971,     0,   970,
       0,     0,  1226,  1243,  1244,     0,     0,  1284,  1283,     0,
     787,   377,   846,   377,   377,  1444,   924,     0,  1159,  1158,
    1157,   779,     0,  1161,   679,   377,     0,     0,     0,     0,
       0,  1106,  1085,  1105,     0,  2196,  2040,  2050,  2175,     0,
       0,  1994,     0,     0,  2011,  2045,  2931,     0,     0,  2064,
       0,     0,  2084,  2085,  2066,     0,  2452,  2071,     0,     0,
       0,  2057,     0,  2207,  2203,  2258,  1964,  1962,  1959,     0,
    1960,     0,     0,  1942,  1938,     0,  1944,  1969,  2091,     0,
    2107,  2104,  1695,  1694,  1693,  1692,  1773,  1771,     0,     0,
    1776,  1783,     0,  1768,     0,  1797,  1793,     0,  1794,     0,
       0,  1795,     0,     0,  1783,     0,  1709,     0,     0,  2096,
    2017,  2018,  2015,  1709,  2255,  1911,     0,     0,  1613,  1616,
       0,  1647,  1638,  1241,  1249,  1513,     0,     0,     0,   542,
       0,  1284,     0,     0,     0,  1207,  1207,     0,  1284,   594,
     920,   919,   922,   917,   921,  1524,     0,   820,   821,  1354,
       0,  1401,  1360,     0,  1635,   615,     0,   623,     0,     0,
     631,     0,     0,   401,     0,   631,     0,   648,     0,   647,
       0,   408,     0,     0,     0,  1836,     0,     0,   851,     0,
     509,   326,   327,   328,   331,   379,   339,   411,   410,   332,
       0,   597,     0,     0,  1205,   558,     0,   661,   416,     0,
     605,   611,   611,     0,     0,   414,     0,   418,   396,     0,
       0,  1350,     0,  1399,  1357,  1412,  1339,  1386,     0,     0,
     988,     0,     0,     0,     0,  1413,  1340,  1387,   163,   192,
       0,     0,     0,     0,   189,     0,  1635,     0,     0,     0,
       0,  1533,     0,   378,   978,   977,   379,   425,  1373,   143,
       0,  1053,  1054,   468,   157,     0,   442,     0,   475,     0,
     473,   472,   474,     0,   458,     0,     0,     0,     0,     0,
     461,     0,     0,     0,  1832,     0,  1315,  1315,     0,   915,
    1503,     0,     0,   513,   594,   562,     0,   521,     0,     0,
       0,     0,     0,   507,   508,     0,     0,   850,     0,     0,
       0,   218,   494,   850,   900,     0,     0,     0,   975,     0,
     496,     0,  1601,     0,   676,   495,     0,     0,   592,     0,
     590,     0,   587,     0,   591,     0,  1478,   730,     0,   725,
     727,   729,     0,   748,     0,     0,  1282,     0,  1286,     0,
    1237,  1214,  1820,     0,   791,  1316,  1006,  1008,   884,  1164,
    1171,   377,  1086,  1087,  1088,  1089,     0,  1989,     0,     0,
       0,     0,  2060,     0,  2061,  2089,  2088,  2068,  2072,     0,
    2069,  2070,  2206,  1961,  1965,  1963,  1946,  2093,     0,  1709,
    1813,     0,  1816,     0,  1775,     0,     0,  1777,     0,     0,
    1779,  1781,     0,     0,     0,     0,     0,  2241,     0,  2335,
    2901,  2919,     0,  1739,  1741,  1743,  1748,     0,  1675,     0,
     268,  2143,  1822,  1644,  1165,     0,   377,  1204,   594,   564,
    2463,   565,  1203,  1210,  1210,     0,   594,   915,   813,     0,
       0,   311,   407,     0,   625,   622,   630,   629,   633,   628,
    1709,  1709,   632,   643,     0,   646,   634,   608,   614,  2159,
     849,     0,   517,   381,   393,   598,   557,  1206,   662,   619,
     606,   615,   604,   605,   605,   397,   398,     0,   419,     0,
    1635,     0,     0,     0,   995,   983,     0,     0,  1002,   195,
     196,   186,   190,     0,   307,  1356,     0,     0,     0,     0,
       0,   377,  1056,   444,     0,   471,   480,     0,   478,   448,
     453,     0,   457,   455,   454,   449,   452,   459,   460,  1315,
       0,  1312,  1311,   913,     0,   550,   522,     0,   573,     0,
       0,   928,     0,     0,     0,   539,   538,   535,   534,   536,
     537,   532,   531,   875,   992,   388,  1485,   863,   902,   903,
     898,     0,     0,     0,   586,   582,   665,   500,   512,   603,
       0,   592,   588,   589,     0,     0,     0,     0,     0,   731,
    1535,     0,  1198,  1285,     0,     0,     0,   786,     0,     0,
     790,   781,  1131,  2198,  1990,     0,  1991,     0,     0,     0,
    2074,  2073,     0,  2110,  1818,     0,     0,  1812,     0,     0,
    1784,  1800,     0,  1780,  1778,  1789,     0,  1791,  2014,     0,
       0,     0,  1747,     0,  2095,  2097,     0,  2016,  1182,     0,
    1183,  1207,   568,     0,  1213,  1213,   552,   915,   543,  1361,
       0,     0,     0,     0,     0,     0,   852,     0,   334,   657,
     607,   615,   615,     0,     0,   319,  1358,     0,   986,     0,
     997,   995,     0,     0,     0,  1529,     0,  1530,  1531,  1534,
     427,   733,   466,   476,     0,   456,  1310,  1314,  1313,     0,
       0,   523,   559,   560,   561,     0,   525,   569,   570,     0,
     925,     0,   930,     0,     0,     0,     0,     0,  1479,     0,
       0,  1485,   590,   586,   663,   664,     0,   510,   667,   581,
     603,     0,  1482,     0,     0,     0,     0,   728,   388,     0,
    1284,  1287,  1442,   789,   788,  1992,  2077,  2062,  2090,  2075,
    2106,     0,     0,     0,  1811,  1814,     0,  1782,     0,  1790,
       0,     0,     0,  1742,     0,     0,     0,  1210,     0,   915,
       0,  1201,  1200,   562,   545,  1635,     0,   626,     0,     0,
     644,   380,   655,   656,     0,     0,     0,     0,   993,   996,
     984,   997,  1004,  1003,  1635,     0,     0,   437,     0,   479,
       0,   549,     0,     0,     0,   571,     0,   572,   593,     0,
     929,     0,   850,   991,     0,     0,   904,     0,  1480,   592,
     590,     0,   483,   667,  1483,  1484,   690,     0,     0,   592,
    1199,  1215,  1441,  1440,  1687,  2888,  2336,     0,     0,  2122,
    2111,  2122,  2103,     0,  1799,  1745,     0,  1744,  2098,  2099,
     377,  1213,     0,   547,   566,   573,   312,   621,   402,     0,
    1635,     0,     0,   985,   308,  1532,   735,     0,   430,     0,
     905,   578,     0,   577,     0,   575,   574,   926,   931,   876,
     981,  1485,   908,   603,   592,     0,   481,   688,     0,  1608,
    1610,   700,  1820,  1424,  1687,  1423,  1425,  1433,  1430,  1432,
    1431,  1429,     0,  2115,  2114,  2113,  2117,  2116,     0,  2108,
    2109,  1815,  1746,  1184,  1202,     0,   915,   395,   320,   987,
     994,     0,     0,     0,     0,   576,   580,   579,  1481,   910,
       0,   906,   909,   911,   912,   667,   603,   670,     0,   689,
     690,     0,     0,   719,  1189,     0,  1434,  1428,  1674,  1659,
       0,     0,  2119,     0,  2120,   567,   548,   734,   436,     0,
       0,   886,     0,   484,   667,     0,   613,   673,   669,   691,
     693,   694,     0,   696,   687,  1609,   709,  1527,  1527,  2382,
     710,  1527,  1527,  2379,  1527,   699,     0,     0,   703,   701,
       0,     0,   745,  1426,  1687,  2112,  2118,  2121,   743,     0,
     907,   482,   665,     0,   666,     0,   672,   674,   692,   695,
       0,     0,     0,     0,     0,     0,     0,     0,   709,  1527,
    1527,     0,   710,  1527,  1527,     0,  1527,   697,   702,   698,
       0,     0,     0,   718,   738,  1427,   741,   742,   732,     0,
       0,     0,     0,   654,     0,   611,   616,   642,   642,     0,
     675,   707,   712,     0,   715,   714,   708,   711,   716,   717,
     704,     0,   705,   721,     0,   722,     0,  1507,     0,   739,
     603,     0,   744,   908,     0,     0,   659,   612,     0,   605,
     611,   611,     0,   713,     0,   720,     0,   724,     0,   735,
     681,     0,     0,     0,   660,   617,   615,   605,   605,     0,
     706,   723,   747,   746,   740,     0,   887,   671,   653,   615,
     615,   668,     0,   651,   652,   743,   737
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4825, -4825, -4825,  3588, -4825,  2787, -4825, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825,  -862,   603,  2908, -4825, -1087,
   -4825, -4825, -4825, -4825, -3704, -4825,  1140, -4825,  -414, -4825,
   -4825,  1327, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  3532,
   -4825, -4825,  1755, -2549, -4825, -4825,   155,  3492, -1201,   149,
    3149,  1437, -4825, -1065, -4825, -4825,  -595,   150, -4825,  3519,
     965, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -4825,  -813,
   -1972,  1240,  3167, -4314, -4825, -4825, -1335, -3333, -4825,   569,
    -374, -4825, -2289, -1350, -4825, -4825, -4825,  1858, -4825, -4825,
   -4825,  1057, -4825,   468,  -651, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825,  -412, -4825, -4825,  -804,     7,    34, -2550,  -462,
   -4825, -4825,   412,  -463, -3501, -1214, -4825, -3662, -4825, -4825,
     -88, -4825, -4360, -4825,  -441, -1325,  1368, -4825,  -704, -1085,
    1686, -4825,  -334,  -874, -4825,  -272, -4825,  -954,  -805,  -802,
    -901,  -677, -3886, -4375, -3919, -3833,  1377,  -319, -3130, -4399,
   -4824, -4825, -3702, -4825, -4182, -4825, -4195, -3625, -2314, -3562,
    -292,  1231, -2948,   650, -4825, -3715, -3089, -4825, -4130,   609,
   -4825, -1149,  -307, -4825, -4825, -4825, -4825, -1069, -4137, -4825,
   -4825, -4825, -3825,   184, -4825, -3282, -4825, -4825, -4825, -4825,
   -1006, -4825, -4825, -4825, -4825, -1094, -1048, -4825, -4825, -4825,
   -1147, -4825, -4825,  -656, -4825, -4825, -1090, -4825, -4825, -1175,
   -4825, -4825,   185, -4825, -4825,   186,   190, -4825, -4825, -1423,
   -1337, -4825,  -793, -4825, -4825, -4825, -3033, -4825, -4825, -4825,
   -4825,   109, -4825, -4825, -4825, -4825,   477, -4825, -4825, -4825,
   -4825, -4825, -4825, -2188,  1854,  1855, -4825, -4825, -3308, -4825,
    -873, -4825,   654, -3080,  1300, -4825, -4825, -4825,  2909, -4825,
   -4825, -4825, -4825, -4825, -4825, -1495, -4825, -4825,   191, -4825,
    1866,  1066, -4825, -4825, -4825,  -915, -1115, -1003, -4825, -3087,
   -4825, -4825, -4825, -4825,  -368, -4825, -4825, -4825, -4825, -4825,
   -4825, -4825,  -891, -4825,  1128, -3727, -4825, -4825,   442, -4825,
   -4825, -4825, -4825, -4825,  -847,  -295,  2938, -4825,  -712,  -821,
   -4825, -4825, -4825,  -293, -4825, -4825, -4825, -4825, -4825, -4825,
   -1023,   -97, -1479, -4825, -4825, -4825, -4825, -2435, -4825, -4825,
   -4825, -2173, -4825,  4487,  2301,   580,   193, -4825,   -16,    96,
    3413, -1055, -2733,   409,  -479, -4825, -1660, -4825, -4825, -4825,
   -2633, -4825, -4825, -4825, -4825, -3601,   195, -4825,  3407, -4825,
     457, -4825, -4631, -4100, -4387, -4678, -3588, -4825, -4825, -1027,
   -4825, -4825, -4825, -1317,  2188, -1238, -4825, -2283,   453,  1479,
    -955, -2832, -3903,  -658, -3365, -4825, -3846,  -619, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -1007,  -599, -4825, -4825,  3872,
   -4825, -4498, -4825, -4825, -4825, -4825,  1160, -4825, -4825, -4825,
   -1322,  1229, -4825, -4825, -4825, -4825, -4825,  -842, -1001, -4825,
   -4825, -4825,   197, -4825, -4825, -4825, -4825,  2367,  -879,  -698,
    3746,   198, -4717, -4825, -4825, -4825, -4825, -3237, -4825, -4825,
   -4825, -4825, -4825, -4825, -4825, -4825,  -951, -4825, -4825, -4825,
   -4825, -4825, -4825, -4825,  2269,  2267,    64,    11, -4825, -4825,
   -4825, -1163, -4825,  -848,  3478, -4825,  2866, -4825, -4825, -4825,
   -4825,  1549,   199,   492, -4825, -4825,  -940,     2, -4825, -4825,
     274, -3497,     3, -4825, -4825, -4825, -4825, -2271, -4825,     6,
   -4825,   819, -4825, -4825, -2871, -4825,   200,    21, -4825, -4825,
       1, -4825,    29,   -36,   -19,   -13,     4,  3739,  3263, -4825,
   -4825, -4825,    44,  1798, -4825,  -806,  -149,  -617,  1557,  -594,
    2234,  3245,  3244, -4825,  1550,  2270, -2092, -2101, -4825, -4825,
    -743,  -622, -4825,  -529,  2248, -4825,  3254, -4825, -4825, -4825,
    1539,  1553, -3492,   905, -3503, -3459,   348,   338, -1617,  -397,
      66,  3791,  1076,   913,  -588, -4825, -4825,  -586, -4699,   856,
   -4825, -4474, -2414,   515, -3637,  1975, -1487, -4825, -4825, -1083,
   12783, -4825, -4825, -4825, 13000, 13934, -4825, -4825, 14780, 15127,
   -4825,  -781,   961, 15136,  9952, -1108, -1751,  -919, 13046, -2624,
    -941, -4825, -4825, -2831, -4825, -3630, -2703, -4825, -4825, -4825,
    -360,   977,   676, -4825, -4825, -4825, -4825, -4825, -4825,  -711,
   -4825,  -710, -4825, -4825, -4825,  -695, -4011,  -782, -1716, -4825,
    -185, -4825, 16626,  1605, -4825,  -934, -2836, -2808, -3502, -4825,
   -1630, -4825, -4825, -4825, -4825, -4825, -4825, -4825, -1588, -3370,
    -406,  1682, -4825, -4825,  1787, -4825, -4825, -4825, -4825, -4825,
     991, -4825, -4825, -1218,  -811, -2710,  1696, -2133, -4825,  -807,
   -4825,   916,  2496,  -762,  1237, -1219, 13109,  -507, -2423, -1159,
   -1426, -4825,   216, -3594,   -21,    -2,    18,  -530,  -641,    10,
    3617,  5895,  -645, -1167,  7776, -4825, -4825, -4219,  3412, 10072,
   11244, -3297
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    50,    51,    52,    53,  2573,  3336,    54,    55,    56,
      57,    58,  3327,  3328,    59,  1336,  2637,  2508,  3255,  3412,
    3413,  3257,  3886,  4424,  3887,  4814,  3883,  4420,  4421,    60,
      61,  1426,    62,    63,    64,    65,    66,    67,    68,  1352,
      69,    70,   991,  1582,  2647,    71,  2351,   783,   784,   785,
    2159,  2160,  2579,  2161,  2149,  1245,  1678,  1377,   758,   759,
    1338,  1378,    73,    74,  1239,  2140,    75,    76,    77,  1408,
    1409,  1346,  1628,  4456,  5208,  3205,  2479,  3451,  3206,  3207,
    4787,  4785,  3815,  2470,  1410,    78,  1476,  1477,    79,    80,
    3360,  1523,  5408,  2606,  3954,  3955,  4494,   604,  2603,  4834,
    4835,  4477,  4478,  4841,  5077,  5078,   696,  1578,  3445,  4049,
    3402,  4562,  3403,  4563,  3404,  3405,  4564,  3388,  4004,  4760,
    4005,  4006,  3406,  4539,  5111,  3407,  2366,  5241,  1099,  1700,
    1698,  4372,  4373,  5098,  4292,  4293,  5309,  5246,  5247,  5248,
    5415,  4569,  3449,  4055,  4572,  4867,  3075,  3848,  2480,  4561,
    5041,  5042,  3810,  5544,  4350,  5584,  4380,  4332,  4333,  4334,
    5018,  3155,  3156,  3807,  3805,  3157,  3158,  4342,  4343,  3159,
    4390,  5586,  4382,  5587,  5588,  4383,  4384,  5266,  4894,  5546,
    5506,  5507,  5508,   697,  1604,  3527,    83,   638,  1608,  5276,
    5427,  5479,  5483,  5526,  5527,  5528,  5529,  5532,  5573,  5604,
    5605,  4908,  4909,  4910,  4911,  5337,  5338,  5610,  5611,  5578,
    5574,  5612,   698,  2687,   639,   699,  2649,    87,  2678,  1446,
    1447,  2516,  3977,  3508,    88,  1014,  3774,  4924,  5150,  5151,
      89,   221,    90,  1586,    91,    92,  2633,  3394,    93,  2383,
    3092,    94,    95,  3119,  3120,  3121,    96,    97,  3813,  4757,
    1411,  3193,  3194,  3195,  3196,  3837,    98,  1584,  1452,  2656,
      99,   100,   101,   102,   103,  2562,   104,   105,  2650,  1594,
    2668,  2669,  4551,  4885,  5120,  4887,  5470,  5471,  4859,  3753,
    4306,   107,   108,  4532,  4533,  5253,   109,  2381,   110,   111,
     112,   640,  1562,  2625,  2626,  3978,  2690,  3456,  3457,  4037,
    4038,   113,  3301,   114,  4403,  4404,   641,  5256,  5220,  5330,
     115,   116,  4407,  4408,   117,   118,   119,   120,   121,   690,
    1064,  1065,  1328,   122,  2264,   123,   965,  3351,   124,  1130,
    2814,  4612,   125,   722,  1079,  1080,  2651,   127,   731,  2792,
     733,  1714,  3510,  3511,  4110,  2760,   871,   128,   129,  2772,
    2795,   130,  1339,  2357,  2358,  4287,  2652,   642,  1613,  2693,
    3070,  5141,  4294,  4715,  4775,  2996,  3705,   132,   643,  1382,
    2433,  2696,  3462,  2329,  2330,  2964,  4074,  2332,  3464,  2333,
    1322,  2334,  3469,  3470,  3471,  4070,  4078,  4918,  4919,   133,
    1380,  2431,   134,   135,   136,  1423,   896,   137,   655,   656,
     138,  5091,   139,  1026,   140,   750,  1728,   141,   142,   143,
    2450,  3821,   144,   145,   146,  5435,  5485,  5486,  5487,  4083,
    5374,   147,  5437,  1109,   149,   150,   151,   188,   930,   931,
     932,  2653,  4906,   153,   154,  2629,  3387,  3986,   155,   156,
    2352,  3060,   157,   158,   159,   160,  5550,   161,   162,   163,
     164,  1500,   165,  1275,  1276,   166,   167,   599,  1295,   801,
    1279,  1287,   168,   701,  1070,  1073,  1074,  1075,  1680,   169,
    1112,  2783,   702,  1067,   171,  5428,  5429,   703,  3023,  3716,
    3717,  3720,   704,  3020,   174,  1720,  2777,  2780,  3523,   705,
    3027,  3028,  3029,  3030,  3031,  3722,   706,   724,  1017,  2702,
     707,   178,  1207,   180,   181,   182,   812,   805,   806,   184,
    2133,  2954,   739,  1299,   771,   820,  3690,  2284,  2285,  2309,
    2310,  1308,  1309,  2297,  2301,  2302,  3009,  3002,  2290,  4251,
    4983,  4984,  4689,  2305,  2306,  1311,  1312,  1313,  2314,   185,
    2957,  3671,  3672,  3673,  4228,  4229,  4243,  4239,  4676,  4970,
    3674,  1107,  1319,  3675,  4960,  4961,  5167,  4246,  3682,  3714,
    3434,  3435,  3436,  2335,  3163,  2612,  1547,  1208,  1548,  2623,
    1209,  1764,  1550,  1210,  1211,  1212,  1553,  1213,  1214,  1215,
    1216,  1747,  1812,  1217,  1218,  1784,  2620,  2621,  1669,  2854,
    1220,  3595,  2865,  1221,  1222,  3677,  1223,  4181,  4639,  4627,
    2883,  2884,  2156,  4177,  3611,  2129,  2944,  4988,  5184,  5185,
    3657,  4211,  4660,  4959,  5293,  5379,  5380,  5449,  1224,  2941,
    2122,   898,  1225,  3980,  2124,  2876,  2966,  2967,  1723,  4352,
    1745,  2820,  2838,  2839,  2851,  3568,  2858,  2863,  3591,  3592,
    2877,  2910,  1226,  2823,  2824,  3548,  3551,  1749,  1227,  3620,
    3621,  4186,  1228,  1268,  1269,  1742,  2905,  1282,  1283,   803,
    1229,  1230,  1231,  1715,   794,  4966,  2274,   860,  3232,  2255,
     934,   736,  1232,  1233,  1234,  1235,  1037,  1490,  1038,  1416,
     595,   854,   875,  3197,   596,  2125,  2126,  3160,  3161,   597,
     856,  2260
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     725,   177,   172,   173,   183,   725,   175,    81,  1635,  1020,
    1677,  1240,  1697,   811,   657,  2365,  1639,  1314,   763,   897,
     987,  1320,   737,  1566,   183,  1100,  1101,   725,   593,   179,
    1105,   726,   821,  1451,  1047,   647,   726,  1645,  2449,  1428,
     605,  2457,  1323,  3016,  1059,  2761,   637,  3038,  3040,   179,
    1076,  2261,  1498,  2481,  2609,  2483,  1481,  2487,   809,  1018,
    3530,  2856,  2443,  2898,  2434,  3803,  2473,  2273,  1625,  2458,
    1735,  1758,  1759,  2581,  1044,  3234,  1786,  3814,   810,  2622,
    3982,  3845,  1254,  2331,   700,  3780,  3401,   796,  4013,  1415,
    1774,  4033,  1445,   857,   859,  3420,  1576,   863,  1460,   865,
    2256,  4344,  2673,   973,  4077,  2261,  1596,  1486,   793,  2528,
    3832,  1564,  3834,  2819,  4264,  1569,  4370,  4295,   732,   915,
    1573,  4060,   921,  3683,  3684,  3676,   689,  1579,  2542,  2543,
     764,  1020,  1670,  2281,  4381,  3298,  2538,  1598,  2984,  3514,
    4198,  4576,  4289,  2331,  3987,  3988,  3989,  3990,  3991,  3992,
      72,  4354,  3154,  3685,  4754,  3721,  1028,  4530,  4777,  3166,
    2256,  4047,  4751,  4567,   823,  2732,  3356,  3166,  2343,  2424,
     824,  4587,  4242,  2442,  4351,  4341,  4913,  4225,   815,  2679,
    4423,  1247,   757,  3624,    82,    84,    85,  2694,  3676,   790,
      86,   106,  4898,   126,   782,   131,  4716,   148,   152,   170,
     176,  3014,  3727,  4336,  4336,  4336,  4336,  3804,  3011,  4974,
    4746,  4976,   822,  1379,  4907,  4240,  3415,  4268,   874,  5211,
    5212,  4156,  1671,  5146,   901, -1887,  1307, -2381,  3570,  3571,
     708,   653,   603,  3586,  4739,   918,  4337,  4339,  2613, -2421,
    1595,  1565, -2274,  4714, -2451,  5491,  2262,  1810, -1887, -2485,
   -2274,     3,     4,  3678,  3329, -1897,  4158,  5219,  4336, -2275,
    4068,  2670,  2794,  1521,  1626, -2945, -1897, -2275, -1882, -1854,
    4016,  1349,  1807, -2945,  1126,  3528,  1560,   653,   911,  1491,
    3630,  3631,  1679, -2302,  5142,  1718,  5542, -1867,  5016, -2384,
    4388,  1310,   708, -2248,  -469,  3485,  3398,  3487,   708, -1894,
     653, -1887,  2956,   653,   923,  1081,  2614,   653,   653,   653,
    3572,  1085,   799,  2549,  1000,  3201,  3678,  1817,  2459,  1256,
    5492, -1882,  3726,  4723,  2554,  5194,  5195,   869,  5003,  5004,
    1626,  5461,  4376,  1412,  4577,  2371,  1626, -2245,   708,  5607,
     708,  1349,  2268,  1340,  3086,   653,  3289,  3210,  4379,  2556,
    2682,  1626,  1513,   808,  1096,  3149,  1491,  2903,   708,  5092,
     653,  2903,  1751,  1752,  4016,  2304,  3202,  2615,  1565,  3515,
    2616,  5010,  1854,  3358,  1350,  1498,  1244,  2447,  1271,  3290,
    1272,   714,  -157,  5160,  4440,  5148,  1591,  -157,  1771,  2146,
    1412,   653,  1565,   714,  2627,   708,  1808,  5493,   714,  5258,
    4901,   715,  5237,   714,  1646,   852,  1592,  4007,  3291,   205,
    1030,  1565,  4902,   715,  2947,   872,  1491,  1020,   715,  1565,
    5466,  4115,  2671,   715,  3127,  2137, -2449,  3073,  2771,  5444,
    1020,  3128,  1781,  3073,   897,  2645,  1786,   714,  2993,  3519,
    2419,  3061,   818,   714,  1350,  5274,  1341,  1324,  1758,  1759,
    1817,  5033,   653,  3203,  2593,  4719,  1774,   715,  2154,  2150,
     653,  2617,  1716,   715,  2162,  2162,  3293,  1665,  2452,  3295,
    1431,  1600,  1725,  2263,  4846,  2268,  4855,  3167,  1249,  4847,
    1325,  2588,  1817,  2756,  1020,  1736,  3572,  2762,   897,  2764,
    2147,  2489,  2767,   598,  2769,  3294,   708,  2155,  3296,  2142,
    4282,  5176,  3214,  1432,  4856,  1854,  2592,  2268,  3520,  1326,
    2646,   971,  5071,  3062,  2594,   974,  3225,  1782,  2994,  2453,
   -2129,  1627,  4848,  2938,  2816,  5131,  2420, -2129,  5275,  1257,
    2939,  1663,   997,  1783,  1739,  1637,  5149,  1854,  3339,  4441,
    2403,  5238,  1031,  2408,  5358,  2448,  3982,  2584,   708,  3074,
    2773,  4508,  1637,  5012,  1593,  3749,   654,  5038,  1060,  5445,
    2618,  5509,  5467,  4116,  2557,  2410,  5161,  3516,  5615,  4833,
    3801,  4903,  1517,  3889,  2856,  2418,  3439,  1097,  1536,  2533,
    2524, -2145,  2526,  3359,   870,  1561,  1266,  1627, -2145,  1616,
    2261,  5236,  1267,  1627,  1342,  3332,  5589,  3204,  2460,   966,
    5017,  1561,  2148,  5644,  1020,  4724,  2496,  2683,  1627,   924,
    2461,  2749,  1020,  1020,  1637,  1746,  1422,  3333,  2580,  1001,
    3802,  1273,  2372,  1719,  3087,  1383,  4735,  1343,  3334,  5391,
    1561,  3335,  1104,  1104,  4381,   982, -2449,  1351,  1746,   989,
    2672,  2514,  5494,  2736,  2517,  2518,  3746,  2619,  5370,  4069,
     999,  2555,  1019,   657,  2144,  2691,  1344,  1781,  1258,   811,
    3723,  2462,  2901,  4299,  5608,   800, -3016,  2550,  1781,  2774,
    3215,  3572,  4008,  2904,  1315,  1122,  4159,  3644,  1719,  4780,
    2757,  1266,  4864,  4900,  4776,  2604,  2605,  1267,   725,  2768,
     725,  -736,   725,  3688,  4546,  4649,    49,  1811,   725,  1092,
    1093,  2531,  3549, -2348,  5468,  4737,  4738,  4328,  3572,   964,
    4377,  1077,  4808,  1274,  1345,  4341,  2589,  1561,  4242,  1078,
    2315,  1083,  2430,  1087,   810,  1667,  3960,  1068, -1887,  1091,
    5268,  3101,  5014,  5484,  4555,  5398,  4336,  4336, -2381,  4673,
    1110,  4921,  1782,  4677,  1094, -2274,  4336,  4504,  1751,  1752,
   -2421, -1887,  4336,  1782,  3729, -2451,  3730,  1771,  1783,  1072,
   -2485,  4666, -2275,  1127,  3982, -2449,   897,  4618, -2945,  1785,
    1237, -1882,  1757,  1246,  1019,  1248,   884,  4575,  4907,  4702,
     720,   721, -2449,  1335,  4752,  2316,   720,   721,  1420,  1421,
    1763,  1637,  1266,   823, -2302,  5636, -2248,  4109,  1267,   824,
   -2384,  3584, -1894,  1813,  5307,  1106,  2135,  2815,  2121,  2818,
    2971,  4742,  4744,  5649,  5650,   177,   172,   173,   183,  2826,
     175,    81,  5383,  2830,  2740,  2503,  1413,  1414,   720,   721,
   -2366,  2842,  2843,  2742,   648,  3676,  2855, -2129,  3676,  2609,
    2940,   822,  3340,   179,  2860,  2862,   720,   721,  4379,  2775,
    3129,  2881,   926,  3130, -3015,  3574,  2878,  3045,  3796,  5209,
    3993,   725,  1106,  1061,  1277,  4998,  2891,  2776,  1520,  4495,
    4029,  5363,  5006, -2492,  1023,  -157,  -157,  1518,  3890,  5105,
    4258, -2450,  2445,  1413,  1414,  1035,  5007,  5359,  1574,  1575,
    4051,  2536, -3016,  1318,  5205,  3321,   978,  5191, -2145,  4280,
    3708,  2684,  2685,  4386,  3996,  5342,  5063,  3941,  3011,   653,
    3944,  3945,  1611,  3776,  3948,  3517,  3676,  4560,  2447,  2261,
    3951,  2831,  3216,   653,  3946,  3947,  3217,  5106,   653,  1243,
    3864,  3391,  3781,  1251,  1353,  5107,  1356,  5372,  2118,  2119,
    2120,  2121,  2945,   927,  1641,  1643,  3442,  2765,  2766,  4139,
    2445,  1032,  4144,  4145,  4146,  4147,  4148,  4149,  4150,  4151,
    4152,  4153,  5108,  3678,    72,  4405,  3678,  5264,  2116,  2117,
    2118,  2119,  2120,  2121,  3581,  3582,  3583,  3584,  3329,  5129,
    2822, -1735,  2758,  3398,  5510,  5424,  2447,   928,  2846,  2847,
    5511,   653,  5067,  3114,  1808,  2713,  1506,  3099,    82,    84,
      85,   653,  4557,  2682,    86,   106,  2724,   126,  4271,   131,
    1337,   148,   152,   170,   176,  2447,  5512,  2832,  2731,  4376,
    4200,  4201,  4108,   653,  5475,  3700,  2664,  4510,  1076,  5322,
    5323,  5096,  3021,  3865,  3131,  5109,  5066,   929,  4962,   186,
     825,  4862,  3149,  5034,  3678,  2721,  4000,  3322,  3323,  3324,
    2447,  4590,  5327,  3843,   725,  1135,   757,  1455,  3572,  3149,
    1019,  4357,  3398,   818,  4381,  3042,  4406,  1743,  2373,  3115,
    3844,    49,  1470,  1019,   183,  2138,  1465,  5504,  1471,  5043,
    5044,   187,  4295,  4001,  3124,  2833,  2448,  1637,   649,  3283,
    3264,  3884,  3037,  5068,  3979,  3284,  3392,  4002,  3399,   179,
    4512,  1683,  5373,  1685,  2665,  1687,  1721,  1689,  5061,  1691,
    1692,  1693,  5328,  3518,  1466,  2990,  1695,  2991,   826,  5029,
    3132,  4940, -1037,  1617,  2708,  5025,  5265,  1019,  2359,  4109,
    1135,  5362,  3398,  3572,    38,  2946,  2856,  2856,   650,  2139,
    3777,  2856,  4336,  2986,  2472,  2360,  2834,  4336,  3885,  2835,
    3350, -1037,  1502,   979,  2448, -1854,  4336,  3579,  3580,  3581,
    3582,  3583,  3584,  1508,    42,  5192,  1744,  4964,  5581,   651,
     811,   652,  3230,  5197,  3393,  1472,  2849,  2256,  2537,  4003,
    5343,  3866,  4967,  2448,  4075,  3052,  1761,  4971,  2856,  2856,
    4973,  3149,  3285,  1618,  3579,  3580,  3581,  3582,  3583,  3584,
    2986,  2361,    46,  4709,  5110,  4358,  1809,  3781,  1033,   600,
    5214,  5630,  5270,  2759,  3867,    47,  1814,  1789,  2448,  2362,
    3118,  3693,  4077,  4889,  1610,  3146,  5426,  1614,  2424, -1854,
    2136,   725,  3877,  1778,  1587,  1805,   725,   725,  5262,   897,
    2836,  5280,  3574,  3868,  1619,  5411,  3123,  1019,  3325,  3326,
    2152,  2153,    38,  1507,  3100,  1019,  1019,  3801,  1497,  4558,
    4882,   887,   888,   889,  4611,   890,   891,   892,   893,   894,
     895,  1467,  1588,  4758,  3801,  2469,  2613,  4892,  4379,  5040,
    2282,  2283,    42,  2287,  2359,  4295,   824,   824,  2666,   824,
    2267,  1082,  1084,  1086,  4781,  4782,  1088,  1089,  1090,  2466,
    3330,  2667,  3331,  2447,  3575,  3208,  1095,  3802,  4359,  2445,
    2523,  4360,  2445,  3043,  4252,   827,  3044,  3574,    49,  3332,
      46,  3212,  1011,  1473,  3802,  1817,  2447,  2447,   822,   822,
    1327,   822,  1303,    47,  4526,  1620,  5582,   725,  5503,  2837,
    3286,  3333,  2528,   693,  2614,  2447,   746,   725,  2447,  3003,
    2268,  2363,  3334,  4021,  2920,  3335,  1474,  2361,  2486,  1468,
     653,  2484,    14,  5616,  5442,  3962,   769,  5541,  2544,  2545,
    2546,  2547,  4523,  3287,  4400,  2362,  2445,  5360,  3463,  3575,
    1854,  2373,  1318,  1318,  2445,  1475, -1854,  1297,  1621,  1103,
    1653,  1637,  1092,  1093,  5189,    19,  5634,  4377,  2574,  4341,
    3676,  1305,  3288,  4701,  3676,  2615,  3801,  1816,  2616,  2447,
    1817,  4686,  2447,   725,  2590,  2591,   725,   725,  5576,  2640,
    2447,  3256,  2600,  4869,  4378,   747,  3963,  5639,  1654,  1589,
    4336,  2575,  1817,  5412,  5371,  2268,  3022,  5155,   881,  1495,
    5423,  1837,  2288,  2485,  4258,  4560,   905,  2364,  2532,  4693,
    5432,  2331,  2788,   816,  5648,   920,  3802,  2331,  2595,   897,
     770,  2401,  3769,  2624,  3389,  1854,  5267,  5653,  5654,  1622,
    3808,  2448,  2472,  3982,  4527,  4401,  4283,  2753,  3256,  5535,
    5173,  1298,  2921,  1012,  4605,  1546,  2922,  1854,   725,  4524,
    2659,  2660,  2661,  2662,  2448,  2448,  2596,  2563,   738,  2617,
    3770,  3635,  5413,  3636,  4022,  5476,   926,  2363,  4471,  1930,
    1931,  3213,   817,  2448,  4474,  4475,  2448,  1590,  2374,  3809,
    2617,  2607,  2641,  2535,  2923,  5414,  2448,  3637,  3678,  2368,
    1135,  4870,  3678,  3572,  2289,  4962,  4365,  1104,  1013,  3374,
    3505,  5210,  5040,  5040,  3579,  3580,  3581,  3582,  3583,  3584,
    5217,  3015,  2726,  4525,  5222,  5223,  3728,    30,  1963,   745,
    3979,  2730,  3045,  2568,  3114,  4402,  5577,  4646,  4647,  5113,
    2737,  1135,  4079,  1914,  3572,  5117,  1337,  2448,  5242,  1337,
    2448,  2654,   818,    38,  3211,  1655,  3795,  3892,  2448,  2648,
     897,  4191,  4277,  1496,  1930,  1931,  2375,   927,  2618,  2644,
    1637,   748,   749,  2364,  1425,  3229,  5311,  5312,  3896,   744,
    1623,  3181,  2367,    42,  3816,  2563, -3016, -3016, -1854,  3579,
    3580,  3581,  3582,  3583,  3584,  3145,  1722,  4554,  1337, -1854,
     791,  3638,  1337,  1757, -1854,  1327,  3639, -1854,  2377,  2368,
    3115,   928,  2686,  1963,  5134,  4284,  2754,  2924,  2378,  4295,
    4080,    46,  5135,  2597,  3292,  2714,  2269,  3771,  1682,  3379,
    -843,  1684,  3182,  1686,    47,  1688,  4355,  1690,  4593,  3926,
    4594,  1694,  4320,  1656,  4285,  2755,   183,  3793,  2563,   601,
    4393,  1257,  5547,  3542,  3482,   183,   926,  4620,  2445,  4621,
    2739,   929,  3483,  4286,  5243,   768,  3573,  2446,  1781,   819,
    3263,   179,  1425,  2743,  2501,  2744,   813,  2745,  3380,  2746,
     179,  2747,  3608,   765,  3488,  2748,   802,  3574,  2791,  3616,
    2445,  5590,  3276,  3265,  2447,  2787,  2784,  2785,   183,  2454,
    2786,  3268,  1427,  3270,  2828,  2829,  -199,  1072,  1253,  3965,
    3794,  2598,  2841,   616,  3361,  3772,  2844,  2845,   907,  2911,
    3478,  2912,  1397,   179,  3316,  3640,  2455,  2906,  3574,  5244,
    2840,  -199,  2868,   186,  2869,  3641,  2502,    49,  3425,  3426,
    3427,  3428,  5094,   908,  5558,  2913,  2369,   927,  3979,  3575,
    3433,  2864,  5257,  1782,  3438,  2778,   814,  4081,  3381,  3382,
    2896,  3118,  2897,  2379,  3105,  3142,  2331,   186,  5559,  3817,
    3458,   618,  3383,  5454,  3183,   187,  2331,  3473,  5136,   179,
    1258,  2116,  2117,  2118,  2119,  2120,  2121,  3696,  5560,   828,
    3575,   928,  4622,  3792,  3818,  5180,  2380,  1122,  5585,  2790,
    1480,  1769,  1770,  2617,  -199,  1335,   933,  3676,  5561,   187,
    2705,   967,  3057,  3676,  5602,  3741,  4105,  4082,  3676,  2813,
    2711,  3676,  3384,  5562,  1800,  3184,  4232,  2856,  5118,  -199,
    2856,  2856,  2856,  2856,  2856,  2856,  2856,  2856,  2856,  2856,
     793,   929,   609,  4931,  2914,   862,  5433,    27,   616,  2915,
    -492,  3676,  4720,  5619,  2916,    27,  5119,  3545,  4727,  4728,
    5147,   653,  2448,   864,  2856,   708,  2116,  2117,  2118,  2119,
    2120,  2121,  2331,  5585,  5336,  3894,  5020,  4381,  5021,  2291,
     868,  2855,  2855,  1434,  4126,  4077,  2855,    38,  5637,  5638,
    5198,   872,  1303,  2576,  2456,    38,  4233,  2528,  2856,  2856,
    5552,  -736,    33,  1335,  5563,  2577,   618,  2500,  3602,  3385,
    2519,  3386,   625,  2909,   626,  5369,  4721,    42,  1781,  2292,
    3310,  5206,  3897,   616,  4234,    42,  1471,  2505,    38,  2578,
    1435,  4875,  3374,  2855,  2855,  3678,    38,  1577,  3895,  4235,
    3507,  3678, -1191,  4994,  3633,  4996,  3678,  5564,  5553,  3678,
    4137,  4236,  4391,  -492,  3454,    46,  4872,  1117,    42,  3752,
    4505,  1305,   882,    46,  3114,  4937,    42,  3240,  4881,  4560,
    4099,   616,  4876,  2917,  4157,   883,    47,  4237,  4891,  3678,
    1241,   618,  1807,  2918,   913,  3576,  3577,  3578,  2585,  3579,
    3580,  3581,  3582,  3583,  3584,  2353,    46,  4954,  4955,  1264,
    1266,  1306,  2291,  1782,    46,  2354,  1267,  4831,  4832,    47,
    1436,  5291,  5583,  2294,  5419,  4392,   925,    47,  1816,  1785,
    2355,  1817,  1296,  1472,  1020,  3421,  3576,  3577,  3578,   618,
    3579,  3580,  3581,  3582,  3583,  3584,  -751,  5292,  2520,   968,
    3115,  1816,  2292,  2521,  1817, -1674,  2268,   625,  3543,   626,
    1397,  2630,  1837,  4238,  3676,  3544,  2490, -1674,  1437,  1020,
    1448,   708, -1674,  1438,  2295,  4140,  1002,  4141,  3768,  2268,
    3116,    49,  1577,  2527,  3474,  1837,  1854,  3012,  3013,    49,
    5314,  2519,  4052,  3993,   970,  4056,  5284,  5583,  5040,  3994,
    1419,  4379,  1672,  1449,  2293,  1673,  1003,  5565,  1332,  1854,
    3995,   972,  1440,  3117, -1674,  2474,  5040,  5040,  3760,  3496,
    4560,  3676,  5434,  5566,   714,  2707,  3703,  3704,  4233,  2972,
      49, -1435,   625, -1435,   626,  1004, -1674,  3996,  1817,  3997,
    3689,  1333,  1303,   628,   715,    33,  2294,  1304,  1660,  4442,
    2265,  1442,  4458,  2266,   630,  4302,  4234,  1577,  4759,   975,
    2162,   653,  2642,  2268,  2475,   708,  2476,  2356,  1661,  4443,
    1334,  4679,  4459,  3632,  2464,  1816, -1674,  5567,  1817,  1005,
     625,  2674,   626,  4236, -1674,   980,  1444,   981,   897,  2627,
    1910,  2477,  3678,  1854,  1914,   988,  1572,  2295,  1450,  4502,
    4142,  3118,  5393,  2268,   983,   631,   984,  3430,  1429,  1837,
    4143,  1305,  3431, -3016,  3998,  1930,  1931,  1914,  4302,  2520,
    1602,  1605,  1606,  1478,  2521,  1482,     3,     4,  3782,  1329,
    4303,  1266,  1939,  1854,  4232, -2248,  1002,  1267,  1930,  1931,
    3706,  2478,  3983,  4755,  1335,   708,   995,  3431,  4756,  3678,
    1006,  1306,  3691,  2337,  3982, -3016,  1729,  1730,  3010,  3010,
    2856,  5239,  1330,  3861,  1963,  4104,  1003,  2472,  -750,  3095,
    3096,  3097,  1008,  4560,  3999,  3820,  4317,  2269,  3107,  4000,
    3109,  1007,  3111,  3112,   693,  4238,  2338,  1963,  4304,  3785,
    4305,  1331,  1009,  4303,  5154,  4031,  3862,  3643,  1010,  3024,
    2269, -1674,   723,    14,  4233,  4300,  3650,   723,  1020,  1025,
    1277, -1673,  2899,  1029,  3676,  2339,  4001,   816,  3063,  1241,
    3066,  1461,  1039, -1673,  4034,  3863,  4560,   179, -1673, -1709,
    4002,  2700,  4234,  2701, -1709,  4044,    19, -3016,  3049,  1005,
   -1708,  1914,  1241,  3053,  1040, -1708,  3056,  4235,  1045,  5496,
    5628,  4304,   222,  4305,  1462,  2025,  1054,   602,  1463,  4236,
    3733,  3242,  1930,  1931,  3658,   691,  3659,  1757,  3079,  2344,
   -1673,  2506,  2317,  2318,  2509,  5072,   817,  3408, -3016, -3016,
    4279,  2270,   766,  1464,  2271,  4237,  2816,  1757,  1135,  2344,
    2738,  3572, -1673,  2739,  1757,  3857,  1327,  3924, -1709,  1248,
    3738,  3739,  5013,  2750,  4968,  3266,  2751,  5019,  4192, -1708,
    1062,  1963,  4003,  3133,  4932,  4933,  4934,  4935,  4645,  3935,
    3936, -1730, -1730,  2559,  2269,  4173,  1020,  2566,  3676,  3964,
    3966,  3967, -1673,  3141,  3243,  5114,  2752,  1066, -1709,  2751,
   -1673,  4321,  3678,  5011,  1069,  3601,   818,  3603,  3604, -1708,
    2885,  3122,   708,  2888,  4118,  2856,  2856,  1757,  1098,  2344,
    4560,  4238,  4356,  4361,  2525,  2781,  3198,  3979,  2782,  3344,
    4160,  4161,  3447,  2331,  3448,   725,  3759,  3353,  5620,  5621,
    2166,  1102,  3354,   725,  3245,   725,  1108,  2985,  2816,  4122,
    2986,  3139,  3236,  1111,  3140,  3237,  1114,  3375,    30,  1113,
    3376,  2474, -3016,  1119,  3660,  3241,  3661,  1120,  4009,  3259,
    2278,  2280,  1121,  4394, -3016, -3016,  1122,  2116,  2117,  2118,
    2119,  2120,  2121,  1123,    38,  5064,  1135,  3271,  4043,  3572,
    3499,  3541,  3409,  2751,  2739,  4969,  3553,  3246,  3281,  2739,
    2116,  2117,  2118,  2119,  2120,  2121,  4651,  4497,  1124,  4498,
    2475,  3305,  2476,  5390,    42,  1128,  3678, -1673,  4121,  4783,
    1125,  4784,  3313,   819,  3557,  3444,  5533,  2739,  5534,  3320,
    1816,  3352,  1290,  1817, -1660,  3574,  1129,  2477,  3373,  3352,
    3093,  3561,  3562,  3588,  2739,  2739,  2739,   872,  3880,  1131,
    1828,  3607,    46,  2539,  2739,  1300,   694,  1302,  2268,  4678,
    3484,  4681,  3486,  2438,  1837,    47,  3613,  1252,  2569,  3614,
    2463,  1255,  2855,  1259,  5143,  2855,  2855,  2855,  2855,  2855,
    2855,  2855,  2855,  2855,  2855,  3374,  3622,  2478,  1854,  2739,
    2474,  3835,  3247,  1260,  3836,  3841,  3424,  3575,  3842,  3125,
   -1734, -1734,  1261,  4297,  4298,  2474,  1278,  2510,  1285,  4171,
    2513,  4166,  1265,  2472,  3231,  3208,  1286,  4371,  1288,  3422,
    4062,  1289,  3443,  4063,  2116,  2117,  2118,  2119,  2120,  2121,
    3459,  3410, -1733, -1733,  1290,  4640,  2474,  1019,  1291,  2475,
   -2559,  2476,  4066,  2855,  2855,  4067,  2548,  1301,  1316,  1317,
     179,  2474,  3242,  4027,  2475,  4422,  2476,  3540,  4127,  4167,
    2567,  2739,  4168,  4565,  1327,  1321,  2477,  3893,   695,  1348,
    3411,  4178,  1019,  3574,  4179,  1354,  4194,  1385,  2583,  2739,
     897,  2477,   725,  1381,  4123,  2475,  1020,  2476,  1020,  1422,
    3463,  4269,  1910,  1386,  4270,  3248,  1914,  1424,  4273,  1425,
    2475,  4274,  2476,  3249,  2474,  1430,  3250,  4020,  4278,  4023,
    4301,  3044,  2477,  2751,  1433,  1456,  2478,  1930,  1931,  5215,
    1135,  1457,  1479,  3572, -2559,  3243,  4479,  2477,  3512,  4556,
    4650,  2478,  2751,  2782,  1939,  3575,  4010,  1469,  4012,  1483,
    4652,  4704,  2472,  1487,  3044,  4711,  3251,  1493,  4712,  3252,
    3701,  3512,  1498,  2475,  1488,  2476,  4717,  2472,  1494,  2751,
    1499,  1020,  2478,  1960,  4718,  1135,  1963,  2751,  3572,  2331,
    3244,  1501, -2559,  1509,  3253,  3245,  3898,  2478,  2677,  2269,
    2477,  1503,  1974,  1505, -2559,  1524,  2688,  4740,  2472, -2559,
    4741,  3254,  3927, -1674, -2559,  4743,  1510,  4745,  4741, -2559,
    4741,  1515, -2559,  2472, -2559, -1674,  1519,  1522,  1565,  4248,
   -1674,  4072,   811,  2474,  1335,  1568,  1570,  4253,  4254,  4255,
    1561,  1581,  4598,  4599,  4600,  -220,  1585,  4117,  3246,  2474,
    2478, -2559,  1583,  3576,  3577,  3578,  1580,  3579,  3580,  3581,
    3582,  3583,  3584,  2856,  4747,  4749,  4771,  4748,  4750,  4772,
    1597,  1607, -1674, -2559,  2856,  1612,  2472,  2025,  4348,  1601,
    4778,  1609,  2475,  4779,  2476,  4809,  1816,  4836,  4810,  1817,
    4837,  1624,  1629,  1631, -1674,  2856,  2856,  1805,  2475,  4895,
    2476,  1630,  4896,  1632,  4990,  4942,  1241,  1241,  4943,  2477,
    3692,  2909,   725, -2559,  2268,  4944,  1634,  4322,  2739,  3162,
    1837, -2559,  1636,  2789,  1633,  2477,  4953,  3574,  1637,  2782,
    3653,  1019, -2559,  5023, -1674,  1644,  4750,  5026,  3707,  3707,
    4741,  1647, -1674,  3247,  1854,  3670,   811,  1648,  2787,  2784,
    2785,   183,  1649,  2786,  2474,  3663,  3664,  3665,  5028,  2478,
    1650,  4779,  1652,  3764,  1657,  3765,  3766,  3767,  5030, -2559,
    4395,  5031,  3574,  3533,  5115,  2478,   179,  2751,  5144,  3536,
    5156,  5145,  1658,  2782,  5164,  2472,  1659,  5165,  1666,  3575,
    2261,  3576,  3577,  3578,  1004,  3579,  3580,  3581,  3582,  3583,
    3584,  2472,  1696,  2475,  5396,  2476,  5170,  2474,  3670,  2986,
    1724,   810,  4463,  2816,   738,  2855,  5175,  5177,  5233,  4041,
    4041,  5234,  5269,  5404,  3734,  2141,  5278,  1727,  5285,  5279,
    2477,  2782,  1731,  1733,  3575,  2113,  2114,  2115, -2559,  2116,
    2117,  2118,  2119,  2120,  2121,  1734,  3248,  2975,  1910,  1019,
    5286,  1740,  1914,  3614,  3249,  2976,  2475,  3250,  2476, -1674,
    5287,  1741, -2559,  2739, -2559, -2559,  3757,  5297,  5299,  5320,
    2986,  4041,  4750,  1930,  1931,  5326,  5332, -1858,  2782,  2782,
    2478,  5333, -1865,  2477,  2782,  3365,  1750,  4480,  5350,  5458,
    1939,  5351, -2559,  5384,  1754,  5385,  2986,  3251,  2739,  5387,
    3252,  4466,  2739,  1753,  4468,  4469,  2472,  1760,  5451,  5452,
    5477,  4041,  5183,  2751,  5480,  5501,  1755,  5481,  5502,  1960,
    5569,  5617,  1963,  5570,  5618,  3253, -1855,  5625,  1756,  4481,
    5626,  3993,  3679,  2478,    49,  2269, -2559,  3994,  5640, -1856,
    5646,  2751,  3254,  5502,  5647,  4588,  5651,  2751,  3995,  4779,
    1762,  1765,  3701,  4482,  3838,  5089,  1766,  1767,  1768,  2472,
    1773,  1775,  1776,  1777, -2559, -1859,  1778, -1857,  4483, -2559,
   -2559, -2559,  1779,  4484,  1780,  3996,  1787,  3997,  1788,  1790,
    4818,  4819,  2856,  4821,  4624,  1266,  1791,  1792,  1793,  2128,
    1290,  1267,  1794,  4485,  4628,  3679,  4486,  1795,  1796,  1797,
    1798,  1799,  1800,  1801,  3853,  3878,  2130,  2132,  4487,  2145,
    2855,  2855,  2134,  2025,  2141,  2157,  3872,  2165,  2275,  2276,
    2277,  1306,  1304,  2311,  2313,  3576,  3577,  3578,  2321,  3579,
    3580,  3581,  3582,  3583,  3584,  2340,  2341,  2342,  2344,  2345,
    2346,  2347,  2376,  2348,  2349,  2370,  2382,  2405,  3979,  2409,
    2411,  2412,  3998,  2413,  2414,  2415,  2416,  3524,  2417,  3918,
     725,   725,   725,   725,  2435,   725,  2437,  2425,  2426,  2427,
    3576,  3577,  3578,  4601,  3579,  3580,  3581,  3582,  3583,  3584,
    2436,  2451,  2464,  3932,  2465,  2468,  2467,  2471,  2472,  4488,
    2482,  3928,  3929,  3930,  3931,  2493,  3933,  4489,  4490, -2561,
    3352,  2488,  2497,  3352,  3352,  3959,  3961,  3352,  4917,  2491,
    3968,  2492,  3999,  3352,  2504,  3939,   725,  4000,  2498,  2507,
    2511,  2512,  2515,  2522,  2529,  2530,  1397,  2534,  2540,  2955,
    2541,  2551,  4491,  2552,  2553,  3981,  2558,  2586,  2969,  2564,
    4542,  4543,  2570,  2587,  2571,  2599,  2572,  2601,  2602,  1019,
    4024,  1019,  4096,  2608,  4001,  4097,  1757,  1746,  1763,  2610,
    2611,  2628,  2631,  2632,  2635,  2636,   611,  2639,  4002,  2643,
    2658,  2113,  2114,  2115,  4840,  2116,  2117,  2118,  2119,  2120,
    2121,  1450,  2663, -2561,  2680,  2681,  2692,  2648,  2675,  2697,
    4039,  2689,  2699,  2695,  2715,  2703,  2717,  2704,  2719,  2718,
    2733,  1816,  4124,  2720,  1817,  2734,  2763,  2793,  2770,  2779,
    2821,  2822,  2827,  2866,  4059,  2867,  2879,  2886,  2890,  1817,
    4879,  2902,  2908,  4071,  1019,  2894,  2895,  2925,  2927,  2268,
    2943, -2561,  2942,  2956,  2970,  1837,  2973,  2977,  4085,  2974,
    2978,  2987,   179, -2561,  3004,  1323,   817,  3005, -2561,  2992,
    4003,  3006,  3019, -2561,  3007,  3033,  3036,  3034, -2561,  1854,
    3046, -2561,  2980, -2561,  2983,  4208,   179,  3048,  3047,  3064,
    3059,  3067,  3069,  2563,  3078,  3071,   725,  3072,  3088,  3083,
    3089,  3091,  4492,  3098,  3094,  3102,  3126,  4107,  3110,  3113,
   -2561,  4843,  1249,  4845,  3135,  1253,  3137,  4849,  4493,  3138,
    4851,  3147,  4853,  3165,  3200,  3218,  3176,  3221,  3222,  4120,
    1241,  3224, -2561,  3223,  3235,  3227,  3239,  3226,  3238,  3258,
    3297,  1816,  3300,  3308,  1817,  3337,  3312,  3338,  3342,  3341,
    3343,  4565,  3345,  3346,  3349,  3347,  4829,  3355,  3357,  3363,
    3366,  3348,  3367,  3368,  3369,  3370,  3372,  3371,  3377,  2268,
    3397,  3423, -2561,  3414,  3429,  1837,  3432,  3440,  3437,  3441,
   -2561,  3452,  3453,  1910,  3416,  3460,  3472,  1914,  3477,  3761,
    3479, -2561,  3475,  3450,  3480,  3489,   811,  3476,  3492,  1854,
    3494,  3495,  2986,  3504,  3501,  3513,  4189,  2794,  1930,  1931,
    3502,  3503,  1667,   811,  3521,  3506,  3522,  1104,  3526,   734,
     735,  3529,  3531,  4422,   741,  1939,  4873,  4874, -2561,   752,
     760,   734,  3534,   767,  3535,  3537,   760,   760,  3701,   795,
    3538,   798,  3539,  3559,  4696,  2739,  3597,  3555,  3610,  3556,
    4479,  3558,  4313,  4314,  4315,  4316,  3634,  1963,  2855,  3560,
    3642,  1805,  3563,  4202,  4733,  3564,  4842,  3566,  3569,  4945,
    2269,  3587,  3594,   738,  3649,  4220,  3656,  5213,  4224,  3629,
    3681,  3189,  4213,  4214,  4215,  4216,  3687, -1237, -1736,  3713,
    2855,  2855,  3715,  3710,  3709,  3719,  3731, -2561,  3593,  3596,
    3598,  3599,   872, -3016,  3606,  3737,  3627,  1914,  3740,  3725,
    3228,  3743,  3742,  3751,  3628,  3686,  3652,  3654,  3655,  3754,
    3756, -2561,  3747, -2561, -2561,  3789,  5169,  3748,  1930,  1931,
    3869,  3763,  3871,  3778,  3779,  3149,  5169,  3791,  3797,  3798,
    3790,  3806,  5082,  5084,  3812, -3016,  3811,  3799,  2025,  3800,
    3822, -2561,  3825,  3826,  5076,  3839,  3840,  2477,  3850,  3874,
    3875,  3876,  3847,  3846,  3879,  3881,  3891,  3899,  3901,  3900,
    3902,  4815,  4427,  4428,  3849,  3852,  4318,  1963,  3882,  3903,
    3904,  3905,  3906,  3909,  3911,  3907,   853,   858,   858,   861,
    2269,   858,  3913,   867,  3916, -2561,   853,  3917,   795,  3908,
    3919,   899,   725,  3921,  3910,  4865,   795,  3912,  3914,   795,
    3923,  2549,  3943,   858,  1020,   795,   867,  3934,  3937,  3938,
    3949,  3981,  3950, -2561,  3957,  3953,  2617,  3958, -2561, -2561,
   -2561,  5229,  3969,   725,  3984,  3970,  4016,  3985,  3942,  4019,
    4025,  4018,  4028,  4030,  4425,  4032,  4040,  4048,  5032,  4053,
    4041,  4050,  4057,  4054,  4417,  4084,  3701,  4418,  3417,  4419,
    4978,  4061,  3679,  4426,  4415,  3679,  4091,  4989, -3016,  4064,
    4093,  4101,  4102,  4993,  4103,  4106,  4111,  4521,  4112,  4113,
    4114,  4125,  4128,  1743,  4129,  4131,  3590,  4917,  3572,  3589,
    4163,  4180,  1357,   725,  1810,  4184,   725,   725,  4164,  4165,
    4172,  4196,  4444,  4197,   818,  4447,  2113,  2114,  2115,  4205,
    2116,  2117,  2118,  2119,  2120,  2121,  4496,  4209,  4222,  4231,
    4223,  3352,  4250,  4247,  4265,  1358,  4288,  3352,  3352,  4309,
    2607,  4311,  4259,  5298,  1092,  1093,  4245,  4281,  4324,  4323,
    4312,  3162,  4263,  3679,  4325,  4506,  4326,  4364,  4375,  4362,
    4399,  4396,  5073,  1816,  5399,  4397,  1817,  4260,  4262,  4346,
    4398,  4411,  4416,  4349,  4507,  4509,  4511,  4513,  4353,  4409,
    4410,  4412,  3885,  4432,  4087,  4413,  5235,  2855,  1359,  4414,
    4439,  2268,  1360,  4455,  4433,  4457,  4357,  1837,  4467,  5158,
    4470,  4472,  4460,  4335,  4338,  4335,  4335,  4473,  4499,  4528,
    4531,  4500,  4549,  4537,  4076,  4520,  5218,  4501,  4536,  4538,
    4540,  1854,  4550,  2751,  1361,  4545,  2648,  4552,  4553,  4568,
     725,  4570,  4574,  5225,  4578,  5227,  4547,  5221,  1807,  4585,
    2116,  2117,  2118,  2119,  2120,  2121,  4571,  4591,  4573,  3981,
    4586,  4589,  4580,  4597,  4602,  4604,  4606,  4132,  4335,  4607,
    1362,  4608,  4609,  4610,  4614,  4619,  4631,  4616,   897,  4625,
    4632,  4630,  4633,  4674,  4682,   725,   179,  4138,  4623,  4638,
    4634,  4644,  4658,  4668,  4672,  4203,  4670,  4685,  4675,  4687,
    4688,  1363,  4690,  1364,  4697,  4700,  4691,  4692,  4706,  4703,
    4708,  4714,  4713,  4722,  5001,  4162,  4736,  4739,  4753,  4761,
    4770,  4762,  4786,  4613,  4789,  4790,  4741,  3512,  4812,  4788,
    4817,  1365,  4813,  4811,  4801, -3016,  4804,  5130,  4822,  1914,
    4852,  4830,  4850,  4857,  4858,  4866,  4871,  4854,  5049,  4880,
    4886,  4878,  4884,  5163,  4893,  4897,  4905,  1722,  4899,  4914,
    1930,  1931,  4915,  4923,  1366,  4929,  4936,  4938,    33,  5076,
    4948,  4958,  1367,  4949,  4939,  4941,  4946, -3016,  1368,  4950,
    4951,  4965,  4972,  4975,  5005,  1369,  4987,  3662,  4995,  4991,
    5008,  5009,  5024,  1370,  1020,  5045,  5046,  5047,  5056,  5051,
    5054,  5069,  1371,  5057,  5070,  5074,  5081,  5090,  4527,  1963,
    1372,  5097,  5087,  5099,  5203,  5204,   935,  5100,  1651,  5102,
    5122,   795,  2269,  5103,  5121,   858,  5104,   861,  5123,   858,
    5125,  1668,  5126,  5128,  5137,  5132,   899,  5159,  5133,   992,
    5138,  5162,  5166,  5178,  5183,  5300,   858,  5302,  5172,  5179,
    5181,  5200,  5187,  5193,  5201,  5474,  5202,  4694,  4695,  5224,
    3670,   725,  1373,  5240,  3670,  5207,  5245,  5249,  5252,  5254,
    4698,  5255,  4707,  5260,  5271,   853,  5425,  4774,  5272,  5273,
     861,  5282,  5283,  5304,  5250,  5289,   853,  1374,  5288,  5296,
     899,  5301,  4705,  5305,   936,  5306,  5318,  5329,   179,  5319,
   -3016,  5324,  5308,  5325,  5219,  5340,  5335,   858,  5341,  5344,
    5349,  5346,  5354,  5355,  5361,  5530,  1375,  5364,  5365,  5367,
    4210,  5368,  5382,  5392,  5402,  5406,  3162,   937,  5394,  5409,
    5397,  5410,  1376,  2136,  5407,  5474,  2136,  5342,   725,  5343,
     938,   939,  5418,  5448,  4820,  5417,  5422,  5443,  5457,  5461,
     940,  5465,  5462,  5478,   941,  5463,   795,  5482,  4823,  5490,
    5499,  5500,  5531,  5536,  5539,  5498,  5542,   795,  1118,  4763,
    5556,   942,  5505,  5537,  5459,  5543,  5593,  5572,  5545,  4798,
    4799,  5598, -2334,  5629,  4802,  4803,  5652,  2676,  1236,  2565,
     795,   760,   943,  3888,  5645,   760,  5059,  5631,  3418, -2392,
    1454,  5571,  1292,  5530,   944,  5606,  1384,  2164,  3819,   795,
    3694,  4369,   945,   795,  5048,  4795,  3311,  3952,  5613,  1236,
    4476,  5614,  5231,  5622,   946,  5075,  1453,  4805,  5124,   947,
    5339,  4541,   795,  5127,  4863,  5112,  3745,  3500,  5036,  5395,
    4999,  5456,  5416,  5347,   795,  5345,  5474,  3679,  5263,  3750,
     948,  3679,  5035,  5022,  3851,  4345,  4824,  4825,   725,  5606,
    4890,  4389,  2116,  2117,  2118,  2119,  2120,  2121,  5595,  5635,
    3352,  3352,  5039,  5580,  5514,   949,  5600,  1019,  5568,  5641,
    5656,  4844,  5277,   725,  5609,   795,  4535,   795,  3395,  3396,
    4367,  3833,  5313,  2655,  3378,  5464,   950,  4036,  5632,  5540,
     795,  5101,   858,   858,  3971,  4579,  5055,  5420,  5623,  5331,
    5403,  5058,  2638,   740,  4860,  5188,  5624,  1717,  4603,  3039,
    4582,  1726,  4581,  3732,   760,   760,  5281,  1021,   897,  5633,
     951,  3920,  5436,  5575,  2982,  2981,  3698,  1262,  4559,  2741,
    4544,  5515,  4275,  1284,  4699,  5290,  4335,  4335,  2272,  3699,
    3018,  4888,  2307,   853,  2308,  1681,  4335,  3711,  5386,   205,
    3001,  5303,  4335,  3017,   853,  2312,  3724,  5551,   899,  4667,
    5554,  5555,  3712,  5557,  4226,  4680,  5174,  5295,  5294,  4221,
    4276,  5157,   858,  4916,  3364,  3701,   952,  1270,  4188,  1020,
     953,  4174,   954,  5388,  5310,  5389,   795,  5381,   955,  5450,
    3702,   956,   858,   858,  3647,  4613,  4613,  4613,  4613,  5551,
    3550,  4185,  5554,  5555,   897,  5557,  3645,  5002,  4774,  4774,
     795,   795,   795,     0,  3512,   853,   858,   957,   853,   958,
    2958,  2127,     0,   959,  4014,  4272,     0,  4017,     0,     0,
       0,   960,     0,     0,     0,     0,   961,     0,     0,     0,
       0,     0,     0,  4026,     0,     0,   858,     0,   858,   858,
       0,     0,     0,     0,     0,     0,     0,  4035,     0,     0,
       0,   962,  1816,     0,     0,  1817,  5037,     0,  4045,     0,
       0,     0,     0,  1236,     0,     0,     0,     0,     0,  4058,
       0,     0,     0,     0,     0,     0,     0,  4065,     0,     0,
    2268,     0,     0,  3670,     0,     0,  1837,     0,  3670,     0,
       0,  3670,  1722,     0,  1699,  1699,     0,     0,  4992,   795,
       0,   734,     0,     0,  3512,     0,  3512,     0,     0,     0,
    1854,     0,     0,     0,     0,     0,     0,     0,     0,  1732,
       0,     0,   795,     0,     0,  1738,   963,  4868,     0,   725,
       0,     0,     0,     0,     0,     0,     0,     0,  1236,     0,
       0,     0,     0,     0,     0,     0,  1241,     0,  3981,     0,
       0,  1357,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1236,     0,     0,
       0,     0,  2706,     0,  4206,     0,     0,     0,     0,     0,
       0,     0,  2712,     0,  1358,     0,  2716,     0,     0,  5060,
       0,  5062,  2722,  2723,     0,  2797,     0,  5140,     0,     0,
    1236,  1236,     0,  1236,  4726,     0,     0,     0,  3352,     0,
       0,     0,  2735,     0, -3016,     0,     0,  1019,  1914,     0,
       0,  5079,  1236,  5080,     0,     0,     0,  5085,     0,  5086,
       0,  5088,     0,     0,     0,     0,     0,  1359,     0,  1930,
    1931,  1360,  2798,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -3016,  4765,     0,     0,
     795,  5116,     0,  1236,  3679,     0,     0,     0,  2648,     0,
    3679,     0,  2799,  1361,     0,  3679,     0,     0,  3679,     0,
    4217,  4218,  4219,     0,     0,     0,     0,     0,  1963,   179,
     795,   795,     0,  2800,     0,     0,     0,  4800,  1236,     0,
       0,  2269,  1236,  1236,     0,  2801,     0,     0,  3679,  1362,
       0,     0,     0,   795,   795,  2320,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2802,   811,     0,     0,     0,
    2803,   760,  4335,     0,     0,     0,     0,  4335,     0,     0,
    1363,     0,  1364,     0,     0,     0,  4335,     0,     0,     0,
    5226,     0,  5228,     0,     0,  4826,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   760,     0,     0,
       0,     0,     0,     0,     0,     0,  2804,     0,     0, -3016,
       0,  3670,     0,   795,  2444,     0,     0,     0,   897,     0,
     795,  1805,     0,   858,  5053,     0,     0,  2805,     0,     0,
       0,  1816,     0,     0,  1817,     0,     0,    33,     0,  2428,
       0,  1367,     0,     0,     0,     0,     0,  1368,     0,     0,
       0,   899,     0,     0,  1369,     0,     0,   795,     0,  2268,
     795,     0,  2429,     0,     0,  1837,     0,     0,     0,     0,
       0,  1371,     0,     0,     0,     0,     0,     0,     0,  1372,
       0,   872,  5232,     0,   795,     0,     0,     0,     0,  1854,
     205,     0,   858,   858,   858,   858,   795,  4385,     0,     0,
       0,     0,     0,     0,  4774,     0,     0,     0,     0,     0,
     795,     0,     0,     0,     0,     0,     0,  2806,     0,     0,
       0,     0,     0,  2807,     0,     0,  2582,     0,   795,  2808,
       0,  1373,     0,     0,  5261,     0,     0,     0,   858,   858,
       0,  3679,     0,     0,     0,     0,   858,     0,  1722,     0,
       0,     0,     0,  4655,     0,     0,  1374,     0,  2809,     0,
    2810,     0,   179,     0,     0,     0,     0,     0,  5353,     0,
       0,  2116,  2117,  2118,  2119,  2120,  2121,  2811,     0,     0,
       0,     0,     0,     0,     0,  1375,     0,   858,     0,     0,
       0,     0,     0, -3016,     0,     0,     0,  1914,  3679,     0,
       0,  1376,  2812,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   858,   858,   858,   858,  1930,  1931,
       0,     0,     0,     0,     0,     0,     0,     0,   795,     0,
    4503,     0,     0,     0,     0, -3016,   795,     0,     0,     0,
    2582,     0,  1019,     0,     0,     0,     0,     0,  5405,  4529,
    4335,   853,     0,     0,     0,     0,     0,     0,   861,     0,
       0,   853,     0,     0,  5015,     0,     0,  1963,     0,     0,
       0,   899,     0,     0,     0,     0,   858,     0,  4548,     0,
    2269,  3162,  5366,     0,     0,   858,     0,     0,     0,     0,
       0,     0,     0,   858,   858,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5460,     0,     0,     0,     0,
       0,     0,     0,  1699,     0,     0,  4694,  4694,  5251,     0,
     858,     0,   853,     0,  3512,     0,   795,   795,     0,   858,
       0,     0,     0,     0,     0,     0,   795,     0,     0,     0,
       0,     0,     0,   795,     0,     0,     0,     0, -3016,     0,
     734,   734,     0,     0,  2796,     0,  5421,     0,  1236,     0,
    1236,     0,     0,     0,     0,  5430,  5431,  1236,     0,     0,
    1236,     0,     0,     0,  1236,  5441,  5438,  5439,   183,     0,
    5440,  3679,  1236,  1236,   179,     0,  3701,     0,     0,     0,
    1236,     0,   899,  1236,  1236,  1236,  1236,     0,  5489,     0,
       0,  5472,     0,   179,  1236,  1236,     0,  1236,     0,  1236,
    1236,     0,     0,  1236,     0,  1236,     0,  1236,  1236,     0,
    5473,   795,     0,     0,     0,     0,     0,  5139,     0,     0,
       0,  2979,     0,     0,     0,  5441,  5438,  5439,   183,     0,
    5440,     0,     0,     0,     0,  1236,     0,     0,     0,     0,
    4662,  4663,  4664,  4665,  1722,     0,     0,  5513,     0,     0,
       0,  -130,     0,  5488,     0,     0,     0,     0,     0,     0,
       0,   858,     0,     0,     0,     1,  5357,     0,  5538,  5430,
       0,  5472,     0,     0,     0,     2,     0,     3,     4,     0,
       0,  5549,  3916,     0,     0,  3679,     0,     0,     0,     0,
    5473,     0,     5,     0,     0,     0,     0,     0,  5548,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,     6,     0,     7,     8,     0,  1236,     0,     0,
       9,     0,    10,     0,     0,  5441,  5438,  5439,   183,     0,
    5440,     0,  5401,    11,     0,    12,     0,     0,  5591,  5592,
     725,     0,  5596,  5597,     0,  5599,  1236,     0,     0,     0,
       0,    13,     0,   179,    14,     0,     0,  1722,     0,  3981,
       0,  1722,  1722,     0,     0,     0,    15,     0,    16,     0,
       0,     0,    17,     0,     0,     0,     0,     0,    18,     0,
       0,  1236,  5472,     0,     0,     0,     0,    19,     0,    20,
       0,     0,     0,     0,  5627,    21,     0,  5642,     0,     0,
       0,  5473,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,  3178,     0,  5643,     0,     0,     0,
       0,  5655,     0,     0,     0,     0,     0, -2575,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3219,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1816,
       0,     0,  1817,     0,     0,    23,    24,     0,     0,     0,
       0,    25,     0,     0,     0,     0,     0,     0,     0,  1828,
       0,     0,  1816,    26,     0,  1817,     0,  2268,     0,     0,
       0,     0,     0,  1837,    27,     0,     0,     0,     0,     0,
       0,     0,  1828,     0,     0,     0,  5316,  5317,     0,     0,
    2268, -2575,     0,     0,     0,     0,  1837,  1854,     0,     0,
    1236,  1236,  1236,  1236,  1236,  1236,  1236,  1236,  1236,     0,
    1236,     0,    28,     0,     0,     0,     0,     0,     0,   795,
    1854,  1236,  1236,     0,    29,  5579,     0,     0,   795,    30,
      31,     0,    32,     0,     0,     0,     0,    33,     0, -2575,
       0,     0,    34,     0,     0,    35,     0,     0,     0,    36,
       0, -2575,     0,     0,    37,    38, -2575,     0,     0,     0,
       0, -2575,    39,     0,     0,    40, -2575,     0,     0, -2575,
       0, -2575,     0,    41,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4922,     0, -2575,     0,
       0,  1910,    43,     0,     0,  1914,     0,     0,     0,     0,
       0,     0,    44,     0,     0,     0,     0,     0,    45,     0,
   -2575,     0,     0,    46,  1910,     0,  1930,  1931,  1914,     0,
       0,     0,     0,     0,     0,     0,    47,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,  3481,     0,  1930,
    1931,     0,   795,     0,   795,     0,     0,     0,  1236,     0,
   -2575,     0,     0,  3490,  3491,     0,  1939,  3493, -2575,     0,
       0,     0,  1960,  3497,     0,  1963,     0,  1236,     0, -2575,
       0,     0,     0,     0,     0,     0,  1236,  1236,  2269,     0,
       0,  1974,     0,    48,     0,  1960,     0,     0,  1963,     0,
     795,     0,     0,     0,     0,     0,  3025,     0,  3032,     0,
       0,  2269,     0,     0,  1974,     0, -2575,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3532,     0,     0,     0,   861,     0,     0,    49,
       0,   734,  -130,   734,  2384,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1236,   738,     0,     0,     0,     0,  2025,     0,     0,     0,
       0,   853,     0,   858,   858,   858,     0,  2385,   853,     0,
     899,     0,   858,     0,   858, -2575,   858,   858,     0,  2025,
    2386,     0,   795,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2387,     0,     0,     0,     0, -2575,
       0, -2575, -2575,     0,     0,     0,   760,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2444,     0,     0,     0,
    1816,     0,     0,  1817,     0,     0,     0,  3168,     0, -2575,
       0,     0,  2388,     0,     0,  3180,     0,     0,     0,     0,
    1828,   795,     0,     0,  2389,     0,     0,     0,  2268,     0,
       0,     0,     0,     0,  1837,  5093,     0,     0,     0,     0,
       0,     0,     0,     0,  2390,     0,     0,     0,     0,  2391,
     795,     0,     0, -2575,  3233,  3233,     0,     0,  1854,     0,
       0,   861,   760,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1241,     0,     0,   858,
       0, -2575,     0,     0,     0,     0, -2575, -2575, -2575,     0,
       0,     0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,     0,     0,  3299,     0,  3302,  3304,
    4641,     0,     0,  4642,     0,     0,  2392,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3565,     0,     0,     0,
       0,     0,     0,   858,     0,     0,     0,     0,     0,     0,
    2393,   858,     0,     0,     0,     0,   858,     0,     0,     0,
       0,     0,  1910,     0,     0,  1236,  1914,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   205,
       0,     0,  5196,     0,  3755,     0,     0,  1930,  1931,     0,
       0,     0,     0,  2444,     0,     0,  3233,     0,   795,     0,
    3419,     0,     0,   734,  1939,     0,     0,     0,     0,     0,
       0,     0,  2394,     0,     0,     0,     0,     0,  2395,     0,
       0,  2396,     0,     0,     0,     0,     0,     0,     0,  3299,
       0,     0,     0,  1960,     0,     0,  1963,     0,     0,   858,
    3446,     0,     0,     0,     0,     0,     0,  2397,     0,  2269,
       0,     0,  1974,  2398,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2399,     0,     0,     0,
       0,     0,   858,     0,   858,  3233,   858,  3233,     0,     0,
       0,     0,  3823,     0,     0,     0,     0,  3827,     0,     0,
       0,  2400,     0,     0,     0,     0,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1699,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2025,     0,     0,
       0,     0,     0,     0,     0,  1816,     0,     0,  1817,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   853,  1828,     0,     0,     0,     0,
     853,     0,     0,  2268,     0,     0,     0,     0,     0,  1837,
       0,   858,     0,     0,     0,     0,     0,     0,  1236,  1236,
       0,     0,     0,     0,  1236,     0,     0,     0,     0,     0,
       0,     0,     0,  1854,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3915,     0,     0,     0,  1236,
    1236,  3922,     0,     0,  1236,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1236,  1236,
    1236,  1236,     0,     0,     0,     0,     0,     0,     0,     0,
    1816,     0,  1236,  1817,     0,  1236,     0,     0,     0,     0,
       0,  1236,  3626,     0,     0,     0,     0,     0,     0,     0,
    1828,  1236,  1236,     0,     0,  1236,     0,     0,  2268,  3465,
       0,     0,     0,     0,  1837,     0,     0,     0,  1236,     0,
    1236,     0,   899,     0,  1236,  2113,  2114,  2115,  1357,  2116,
    2117,  2118,  2119,  2120,  2121,     0,     0,  1910,  1854,     0,
       0,  1914,     0,  1236,  3609,     0,     0,   795,     0,     0,
       0,     0,     0,  3680,     0,     0,  1236,  1236,  1236,     0,
       0,  1358,  1930,  1931,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1236,     0,  1816,     0,     0,  1817,  1939,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1236,
       0,     0,     0,     0,     0,  1828,     0,     0,     0,     0,
       0,     0,     0,  2268,  1236,     0,     0,     0,  1960,  1837,
       0,  1963,     0,     0,  1359,     0,  3680,     0,  1360,  3718,
       0,     0,     0,  3032,  2269,  4086,     0,  1974,     0,  4089,
    4090,     0,  4092,  1854,  4094,  4095,     0,     0,     0,     0,
       0,     0,  1910,  4100,     0,     0,  1914,     0,     0,     0,
    1361,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1236,     0,  3233,  1930,  1931,     0,
       0,  1699,     0,     0,     0,  1387,     0,  4119,  5497,  3466,
       0,  1388,     0,     0,  1939,     0,  1362,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   858,     0,   858,
     858,   858,  2025,     0,     0,     0,  1434,     0,     0,     0,
       0,     0,     0,  1960,     0,     0,  1963,  1363,     0,  1364,
       0,  1389,     0,     0,     0,     0,     0,     0,     0,  2269,
       0,     0,  1974,     0,     0,     0,     0,  1910,     0,     0,
       0,  1914,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1435,     0,     0,     0,     0,     0,     0,
       0,     0,  1930,  1931,     0,     0,     0,     0,     0,     0,
       0,  1390,     0,     0,     0,     0,     0,     0,  1391,  1939,
       0,  1392,     0,     0,    33,     0,     0,     0,  1367,     0,
       0,     0,     0,     0,  1368,     0,     0,     0,     0,     0,
       0,  1369,     0,     0,     0,     0,     0,  2025,  1960,  2429,
       0,  1963,     0,     0,  1816,     0,     0,  1817,  1371,     0,
       0,     0,     0,     0,  2269,     0,  1372,  1974,     0,     0,
       0,     0,     0,  1436,  1828,     0,  1393,     0,     0,     0,
       0,     0,  2268,     0,     0,  1558,     0,     0,  1837,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,
       0,     0,  1854,     0,     0,     0,     0,     0,  1373,  3617,
       0,  1437,  3468,  4076,     0,     0,  1438,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1439,     0,  1395,     0,
       0,     0,  2025,  1374,     0,     0,     0,     0,  1396,     0,
       0,     0,     0,     0,     0,     0,  1397,     0,     0,     0,
       0,     0,     0,     0,     0,  1440,  1398,     0,     0,     0,
       0,     0,  1375,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3233,  3233,     0,     0,  1376,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1441,
       0,     0,  1400,  1401,  1442,  2113,  2114,  2115,     0,  2116,
    2117,  2118,  2119,  2120,  2121,     0,  1910,     0,     0,     0,
    1914,     0,     0,     0,  3619,     0,  1558,     0,  1443,     0,
       0,     0,     0,     0,   795,  4015,     0,   795,     0,  1444,
       0,  1930,  1931,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   795,     0,     0,     0,     0,  1939,     0,
       0,     0,     0,     0,     0,     0,  1699,   795,  1403,     0,
       0,     0,     0,     0,     0,     0,     0,  1699,   795,     0,
       0,     0,     0,     0,     0,     0,  1404,  1960,     0,   795,
    1963,     0,     0,     0,     0,     0,     0,   795,     0,     0,
    2113,  2114,  2115,  2269,  2116,  2117,  2118,  2119,  2120,  2121,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4642,
       0,     0,     0,     0,     0,     0,   858,     0,     0,   858,
       0,     0,     0,  1405,  1406,     0,     0,     0,     0,     0,
       0,     0,     0,   853,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1387,
       0,     0,     0,     0,     0,  1388,   795,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   858,  1407,     0,     0,
       0,  2025,     0,     0,     0,     0,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,     0,     0,     0,
       0,     0,  1236,     0,  1236,  1389,     0,     0,     0,  1816,
    1236,     0,  1817,  1236,  1236,  1236,  1236,  1236,  1236,  1236,
    1236,  1236,  1236,     0,     0,     0,  1236,  1236,     0,  1828,
       0,     0,     0,     0,     0,     0,  2336,  2268,     0,     0,
       0,     0,  1236,  1837,     0,     0,  1236,  1236,     0,     0,
       0,  1236,     0,     0,     0,  1390,  1236,     0,     0,     0,
       0,     0,  1391,     0,     0,  1392,  1236,  1854,     0,  1236,
       0,  1236,     0,     0,     0,  4592,     0,     0,     0,     0,
    1236,  1236,  1236,  4595,  4596,     0,  1236,     0,     0,  1236,
       0,     0,     0,  4212,     0,     0,  2336,     0,     0,     0,
     795,   795,   795,   853,     0,     0,  3680,  4230,     0,     0,
       0,  4230,  4244,     0,     0,     0,     0,     0,  1236,     0,
    1393,     0,     0,     0,  1236,  1236,     0,     0,     0,     0,
       0,     0,     0,  1816,     0,     0,  1817,  1558,     0,  2113,
    2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,
    1236,     0,     0,  1828,     0,     0,  1236,     0,     0,     0,
    3032,  2268,  1236,     0,     0,     0,     0,  1837,     0,     0,
       0,  1910,     0,     0,     0,  1914,     0,     0,     0,     0,
    1394,     0,  1395,     0,  4296,  1699,  1699,     0,  2582,     0,
       0,  1854,  1396,     0,     0,     0,  1930,  1931,     0,     0,
    1397,     0,     0,     0,     0,     0,   858,   858,   858,   858,
    1398,     0,     0,  1939,     0,     0,     0,     0,  1558,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   853,   853,   853,   853,     0,     0,
       0,     0,  1960,  1399,     0,  1963,  1400,  1401,     0,     0,
       0,     0,     0,     0,     0,     0,  1558,     0,  2269,     0,
       0,  1974,     0,  4366,     0,     0,     0,     0,     0,     0,
       0,     0,  1402,     0,     0,     0,     0,     0,     0,     0,
       0,  1558,     0,  4374,     0,     0,     0,   795,     0,   853,
       0,     0,     0,     0,  4725,  1910,     0,     0,     0,  1914,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1403,     0,     0,     0,     0,     0,     0,     0,
    1930,  1931,     0,     0,     0,     0,   858,   858,     0,     0,
    1404,     0,     0,     0,     0,     0,  2025,  1939,     0,     0,
       0,     0,     0,     0,     0,  1558,     0,     0,     0,     0,
    4766,  4767,  4768,  4769,     0,     0,     0,     0,  4461,     0,
       0,  1387,     0,     0,     0,     0,  1960,  1388,     0,  1963,
       0,     0,     0,     0,     0,     0,     0,  1405,  1406,     0,
       0,     0,  2269,     0,     0,  1974,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1389,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     795,  1407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   858,     0,  1236,     0,     0,     0,     0,     0,   795,
       0,     0,     0,     0,     0,  4534,     0,     0,  4827,  4828,
       0,     0,     0,     0,     0,     0,  2444,  1390,     0,     0,
    2025,     0,     0,     0,  1391,     0,     0,  1392,   795,  1387,
       0,     0,     0,     0,     0,  1388,     0,     0,  3299,     0,
       0,     0,     0,     0,     0,  4566,     0,     0,     0,     0,
       0,     0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,     0,  1236,  1236,     0,     0,     0,
       0,  1816,     0,  4963,  1817,  1389,     0,     0,     0,     0,
       0,     0,  1393,     0,     0,     0,     0,     0,  3233,     0,
    3233,  1828,  1558,     0,     0,     0,     0,     0,     0,  2268,
       0,     0,     0,     0,     0,  1837,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1390,  1236,     0,     0,  1854,
       0,     0,  1391,     0,     0,  1392,     0,     0,  4925,     0,
    4926,  4927,  1394,     0,  1395,     0,     0,     0,     0,     0,
       0,     0,  4930,     0,  1396,  1236,     0,     0,     0,     0,
       0,     0,  1397,     0,     0,  1236,     0,     0,     0,     0,
       0,     0,  1398,     0,     0,     0,  1236,  1236,  2113,  2114,
    2115,  1236,  2116,  2117,  2118,  2119,  2120,  2121,  1236,  1236,
    1393,     0,     0,  1236,  2893,     0,     0,     0,     0,  1236,
    1236,     0,     0,  1236,     0,  1458,  1236,  4661,  1400,  1401,
     795,   795,   795,   795,     0,     0,     0,  4230,  4244,     0,
    1236,  4230,     0,     0,  4671,     0,     0,     0,  3680,     0,
       0,     0,  3680,  1910,  1459,     0,     0,  1914,  4684,     0,
       0,     0,     0,     0,  1236,     0,     0,     0,     0,  1236,
    1394,     0,  1395,     0,  1236,     0,     0,     0,  1930,  1931,
     899,     0,  1396,  1816,     0,     0,  1817,  3718,     0,     0,
    1397,  3032,     0,     0,  1403,  1939,     0,     0,     0,     0,
    1398,     0,     0,  1828,     0,   734,     0,     0,  1236,     0,
       0,  2268,  1404,     0,     0,     0,     0,  1837,     0,     0,
       0,     0,     0,     0,  1960,     0,     0,  1963,  3233,  3233,
       0,     0,     0,  1484,     0,     0,  1400,  1401,     0,     0,
    2269,  1854,     0,  1974,     0,     0,     0,   853,   853,     0,
       0,     0,     0,     0,     0,     0,     0,   853,     0,  1405,
    1406,     0,  1485,   853,     0,   855,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   855,   876,  4764,     0,     0,
       0,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,   858,     0,   876,     0,     0,     0,     0,     0,     0,
       0,     0,  1403,  1407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2025,     0,
    1404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2968,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1910,     0,     0,     0,  1914,
       0,     0,     0,     0,     0,     0,     0,     0,   858,     0,
       0,     0,     0,     0,     0,     0,     0,  1405,  1406,     0,
    1930,  1931,   858,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5152,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1407,     0,     0,     0,     0,  1960,     0,     0,  1963,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2269,     0,     0,  1974,     0,  1236,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   853,     0,
       0,     0,     0,  2444,     0,     0,     0,     0,     0,     0,
       0,     0,  1699,  5190,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   858,  2444,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,  4912,  3623,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   795,     0,     0,     0,
    2025,     0,     0,     0,     0,     0,     0,  1816,     0,     0,
    1817,  3035,     0,     0,     0,  2336,  3041,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1236,  1828,  5230,     0,
       0,     0,     0,     0,     0,  2268,     0,  1236,     0,     0,
       0,  1837,     0,     0,     0,     0,     0,     0,     0,  1236,
       0,     0,     0,     0,     0,     0,     0,     0,  1236,  1236,
       0,     0,  1236,     0,     0,  1854,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   853,     0,  4230,     0,     0,
       0,  3680,     0,     0,     0,     0,  3680,     0,     0,  3680,
    3299,     0,  4977,     0,  1236,  1236,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3465,     0,     0,  4296,
     899,   858,   858,   858,     0,     0,     0,     0,     0,  1558,
       0,     0,     0,     0,     0,  1357,     0,     0,     0,     0,
       0,     0,     0,   853,     0,     0,     0,     0,   853,  1236,
       0,  1236,     0,     0,     0,     0,     0,   853,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,  1358,  1910,
       0,     0,     0,  1914,  3956,     0,     0,     0,     0,  4374,
     858,     0,     0,   876,     0,     0,     0,   876,     0,     0,
       0,     0,     0,     0,  1930,  1931,     0,     0,   876,     0,
       0,     0,     0,     0,     0,   853,   899,     0,     0,     0,
       0,  1939,     0,     0,     0,     0,     0,     0,     0,     0,
     876,  1359,     0,     0,   855,  1360,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   855,   876,     0,     0,     0,
    1960,   876,     0,  1963,     0,     0,     0,     0,     0,     0,
       0,   876,     0,     0,  1699,  1699,  2269,  1361,     0,  1974,
       0,   876,   853,     0,     0,   795,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4534,     0,     0,     0,
       0,     0,     0,     0,     0,  3233,  3466,     0,     0,  2444,
       0,     0,     0,  1362,     0,  1558,     0,     0,     0,     0,
       0,     0,     0,  4566,     0,     0,   795,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   858,  4296,     0,  1363,     0,  1364,     0,     0,     0,
       0,     0,     0,     0,  2025,     0,     0,   855,     0,     0,
       0,     0,   876,  1236,     0,  1236,     0,  5453,  1236,     0,
    1236,     0,     0,     0,     0,     0,  1816,     0,     0,  1817,
       0,     0,     0,     0,     0,     0,     0,     0,   855,     0,
    1236,     0,     0,     0,  2336,  1236,  1828,     0,     0,  3680,
    2336,     0,  4977,     0,  2268,     0,     0,     0,     0,  1236,
    1837,    33,     0,     0,  5186,  3467,     0,     0,     0,     0,
       0,  1368,     0,     0,     0,     0,     0,     0,  1369,     0,
       0,     0,   795,     0,  1854,     0,  2429,     0,     0,  1816,
       0,     0,  1817,     0,     0,  1371,     0,     0,     0,     0,
       0,   853,     0,  1372,     0,     0,     0,     0,     0,  1828,
       0,     0,     0,     0,     0,     0,     0,  2268,     0,     0,
       0,     0,     0,  1837,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
       0,     0,     0,   858,   858,   858,   858,  1854,     0,     0,
       0,     0,     0,     0,     0,  1373,     0,     0,  1699,  3468,
     876,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,
    2120,  2121,   855,     0,     0,     0,     0,     0,  4133,   853,
    1374,     0,     0,   855,     0,     0,     0,     0,  1910,     0,
       0,     0,  1914,     0,     0,     0,     0,     0,  1236,     0,
       0,     0,     0,     0,     0,     0,  1559,     0,     0,  1375,
       0,     0,     0,  1930,  1931,  4912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1376,     0,     0,     0,     0,
    1939,     0,     0,     0,     0,     0,     0,   876,     0,  1236,
       0,     0,   853,     0,   855,     0,     0,   855,     0,     0,
       0,  1910,     0,     0,     0,  1914,  1236,     0,  1236,  1960,
    1236,     0,  1963,     0,     0,     0,     0,     0,   858,     0,
     899,     0,     0,     0,     0,  2269,  1930,  1931,  1974,     0,
       0,   876,     0,     0,  1236,     0,     0,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,   876,   876,     0,
       0,     0,   855,     0,     0,     0,     0,     0,     0,     0,
       0,   876,     0,     0,  2968,  2968,  2968,     0,     0,     0,
       0,     0,  1960,     0,     0,  1963,     0,     0,     0,     0,
       0,     0,   858,     0,     0,     0,     0,   853,  2269,   876,
       0,  1974,     0,     0,     0,     0,     0,  1559,     0,   876,
       0,     0,     0,  2025,     0,     0,  4296,     0,     0,     0,
       0,     0,   876,     0,     0,   876,     0,     0,  1236,  1236,
       0,     0,     0,  3299,     0,     0,     0,   855,  1236,     0,
       0,  5186,     0,     0,     0,     0,     0,     0,     0,  2336,
       0,     0,  3041,     0,  3041,     0,     0,     0,     0,  2336,
       0,     0,     0,   853,     0,     0,   855,     0,     0,     0,
       0,     0,   858,     0,     0,     0,  2025,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1816,     0,     0,  1817,     0,     0,     0,  1699,   855,
     855,     0,   855,     0,     0,     0,     0,     0,     0,  1558,
       0,  1828,  1236,     0,     0,  3465,     0,     0,     0,  2268,
       0,   855,     0,     0,     0,  1837,     0,     0,     0,  1236,
       0,     0,  1816,     0,  1357,  1817,     0,     0,     0,   858,
       0,     0,     0,     0,     0,   876,     0,     0,     0,  1854,
       0,     0,  1828,   876,   876,  2336,     0,     0,     0,     0,
    2268,     0,   855,  2257,     0,     0,  1837,  1358,     0,     0,
       0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,
    2121,     0,     0,     0,     0,     0,     0,  4187,     0,     0,
    1854,     0,     0,     0,     0,     0,     0,   855,   795,     0,
       0,   855,   855,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1559,     0,     0,
    1359,     0,     0,  2257,  1360,     0,     0,  1236,     0,     0,
       0,     0,     0,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,     0,     0,  4261,     0,     0,     0,
    1558,     0,  1558,  1910,     0,     0,  1361,  1914,     0,     0,
       0,     0,     0,  1816,     0,     0,  1817,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   853,  1559,  1930,  1931,
       0,     0,     0,  1828,     0,  3466,     0,     0,     0,     0,
    1699,  2268,  1362,     0,  1910,  1939,     0,  1837,  1914,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1558,     0,     0,     0,  1559,  1930,
    1931,  1854,     0,  1363,  1960,  1364,     0,  1963,     0,     0,
    1699,     0,     0,     0,     0,     0,  1939,     0,  1699,     0,
    2269,     0,     0,  1974,     0,     0,     0,     0,     0,     0,
       0,  1699,     0,     0,     0,     0,     0,     0,  1558,     0,
       0,     0,     0,     0,     0,  1960,     0,     0,  1963,     0,
       0,     0,     0,     0,     0,   876,     0,     0,     0,     0,
       0,  2269,     0,     0,  1974,     0,     0,     0,     0,     0,
      33,     0,  3041,     0,  1367,     0,     0,     0,     0,  1559,
    1368,     0,     0,     0,     0,     0,     0,  1369,     0,     0,
       0,     0,     0,     0,     0,  2429,     0,     0,  2025,     0,
       0,     0,     0,     0,  1371,  1910,     0,     0,     0,  1914,
       0,     0,  1372,     0,     0,     0,     0,  1559,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1930,  1931,     0,     0,     0,     0,     0,  2257,     0,  2025,
       0,  1558,  1559,     0,     0,     0,     0,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   876,     0,     0,
       0,     0,  3041,     0,  1373,     0,     0,     0,  3468,     0,
       0,     0,     0,   876,  1558,     0,  1960,     0,     0,  1963,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1374,
       0,     0,  2269,     0,     0,  1974,     0,     0,     0,     0,
     855,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
     855,     0,   876,   876,     0,     0,     0,     0,  1375,     0,
       0,     0,     0,   876,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1376,   876,   876,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,   876,
       0,  1816,     0,     0,  1817,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,  1558,     0,     0,
    2025,  1828,  4290,     0,     0,     0,     0,     0,     0,  2268,
       0,   855,     0,     0,     0,  1837,     0,  1816,     0,     0,
    1817,     0,     0,     0,     0,  1558,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,  1828,     0,  1854,
       0,     0,     0,  4617,     0,  2268,     0,   855,     0,   855,
       0,  1837,     0,     0,     0,     0,   855,     0,     0,   855,
       0,  1816,     0,   855,  1817,     0,     0,  1558,     0,     0,
       0,   855,   855,     0,     0,  1854,     0,     0,     0,   855,
       0,  1828,   855,   855,   855,   855,     0,     0,     0,  2268,
       0,     0,     0,   855,   855,  1837,   855,     0,   855,   855,
       0,     0,   855,     0,   855,     0,   855,   855,     0,     0,
       0,     0,     0,  2968,     0,     0,     0,     0,     0,  1854,
       0,     0,     0,  1559,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   855,  2257,     0,     0,     0,     0,
       0,     0,     0,  1910,     0,     0,     0,  1914,     0,     0,
       0,     0,     0,     0,     0,     0,  2336,     0,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,  1930,  1931,
       0,     0,     0,     0,  4629,     0,     0,     0,     0,  1910,
       0,     0,     0,  1914,     0,  1939,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1930,  1931,     0,     0,     0,  1816,
       0,     0,  1817,     0,  1960,     0,   855,  1963,     0,     0,
       0,  1939,     0,  1910,     0,     0,     0,  1914,     0,  1828,
    2269,     0,     0,  1974,     0,     0,  1558,  2268,     0,     0,
       0,     0,     0,  1837,     0,   855,     0,     0,  1930,  1931,
    1960,     0,     0,  1963,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1939,  2269,  1854,  3041,  1974,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     855,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1960,     0,     0,  1963,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2025,     0,
    2269,     0,     0,  1974,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2025,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1910,     0,     0,     0,  1914,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2025,     0,
       0,     0,     0,     0,     0,     0,  1930,  1931,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,     0,     0,   855,
     855,   855,   855,   855,   855,   855,   855,   855,     0,   855,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     855,   855,  1960,     0,     0,  1963,     0,     0,     0,     0,
    1558,     0,     0,     0,     0,     0,     0,     0,  2269,     0,
       0,  1974,     0,     0,     0,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,  4657,     0,     0,     0,  3041,     0,     0,     0,
       0,     0,  2336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,
    2120,  2121,     0,     0,     0,     0,     0,     0,  4947,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2025,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,  4957,     0,     0,  1387,     0,     0,     0,     0,
       0,  1388,     0,     0,     0,     0,     0,   855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   855,     0,     0,     0,
       0,     0,     0,     0,     0,   855,   855,  1558,     0,     0,
       0,  1389,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1559,     0,     0,     0,  1559,  1559,     0,     0,
       0,     0,     0,     0,     0,     0,   876,     0,     0,     0,
    2257,   876,     0,     0,   876,     0,     0,     0,     0,     0,
       0,  1390,     0,     0,     0,     0,     0,     0,  1391,     0,
       0,  1392,  2968,     0,     0,     0,   876,  2968,     0,   855,
       0,     0,  2968,     0,     0,     0,     0,     0,     0,     0,
     855,     0,     0,     0,  2113,  2114,  2115,   855,  2116,  2117,
    2118,  2119,  2120,  2121,     0,     0,     0,     0,     0,     0,
    4997,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   876,     0,     0,     0,     0,  1393,     0,     0,     0,
       0,     0,     0,     0,  1558,     0,     0,     0,     0,     0,
       0,   876,   876,     0,     0,     0,     0,     0,     0,     0,
    1559,     0,     0,     0,     0,     0,     0,  1816,     0,     0,
    1817,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2257,   876,     0,     0,  1828,  2257,     0,
       0,     0,     0,     0,     0,  2268,  1394,  1558,  1395,     0,
       0,  1837,     0,     0,     0,     0,     0,     0,  1396,     0,
       0,     0,   877,     0,     0,     0,  1397,     0,   877,     0,
       0,     0,     0,   876,     0,  1854,  1398,   876,     0,   877,
       0,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
    1816,     0,     0,  1817,     0,   876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   876,     0,     0,  2402,
    1828,     0,  1400,  1401,     0,     0,     0,     0,  2268,   876,
       0,     0,     0,     0,  1837,     0,     0,     0,     0,  1816,
     876,     0,  1817,     0,     0,     0,     0,   876,  1402,     0,
       0,     0,     0,     0,     0,  1558,     0,     0,  1854,  1828,
       0,     0,     0,     0,     0,     0,     0,  2268,     0,     0,
       0,     0,     0,  1837,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   855,     0,  1559,     0,  1403,  1910,
       0,     0,     0,  1914,     0,     0,     0,  1854,     0,     0,
       0,     0,     0,     0,     0,     0,  1404,  2257,     0,     0,
       0,     0,     0,     0,  1930,  1931,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1939,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1405,  1406,     0,     0,     0,     0,     0,
    1960,     0,  1910,  1963,     0,  1559,  1914,     0,     0,     0,
       0,  1559,     0,     0,     0,   876,  2269,     0,     0,  1974,
       0,  4920,     0,     0,     0,     0,     0,  1930,  1931,     0,
       0,     0,     0,     0,     0,     0,     0,  1407,     0,     0,
       0,  1910,     0,     0,  1939,  1914,     0,     0,     0,     0,
     876,     0,     0,     0,     0,   855,     0,     0,  1558,     0,
       0,     0,     0,     0,     0,     0,  1930,  1931,     0,     0,
       0,     0,     0,  1960,     0,     0,  1963,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,   876,     0,     0,  2269,
       0,     0,  1974,     0,  2025,     0,     0,     0,  1559,     0,
       0,     0,     0,     0,     0,     0,     0,  1816,     0,   876,
    1817,     0,  1960,   855,     0,  1963,     0,     0,     0,   855,
       0,     0,     0,     0,     0,     0,     0,  1828,  2269,     0,
       0,  1974,     0,     0,     0,  2268,     0,   855,   855,     0,
       0,  1837,     0,   855,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1854,     0,  2025,   855,   855,
       0,     0,     0,   855,  1558,     0,     0,  2968,     0,  2968,
       0,     0,     0,     0,     0,     0,     0,   855,   855,   855,
     855,  1558,     0,     0,     0,  2257,     0,     0,     0,     0,
       0,   855,  2257,     0,   855,  3041,  2025,     0,     0,     0,
     855,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     855,   855,     0,     0,   855,     0,     0,     0,     0,   877,
       0,     0,     0,   877,     0,     0,     0,   855,     0,   855,
       0,     0,     0,   855,   877,     0,     0,     0,     0,     0,
       0,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,
    2120,  2121,   855,     0,     0,     0,   877,     0,  5095,  1910,
       0,     0,   855,  1914,     0,   855,   855,   855,  1816,     0,
       0,  1817,   877,     0,     0,     0,     0,   877,     0,   876,
       0,     0,   855,     0,  1930,  1931,     0,   877,  1828,  1387,
       0,     0,  2993,     0,     0,  1388,  2268,   877,   855,     0,
       0,  1939,  1837,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   855,     0,  2113,  2114,  2115,     0,  2116,
    2117,  2118,  2119,  2120,  2121,   855,  1854,     0,     0,     0,
    1960,  4641,     0,  1963,     0,  1389,     0,  1558,     0,     0,
    1559,     0,  3041,  1559,     0,  1559,  2269,     0,     0,  1974,
    1559,     0,   876,     0,  2113,  2114,  2115,     0,  2116,  2117,
    2118,  2119,  2120,  2121,  1558,     0,     0,   876,   876,     0,
    5356,     0,  2994,   855,     0,     0,     0,     0,   877,     0,
       0,     0,     0,     0,     0,  1390,     0,     0,     0,     0,
       0,     0,  1391,     0,   876,  1392,     0,   876,     0,     0,
    1559,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2025,     0,     0,     0,     0,     0,
    1910,     0,     0,     0,  1914,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
    1393,     0,  1557,     0,     0,  1930,  1931,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1939,     0,     0,     0,     0,  1558,     0,     0,
       0,  1558,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2257,  2257,  2257,     0,
       0,  1960,     0,     0,  1963,     0,     0,     0,     0,     0,
    1394,     0,  1395,     0,     0,     0,     0,  2269,     0,     0,
    1974,     0,  1396,     0,     0,     0,   877,     0,     0,     0,
    1397,     0,   876,     0,     0,     0,     0,     0,     0,     0,
    1398,  1559,     0,  1559,   876,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4920,     0,     0,  2406,     0,     0,  1400,  1401,     0,     0,
       0,     0,  2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,
    2120,  2121,     0,  1557,     0,  2025,     0,     0,  5495,     0,
       0,     0,  2407,   877,     0,  1559,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1558,  1558,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1403,   876,     0,     0,  2995,   877,     0,  1559,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1404,     0,     0,   877,   877,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   877,     0,     0,
       0,     0,  2257,  1559,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   876,     0,   876,
       0,     0,     0,     0,     0,   877,     0,  1405,  1406,     0,
       0,     0,     0,     0,   876,   877,   876,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   877,     0,
       0,   877,     0,     0,  2151,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1407,  1559,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   876,  1559,     0,     0,     0,     0,     0,     0,
    1816,     0,     0,  1817,     0,  1559,     0,     0,     0,     0,
       0,  1816,     0,     0,  1817,     0,     0,     0,     0,     0,
    1828,   876,     0,  1557,     0,     0,     0,     0,  2268,     0,
       0,  1828,   855,     0,  1837,   876,     0,     0,     0,  2268,
       0,     0,     0,     0,     0,  1837,     0,     0,     0,     0,
       0,     0,     0,     0,   876,     0,     0,   876,  1854,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1854,
       0,   877,     0,     0,     0,   855,     0,     0,  1559,   877,
     877,     0,     0,  1557,     0,   855,     0,     0,     0,  2258,
       0,   855,     0,   855,     0,     0,     0,     0,  1559,   855,
       0,     0,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   855,     0,     0,     0,   855,   855,     0,     0,     0,
       0,     0,     0,     0,  1557,     0,  1559,     0,     0,     0,
       0,   855,     0,     0,     0,   855,   855,     0,  2257,     0,
     855,  3589,     0,     0,     0,   855,  3590,     0,     0,  2258,
       0,     0,     0,     0,     0,   855,     0,     0,   855,     0,
     855,     0,  1910,     0,     0,     0,  1914,     0,  1559,   855,
     855,   855,     0,  1910,     0,   855,     0,  1914,   855,     0,
       0,     0,     0,     0,     0,     0,     0,  1930,  1931,     0,
       0,     0,   855,     0,   878,   855,     0,     0,  1930,  1931,
     878,     0,     0,     0,  1939,  1557,     0,   855,     0,     0,
       0,   878,     0,   855,   855,  1939,  3041,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1960,     0,     0,  1963,     0,     0,   855,
       0,     0,     0,  1557,  1960,   855,     0,  1963,     0,  2269,
       0,   855,  1974,     0,     0,     0,     0,  1559,     0,     0,
    2269,     0,     0,  1974,     0,     0,     0,     0,  1557,     0,
       0,     0,     0,   855,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1387,     0,     0,     0,     0,     0,
    1388,   877,     0,     0,   876,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   855,   855,   855,   855,  2025,     0,     0,
       0,     0,  1557,     0,     0,     0,     0,  1559,  2025,     0,
    1389,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2257,     0,     0,     0,     0,     0,  2257,  1559,
    2257,     0,     0,     0,     0,     0,     0,     0,   855,     0,
       0,     0,     0,  2258,  1816,     0,     0,  1817,     0,     0,
    1390,     0,     0,     0,     0,     0,     0,  1391,     0,     0,
    1392,     0,     0,   877,  1828,     0,     0,     0,  2257,     0,
       0,     0,  2268,     0,     0,     0,     0,     0,  1837,   877,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     876,     0,     0,   876,     0,     0,     0,     0,     0,     0,
       0,     0,  1854,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1393,     0,     0,   877,   877,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   877,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2257,
       0,   877,   877,     0,     0,  2113,  2114,  2115,     0,  2116,
    2117,  2118,  2119,  2120,  2121,   877,  2113,  2114,  2115,     0,
    2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1394,     0,  1395,     0,  1557,
       0,     0,   855,     0,  5446,     0,     0,  1396,     0,     0,
       0,     0,     0,  1816,     0,  1397,  1817,     0,     0,     0,
       0,     0,     0,     0,     0,  1398,  1910,   876,   876,     0,
    1914,  1559,     0,  1828,   876,     0,  3552,     0,     0,     0,
       0,  2268,     0,     0,     0,     0,     0,  1837,     0,     0,
       0,  1930,  1931,     0,     0,     0,     0,     0,  2494,     0,
       0,  1400,  1401,     0,     0,     0,     0,  1559,  1939,     0,
       0,  1854,     0,  1559,   855,   855,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2495,     0,  1816,
       0,   878,  1817,     0,     0,   878,     0,  1960,     0,     0,
    1963,     0,     0,     0,     0,     0,   878,     0,     0,  1828,
       0,     0,  3600,  2269,     0,   876,  1974,  2268,     0,     0,
       0,     0,     0,  1837,     0,     0,     0,  1403,   878,     0,
       0,  2258,     0,     0,  5447,   855,     0,     0,     0,     0,
       0,     0,     0,     0,   878,  1404,     0,  1854,     0,   878,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,     0,     0,   855,     0,     0,     0,     0,   878,
       0,     0,     0,     0,   855,  1910,     0,     0,     0,  1914,
       0,     0,     0,     0,     0,   855,   855,     0,  1559,     0,
     855,  2025,  1405,  1406,     0,     0,     0,   855,   855,     0,
    1930,  1931,   855,  1559,     0,     0,     0,     0,   855,   855,
       0,     0,   855,     0,     0,   855,     0,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   855,
       0,     0,     0,     0,     0,     0,  1407,   855,     0,     0,
       0,   855,     0,     0,     0,     0,  1960,     0,     0,  1963,
     878,  1910,     0,   855,     0,  1914,     0,     0,   855,     0,
       0,     0,  2269,   855,     0,  1974,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1930,  1931,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1939,     0,     0,     0,   855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1559,     0,     0,     0,     0,
       0,     0,  1960,     0,     0,  1963,     0,     0,     0,     0,
       0,   876,     0,     0,     0,     0,   855,   855,  2269,     0,
    2025,  1974,     0,     0,     0,     0,   855,     0,     0,  2113,
    2114,  2115,   855,  2116,  2117,  2118,  2119,  2120,  2121,  2257,
       0,     0,     0,     0,     0,     0,     0,     0,  1559,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   878,     0,
       0,     0,  1816,   876,     0,  1817,     0,     0,  1559,     0,
       0,     0,     0,     0,     0,   876,  2025,     0,     0,     0,
       0,     0,  1828,     0,     0,     0,     0,     0,     0,     0,
    2268,     0,     0,     0,     0,     0,  1837,     0,   876,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1854,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
       0,     0,     0,     0,     0,   878,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,  1557,     0,
       0,     0,  1557,  1557,     0,     0,     0,     0,     0,   878,
       0,     0,     0,     0,     0,     0,   855,     0,     0,     0,
       0,     0,     0,     0,     0,   878,   878,   855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1910,     0,     0,     0,  1914,     0,
       0,     0,     0,     0,  2113,  2114,  2115,   878,  2116,  2117,
    2118,  2119,  2120,  2121,     0,     0,     0,   878,     0,  1930,
    1931,     0,  1559,     0,     0,     0,     0,     0,     0,     0,
     878,     0,     0,   878,     0,     0,  1939,     0,     0,     0,
       0,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   855,  1557,     0,     0,  1559,
       0,     0,     0,     0,     0,  1960,   855,     0,  1963,     0,
       0,     0,   877,     0,     0,     0,  2258,   877,   855,     0,
     877,  2269,     0,     0,  1974,     0,     0,   855,   855,     0,
       0,   855,     0,     0,     0,     0,     0,     0,     0,  3567,
       0,     0,   877,     0,   855,     0,     0,     0,     0,     0,
     855,     0,     0,     0,     0,   855,     0,     0,   855,     0,
       0,     0,     0,   855,   855,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   876,     0,   876,     0,     0,   877,   855,     0,
       0,     0,     0,   878,     0,     0,     0,     0,     0,  2025,
       0,   878,   878,     0,     0,     0,     0,   877,   877,     0,
       0,  2259,   855,     0,     0,  1559,     0,   855,   855,     0,
     855,     0,     0,     0,     0,     0,   855,     0,     0,     0,
       0,     0,  1559,  1816,     0,     0,  1817,     0,     0,  2258,
     877,     0,     0,     0,  2258,     0,  1559,     0,     0,     0,
       0,     0,     0,  1828,     0,     0,     0,     0,     0,     0,
       0,  2268,  1557,     0,     0,   876,     0,  1837,     0,     0,
       0,  2259,     0,     0,   855,  1387,     0,     0,     0,   877,
       0,  1388,     0,   877,     0,     0,  2257,     0,     0,     0,
       0,  1854,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   877,  2257,     0,   876,     0,     0,     0,     0,
       0,  1389,     0,     0,     0,   877,     0,     0,     0,     0,
       0,   855,     0,     0,     0,     0,   877,     0,     0,     0,
       0,  1557,     0,   877,     0,     0,     0,  1557,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,
       0,  1390,     0,     0,     0,     0,     0,     0,  1391,  3605,
       0,  1392,     0,     0,     0,     0,     0,     0,  1559,     0,
       0,   855,     0,  1559,     0,  1910,     0,     0,     0,  1914,
       0,     0,     0,  2258,     0,     0,     0,     0,     0,     0,
       0,     0,   855,     0,   855,  1559,     0,   855,     0,   855,
    1930,  1931,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1557,     0,  1393,  1939,     0,   855,
       0,     0,     0,     0,   855,     0,     0,     0,   855,     0,
       0,     0,  1816,  1559,     0,  1817,     0,     0,   855,     0,
       0,     0,     0,     0,     0,     0,  1960,     0,     0,  1963,
       0,   877,  1828,     0,     0,  3612,     0,     0,     0,     0,
    2268,     0,  2269,     0,     0,  1974,  1837,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1394,     0,  1395,     0,
     855,     0,     0,     0,     0,  2259,   877,  2257,  1396,     0,
    1854,     0,     0,     0,     0,     0,  1397,     0,     0,     0,
       0,     0,     0,     0,     0,   878,  1398,     0,  1559,     0,
       0,     0,  1559,  1559,     0,     0,     0,     0,     0,     0,
       0,   878,   877,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3144,
    2025,     0,  1400,  1401,     0,   877,     0,     0,     0,     0,
       0,     0,  1816,     0,     0,  1817,     0,     0,   855,     0,
     878,   878,     0,     0,     0,     0,     0,     0,  1402,     0,
       0,   878,  1828,     0,     0,  4182,     0,   855,     0,     0,
    2268,     0,     0,   878,   878,     0,  1837,     0,     0,     0,
       0,     0,     0,     0,  1910,     0,     0,   878,  1914,     0,
       0,  1559,     0,     0,     0,     0,     0,     0,  1403,     0,
    1854,     0,     0,     0,     0,     0,     0,     0,   855,  1930,
    1931,   855,     0,     0,     0,     0,  1404,     0,     0,     0,
       0,  2258,     0,     0,     0,   855,  1939,   855,  2258,   855,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1559,  1559,     0,
       0,     0,     0,   855,     0,  1960,  1557,     0,  1963,  1557,
       0,  1557,     0,  1405,  1406,     0,  1557,     0,     0,     0,
       0,  2269,     0,     0,  1974,     0,     0,     0,     0,     0,
     876,     0,     0,     0,     0,     0,     0,     0,  2113,  2114,
    2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,
       0,     0,     0,     0,  1910,     0,   855,  1407,  1914,     0,
       0,     0,     0,     0,     0,   877,  1557,     0,     0,     0,
       0,     0,     0,     0,     0,   855,     0,     0,     0,  1930,
    1931,     0,     0,     0,     0,     0,     0,   855,   855,     0,
       0,     0,     0,  2259,     0,     0,  1939,   855,     0,  2025,
       0,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1557,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   855,     0,     0,  1960,     0,     0,  1963,     0,
       0,     0,     0,     0,     0,     0,   594,     0,   877,     0,
       0,  2269,   646,   594,  1974,     0,     0,     0,   692,     0,
     594,     0,     0,   877,   877,   594,     0,   743,     0,     0,
       0,     0,     0,     0,     0,  1816,     0,     0,  1817,     0,
       0,   855,     0,     0,     0,     0,   807,     0,     0,     0,
     877,     0,     0,   877,     0,  1828,     0,     0,   855,     0,
       0,     0,     0,  2268,     0,     0,     0,     0,     0,  1837,
       0,     0,     0,     0,     0,     0,     0,  1557,     0,  1557,
       0,     0,     0,     0,     0,     0,     0,     0,  2257,  2025,
       0,     0,     0,  1854,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,
       0,  1557,     0,     0,     0,     0,     0,     0,  2257,     0,
       0,     0,  2258,  2258,  2258,     0,   855,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2257,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1557,     0,     0,   877,     0,
       0,     0,     0,     0,     0,   866,     0,  1910,     0,     0,
     877,  1914,     0,     0,     0,   855,   902,   903,     0,   906,
       0,   877,   912,     0,   914,     0,     0,     0,   922,  1557,
       0,     0,  1930,  1931,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2257,  1559,  2257,  1939,
       0,     0,     0,     0,     0,     0,     0,  2113,  2114,  2115,
       0,  2116,  2117,  2118,  2119,  2120,  2121,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1960,     0,
       0,  1963,     0,     0,     0,     0,     0,     0,     0,  2257,
       0,     0,     0,     0,  2269,     0,     0,  1974,  1557,     0,
       0,     0,  2257,     0,     0,     0,     0,     0,     0,   877,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1557,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1557,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2258,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   877,     0,   877,     0,  -955,     0,     0,
       0,     0,  2025,     0,     0,     0,     0,     0,     0,   606,
     877,     0,   877,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     607,     0,     0,     0,  1557,     0,     0,     0,     0,     0,
       0,     0,     0,   608,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   609,  1557,     0,     0,  -990,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   877,     0,
       0,     0,     0,     0,   610,     0,     0,     0,     0,     0,
     611,     0,  1557,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   612,     0,   877,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   613,     0,     0,
       0,   877,     0,     0,   878,   614,  -684,     0,  2259,   878,
       0,     0,   878,     0,  1557,     0,     0,   615,     0,     0,
     877,     0,     0,   877,   616,     0,     0,     0,   617,     0,
       0,     0,     0,     0,   878,     0,     0,     0,     0,     0,
       0,     0,     0, -1191,     0,     0,     0,     0,     0,     0,
    2113,  2114,  2115,     0,  2116,  2117,  2118,  2119,  2120,  2121,
    1387,     0,     0,     0,     0,     0,  1388,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,   618,     0,     0,     0,     0,     0,     0,  -751,
       0,  1434,     0,     0,     0,     0,     0,     0,     0,   878,
     878,     0,     0,  1557,  2258,     0,  1389,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   619,     0,     0,   620,     0,     0,     0,
       0,  2259,   878,     0,     0,   969,  2259,     0,  1435,     0,
       0,     0,     0,   977,     0,     0,     0,     0,     0,     0,
       0,     0,   993,   994,  1387,     0,  1390,   996,     0,     0,
    1388,  -492,     0,  1391,     0,     0,  1392,     0,     0,     0,
       0,   878,     0,  1549,  1016,   878,     0,     0,     0,   621,
       0,     0,     0,  1557,     0,   622,     0,     0,  1024,     0,
       0,  -492,     0,   878,   623,     0,     0,     0,     0,     0,
    1389,     0,     0,     0,   878,  1049,     0,     0,  1051,     0,
    1053,     0,  1056,     0,     0,  1557,     0,   878,  1436,     0,
    -492,  1393,   624,   625,     0,   626,   627,     0,   878,     0,
       0,     0,     0,     0,   628,   878,     0,  1219,     0,   629,
       0,     0,     0,     0,     0,   630,     0,     0,   631,     0,
    1390,   632,   594,     0,     0,     0,     0,  1391,     0,     0,
    1392,     0,     0,     0,  -492,     0,  1437,     0,  1281,     0,
     877,  1438,     0,     0,     0,  1115,     0,  1116,     0,     0,
       0,  1439,     0,  1395,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1396,     0,  2259,     0,     0,     0,     0,
       0,  1397,     0,     0,     0,     0,     0,     0,     0,     0,
    1440,  1398,     0,     0,  1549,  1393,     0,     0,     0,     0,
       0,     0,     0,     0,   633,     0,     0,     0,  2258,     0,
       0,     0,     0,   807,  2258,   634,  2258,     0,     0,   635,
       0,     0,     0,     0,  3261,     0,     0,  1400,  1401,  1442,
       0,     0,     0,   636,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3262,  2258,  1394,     0,  1395,     0,     0,
       0,     0,     0,     0,  1444,     0,     0,  1396,     0,     0,
    1551,     0,     0,  1347,     0,  1397,   877,  1557,   878,   877,
       0,     0,     0,     0,     0,  1398,     0,     0,     0,  1387,
       0,     0,     0,  1403,     0,  1388,     0,     0,     0,     0,
    1387,     0,     0,     0,     0,     0,  1388,     0,     0,     0,
       0,  1404,     0,  1557,   878,     0,     0,     0,  3274,  1557,
       0,  1400,  1401,     0,     0,  2258,     0,     0,     0,     0,
       0,     0,  1489,     0,  1492,  1389,     0,   878,     0,     0,
       0,     0,     0,     0,     0,     0,  1389,  3275,     0,  1504,
       0,     0,     0,     0,     0,     0,     0,     0,  1405,  1406,
       0,     0,  1514,     0,     0,     0,     0,     0,     0,  1516,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1563,     0,     0,  1567,  1390,     0,  1403,     0,     0,
       0,     0,  1391,   877,   877,  1392,  1390,     0,     0,     0,
     877,     0,  1407,  1391,  1549,  1404,  1392,     0,     0,  1599,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1615,     0,  2259,     0,     0,     0,     0,     0,     0,
    2259,     0,     0,     0,  1557,     0,  1387,     0,     0,     0,
       0,     0,  1388,     0,     0,     0,     0,     0,     0,  1557,
    1393,     0,  1405,  1406,     0,     0,     0,     0,     0,     0,
       0,  1393,     0,     0,  1549,     0,     0,     0,     0,  1662,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,  1389,     0,     0,     0,     0,  1748,     0,   594,
       0,   594,     0,   594,     0,   594,  1407,   594,   594,   594,
       0,     0,     0,     0,   594,  1549,     0,     0,     0,     0,
    1394,     0,  1395,     0,     0,     0,  1772,   878,     0,     0,
       0,  1394,  1396,  1395,     0,     0,     0,     0,     0,     0,
    1397,     0,  1390,  1396,     0,     0,     0,     0,     0,  1391,
    1398,  1397,  1392,     0,     0,     0,     0,     0,     0,  1802,
    1803,  1398,  1806,     0,     0,     0,     0,     0,     0,     0,
       0,  1557,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2131,     0,  3314,     0,     0,  1400,  1401,     0,     0,
       0,     0,     0,     0,  3783,     0,  1549,  1400,  1401,     0,
     878,     0,     0,     0,     0,     0,     0,  1393,     0,     0,
       0,     0,  3315,     0,     0,   878,   878,     0,     0,     0,
       0,     0,  2167,  3784,  1557,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,  1549,     0,     0,     0,     0,     0,
       0,     0,   878,     0,     0,   878,     0,     0,     0,     0,
       0,     0,  1403,     0,     0,     0,     0,  2286,     0,  1549,
       0,  2298,  2303,  1403,  1557,     0,     0,  1394,     0,  1395,
    1404,     0,     0,     0,     0,     0,     0,     0,     0,  1396,
       0,  1404,     0,     0,     0,     0,     0,  1397,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,  1398,     0,     0,
       0,     0,     0,     0,   807,     0,     0,   877,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1405,  1406,     0,
       0,     0,  1557,  1549,     0,     0,     0,     0,  1405,  1406,
    3855,     0,  1551,  1400,  1401,  2258,     0,     0,     0,     0,
       0,     0,     0,     0,  2259,  2259,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3856,
       0,  1407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1407,  2404,     0,     0,     0,     0,     0,   877,
     878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,   878,     0,     0,     0,     0,     0,     0,  1403,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1551,   877,     0,     0,  1404,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,     0,     0,  1405,  1406,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,     0,     0,     0,
       0,     0,     0,     0,     0,  1557,     0,     0,     0,     0,
       0,   878,     0,     0,     0,     0,     0,     0,   189,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1407,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2259,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,   190,   878,     0,   878,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   191,     0,
       0,     0,   878,     0,   878,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   192,     0,     0,     0,     0,
       0,   193,     0,     0,     0,     0,     0,     0,   877,  2634,
       0,     0,     0,     0,     0,     0,   194,     0,     0,     0,
       0,  1557,     0,     0,  2657,     0,     0,     0,   195,     0,
       0,     0,     0,     0,     0,     0,   196,   197,  1557,     0,
     878,     0,     0,     0,     0,     0,     0,     0,   198,     0,
       0,     0,  1557,   199,     0,  2698,     0,     0,     0,   200,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   878,
       0,     0,  2710,     0,   201,     0,     0,     0,     0,     0,
       0,     0,     0,   878,     0,     0,     0,  2725,     0,  2727,
       0,  2728,     0,     0,     0,     0,  2729,     0,     0,   202,
       0,     0,   878,     0,     0,   878,     0,     0,   877,     0,
     877,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     203,   594,     0,   594,     0,   594,  2825,   594,     0,   594,
       0,     0,     0,   594,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,     0,  2848,
       0,     0,  2850,     0,   204,  2861,     0,     0,     0,     0,
       0,     0,     0,  2870,  2875,     0,     0,     0,  2880,  2882,
       0,     0,  2887,     0,  2889,     0,     0,  2892,     0,     0,
       0,     0,     0,   205,     0,     0,  2259,     0,     0,     0,
       0,   877,     0,     0,  1557,     0,     0,     0,     0,  1557,
       0,     0,     0,     0,  2900,     0,     0,     0,     0,     0,
     206,     0,  2258,     0,   207,     0,   208,     0,     0,     0,
       0,  1557,   209,     0,     0,   210,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,     0,  2258,
       0,   877,     0,     0,     0,     0,     0,     0,     0,     0,
     211,   212,     0,   213,     0,     0,     0,   214,     0,  1557,
       0,     0,     0,     0,     0,   215,   658,     0,     0,     0,
     216,     0,     0,     0,     0,     0,     0,     0,   659,     0,
       0,     0,   217,     0,     0,     0,  2907,     0,     0,     0,
       0,     0,     0,     0,     0,   218,     0,     0,     0,   660,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   661,     0,     0,  2919,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   662,     0,     0,     0,
       0,     0,     0,     0,  1557,     0,     0,     0,  1557,  1557,
       0,     0,     0,   663,     0,     0,     0,     0,     0,     0,
    2926,     0,   878,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   219,   664,     0,     0,     0,     0,     0,
     220,     0,     0,     0,     0,  1552,   665,     0,     0,     0,
       0,     0,     0,     0,   666,   667,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   668,     0,     0,     0,
       0,   669,     0,     0,     0,     0,     0,   670,     0,     0,
    2259,     0,     0,     0,     0,     0,  2259,     0,  2259,     0,
       0,     0,   671,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2258,     0,     0,     0,     0,     0,  1549,
       0,     0,     0,  1549,  1549,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   672,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   878,     0,
       0,   878,     0,  1557,  1557,     0,     0,     0,     0,  2928,
    2929,  2930,  2931,  2932,  2933,  2934,  2935,  2936,     0,  2937,
       0,     0,   673,     0,     0,     0,     0,     0,     0,     0,
    1219,  2965,     0,   674,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2259,     0,     0,
       0,   205,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1549,   675,     0,
       0,     0,   676,     0,   677,     0,     0,     0,     0,     0,
     678,     0,     0,   679,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   878,   878,     0,     0,   680,
       0,   681,   878,     0,     0,   682,     0,     0,     0,     0,
       0,     0,     0,   683,     0,     0,     0,     0,   684,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     685,     0,     0,     0,     0,     0,   877,     0,     0,     0,
       0,     0,     0,   686,     0,  1552,     0,  1281,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,     0,     0,     0,
    1551,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1802,  1803,     0,     0,     0,
       0,     0,     0,   878,     0,     0,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   877,     0,
       0,   687,     0,     0,     0,  2988,  2989,     0,   688,     0,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3082,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,  1551,     0,     0,     0,     0,     0,
    3050,  3051,     0,     0,     0,  3054,  3055,     0,     0,  3058,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3068,
       0,     0,  1549,     0,     0,  1552,  3077,     0,  1549,     0,
    3080,  3081,     0,     0,  3084,  3085,     0,     0,     0,     0,
       0,  3090,     0,     0,  2258,     0,     0,     0,     0,     0,
    1552,     0,     0,  3106,     0,  3108,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1557,     0,  3134,     0,     0,     0,     0,
    3136,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3143,     0,     0,     0,
       0,     0,     0,     0,  2258,  3164,     0,     0,     0,     0,
    3169,  3170,  3173,  3175,  1552,  1549,     0,     0,     0,   878,
    3185,  3188,     0,     0,  2258,     0,     0,     0,  3199,     0,
       0,     0,     0,  3209,     0,     0,     0,     0,     0,     0,
       0,  3220,     0,     0,     0,     0,     0,  2259,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3260,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3267,     0,  3269,     0,     0,     0,     0,  3272,
       0,   878,  2258,  3273,  2258,  3277,  3278,  3279,  3280,     0,
    3282,     0,     0,   878,  3362,     0,     0,     0,     0,     0,
       0,     0,     0,  3306,  3307,     0,  3309,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   878,  3317,  3318,  3319,
       0,     0,     0,     0,     0,  2258,     0,     0,     0,  1551,
       0,     0,     0,     0,     0,  1551,     0,     0,  2258,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3390,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,  3498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1549,     0,     0,
    1549,     0,  1549,     0,     0,     0,     0,  1549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3547,     0,
       0,     0,     0,  3554,     0,     0,     0,  1549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,     0,  3525,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2875,     0,  2875,
    2875,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,  3615,     0,     0,  3618,     0,     0,     0,     0,     0,
    3625,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     878,     0,   878,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3646,     0,  3648,
       0,     0,     0,  3651,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2965,  2965,  2965,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1549,     0,
    1549,     0,  3695,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   878,  1551,     0,     0,  1551,  2286,  1551,
       0,     0,     0,     0,  1551,     0,     0,     0,     0,     0,
       0,     0,     0,  2303,  2259,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2259,  1549,   878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1551,  3697,     0,  1555,     0,     0,
       0,  1554,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,  3744,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1549,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3735,  3736,     0,     0,
    1549,  1554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3758,     0,
       0,     0,  1554,     0,     0,     0,     0,  3762,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3773,  3775,     0,     0,     0,  3775,     0,  1549,
       0,     0,  3786,  3787,  3788,  1551,     0,  1551,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1552,     0,  1549,     0,  1552,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2259,     0,     0,     0,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
    3828,  3829,  3830,  3831,     0,     0,     0,     0,     0,  1551,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1549,  3854,     0,  3858,  3859,
    3860,     0,     0,  1551,     0,     0,  1554,     0,  3873,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,  1552,     0,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3925,     0,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,  3940,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   878,  1551,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4011,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,  1549,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,  4042,     0,     0,  1555,
     878,  4046,  1551,     0,     0,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4088,
       0,     0,     0,     0,  1549,  4130,     0,  1554,     0,     0,
    1551,     0,     0,  4098,     0,  4134,     0,     0,     0,     0,
       0,  4135,     0,  4136,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,  1549,     0,     0,  1552,
    1555,     0,     0,     0,     0,  4154,  4155,     0,     0,  1556,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4169,     0,     0,     0,     0,
    2882,     0,     0,     0,     0,  4183,  2259,     0,  1555,     0,
       0,     0,     0,     0,     0,  4190,     0,  1556,  4193,     0,
    4195,     0,     0,     0,     0,     0,     0,     0,     0,  4199,
       0,     0,     0,  1555,     0,  4204,     0,     0,  4207,     0,
       0,     0,  1556,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,  4249,     0,     0,
       0,  1551,     0,  4256,  2965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,  4267,
       0,     0,     0,     0,     0,  1219,  1556,     0,     0,     0,
       0,  1281,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1549,     0,
       0,  1551,     0,     0,  2259,     0,  2259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1551,  1549,     0,     0,     0,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,  2259,     0,     0,
       0,     0,     0,  4307,     0,  4308,     0,     0,     0,     0,
    2259,     0,  4310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4319,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4363,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,  4368,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,  1552,     0,
       0,  1552,     0,  1552,     0,     0,     0,     0,  1552,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4429,  4430,  4431,     0,     0,  4434,  4435,  4436,  4437,  4438,
       0,     0,     0,     0,  4445,  4446,     0,  4448,  4449,  4450,
    4451,  4452,  4453,  4454,     0,  1551,     0,     0,  1552,     0,
       0,     0,  4462,     0,     0,  4464,  4465,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,  1551,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1549,     0,     0,     0,     0,     0,     0,  4515,
    4517,  4519,     0,     0,  4522,     0,  1554,     0,     0,     0,
    1554,  1554,     0,     0,  4583,  4584,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1552,
       0,  1552,     0,     0,     0,  4615,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,  1549,     0,     0,     0,     0,
       0,     0,     0,  3775,     0,     0,     0,  1551,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1554,  4635,  4637,     0,     0,     0,
    4643,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,  4648,  1549,     0,     0,     0,     0,  4653,  4654,
       0,     0,  4656,     0,     0,  4659,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4669,
       0,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2965,     0,     0,     0,     0,  2965,     0,
       0,     0,     0,  2965,     0,     0,     0,     0,     0,  1551,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4710,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1552,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1552,  1551,     0,     0,     0,  1549,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4729,
    4730,  4731,  4732,     0,     0,  4734,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1555,     0,     0,     0,  1555,  1555,     0,
    1551,     0,  1556,     0,     0,     0,  1556,  1556,     0,  1554,
       0,     0,     0,     0,     0,  1554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4791,  4792,  4793,  4794,  1552,  4796,  4797,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4806,
    4807,     0,  1549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,     0,  1549,
       0,     0,  4816,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,  4861,     0,     0,     0,
       0,  1555,     0,     0,     0,     0,  1552,     0,     0,     0,
    1556,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1551,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4877,
       0,     0,     0,     0,     0,     0,     0,     0,  4883,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4904,     0,     0,     0,     0,     0,     0,     0,  4952,     0,
       0,     0,     0,     0,     0,  1549,     0,     0,     0,     0,
    1549,  4956,     0,     0,     0,     0,  4928,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4985,  4986,     0,     0,  1555,     0,  1551,
       0,     0,     0,     0,     0,  1552,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1551,     0,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2965,     0,
    2965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   594,     0,     0,     0,
       0,     0,     0,     0,  1554,     0,  1555,  1554,     0,  1554,
       0,     0,  1555,     0,  1554,  1556,     0,     0,     0,     0,
       0,  1556,     0,     0,     0,  1549,     0,     0,     0,  1549,
    1549,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5027,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1554,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5050,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,  1555,
       0,     0,  1551,     0,     0,     0,     0,  1551,  1556,     0,
    1554,     0,     0,     0,     0,     0,  5065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1551,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1552,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1551,     0,     0,
       0,     0,  5153,     0,  1549,  1549,     0,  2882,     0,     0,
       0,     0,     0,     0,     0,  1552,     0,     0,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,  5168,
       0,     0,     0,     0,  5171,  1554,     0,  1554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1806,     0,
       0,     0,  3775,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,  1551,  1551,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1552,     0,  5199,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1554,     0,     0,
    5216,  1555,     0,     0,  1555,     0,  1555,  5259,     0,     0,
    1556,  1555,     0,  1556,     0,  1556,     0,     0,     0,     0,
    1556,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,  1551,     0,     0,     0,     0,     0,  2286,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1555,     0,     0,     0,     0,  1554,     0,     0,  4985,
    1556,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,  1554,     0,     0,
       0,     0,     0,  5321,     0,     0,     0,     0,  3775,  1554,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,  5334,     0,     0,  1552,  5378,  5378,     0,
       0,     0,     0,     0,     0,     0,     0,  4985,     0,     0,
       0,     0,  1554,     0,  1549,     0,     0,     0,  5348,     0,
       0,     0,  1555,  5352,  1555,     0,     0,     0,     0,     0,
       0,  1556,     0,  1556,  2123,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,  2123,     0,
       0,     0,     0,  2857,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5378,  1554,     0,     0,     0,  1555,     0,  2123,  2123,
       0,     0,  2123,     0,  5400,  1556,     0,     0,  5455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1555,     0,     0,     0,     0,     0,     0,     0,     0,  1556,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,  1554,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5378,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1552,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,  1555,     0,     0,     0,     0,     0,     0,
       0,     0,  1556,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,     0,
    1552,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,  1552,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1554,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,  1552,  1554,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1552,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,     0,     0,  2123,
       0,     0,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,     0,     0,
    1555,     0,     0,     0,     0,     0,     0,  1554,     0,  1556,
       0,     0,     0,     0,     0,     0,  1552,     0,     0,     0,
    1552,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1552,  1552,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1555,     0,     0,     0,     0,     0,     0,     0,
       0,  1556,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,  1555,     0,     0,  1556,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,     0,     0,     0,     0,  1556,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1554,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,  2123,     0,  2857,  2857,
    3585,     0,     0,  2857,     0,     0,     0,  2123,     0,  1555,
       0,     0,     0,     0,     0,     0,  2123,     0,  1556,     0,
       0,  2123,     0,     0,     0,  1552,  2123,     0,  2123,     0,
       0,     0,     0,  2123,     0,  2123,     0,     0,  2123,  1554,
       0,     0,     0,     0,     0,     0,  2123,     0,     0,  1555,
    2857,  2857,     0,  2123,     0,     0,  1554,     0,  1556,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
    1554,     0,  2123,     0,  2123,  2123,  2123,  2123,  2123,  2123,
    2123,  2123,  2123,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1555,     0,     0,
       0,  2123,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,  1554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2123,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1555,     0,     0,     0,     0,     0,     0,  1554,     0,  1556,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1554,     0,     0,     0,  1554,  1554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,  1555,     0,     0,     0,     0,     0,     0,
       0,     0,  1556,     0,     0,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,  1554,     0,     0,     0,     0,     0,  2123,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,     0,     0,     0,  1555,     0,     0,     0,  1556,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1555,     0,     0,     0,
       0,     0,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2123,     0,     0,     0,     0,     0,  1555,
    2123,     0,     0,  1555,  1555,     0,     0,     0,  1556,     0,
       0,     0,  1556,  1556,     0,     0,  3585,  3585,     0,  2857,
       0,     0,  2857,  2857,  2857,  2857,  2857,  2857,  2857,  2857,
    2857,  2857,  3585,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,  2123,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,     0,  3585,  3585,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2857,  2857,  2123,     0,  2123,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,     0,     0,     0,  1555,  1555,
       0,     0,     0,     0,     0,     0,     0,  1556,  1556,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1554,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2123,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2857,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,  1556,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2123,     0,     0,     0,
    2123,  2123,  2123,     0,     0,  3585,     0,     0,     0,     0,
    3585,  3585,  3585,  3585,  3585,  3585,  3585,  3585,  3585,  3585,
    2123,  2123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2123,
       0,     0,     0,     0,     0,     0,  2123,  2857,  2857,  2123,
       0,  2123,     0,     0,     0,  2123,  3585,  3585,     0,     0,
    2123,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3585,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2123,
    2123,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,     0,     0,  2857,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,     0,  2123,     0,     0,     0,     0,     0,  2123,
       0,     0,  3585,  3585,  2123,     0,     0,  2857,  2857,  2123,
    2123,     0,  2123,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2123,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3585,  2857,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2123,     0,
    3585,  3585,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2123,
    3585,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2168,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2123,   224,   225,   226,   227,   228,   229,   230,   231,
    2169,   233,   234,   235,  2170,  2171,  2172,  2173,  2174,  2175,
    2176,   236,   237,  2177,   238,   239,   830,   240,   241,   242,
     243,   244,   831,   245,   246,  2178,   247,   248,   249,   250,
     251,  2179,  2180,   252,   253,   254,   255,   256,  2181,   257,
     258,   259,   260,   261,  2182,   832,  2183,   262,   263,   264,
     265,   266,   833,   267,   268,  2184,   269,   270,   271,   272,
     273,   274,  2185,   834,  5516,   276,  2186,  2187,  2188,   835,
    2189,  2190,  2191,   277,   278,   279,   280,   281,   282,   283,
     284,   285,  2192,   286,  2193,   287,   288,   289,  5517,   291,
    2194,   292,   293,   294,  2195,  2196,   295,   296,   297,   298,
     299,  2197,   300,   301,   302,  2198,   303,   304,  5518,   306,
    2199,  2200,   307,   308,   309,   310,   311,   312,   313,   314,
    2201,   315,  2202,   316,   317,   318,  2203,  2204,  5519,  2205,
     320,   836,  2206,   837,   321,   322,   323,  2207,   324,   325,
    2208,   326,  2209,  5520,   328,   329,   330,   331,   838,   332,
     333,   334,  2210,   335,   336,   337,   338,   339,   340,  2211,
     341,   839,   342,   343,   344,   345,   346,   347,   348,  2212,
     349,  2213,   350,   840,   841,   351,   842,   352,   353,   354,
     355,   356,  2214,   357,   358,  2215,   359,   360,   843,   361,
     844,  2216,   362,   363,   364,  2217,  2218,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   845,   382,   383,   384,   385,  2219,
     386,   387,   846,   388,  5521,   389,   390,   391,   392,   393,
     394,  2221,   395,  2222,  2223,   396,   397,   398,  2224,  2225,
     399,   400,   847,   401,   848,   402,   403,   404,   405,   406,
    2226,   407,   408,  2227,   409,   410,  2228,   411,   412,   413,
     414,  2229,   415,   416,   417,   418,   419,  5522,   421,   422,
     423,   424,   425,   426,   427,  2230,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,  2231,   439,   440,
     849,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,  2232,   452,   453,   454,   455,   456,  2233,   457,
     458,   459,   460,   850,   461,   462,   463,  2234,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,  2235,
     475,   476,  2236,   477,   478,   479,   480,   481,   482,  2237,
     483,   484,  2238,  2239,   485,   486,   487,   488,  2240,   489,
     490,   491,   492,  2241,   493,   494,  2242,  2243,   495,   496,
     497,   498,   499,  2244,  2245,   500,   501,   502,   503,   504,
     505,   506,  2246,   507,   851,   508,   509,   510,   511,  2247,
    2248,   512,  2249,  2250,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,  2251,   537,
    2252,   538,   539,   540,   541,   542,   543,  5523,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,  5524,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,  2253,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2168,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5525,   224,   225,
     226,   227,   228,   229,   230,   231,  2169,   233,   234,   235,
    2170,  2171,  2172,  2173,  2174,  2175,  2176,   236,   237,  2177,
     238,   239,   830,   240,   241,   242,   243,   244,   831,   245,
     246,  2178,   247,   248,   249,   250,   251,  2179,  2180,   252,
     253,   254,   255,   256,  2181,   257,   258,   259,   260,   261,
    2182,   832,  2183,   262,   263,   264,   265,   266,   833,   267,
     268,  2184,   269,   270,   271,   272,   273,   274,  2185,   834,
     275,   276,  2186,  2187,  2188,   835,  2189,  2190,  2191,   277,
     278,   279,   280,   281,   282,   283,   284,   285,  2192,   286,
    2193,   287,   288,   289,   290,   291,  2194,   292,   293,   294,
    2195,  2196,   295,   296,   297,   298,   299,  2197,   300,   301,
     302,  2198,   303,   304,   305,   306,  2199,  2200,   307,   308,
     309,   310,   311,   312,   313,   314,  2201,   315,  2202,   316,
     317,   318,  2203,  2204,   319,  2205,   320,   836,  2206,   837,
     321,   322,   323,  2207,   324,   325,  2208,   326,  2209,   327,
     328,   329,   330,   331,   838,   332,   333,   334,  2210,   335,
     336,   337,   338,   339,   340,  2211,   341,   839,   342,   343,
     344,   345,   346,   347,   348,  2212,   349,  2213,   350,   840,
     841,   351,   842,   352,   353,   354,   355,   356,  2214,   357,
     358,  2215,   359,   360,   843,   361,   844,  2216,   362,   363,
     364,  2217,  2218,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     845,   382,   383,   384,   385,  2219,   386,   387,   846,   388,
    2220,   389,   390,   391,   392,   393,   394,  2221,   395,  2222,
    2223,   396,   397,   398,  2224,  2225,   399,   400,   847,   401,
     848,   402,   403,   404,   405,   406,  2226,   407,   408,  2227,
     409,   410,  2228,   411,   412,   413,   414,  2229,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  2230,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,  2231,   439,   440,   849,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,  2232,   452,
     453,   454,   455,   456,  2233,   457,   458,   459,   460,   850,
     461,   462,   463,  2234,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,  2235,   475,   476,  2236,   477,
     478,   479,   480,   481,   482,  2237,   483,   484,  2238,  2239,
     485,   486,   487,   488,  2240,   489,   490,   491,   492,  2241,
     493,   494,  2242,  2243,   495,   496,   497,   498,   499,  2244,
    2245,   500,   501,   502,   503,   504,   505,   506,  2246,   507,
     851,   508,   509,   510,   511,  2247,  2248,   512,  2249,  2250,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,  2251,   537,  2252,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
    2253,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   829,  1132,   653,  1133,  1134,  1135,   708,
    1136,     0,     0,  5603,   224,   225,   226,   227,   228,   229,
     230,   231,  2959,   233,   234,   235,     0,     0,     0,     0,
    1137,     0,     0,   236,   237,     0,   238,   239,   830,   240,
     241,   242,   243,  1138,   831,  1139,  1140,     0,   247,   248,
     249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,
       0,   257,   258,   259,   260,  1145,     0,  1146,     0,   262,
     263,   264,   265,   266,   833,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,   834,   275,   276,  1147,  1148,
    1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,
     282,  1154,  1155,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,  2960,     0,   295,   296,
    1156,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,  1157,   311,   312,
     313,  1158,  1159,   315,     0,   316,   317,  1160,     0,     0,
     319,     0,   320,   836,     0,   837,   321,   322,   323,     0,
     324,  1161,     0,   326,     0,   327,   328,   329,   330,   331,
     838,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,   839,   342,   343,   344,   345,   346,  1162,
    1163,     0,  1164,     0,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,  1165,
     843,   361,   844,     0,   362,   363,   364,  1166,  1167,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1168,   845,  1169,   383,   384,
     385,  1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,
     392,   393,   394,     0,   395,     0,     0,  1174,   397,   398,
       0,     0,   399,   400,   847,   401,   848,  1175,   403,   404,
     405,   406,     0,   407,   408,     0,   409,  1176,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,  1177,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   849,   441,   442,  1178,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
    1179,   457,   458,   459,   460,   850,   461,  1180,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
    1181,     0,   475,   476,  1182,   477,   478,   479,   480,   481,
     482,     0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,
    1187,   489,   490,   491,   492,     0,   493,   494,     0,  1188,
     495,   496,   497,   498,   499,  1189,     0,   500,   501,   502,
     503,   504,   505,  1190,  2961,   507,   851,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    1199,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,  1200,  1201,   549,   550,   551,   552,   553,   554,
     555,   556,  1202,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,     0,     0,     0,     0,  1203,  1204,  2962,
     829,  1132,   653,  1133,  1134,  1135,   708,  1136,  1206,  2963,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,  1137,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
    1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,  1157,   311,   312,   313,  1158,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,  1170,   386,
     387,   846,   388,  1171,  1172,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,  1174,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,  1178,   444,   445,   446,   447,   448,   449,   450,
     451,    38,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,  1804,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,  1188,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,  1071,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,    47,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  1199,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    1201,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,     0,     0,     0,
       0,     0,     0,     0,  1203,  1204,   829,  1132,   653,  1133,
    1134,  1135,   708,  1136,     0,  1206,  5182,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,  1137,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,  1141,  1142,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
    1157,   311,   312,   313,  1158,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,  1170,   386,   387,   846,   388,  1171,
    1172,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
    1174,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,  1178,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,  1182,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
    1185,   487,  1186,  1187,   489,   490,   491,   492,     0,   493,
     494,     0,  1188,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  1199,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,     0,     0,     0,     0,     0,     0,     0,
    1203,  1204,   223,     0,     0,     0,     0,     0,     0,     0,
       0,  1206,  2859,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
    4227,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0, -1787,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0, -1787,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341, -1787,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351, -1787,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360, -1787,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381, -1787,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440, -1787,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,  1525,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     224,   225,   226,   227,   228,   229,   230,   231,  1290,   233,
     234,   235,     0,     0,     0,     0,     0,     0,     0,   236,
     237,     0,   238,   239,   830,   240,   241,   242,     0,  1526,
     831,  1527,  1528,     0,   247,   248,   249,   250,   251,     0,
       0,   252,   253,  1529,  1530,   256,     0,   257,   258,   259,
     260,     0,     0,   832,     0,   262,   263,   264,   265,   266,
     833,   267,   268,     0,   269,   270,   271,   272,   273,   274,
       0,   834,   275,   276,     0,     0,     0,   835,     0,     0,
       0,   277,   278,   279,   280,   281,   282,  1531,  1532,   285,
       0,   286,     0,   287,   288,   289,   290,   291,     0,   292,
     293,   294,     0,     0,   295,   296,  1156,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,     0,     0,
     307,   308,   309,     0,   311,   312,   313,     0,     0,   315,
       0,   316,   317,  1533,     0,     0,   319,     0,   320,   836,
       0,   837,   321,   322,   323,     0,   324,     0,     0,   326,
       0,   327,   328,   329,   330,   331,   838,   332,   333,   334,
    2322,   335,   336,   337,   338,   339,   340,     0,   341,   839,
    2323,   343,   344,   345,   346,  1534,  1535,     0,  1536,     0,
     350,   840,   841,   351,   842,   352,   353,   354,   355,   356,
       0,   357,   358,     0,   359,     0,   843,   361,   844,     0,
     362,   363,   364,     0,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1537,   845,  1538,   383,   384,     0,     0,   386,   387,
     846,   388,     0,     0,   390,  1539,   392,   393,   394,     0,
     395,     0,     0,   396,   397,   398,     0,     0,   399,  2325,
     847,   401,   848,     0,   403,   404,   405,   406,     0,   407,
     408,     0,   409,     0,     0,     0,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,   422,  1540,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,     0,   439,   440,   849,   441,
     442,     0,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,   453,   454,   455,   456,     0,   457,  2326,   459,
     460,   850,   461,  1542,   463,     0,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,     0,     0,   475,   476,
       0,   477,   478,   479,   480,   481,   482,     0,  1543,  1544,
       0,     0,   485,     0,   487,     0,     0,   489,   490,   491,
     492,     0,   493,   494,     0,     0,   495,   496,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,     0,  1545,
    2327,   507,   851,   508,   509,   510,   511,     0,     0,   512,
       0,     0,   513,   514,   515,   516,   517,   518,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,   537,     0,   538,
     539,   540,   541,   542,   543,   544,   545,   546,     0,     0,
     549,   550,   551,   552,   553,   554,   555,   556,     0,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
       0,   580,     0,   581,   582,     0,   584,   585,   586,   587,
     588,   589,   590,   591,   592,     0,  1525,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  2432,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,     0,  1526,   831,  1527,  1528,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
    1529,  1530,   256,     0,   257,   258,   259,   260,     0,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,  1531,  1532,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
       0,   311,   312,   313,     0,     0,   315,     0,   316,   317,
    1533,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,     0,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,  2322,   335,   336,
     337,   338,   339,   340,     0,   341,   839,  2323,   343,   344,
     345,   346,  1534,  1535,     0,  1536,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,     0,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1537,   845,
    1538,   383,   384,     0,     0,   386,   387,   846,   388,     0,
       0,   390,  1539,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,  2325,   847,   401,   848,
       0,   403,   404,   405,   406,     0,   407,   408,     0,   409,
       0,     0,     0,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1540,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,     0,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,  2326,   459,   460,   850,   461,
    1542,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     0,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,  1543,  1544,     0,     0,   485,
       0,   487,     0,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,     0,  1545,  2327,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,     0,     0,   549,   550,   551,
     552,   553,   554,   555,   556,     0,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,     0,   580,     0,
     581,   582,     0,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1525,  1412,   653,     0,     0,   884,   708,     0,
       0,     0,  3461,   224,   225,   226,   227,   228,   229,   230,
     231,  2169,   233,   234,   235,  2170,  2171,  2172,  2173,  2174,
    2175,  2176,   236,   237,  2177,   238,   239,   830,   240,   241,
     242,     0,  1526,   831,  1527,  1528,  2178,   247,   248,   249,
     250,   251,  2179,  2180,   252,   253,  1529,  1530,   256,  2181,
     257,   258,   259,   260,     0,  2182,   832,  2183,   262,   263,
     264,   265,   266,   833,   267,   268,  2184,   269,   270,   271,
     272,   273,   274,  2185,   834,   275,   276,  2186,  2187,  2188,
     835,  2189,  2190,  2191,   277,   278,   279,   280,   281,   282,
    1531,  1532,   285,  2192,   286,  2193,   287,   288,   289,   290,
     291,  2194,   292,   293,   294,  2195,  2196,   295,   296,  1156,
     298,   299,  2197,   300,   301,   302,  2198,   303,   304,   305,
     306,  2199,  2200,   307,   308,   309,     0,   311,   312,   313,
       0,  2201,   315,  2202,   316,   317,  1533,  2203,  2204,   319,
    2205,   320,   836,  2206,   837,   321,   322,   323,  2207,   324,
       0,  2208,   326,  2209,   327,   328,   329,   330,   331,   838,
     332,   333,   334,  2210,   335,   336,   337,   338,   339,   340,
    2211,   341,   839,     0,   343,   344,   345,   346,  1534,  1535,
    2212,  1536,  2213,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,  2214,   357,   358,  2215,   359,     0,   843,
     361,   844,  2216,   362,   363,   364,  2217,  2218,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1537,   845,  1538,   383,   384,  3972,
    2219,   386,   387,   846,   388,  2220,     0,   390,  1539,   392,
     393,   394,  2221,   395,  2222,  2223,  3973,   397,   398,  2224,
    2225,   399,     0,   847,   401,   848,     0,   403,   404,   405,
     406,  2226,   407,   408,  2227,   409,     0,  2228,     0,   412,
     413,   414,  2229,   415,   416,   417,   418,   419,   420,   421,
     422,  1540,   424,   425,   426,   427,  2230,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,  2231,   439,
     440,   849,   441,   442,  3974,   444,   445,   446,   447,   448,
     449,   450,   451,  2232,   452,   453,   454,   455,   456,  2233,
     457,  2326,   459,   460,   850,   461,  1542,   463,  2234,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     0,
    2235,   475,   476,  2236,   477,   478,   479,   480,   481,   482,
    2237,  1543,  1544,  2238,  2239,   485,     0,   487,     0,  2240,
     489,   490,   491,   492,  2241,   493,   494,  2242,  2243,   495,
     496,   497,   498,   499,  2244,  2245,   500,   501,   502,   503,
     504,     0,  1545,  2246,   507,   851,   508,   509,   510,   511,
    2247,  2248,   512,  2249,  2250,   513,   514,   515,   516,   517,
     518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  2251,
     537,  2252,   538,   539,   540,   541,   542,   543,   544,   545,
     546,     0,     0,   549,   550,   551,   552,   553,   554,   555,
     556,     0,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,     0,   580,  2253,   581,   582,     0,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,     0,
       0,     0,   887,   888,   889,     0,  3975,  3976,   892,   893,
     894,   895,     0,     0,     0,     0,     0,  5601,   829,  1132,
     653,  1133,  1134,  1135,   708,  1136,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,  1137,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,  2871,   247,   248,   249,   250,   251,  1141,  1142,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,  1157,   311,   312,   313,  1158,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,  2872,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,  2873,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,  1170,   386,   387,   846,
     388,  1171,  1172,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,  1174,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
    1178,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,  1182,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
    2874,   485,  1185,   487,  1186,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,  1188,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  1199,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,  1132,   653,  1133,  1134,  1135,
     708,  1136,  1203,  1204,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  1206,   233,   234,   235,     0,     0,     0,
       0,  1137,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,   247,
     248,   249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,  1157,   311,
     312,   313,  1158,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
     384,   385,  1170,   386,   387,   846,   388,  1171,  1172,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,  1174,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,  1178,   444,   445,   446,
     447,   448,   449,   450,   451,    38,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,  1804,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,  1185,   487,
    1186,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
    1188,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,  1071,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,    47,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  1199,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,  1132,   653,  1133,  1134,  1135,   708,  1136,  1203,  1204,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1206,
     233,   234,   235,     0,     0,     0,     0,  1137,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
    1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,  1157,   311,   312,   313,  1158,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,  1170,   386,
     387,   846,   388,  1171,  1172,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,  1174,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,  1178,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,  1182,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,  1188,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,   505,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  1199,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    1201,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,     0,     0,     0,
       0,     0,     0,     0,  1203,  1204,     0,     0,     0,     0,
       0,  1743,  2817,     0,     0,  1206,   829,  1132,   653,  1133,
    1134,  1135,   708,  1136,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,  1137,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,  1141,  1142,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
    1157,   311,   312,   313,  1158,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,  1170,   386,   387,   846,   388,  1171,
    1172,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
    1174,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,  1178,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,  1182,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
    1185,   487,  1186,  1187,   489,   490,   491,   492,     0,   493,
     494,     0,  1188,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  1199,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,
    1203,  1204,  1205,   224,   225,   226,   227,   228,   229,   230,
     231,  1206,   233,   234,   235,     0,     0,     0,     0,  1137,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,  1145,     0,  1146,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,  1147,  1148,  1149,
    1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,  1280,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,  1157,   311,   312,   313,
    1158,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
    1161,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,  1165,   843,
     361,   844,     0,   362,   363,   364,  1166,  1167,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
    1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,  1174,   397,   398,     0,
       0,   399,   400,   847,   401,   848,  1175,   403,   404,   405,
     406,     0,   407,   408,     0,   409,  1176,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,  1178,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,  1179,
     457,   458,   459,   460,   850,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,  1181,
       0,   475,   476,  1182,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,
     489,   490,   491,   492,     0,   493,   494,     0,  1188,   495,
     496,   497,   498,   499,  1189,     0,   500,   501,   502,   503,
     504,   505,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  1199,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,  1200,  1201,   549,   550,   551,   552,   553,   554,   555,
     556,  1202,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,     0,
       0,     0,     0,     0,     0,     0,  1203,  1204,   829,  1132,
     653,  1133,  1134,  1135,   708,  1136,     0,  1206,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  2296,   233,   234,
     235,     0,     0,     0,     0,  1137,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,  1141,  1142,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,  1157,   311,   312,   313,  1158,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,  1170,   386,   387,   846,
     388,  1171,  1172,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,  1174,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
    1178,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,  1182,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,  1185,   487,  1186,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,  1188,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  1199,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,  1132,   653,  1133,  1134,  1135,
     708,  1136,  1203,  1204,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  1206,   233,   234,   235,     0,     0,     0,
       0,  1137,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,   247,
     248,   249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,  1157,   311,
     312,   313,  1158,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,  2872,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
     384,   385,  1170,   386,   387,   846,   388,  1171,  1172,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,  1174,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,  1178,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,  1182,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,  1185,   487,
    1186,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
    1188,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,   505,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  1199,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,  1132,   653,  1133,  1134,  1135,   708,  1136,  1203,  1204,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1206,
     233,   234,   235,     0,     0,     0,     0,  1137,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
    1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,  1157,   311,   312,   313,  1158,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,  1170,   386,
     387,   846,   388,  1171,  1172,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,  1174,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,  1178,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,  1182,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,  1188,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,   505,
    1190,  4257,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  1199,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    1201,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,  1132,   653,  1133,
    1134,  1135,   708,  1136,  1203,  1204,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  1206,   233,   234,   235,     0,
       0,     0,     0,  1137,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,  5375,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,  1141,  1142,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
    5376,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
    1157,   311,   312,   313,  1158,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,  1170,   386,   387,   846,   388,  1171,
    1172,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
    1174,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,  1178,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,  1182,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
    1185,   487,  1186,  1187,   489,   490,   491,   492,  5377,   493,
     494,     0,  1188,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  1199,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,
    1203,  1204,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  1206,   233,   234,   235,     0,     0,     0,     0,  1137,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,  1145,     0,  1146,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,  5376,  1147,  1148,  1149,
    1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,  1157,   311,   312,   313,
    1158,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
    1161,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,  1165,   843,
     361,   844,     0,   362,   363,   364,  1166,  1167,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
    1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,  1174,   397,   398,     0,
       0,   399,   400,   847,   401,   848,  1175,   403,   404,   405,
     406,     0,   407,   408,     0,   409,  1176,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,  1178,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,  1179,
     457,   458,   459,   460,   850,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,  1181,
       0,   475,   476,  1182,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,
     489,   490,   491,   492,  5377,   493,   494,     0,  1188,   495,
     496,   497,   498,   499,  1189,     0,   500,   501,   502,   503,
     504,   505,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  1199,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,  1200,  1201,   549,   550,   551,   552,   553,   554,   555,
     556,  1202,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,  1132,
     653,  1133,  1134,  1135,   708,  1136,  1203,  1204,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  1206,   233,   234,
     235,     0,     0,     0,     0,  1137,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,  1141,  1142,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,  1157,   311,   312,   313,  1158,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,  1170,   386,   387,   846,
     388,  1171,  1172,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,  1174,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
    1178,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,  1182,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,  1185,   487,  1186,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,  1188,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  1199,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,  1132,   653,  1133,  1134,  1135,
     708,  1136,  1203,  1204,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  1206,   233,   234,   235,     0,     0,     0,
       0,  1137,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,   247,
     248,   249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,  1157,   311,
     312,   313,  1158,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
     384,   385,  1170,   386,   387,   846,   388,  1171,  1172,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,  1174,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,  1178,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,  1182,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,  1185,   487,
    1186,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
    1188,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,   505,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  1199,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,  3008,   653,  1133,  1134,  1135,   708,  1136,  2299,  2300,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1206,
     233,   234,   235,     0,     0,     0,     0,  1137,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
    1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,  1157,   311,   312,   313,  1158,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,  1170,   386,
     387,   846,   388,  1171,  1172,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,  1174,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,  1178,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,  1182,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,  1188,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,   505,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  1199,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    1201,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,  1132,   653,  1133,
    1134,  1135,   708,  1136,  1203,  1204,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  1206,   233,   234,   235,     0,
       0,     0,     0,  1137,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,  1141,  1142,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
    1157,   311,   312,   313,  1158,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,  3546,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,  1170,   386,   387,   846,   388,  1171,
    1172,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
    1174,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,  1178,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,  1182,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
    1185,   487,  1186,  1187,   489,   490,   491,   492,     0,   493,
     494,     0,  1188,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  1199,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,
    1203,  1204,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  1206,   233,   234,   235,     0,     0,     0,     0,  1137,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,  1145,     0,  1146,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,  4266,  1147,  1148,  1149,
    1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,  1157,   311,   312,   313,
    1158,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
    1161,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,  1165,   843,
     361,   844,     0,   362,   363,   364,  1166,  1167,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
    1170,   386,   387,   846,   388,  1171,  1172,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,  1174,   397,   398,     0,
       0,   399,   400,   847,   401,   848,  1175,   403,   404,   405,
     406,     0,   407,   408,     0,   409,  1176,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,  1178,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,  1179,
     457,   458,   459,   460,   850,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,  1181,
       0,   475,   476,  1182,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,
     489,   490,   491,   492,     0,   493,   494,     0,  1188,   495,
     496,   497,   498,   499,  1189,     0,   500,   501,   502,   503,
     504,   505,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  1199,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,  1200,  1201,   549,   550,   551,   552,   553,   554,   555,
     556,  1202,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,  1132,
     653,  1133,  1134,  1135,   708,  1136,  1203,  1204,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  1206,   233,   234,
     235,     0,     0,     0,     0,  1137,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,  1141,  1142,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,  1157,   311,   312,   313,  1158,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,  1170,   386,   387,   846,
     388,  1171,  1172,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,  1174,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
    1178,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,  1182,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,  1185,   487,  1186,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,  1188,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,  4626,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  1199,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,  1132,   653,  1133,  1134,  1135,
     708,  1136,  1203,  1204,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  1206,   233,   234,   235,     0,     0,     0,
       0,  1137,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,   247,
     248,   249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,  1157,   311,
     312,   313,  1158,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
    4636,   385,  1170,   386,   387,   846,   388,  1171,  1172,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,  1174,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,  1178,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,  1182,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,  1185,   487,
    1186,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
    1188,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,   505,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  1199,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,  1132,   653,  1133,  1134,  1135,   708,  1136,  1203,  1204,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1206,
     233,   234,   235,     0,     0,     0,     0,  1137,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
    1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,  1157,   311,   312,   313,  1158,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,  1170,   386,
     387,   846,   388,  1171,  1172,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,  1174,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,  1178,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,  1182,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,  1188,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,   505,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,  4979,  1199,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    4980,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,  4981,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,  1132,   653,  1133,
    1134,  1135,   708,  1136,  1203,  1204,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  4982,   233,   234,   235,     0,
       0,     0,     0,  1137,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,  1141,  1142,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
    1157,   311,   312,   313,  1158,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,     0,   386,   387,   846,   388,  1171,
    1172,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
    1174,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,  1178,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,  1182,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
    1185,   487,  1186,  1187,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  1199,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,  1132,   653,  1133,  1134,     0,   708,  1136,
    2852,  2853,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  1206,   233,   234,   235,     0,     0,     0,     0,  1137,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,  1145,     0,  1146,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,  1147,  1148,  1149,
    1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,  1157,   311,   312,   313,
    1158,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
    1161,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,  1165,   843,
     361,   844,     0,   362,   363,   364,  1166,  1167,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
       0,   386,   387,   846,   388,  1171,  1172,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,  1175,   403,   404,   405,
     406,     0,   407,   408,     0,   409,  1176,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,  2997,  2998,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,  1179,
     457,   458,   459,   460,   850,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,  1181,
       0,   475,   476,  1182,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,  1189,     0,   500,   501,   502,   503,
     504,   505,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  1199,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,  1200,  1201,   549,   550,   551,   552,   553,   554,   555,
     556,  1202,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,  1132,
     653,  1133,  1134,  1135,   708,  1136,  2999,  3000,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  1206,   233,   234,
     235,     0,     0,     0,     0,  1137,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242, -3016,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,  1141,  1142,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,  5376,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,  1157,   311,   312,   313,  1158,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,  1165,   843,   361,     0,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,     0,   386,   387,   846,
     388,  1171,  1172,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,  1174,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
    1178,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
       0,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,  1182,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,  1185,   487,  1186,  1187,   489,   490,   491,   492,
    5377,   493,   494,     0,  1188,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  1199,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,  1132,   653,  1133,  1134,     0,
     708,  1136,  1203,  1204,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  1206,   233,   234,   235,     0,     0,     0,
       0,  1137,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,  4170,
     248,   249,   250,   251,  1141,  1142,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,  1157,   311,
     312,   313,  1158,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
     384,   385,     0,   386,   387,   846,   388,  1171,  1172,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,  1178,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,  1182,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,  1185,   487,
    1186,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,   505,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  1199,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,  1132,   653,  1133,  1134,     0,   708,  1136,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1206,
     233,   234,   235,     0,     0,     0,     0,  1137,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
    1138,   831,  1139,  1140,     0,   247,   248,   249,   250,   251,
    1141,  1142,   252,   253,  1143,  1144,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,  1154,  1155,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,  1157,   311,   312,   313,  1158,  1159,
     315,     0,   316,   317,  1160,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,  1162,  1163,     0,  1164,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1168,   845,  1169,   383,   384,   385,     0,   386,
     387,   846,   388,  1171,  1172,   390,  1173,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1177,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,  1178,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,  1180,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,  1182,   477,   478,   479,   480,   481,   482,     0,  1183,
    1184,     0,     0,   485,  1185,   487,  1186,  1187,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,   505,
    1190,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  1199,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    1201,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,  1132,   653,  1133,
    1134,  1135,   708,  1136,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  1206,   233,   234,   235,     0,
       0,     0,     0,  1137,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,     0,  1138,   831,  1139,  1140,
       0,   247,   248,   249,   250,   251,  1141,  1142,   252,   253,
    1143,  1144,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,  1154,  1155,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,     0,   306,     0,     0,   307,   308,   309,
    1157,   311,   312,   313,  1158,  1159,   315,     0,   316,   317,
    1160,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,  1162,  1163,     0,  1164,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,     0,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1168,   845,
    1169,   383,   384,   385,     0,   386,   387,   846,   388,  1171,
    1172,   390,  1173,   392,   393,   394,     0,   395,     0,     0,
    1174,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1177,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,  1178,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,     0,   458,   459,   460,     0,   461,
    1180,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,  1182,   477,   478,
     479,   480,   481,   482,     0,  1183,  1184,     0,     0,   485,
    1185,   487,  1186,  1187,   489,   490,   491,   492,     0,   493,
     494,     0,  1188,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,  1190,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  1199,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,  1132,   653,  1133,  1134,  1135,   708,  1136,
    1203,  1204,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  1206,   233,   234,   235,     0,     0,     0,     0,  1137,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,     0,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,  1141,  1142,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,  1145,     0,  1146,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,  1147,  1148,  1149,
    1150,  1151,  1152,  1153,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,     0,
     306,     0,     0,   307,   308,   309,  1157,   311,   312,   313,
    1158,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
    1161,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,  1165,   843,
     361,     0,     0,   362,   363,   364,  1166,  1167,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
       0,   386,   387,   846,   388,  1171,  1172,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,  1174,   397,   398,     0,
       0,   399,   400,   847,   401,   848,  1175,   403,   404,   405,
     406,     0,   407,   408,     0,   409,  1176,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,  1178,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,  1179,
       0,   458,   459,   460,     0,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,  1181,
       0,   475,   476,  1182,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,  1185,   487,  1186,  1187,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,  1189,     0,   500,   501,   502,   503,
     504,   505,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  1199,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,  1200,  1201,   549,   550,   551,   552,   553,   554,   555,
     556,  1202,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,     0,
       0,     0,     0,     0,     0,     0,  2852,  2853,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  1206,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,  1142,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
    1145,     0,  1146,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,  1158,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,  1161,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,  3666,
     357,   358,     0,   359,  1165,   843,   361,   844,     0,   362,
     363,   364,  1166,  1167,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,  1172,   390,   391,   392,   393,   394,     0,   395,
       0,   792,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,  1175,   403,   404,   405,   406,     0,   407,   408,
       0,   409,  1176,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,  3667,   445,   446,   447,   448,   449,   450,   451,    38,
     452,   453,   454,   455,   456,  1179,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,  1181,     0,   475,   476,    42,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,  1185,   487,  1186,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
    1189,     0,   500,   501,   502,   503,   504,  1071,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
      47,   513,   514,   515,   516,   517,   518,   519,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  3668,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,  1200,  1201,   549,
     550,   551,   552,   553,   554,   555,   556,  1202,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  3669,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,  1142,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,  1145,     0,  1146,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,  1147,
    1148,  1149,  1150,  1151,  1152,  1153,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,  1158,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,  1161,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,  3666,   357,   358,     0,   359,
    1165,   843,   361,   844,     0,   362,   363,   364,  1166,  1167,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,  1172,   390,
     391,   392,   393,   394,     0,   395,     0,   792,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,  1175,   403,
     404,   405,   406,     0,   407,   408,     0,   409,  1176,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,  3667,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,  1179,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,  1181,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,  1185,   487,
    1186,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,  1189,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  3668,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,  1200,  1201,   549,   550,   551,   552,   553,
     554,   555,   556,  1202,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  3669,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,  1142,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,  1145,     0,  1146,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,  1147,  1148,  1149,  1150,  1151,
    1152,  1153,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,  1158,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,  1161,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,  1165,   843,   361,   844,
       0,   362,   363,   364,  1166,  1167,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,  1172,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,  1175,   403,   404,   405,   406,     0,
     407,   408,     0,   409,  1176,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,  3667,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,  1179,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,  1181,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,  1185,   487,  1186,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,  1189,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  3668,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,  1200,
    1201,   549,   550,   551,   552,   553,   554,   555,   556,  1202,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,    49,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,  1142,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,  1158,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
    1172,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
    1185,   487,  1186,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  3668,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,  1132,   653,  1133,  1134,     0,   708,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  4291,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,  1138,   831,  1139,  1140,     0,   247,   248,   249,
     250,   251,     0,  4329,   252,   253,  1143,  1144,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
    1154,  1155,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,  1159,   315,     0,   316,   317,  1160,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,  1162,  1163,
       0,  1164,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1168,   845,  1169,   383,   384,   385,
       0,   386,   387,   846,   388,  1171,   389,   390,  1173,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1177,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,  1180,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,  1183,  1184,     0,     0,   485,   486,   487,   488,  1187,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,  1190,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,  1132,
     653,  1133,  1134,     0,   708,     0,     0,  4330,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  4331,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,     0,  4329,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,     0,   386,   387,   846,
     388,  1171,   389,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,   486,   487,   488,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,  1132,   653,  1133,  1134,     0,
     708,     0,     0,  4330,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  4340,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,  1138,   831,  1139,  1140,     0,   247,
     248,   249,   250,   251,     0,  4329,   252,   253,  1143,  1144,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,  1154,  1155,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,  1159,   315,     0,   316,   317,  1160,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
    1162,  1163,     0,  1164,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1168,   845,  1169,   383,
     384,   385,     0,   386,   387,   846,   388,  1171,   389,   390,
    1173,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1177,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,  1180,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,  1183,  1184,     0,     0,   485,   486,   487,
     488,  1187,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,  4387,  1190,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,  1412,   653,     0,     0,     0,   708,     0,     0,  4330,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  4331,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,  1674,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,  1675,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,  1676,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,     0,     0,     0,
       0,     0,     0,     0,  1413,  1414,  4838,   224,   225,   226,
     227,   228,   229,   230,   231,  4839,   233,   234,   235,     3,
       4,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    38,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,    42,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,  1071,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,    47,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   829,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,    49,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  5052,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    38,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,    42,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,  1071,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
      47,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,    49,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,   792,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1780,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  1263,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  3026,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  4210,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1525,  1412,   653,     0,     0,   884,   708,
       0,     0,     0,  4683,   224,   225,   226,   227,   228,   229,
     230,   231,  2169,   233,   234,   235,  2170,  2171,  2172,  2173,
    2174,  2175,  2176,   236,   237,  2177,   238,   239,   830,   240,
     241,   242,     0,  1526,   831,  1527,  1528,  2178,   247,   248,
     249,   250,   251,  2179,  2180,   252,   253,  1529,  1530,   256,
    2181,   257,   258,   259,   260,     0,  2182,   832,  2183,   262,
     263,   264,   265,   266,   833,   267,   268,  2184,   269,   270,
     271,   272,   273,   274,  2185,   834,   275,   276,  2186,  2187,
    2188,   835,  2189,  2190,  2191,   277,   278,   279,   280,   281,
     282,  1531,  1532,   285,  2192,   286,  2193,   287,   288,   289,
     290,   291,  2194,   292,   293,   294,  2195,  2196,   295,   296,
    1156,   298,   299,  2197,   300,   301,   302,  2198,   303,   304,
     305,   306,  2199,  2200,   307,   308,   309,     0,   311,   312,
     313,     0,  2201,   315,  2202,   316,   317,  1533,  2203,  2204,
     319,  2205,   320,   836,  2206,   837,   321,   322,   323,  2207,
     324,     0,  2208,   326,  2209,   327,   328,   329,   330,   331,
     838,   332,   333,   334,  2210,   335,   336,   337,   338,   339,
     340,  2211,   341,   839,     0,   343,   344,   345,   346,  1534,
    1535,  2212,  1536,  2213,   350,   840,   841,   351,   842,   352,
     353,   354,   355,   356,  2214,   357,   358,  2215,   359,     0,
     843,   361,   844,  2216,   362,   363,   364,  2217,  2218,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1537,   845,  1538,   383,   384,
    3972,  2219,   386,   387,   846,   388,  2220,     0,   390,  1539,
     392,   393,   394,  2221,   395,  2222,  2223,  3973,   397,   398,
    2224,  2225,   399,     0,   847,   401,   848,     0,   403,   404,
     405,   406,  2226,   407,   408,  2227,   409,     0,  2228,     0,
     412,   413,   414,  2229,   415,   416,   417,   418,   419,   420,
     421,   422,  1540,   424,   425,   426,   427,  2230,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,  2231,
     439,   440,   849,   441,   442,  3974,   444,   445,   446,   447,
     448,   449,   450,   451,  2232,   452,   453,   454,   455,   456,
    2233,   457,  2326,   459,   460,   850,   461,  1542,   463,  2234,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
       0,  2235,   475,   476,  2236,   477,   478,   479,   480,   481,
     482,  2237,  1543,  1544,  2238,  2239,   485,     0,   487,     0,
    2240,   489,   490,   491,   492,  2241,   493,   494,  2242,  2243,
     495,   496,   497,   498,   499,  2244,  2245,   500,   501,   502,
     503,   504,     0,  1545,  2246,   507,   851,   508,   509,   510,
     511,  2247,  2248,   512,  2249,  2250,   513,   514,   515,   516,
     517,   518,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   528,   529,   530,   531,   532,   533,   534,   535,   536,
    2251,   537,  2252,   538,   539,   540,   541,   542,   543,   544,
     545,   546,     0,     0,   549,   550,   551,   552,   553,   554,
     555,   556,     0,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,     0,   580,  2253,   581,   582,     0,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,  3975,  3976,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,   885,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   886,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,   985,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   986,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,  1041,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,  1042,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,  1043,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,  1511,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,  1512,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,  3103,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,  3104,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,   396,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,   223,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,   224,   225,   226,   227,   228,   229,
     230,   231,     0,   233,   234,   235,     0,     0,     0,     0,
       0,     0,     0,   236,   237,     0,   238,   239,     0,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,     0,     0,   262,
     263,   264,   265,   266,     0,   267,   268,     0,   269,   270,
     271,   272,   273,   274,     0,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,     0,   292,   293,   294,     0,     0,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,     0,   316,   317,   318,     0,     0,
     319,     0,   320,     0,     0,     0,   321,   322,   323,     0,
     324,   325,     0,   326,     0,   327,   328,   329,   330,   331,
       0,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,     0,   349,     0,   350,     0,     0,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,     0,   359,   360,
       0,   361,     0,     0,   362,   363,   364,     0,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,     0,   386,   387,     0,   388,     0,   389,   390,   391,
     392,   393,   394,     0,   395,     0,     0,  5000,   397,   398,
       0,     0,   399,   400,     0,   401,     0,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,   453,   454,   455,   456,
       0,   457,   458,   459,   460,     0,   461,   462,   463,     0,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,   480,   481,
     482,     0,   483,   484,     0,     0,   485,   486,   487,   488,
       0,   489,   490,   491,   492,     0,   493,   494,     0,     0,
     495,   496,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,   510,
     511,     0,     0,   512,     0,     0,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,   537,     0,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,     0,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,     0,
       0,     0,     0,   887,   888,   889,     0,   890,   891,   892,
     893,   894,   895,  1815,     0,     0,     0,     0,  1816,     0,
       0,  1817,     0,     0,  1818,  1819,  1820,  1821,  1822,  1823,
    1824,  1825,     0,  1826,  1827,     0,     0,     0,  1828,     0,
       0,  1829,     0,  1830,  1831,     0,  1832,     0,  1833,  1834,
    1835,  1836,  1837,  1838,  1839,  1840,  1841,     0,  1842,  1843,
    1844,  1845,  1846,     0,     0,     0,  1847,     0,     0,  1848,
       0,  1849,  1850,  1851,  1852,  1853,  1854,     0,     0,  1855,
       0,  1856,  1857,  1858,     0,     0,  1859,     0,  1860,  1861,
       0,  1862,  1863,  1864,     0,     0,  1865,     0,     0,     0,
       0,     0,     0,     0,     0,  1866,  1867,     0,  1868,     0,
    1869,  1870,  1871,  1872,     0,  1873,     0,  1874,  1875,  1876,
    1877,  1878,     0,     0,  1879,     0,     0,     0,     0,  1880,
    1881,  1882,  1883,     0,  1884,  1885,  1886,     0,  1887,  1888,
    1889,     0,     0,     0,  1890,  1891,  1892,  1893,  1894,     0,
    1895,  1896,     0,     0,     0,     0,  1897,  1898,     0,     0,
    1899,     0,  1900,  1901,     0,     0,  1902,     0,  1903,     0,
    1904,  1905,     0,  1906,     0,  1907,  1908,     0,     0,  1909,
    1910,  1911,  1912,  1913,  1914,  1915,  1916,  1917,  1918,  1919,
    1920,     0,     0,     0,  1921,  1922,  1923,  1924,  1925,  1926,
    1927,     0,  1928,     0,  1929,  1930,  1931,  1932,     0,  1933,
       0,  1934,  1935,  1936,     0,     0,     0,     0,     0,  1937,
       0,  1938,  1939,     0,  1940,  1941,  1942,     0,     0,  1943,
    1944,     0,  1945,     0,  1946,  1947,  1948,  1949,     0,  1950,
    1951,     0,  1952,  1953,  1954,  1955,     0,  1956,  1957,  1958,
    1959,  1960,  1961,  1962,  1963,  1964,     0,  1965,  1966,  1967,
    1968,  1969,     0,     0,  1970,     0,     0,  1971,  1972,  1973,
    1974,     0,     0,  1975,  1976,     0,     0,  1977,  1978,  1979,
       0,  1980,     0,     0,  1981,     0,     0,  1982,     0,  1983,
    1984,  1985,  1986,     0,  1987,  1988,  1989,  1990,     0,  1991,
    1992,  1993,  1994,  1995,  1996,     0,     0,     0,     0,  1997,
    1998,  1999,  2000,  2001,  2002,     0,  2003,  2004,  2005,     0,
    2006,  2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,  2014,
    2015,  2016,     0,  2017,     0,  2018,     0,  2019,     0,  2020,
       0,  2021,  2022,  2023,  2024,  2025,  2026,  2027,     0,     0,
    2028,     0,  2029,  2030,  2031,  2032,  2033,  2034,  2035,     0,
    2036,     0,  2037,  2038,     0,     0,  2039,  2040,  2041,  2042,
       0,     0,  2043,  2044,     0,     0,  2045,  2046,  2047,  2048,
       0,  2049,  2050,  2051,     0,     0,  2052,  2053,     0,     0,
    2054,  2055,     0,  2056,  2057,     0,     0,  2058,  2059,     0,
    2060,  2061,  2062,  2063,     0,     0,  2064,  2065,  2066,     0,
    2067,     0,     0,     0,     0,     0,     0,     0,  2068,     0,
    2069,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2070,  2071,  2072,  2073,  2074,  2075,  2076,
       0,     0,     0,     0,  2077,  2078,  2079,     0,  2080,  2081,
    2082,     0,  2083,  2084,  2085,  2086,     0,  2087,     0,  2088,
    2089,  2090,     0,  2091,  2092,  2093,     0,  2094,     0,  2095,
    2096,  2097,     0,  2098,  2099,  2100,  2101,  2102,     0,     0,
       0,     0,     0,  2103,  2104,     0,     0,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,     0,     0,     0,     0,     0,
       0,     0,  2168,  2113,  2114,  2115,     0,  2116,  2117,  2118,
    2119,  2120,  2121,   224,   225,   226,   227,   228,   229,   230,
     231,  2169,   233,   234,   235,  2170,  2171,  2172,  2173,  2174,
    2175,  2176,   236,   237,  2177,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,  2178,   247,   248,   249,
     250,   251,  2179,  2180,   252,   253,   254,   255,   256,  2181,
     257,   258,   259,   260,   261,  2182,   832,  2183,   262,   263,
     264,   265,   266,   833,   267,   268,  2184,   269,   270,   271,
     272,   273,   274,  2185,   834,   275,   276,  2186,  2187,  2188,
     835,  2189,  2190,  2191,   277,   278,   279,   280,   281,   282,
     283,   284,   285,  2192,   286,  2193,   287,   288,   289,   290,
     291,  2194,   292,   293,   294,  2195,  2196,   295,   296,   297,
     298,   299,  2197,   300,   301,   302,  2198,   303,   304,   305,
     306,  2199,  2200,   307,   308,   309,   310,   311,   312,   313,
     314,  2201,   315,  2202,   316,   317,   318,  2203,  2204,   319,
    2205,   320,   836,  2206,   837,   321,   322,   323,  2207,   324,
     325,  2208,   326,  2209,   327,   328,   329,   330,   331,   838,
     332,   333,   334,  2210,   335,   336,   337,   338,   339,   340,
    2211,   341,   839,   342,   343,   344,   345,   346,   347,   348,
    2212,   349,  2213,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,  2214,   357,   358,  2215,   359,   360,   843,
     361,   844,  2216,   362,   363,   364,  2217,  2218,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
    2219,   386,   387,   846,   388,  2220,   389,   390,   391,   392,
     393,   394,  2221,   395,  2222,  2223,   396,   397,   398,  2224,
    2225,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,  2226,   407,   408,  2227,   409,   410,  2228,   411,   412,
     413,   414,  2229,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  2230,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,  2231,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,  2232,   452,   453,   454,   455,   456,  2233,
     457,   458,   459,   460,   850,   461,   462,   463,  2234,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
    2235,   475,   476,  2236,   477,   478,   479,   480,   481,   482,
    2237,   483,   484,  2238,  2239,   485,   486,   487,   488,  2240,
     489,   490,   491,   492,  2241,   493,   494,  2242,  2243,   495,
     496,   497,   498,   499,  2244,  2245,   500,   501,   502,   503,
     504,   505,   506,  2246,   507,   851,   508,   509,   510,   511,
    2247,  2248,   512,  2249,  2250,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,  2251,
     537,  2252,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,  2253,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2254,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   797,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5083,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,  1525,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5594,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,     0,  1526,   831,  1527,  1528,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
    1529,  1530,   256,     0,   257,   258,   259,   260,     0,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,  1531,  1532,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
       0,   311,   312,   313,     0,     0,   315,     0,   316,   317,
    1533,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,     0,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,  2322,   335,   336,
     337,   338,   339,   340,     0,   341,   839,  2323,   343,   344,
     345,   346,  1534,  1535,     0,  1536,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,     0,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1537,   845,
    1538,   383,   384,     0,     0,   386,   387,   846,   388,     0,
       0,   390,  1539,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,  2324,   399,  2325,   847,   401,   848,
       0,   403,   404,   405,   406,     0,   407,   408,     0,   409,
       0,     0,     0,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1540,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,     0,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,  2326,   459,   460,   850,   461,
    1542,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     0,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,  1543,  1544,     0,     0,   485,
       0,   487,     0,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,     0,  1545,  2327,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,     0,     0,   549,   550,   551,
     552,   553,   554,   555,   556,     0,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,     0,   580,     0,
     581,   582,     0,   584,   585,   586,   587,   588,   589,   590,
     591,   592,  3455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2328,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,     0,  1526,   831,  1527,  1528,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,  1529,  1530,   256,     0,
     257,   258,   259,   260,     0,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
    1531,  1532,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,     0,   311,   312,   313,
       0,     0,   315,     0,   316,   317,  1533,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
       0,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,  2322,   335,   336,   337,   338,   339,   340,
       0,   341,   839,  2323,   343,   344,   345,   346,  1534,  1535,
       0,  1536,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,     0,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1537,   845,  1538,   383,   384,     0,
       0,   386,   387,   846,   388,     0,     0,   390,  1539,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
    2324,   399,  2325,   847,   401,   848,     0,   403,   404,   405,
     406,     0,   407,   408,     0,   409,     0,     0,     0,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1540,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,     0,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,  2326,   459,   460,   850,   461,  1542,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     0,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,  1543,  1544,     0,     0,   485,     0,   487,     0,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,     0,  1545,  2327,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,     0,     0,   549,   550,   551,   552,   553,   554,   555,
     556,     0,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,     0,   580,     0,   581,   582,     0,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   829,  1132,
     653,  1133,  1134,     0,   708,     0,     0,     0,  2328,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,  1138,   831,
    1139,  1140,     0,   247,   248,   249,   250,   251,     0,  4329,
     252,   253,  1143,  1144,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,  1154,  1155,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,  1159,   315,     0,
     316,   317,  1160,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,  1162,  1163,     0,  1164,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1168,   845,  1169,   383,   384,   385,     0,   386,   387,   846,
     388,  1171,   389,   390,  1173,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1177,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,  1180,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,  1183,  1184,     0,
       0,   485,   486,   487,   488,  1187,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,  1190,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,  1412,   653,     0,     0,     0,
     708,     0,     0,  4330,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,  2158,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,  1674,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,  1675,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,  1676,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,  1412,   653,     0,     0,     0,   708,     0,  1413,  1414,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  2163,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,  1674,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,  1675,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,  1676,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,  1412,   653,     0,
       0,     0,   708,     0,  1413,  1414,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,  1674,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,  1675,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,  1676,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,   708,     0,
    1413,  1414,     0,   224,   709,   226,   227,   228,   229,   230,
     231,   710,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   711,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   712,   318,     0,     0,   319,
       0,   713,     0,   714,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   715,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   716,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   717,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   718,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   719,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,  2168,  5469,
     653,     0,     0,     0,   708,     0,   720,   721,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  2169,   233,   234,
     235,  2170,  2171,  2172,  2173,  2174,  2175,  2176,   236,   237,
    2177,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,  2178,   247,   248,   249,   250,   251,  2179,  2180,
     252,   253,   254,   255,   256,  2181,   257,   258,   259,   260,
     261,  2182,   832,  2183,   262,   263,   264,   265,   266,   833,
     267,   268,  2184,   269,   270,   271,   272,   273,   274,  2185,
     834,   275,   276,  2186,  2187,  2188,   835,  2189,  2190,  2191,
     277,   278,   279,   280,   281,   282,   283,   284,   285,  2192,
     286,  2193,   287,   288,   289,   290,   291,  2194,   292,   293,
     294,  2195,  2196,   295,   296,   297,   298,   299,  2197,   300,
     301,   302,  2198,   303,   304,   305,   306,  2199,  2200,   307,
     308,   309,   310,   311,   312,   313,   314,  2201,   315,  2202,
     316,   317,   318,  2203,  2204,   319,  2205,   320,   836,  2206,
     837,   321,   322,   323,  2207,   324,   325,  2208,   326,  2209,
     327,   328,   329,   330,   331,   838,   332,   333,   334,  2210,
     335,   336,   337,   338,   339,   340,  2211,   341,   839,   342,
     343,   344,   345,   346,   347,   348,  2212,   349,  2213,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,  2214,
     357,   358,  2215,   359,   360,   843,   361,   844,  2216,   362,
     363,   364,  2217,  2218,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,  2219,   386,   387,   846,
     388,  2220,   389,   390,   391,   392,   393,   394,  2221,   395,
    2222,  2223,   396,   397,   398,  2224,  2225,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,  2226,   407,   408,
    2227,   409,   410,  2228,   411,   412,   413,   414,  2229,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,  2230,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,  2231,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,  2232,
     452,   453,   454,   455,   456,  2233,   457,   458,   459,   460,
     850,   461,   462,   463,  2234,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,  2235,   475,   476,  2236,
     477,   478,   479,   480,   481,   482,  2237,   483,   484,  2238,
    2239,   485,   486,   487,   488,  2240,   489,   490,   491,   492,
    2241,   493,   494,  2242,  2243,   495,   496,   497,   498,   499,
    2244,  2245,   500,   501,   502,   503,   504,   505,   506,  2246,
     507,   851,   508,   509,   510,   511,  2247,  2248,   512,  2249,
    2250,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,  2251,   537,  2252,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,  2253,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,  2168,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  2169,   233,   234,   235,  2170,  2171,  2172,
    2173,  2174,  2175,  2176,   236,   237,  2177,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,  2178,   247,
     248,   249,   250,   251,  2179,  2180,   252,   253,   254,   255,
     256,  2181,   257,   258,   259,   260,   261,  2182,   832,  2183,
     262,   263,   264,   265,   266,   833,   267,   268,  2184,   269,
     270,   271,   272,   273,   274,  2185,   834,   275,   276,  2186,
    2187,  2188,   835,  2189,  2190,  2191,   277,   278,   279,   280,
     281,   282,   283,   284,   285,  2192,   286,  2193,   287,   288,
     289,   290,   291,  2194,   292,   293,   294,  2195,  2196,   295,
     296,   297,   298,   299,  2197,   300,   301,   302,  2198,   303,
     304,   305,   306,  2199,  2200,   307,   308,   309,   310,   311,
     312,   313,   314,  2201,   315,  2202,   316,   317,   318,  2203,
    2204,   319,  2205,   320,   836,  2206,   837,   321,   322,   323,
    2207,   324,   325,  2208,   326,  2209,   327,   328,   329,   330,
     331,   838,   332,   333,   334,  2210,   335,   336,   337,   338,
     339,   340,  2211,   341,   839,   342,   343,   344,   345,   346,
     347,   348,  2212,   349,  2213,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,  2214,   357,   358,  2215,   359,
     360,   843,   361,   844,  2216,   362,   363,   364,  2217,  2218,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,  2219,   386,   387,   846,   388,  2220,   389,   390,
     391,   392,   393,   394,  2221,   395,  2222,  2223,   396,   397,
     398,  2224,  2225,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,  2226,   407,   408,  2227,   409,   410,  2228,
     411,   412,   413,   414,  2229,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,  2230,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
    2231,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,  2232,   452,   453,   454,   455,
     456,  2233,   457,   458,   459,   460,   850,   461,   462,   463,
    2234,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,  2235,   475,   476,  2236,   477,   478,   479,   480,
     481,   482,  2237,   483,   484,  2238,  2239,   485,   486,   487,
     488,  2240,   489,   490,   491,   492,  2241,   493,   494,  2242,
    2243,   495,   496,   497,   498,   499,  2244,  2245,   500,   501,
     502,   503,   504,   505,   506,  2246,   507,   851,   508,   509,
     510,   511,  2247,  2248,   512,  2249,  2250,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,  2251,   537,  2252,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,  2253,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
    2168,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,  3190,   229,   230,   231,  2169,
     233,   234,   235,  2170,  2171,  2172,  2173,  2174,  2175,  2176,
     236,   237,  2177,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,  2178,   247,   248,   249,   250,   251,
    2179,  2180,   252,   253,   254,   255,   256,  2181,   257,   258,
     259,   260,   261,  2182,   832,  2183,   262,   263,   264,   265,
     266,   833,   267,   268,  2184,   269,   270,   271,   272,   273,
     274,  2185,   834,   275,   276,  2186,  2187,  2188,   835,  2189,
    2190,  2191,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  2192,   286,  2193,   287,   288,   289,   290,   291,  2194,
     292,   293,   294,  2195,  2196,   295,   296,   297,  3191,   299,
    2197,   300,   301,   302,  2198,   303,   304,   305,   306,  2199,
    2200,   307,   308,   309,   310,   311,   312,   313,   314,  2201,
     315,  2202,   316,   317,   318,  2203,  2204,   319,  2205,   320,
     836,  2206,   837,   321,   322,   323,  2207,   324,   325,  2208,
     326,  2209,   327,   328,   329,   330,   331,   838,   332,   333,
     334,  2210,   335,   336,   337,   338,   339,   340,  2211,   341,
     839,   342,   343,   344,   345,   346,   347,   348,  2212,   349,
    2213,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,  2214,   357,   358,  2215,   359,   360,   843,   361,   844,
    2216,   362,   363,   364,  2217,  2218,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,  2219,   386,
     387,   846,   388,  2220,   389,   390,   391,   392,   393,   394,
    2221,   395,  2222,  2223,   396,   397,   398,  2224,  2225,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,  2226,
     407,   408,  2227,   409,   410,  2228,   411,   412,   413,   414,
    2229,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,  2230,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,  2231,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,  2232,   452,   453,   454,   455,   456,  2233,  3192,   458,
     459,   460,   850,   461,   462,   463,  2234,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,  2235,   475,
     476,  2236,   477,   478,   479,   480,   481,   482,  2237,   483,
     484,  2238,  2239,   485,   486,   487,   488,  2240,   489,   490,
     491,   492,  2241,   493,   494,  2242,  2243,   495,   496,   497,
     498,   499,  2244,  2245,   500,   501,   502,   503,   504,   505,
     506,  2246,   507,   851,   508,   509,   510,   511,  2247,  2248,
     512,  2249,  2250,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,  2251,   537,  2252,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,  2253,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,  1142,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,  1145,     0,
    1146,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,  1147,  1148,  1149,  1150,  1151,  1152,  1153,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,  1158,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,  1161,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,  1165,   843,   361,   844,     0,   362,   363,   364,
    1166,  1167,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
    1172,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
    1175,   403,   404,   405,   406,     0,   407,   408,     0,   409,
    1176,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,  1179,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,  1181,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
    1185,   487,  1186,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,  1189,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,   528,   529,   530,   531,   532,   533,
     534,   535,   536,  3668,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,  1200,  1201,   549,   550,   551,
     552,   553,   554,   555,   556,  1202,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,     0,   653,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,  1674,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,  1675,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,  1676,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,     0,
     653,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,  2143,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,  2560,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,  2561,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     3,     4,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,   900,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,   916,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     917,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,     0,
     653,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   873,     0,   653,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1664,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     873,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,  3509,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   829,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   998,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   829,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,   243,   244,   831,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1022,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   845,   382,   383,
     384,   385,     0,   386,   387,   846,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,   847,   401,   848,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,   850,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     829,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,   243,
     244,   831,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1034,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   845,   382,   383,   384,   385,     0,   386,
     387,   846,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,   847,   401,   848,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,   850,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   873,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,   243,   244,   831,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1036,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   845,
     382,   383,   384,   385,     0,   386,   387,   846,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,   847,   401,   848,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,   850,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,   243,   244,   831,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1046,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   845,   382,   383,   384,   385,
       0,   386,   387,   846,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,   847,   401,   848,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,   850,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,   243,   244,   831,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1057,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,  1058,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   845,   382,   383,   384,   385,     0,   386,   387,   846,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,   847,
     401,   848,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
     850,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,  2359,   257,   258,   259,   260,   261,     0,     0,  2439,
     262,   263,   264,   265,   266,     0,   267,   268,  2360,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,  2440,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,  2361,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,  2362,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,  2441,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,  2363,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
    2364,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,  2359,   257,   258,
     259,   260,   261,     0,     0,  3398,   262,   263,   264,   265,
     266,     0,   267,   268,  2360,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  3399,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
    2361,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,  2362,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,  3400,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
    2363,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,  2364,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,  2359,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
    2360,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,  2361,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,  2362,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,  2363,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,  2364,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   761,   230,
     231,   727,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,   728,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,   762,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   729,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   730,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   727,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,   728,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,  3065,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   729,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   730,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   727,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,   728,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   729,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   730,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  1701,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,  1702,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,  1703,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,  1704,   320,
       0,     0,     0,  1705,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,  1706,  1707,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,  1708,   448,   449,   450,
     451,     0,  1709,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,  1710,   477,  1711,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
    1712,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,  1713,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,   728,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     729,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   730,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,   909,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   910,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,   792,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     3,     4,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,  3171,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,  3172,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,  3186,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,  3187,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,   644,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     645,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,   753,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   754,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   755,   484,     0,
       0,   756,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,   786,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     787,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   788,   484,     0,     0,   789,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,   792,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,   879,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   880,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,  1015,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  1238,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,  1249,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   772,   253,   254,   255,
    1250,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   775,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   776,   442,   443,   444,   445,   446,
     777,   448,   449,   450,   451,     0,   452,   453,   454,   455,
    1242,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   779,   484,     0,     0,   780,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   781,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1355,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,   792,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,  1417,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1418,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,   753,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,  2279,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,  2948,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,  2949,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,  2950,   477,   478,  2951,   480,
    2952,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,  2953,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,   653,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,  4227,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
    4241,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,  4514,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,  4516,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,  4518,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,  4773,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,  3400,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   742,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   751,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   772,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   773,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   774,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   775,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   776,   442,   443,   444,
     445,   446,   777,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   778,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   779,   484,     0,     0,   780,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   781,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   804,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   904,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     919,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   976,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   990,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1027,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1048,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1050,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1052,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1055,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1063,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     772,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,   331,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   775,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   776,   442,
     443,   444,   445,   446,   777,   448,   449,   450,   451,     0,
     452,   453,   454,   455,  1242,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   779,   484,     0,
       0,   780,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   781,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,  1293,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,  1294,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,  1571,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  1603,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  1638,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  1640,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    1642,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,   444,   445,  1737,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   772,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,   331,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   775,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   776,   442,   443,   444,
     445,   446,   777,   448,   449,   450,   451,     0,   452,   453,
     454,   455,  1242,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,  2350,
     479,   480,   481,   482,     0,   779,   484,     0,     0,   780,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   781,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   772,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,   331,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   775,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   776,   442,   443,   444,   445,   446,  2421,   448,
     449,   450,   451,     0,   452,   453,   454,   455,  2422,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   779,   484,     0,     0,  2423,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     781,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  2709,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
    3076,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   772,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   775,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     776,   442,   443,   444,   445,   446,   777,   448,   449,   450,
     451,     0,   452,   453,   454,   455,  2422,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   779,
     484,     0,     0,  2423,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   781,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,     0,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
       0,     0,   262,   263,   264,   265,   266,     0,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,     0,   316,   317,
     318,     0,     0,   319,     0,   320,     0,     0,     0,   321,
     322,   323,     0,   324,   325,     0,   326,     0,   327,   328,
     329,   330,  3174,     0,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,     0,   349,     0,   350,     0,     0,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,   360,     0,   361,     0,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,     0,   386,   387,     0,   388,     0,
     389,   390,   391,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,   400,     0,   401,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,   409,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,   458,   459,   460,     0,   461,
     462,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,   483,   484,     0,     0,   485,
     486,   487,   488,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,     0,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   223,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,     0,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,     0,     0,   262,   263,
     264,   265,   266,     0,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,     0,   316,   317,   318,     0,     0,   319,
       0,   320,     0,     0,     0,   321,   322,   323,     0,   324,
     325,     0,   326,     0,   327,   328,   329,   330,  3179,     0,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
       0,   349,     0,   350,     0,     0,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,   360,     0,
     361,     0,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
       0,   386,   387,     0,   388,     0,   389,   390,   391,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,   400,     0,   401,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,   409,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,   458,   459,   460,     0,   461,   462,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,   483,   484,     0,     0,   485,   486,   487,   488,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,     0,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   223,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,     0,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,     0,     0,   262,   263,   264,   265,   266,     0,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,     0,
     316,   317,   318,     0,     0,   319,     0,   320,     0,     0,
       0,   321,   322,   323,     0,   324,   325,     0,   326,     0,
     327,   328,   329,   330,  3303,     0,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,     0,   349,     0,   350,
       0,     0,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,   360,     0,   361,     0,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,     0,   386,   387,     0,
     388,     0,   389,   390,   391,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,   400,     0,
     401,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,   409,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,   458,   459,   460,
       0,   461,   462,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,   483,   484,     0,
       0,   485,   486,   487,   488,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,     0,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   223,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,  2319,     0,   236,   237,     0,   238,   239,     0,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,     0,     0,
     262,   263,   264,   265,   266,     0,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,     0,   316,   317,   318,     0,
       0,   319,     0,   320,     0,     0,     0,   321,   322,   323,
       0,   324,   325,     0,   326,     0,   327,   328,   329,   330,
     331,     0,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,     0,   349,     0,   350,     0,     0,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
     360,     0,   361,     0,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,     0,   386,   387,     0,   388,     0,   389,   390,
     391,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,   400,     0,   401,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,   409,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,     0,   458,   459,   460,     0,   461,   462,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,   483,   484,     0,     0,   485,   486,   487,
     488,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,     0,   506,     0,   507,     0,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,     0,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,     0,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,     0,     0,   262,   263,   264,   265,
     266,     0,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,     0,   316,   317,   318,     0,     0,   319,     0,   320,
       0,     0,     0,   321,   322,   323,     0,   324,   325,     0,
     326,     0,   327,   328,   329,   330,   331,     0,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,     0,   349,
       0,   350,     0,     0,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,   360,     0,   361,     0,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,     0,   386,
     387,     0,   388,     0,   389,   390,   391,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
     400,     0,   401,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,   409,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,     0,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,     0,
     441,   442,   443,     0,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,   458,
     459,   460,     0,   461,   462,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,   483,
     484,     0,     0,   485,   486,   487,   488,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,     0,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,  1525,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,     0,  1526,   831,  1527,  1528,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
    1529,  1530,   256,     0,   257,   258,   259,   260,     0,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,  1531,  1532,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
       0,   311,   312,   313,     0,     0,   315,     0,   316,   317,
    1533,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,     0,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,  2322,   335,   336,
     337,   338,   339,   340,     0,   341,   839,  2323,   343,   344,
     345,   346,  1534,  1535,     0,  1536,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,     0,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1537,   845,
    1538,   383,   384,     0,     0,   386,   387,   846,   388,     0,
       0,   390,  1539,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,  2325,   847,   401,   848,
       0,   403,   404,   405,   406,     0,   407,   408,     0,   409,
       0,     0,     0,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1540,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,     0,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,  2326,   459,   460,   850,   461,
    1542,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     0,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,  1543,  1544,     0,     0,   485,
       0,   487,     0,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,     0,  1545,  2327,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,     0,     0,   549,   550,   551,
     552,   553,   554,   555,   556,     0,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,     0,   580,     0,
     581,   582,  1525,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,     0,  1526,   831,  1527,  1528,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,  1529,  1530,   256,     0,
     257,   258,   259,   260,     0,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
    1531,  1532,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,     0,   311,   312,   313,
       0,     0,   315,     0,   316,   317,  1533,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
       0,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,     0,   343,   344,   345,   346,  1534,  1535,
       0,  1536,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,     0,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1537,   845,  1538,   383,   384,     0,
       0,   386,   387,   846,   388,  2417,     0,   390,  1539,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,     0,   847,   401,   848,     0,   403,   404,   405,
     406,     0,   407,   408,     0,   409,     0,     0,     0,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1540,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,     0,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,  2326,   459,   460,   850,   461,  1542,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     0,
       0,   475,   476,  4073,   477,   478,   479,   480,   481,   482,
       0,  1543,  1544,     0,     0,   485,     0,   487,     0,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,     0,  1545,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,     0,     0,   549,   550,   551,   552,   553,   554,   555,
     556,     0,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,     0,   580,     0,   581,   582,  1525,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,     0,  1526,   831,
    1527,  1528,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,  1529,  1530,   256,     0,   257,   258,   259,   260,
       0,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,  1531,  1532,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,  1156,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,     0,   311,   312,   313,     0,     0,   315,     0,
     316,   317,  1533,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,     0,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,     0,
     343,   344,   345,   346,  1534,  1535,     0,  1536,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,     0,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
    1537,   845,  1538,   383,   384,  2499,     0,   386,   387,   846,
     388,     0,     0,   390,  1539,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,     0,   847,
     401,   848,     0,   403,   404,   405,   406,     0,   407,   408,
       0,   409,     0,     0,     0,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,  1540,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
       0,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,  1541,   459,   460,
     850,   461,  1542,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     0,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,  1543,  1544,     0,
       0,   485,     0,   487,     0,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,     0,  1545,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,     0,     0,   549,
     550,   551,   552,   553,   554,   555,   556,     0,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,     0,
     580,     0,   581,   582,  1525,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,   224,   225,   226,   227,   228,
     229,   230,   231,     0,   233,   234,   235,     0,     0,     0,
       0,     0,     0,     0,   236,   237,     0,   238,   239,   830,
     240,   241,   242,     0,  1526,   831,  1527,  1528,     0,   247,
     248,   249,   250,   251,     0,     0,   252,   253,  1529,  1530,
     256,     0,   257,   258,   259,   260,     0,     0,   832,     0,
     262,   263,   264,   265,   266,   833,   267,   268,     0,   269,
     270,   271,   272,   273,   274,     0,   834,   275,   276,     0,
       0,     0,   835,     0,     0,     0,   277,   278,   279,   280,
     281,   282,  1531,  1532,   285,     0,   286,     0,   287,   288,
     289,   290,   291,     0,   292,   293,   294,     0,     0,   295,
     296,  1156,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,     0,     0,   307,   308,   309,     0,   311,
     312,   313,     0,     0,   315,     0,   316,   317,  1533,     0,
       0,   319,     0,   320,   836,     0,   837,   321,   322,   323,
       0,   324,     0,     0,   326,     0,   327,   328,   329,   330,
     331,   838,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,     0,   341,   839,     0,   343,   344,   345,   346,
    1534,  1535,     0,  1536,     0,   350,   840,   841,   351,   842,
     352,   353,   354,   355,   356,     0,   357,   358,     0,   359,
       0,   843,   361,   844,     0,   362,   363,   364,     0,     0,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,  1537,   845,  1538,   383,
     384,  3870,     0,   386,   387,   846,   388,     0,     0,   390,
    1539,   392,   393,   394,     0,   395,     0,     0,   396,   397,
     398,     0,     0,   399,     0,   847,   401,   848,     0,   403,
     404,   405,   406,     0,   407,   408,     0,   409,     0,     0,
       0,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,   422,  1540,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   849,   441,   442,     0,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,   453,   454,   455,
     456,     0,   457,  1541,   459,   460,   850,   461,  1542,   463,
       0,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,     0,     0,   475,   476,     0,   477,   478,   479,   480,
     481,   482,     0,  1543,  1544,     0,     0,   485,     0,   487,
       0,     0,   489,   490,   491,   492,     0,   493,   494,     0,
       0,   495,   496,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,     0,  1545,     0,   507,   851,   508,   509,
     510,   511,     0,     0,   512,     0,     0,   513,   514,   515,
     516,   517,   518,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,   537,     0,   538,   539,   540,   541,   542,   543,
     544,   545,   546,     0,     0,   549,   550,   551,   552,   553,
     554,   555,   556,     0,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,     0,   580,     0,   581,   582,
    1525,   584,   585,   586,   587,   588,   589,   590,   591,   592,
       0,   224,   225,   226,   227,   228,   229,   230,   231,     0,
     233,   234,   235,     0,     0,     0,     0,     0,     0,     0,
     236,   237,     0,   238,   239,   830,   240,   241,   242,     0,
    1526,   831,  1527,  1528,     0,   247,   248,   249,   250,   251,
       0,     0,   252,   253,  1529,  1530,   256,     0,   257,   258,
     259,   260,     0,     0,   832,     0,   262,   263,   264,   265,
     266,   833,   267,   268,     0,   269,   270,   271,   272,   273,
     274,     0,   834,   275,   276,     0,     0,     0,   835,     0,
       0,     0,   277,   278,   279,   280,   281,   282,  1531,  1532,
     285,     0,   286,     0,   287,   288,   289,   290,   291,     0,
     292,   293,   294,     0,     0,   295,   296,  1156,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,     0,
       0,   307,   308,   309,     0,   311,   312,   313,     0,     0,
     315,     0,   316,   317,  1533,     0,     0,   319,     0,   320,
     836,     0,   837,   321,   322,   323,     0,   324,     0,     0,
     326,     0,   327,   328,   329,   330,   331,   838,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,     0,   341,
     839,     0,   343,   344,   345,   346,  1534,  1535,     0,  1536,
       0,   350,   840,   841,   351,   842,   352,   353,   354,   355,
     356,     0,   357,   358,     0,   359,     0,   843,   361,   844,
       0,   362,   363,   364,     0,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,  1537,   845,  1538,   383,   384,     0,     0,   386,
     387,   846,   388,     0,     0,   390,  1539,   392,   393,   394,
       0,   395,     0,     0,   396,   397,   398,     0,     0,   399,
       0,   847,   401,   848,     0,   403,   404,   405,   406,     0,
     407,   408,     0,   409,     0,     0,     0,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,   422,  1540,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,     0,   439,   440,   849,
     441,   442,     0,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,   453,   454,   455,   456,     0,   457,  1541,
     459,   460,   850,   461,  1542,   463,     0,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,     0,     0,   475,
     476,     0,   477,   478,   479,   480,   481,   482,     0,  1543,
    1544,     0,     0,   485,     0,   487,     0,     0,   489,   490,
     491,   492,     0,   493,   494,     0,     0,   495,   496,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,     0,
    1545,     0,   507,   851,   508,   509,   510,   511,     0,     0,
     512,     0,     0,   513,   514,   515,   516,   517,   518,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,   537,     0,
     538,   539,   540,   541,   542,   543,   544,   545,   546,     0,
       0,   549,   550,   551,   552,   553,   554,   555,   556,     0,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,     0,   580,     0,   581,   582,  1525,   584,   585,   586,
     587,   588,   589,   590,   591,   592,     0,   224,   225,   226,
     227,   228,   229,   230,   231,     0,   233,   234,   235,     0,
       0,     0,     0,     0,     0,     0,   236,   237,     0,   238,
     239,   830,   240,   241,   242,     0,  1526,   831,  1527,  1528,
       0,   247,   248,   249,   250,   251,     0,     0,   252,   253,
    1529,  1530,   256,     0,   257,   258,   259,   260,     0,     0,
     832,     0,   262,   263,   264,   265,   266,   833,   267,   268,
       0,   269,   270,   271,   272,   273,   274,     0,   834,   275,
     276,     0,     0,     0,   835,     0,     0,     0,   277,   278,
     279,   280,   281,   282,  1531,  1532,   285,     0,   286,     0,
     287,   288,   289,   290,   291,     0,   292,   293,   294,     0,
       0,   295,   296,  1156,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,     0,     0,   307,   308,   309,
       0,   311,   312,   313,     0,     0,   315,     0,   316,   317,
    1533,     0,     0,   319,     0,   320,   836,     0,   837,   321,
     322,   323,     0,   324,     0,     0,   326,     0,   327,   328,
     329,   330,   331,   838,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,     0,   341,   839,     0,   343,   344,
     345,   346,  1534,  1535,     0,  1536,     0,   350,   840,   841,
     351,   842,   352,   353,   354,   355,   356,     0,   357,   358,
       0,   359,     0,   843,   361,   844,     0,   362,   363,   364,
       0,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,  1537,   845,
    1538,   383,   384,     0,     0,   386,   387,   846,   388,     0,
       0,   390,  1539,   392,   393,   394,     0,   395,     0,     0,
     396,   397,   398,     0,     0,   399,     0,   847,   401,   848,
       0,   403,   404,   405,   406,     0,   407,   408,     0,   409,
       0,     0,     0,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,   422,  1540,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,     0,   439,   440,   849,   441,   442,     0,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,   453,
     454,   455,   456,     0,   457,  2326,   459,   460,   850,   461,
    1542,   463,     0,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,     0,     0,   475,   476,     0,   477,   478,
     479,   480,   481,   482,     0,  1543,  1544,     0,     0,   485,
       0,   487,     0,     0,   489,   490,   491,   492,     0,   493,
     494,     0,     0,   495,   496,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,     0,  1545,     0,   507,   851,
     508,   509,   510,   511,     0,     0,   512,     0,     0,   513,
     514,   515,   516,   517,   518,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,   537,     0,   538,   539,   540,   541,
     542,   543,   544,   545,   546,     0,     0,   549,   550,   551,
     552,   553,   554,   555,   556,     0,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,     0,   580,     0,
     581,   582,  1525,   584,   585,   586,   587,   588,   589,   590,
     591,   592,     0,   224,   225,   226,   227,   228,   229,   230,
     231,     0,   233,   234,   235,     0,     0,     0,     0,     0,
       0,     0,   236,   237,     0,   238,   239,   830,   240,   241,
     242,     0,  1526,   831,  1527,  1528,     0,   247,   248,   249,
     250,   251,     0,     0,   252,   253,  1529,  1530,   256,     0,
     257,   258,   259,   260,     0,     0,   832,     0,   262,   263,
     264,   265,   266,   833,   267,   268,     0,   269,   270,   271,
     272,   273,   274,     0,   834,   275,   276,     0,     0,     0,
     835,     0,     0,     0,   277,   278,   279,   280,   281,   282,
    1531,  1532,   285,     0,   286,     0,   287,   288,   289,   290,
     291,     0,   292,   293,   294,     0,     0,   295,   296,  1156,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,     0,     0,   307,   308,   309,     0,   311,   312,   313,
       0,     0,   315,     0,   316,   317,  1533,     0,     0,   319,
       0,   320,   836,     0,   837,   321,   322,   323,     0,   324,
       0,     0,   326,     0,   327,   328,   329,   330,   331,   838,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
       0,   341,   839,     0,   343,   344,   345,   346,  1534,  1535,
       0,  1536,     0,   350,   840,   841,   351,   842,   352,   353,
     354,   355,   356,     0,   357,   358,     0,   359,     0,   843,
     361,   844,     0,   362,   363,   364,     0,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,  1537,   845,  1538,   383,   384,     0,
       0,   386,   387,   846,   388,     0,     0,   390,  1539,   392,
     393,   394,     0,   395,     0,     0,   396,   397,   398,     0,
       0,   399,     0,   847,   401,   848,     0,   403,   404,   405,
     406,     0,   407,   408,     0,   409,     0,     0,     0,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
     422,  1540,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,     0,   439,
     440,   849,   441,   442,     0,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,   453,   454,   455,   456,     0,
     457,     0,   459,   460,   850,   461,  1542,   463,     0,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,     0,
       0,   475,   476,     0,   477,   478,   479,   480,   481,   482,
       0,  1543,  1544,     0,     0,   485,     0,   487,     0,     0,
     489,   490,   491,   492,     0,   493,   494,     0,     0,   495,
     496,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,     0,  1545,     0,   507,   851,   508,   509,   510,   511,
       0,     0,   512,     0,     0,   513,   514,   515,   516,   517,
     518,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
     537,     0,   538,   539,   540,   541,   542,   543,   544,   545,
     546,     0,     0,   549,   550,   551,   552,   553,   554,   555,
     556,     0,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,     0,   580,     0,   581,   582,  1525,   584,
     585,   586,   587,   588,   589,   590,   591,   592,     0,   224,
     225,   226,   227,   228,   229,   230,   231,     0,   233,   234,
     235,     0,     0,     0,     0,     0,     0,     0,   236,   237,
       0,   238,   239,   830,   240,   241,   242,     0,     0,   831,
       0,     0,     0,   247,   248,   249,   250,   251,     0,     0,
     252,   253,     0,     0,   256,     0,   257,   258,   259,   260,
       0,     0,   832,     0,   262,   263,   264,   265,   266,   833,
     267,   268,     0,   269,   270,   271,   272,   273,   274,     0,
     834,   275,   276,     0,     0,     0,   835,     0,     0,     0,
     277,   278,   279,   280,   281,   282,     0,     0,   285,     0,
     286,     0,   287,   288,   289,   290,   291,     0,   292,   293,
     294,     0,     0,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,     0,     0,   307,
     308,   309,     0,   311,   312,   313,     0,     0,   315,     0,
     316,   317,     0,     0,     0,   319,     0,   320,   836,     0,
     837,   321,   322,   323,     0,   324,     0,     0,   326,     0,
     327,   328,   329,   330,   331,   838,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   839,     0,
     343,   344,   345,   346,     0,     0,     0,     0,     0,   350,
     840,   841,   351,   842,   352,   353,   354,   355,   356,     0,
     357,   358,     0,   359,     0,   843,   361,   844,     0,   362,
     363,   364,     0,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   845,     0,   383,   384,     0,     0,   386,   387,   846,
     388,     0,     0,   390,     0,   392,   393,   394,     0,   395,
       0,     0,   396,   397,   398,     0,     0,   399,     0,   847,
     401,   848,     0,   403,   404,   405,   406,     0,   407,   408,
       0,   409,     0,     0,     0,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,     0,   439,   440,   849,   441,   442,
       0,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,   453,   454,   455,   456,     0,   457,     0,   459,   460,
     850,   461,     0,   463,     0,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,     0,     0,   475,   476,     0,
     477,   478,   479,   480,   481,   482,     0,     0,     0,     0,
       0,   485,     0,   487,     0,     0,   489,   490,   491,   492,
       0,   493,   494,     0,     0,   495,   496,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,     0,     0,     0,
     507,   851,   508,   509,   510,   511,     0,     0,   512,     0,
       0,   513,   514,   515,   516,   517,   518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,   537,     0,   538,   539,
     540,   541,   542,   543,   544,   545,   546,     0,     0,   549,
     550,   551,   552,   553,   554,   555,   556,     0,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,     0,
     580,     0,   581,   582,  3148,   584,   585,   586,   587,   588,
     589,   590,   591,   592,     0,  1818,  1819,  1820,  1821,     0,
    1823,  1824,  1825,     0,  1826,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1830,  1831,     0,     0,     0,  1833,
    1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,     0,  1842,
    1843,  1844,  1845,  1846,     0,     0,     0,  1847,     0,     0,
    1848,     0,  1849,  1850,  1851,  1852,  1853,     0,     0,     0,
    1855,     0,  1856,  1857,  1858,     0,     0,  1859,     0,  1860,
    1861,     0,  1862,  1863,  1864,     0,     0,  1865,     0,     0,
       0,     0,     0,     0,     0,     0,  1866,  1867,     0,  1868,
       0,  1869,  1870,  1871,  1872,     0,  1873,     0,  1874,  1875,
    1876,  1877,  1878,     0,     0,  1879,     0,     0,     0,     0,
    1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,  3149,  1887,
    1888,  1889,     0,     0,     0,  1890,  1891,  1892,  1893,  1894,
       0,  1895,  1896,     0,     0,     0,     0,  1897,  1898,     0,
    3150,  1899,     0,  1900,  1901,     0,     0,  1902,     0,  1903,
       0,  1904,  1905,     0,  1906,     0,  1907,  1908,     0,     0,
    1909,     0,  1911,  1912,  1913,     0,  1915,  1916,  1917,  1918,
    1919,  1920,     0,     0,     0,  1921,  1922,  1923,  1924,  1925,
    1926,  1927,     0,  1928,     0,  1929,     0,     0,  1932,     0,
    1933,     0,  1934,  1935,  1936,     0,     0,     0,     0,     0,
    1937,     0,  1938,     0,     0,  1940,  1941,  1942,     0,     0,
    1943,  1944,     0,  1945,     0,  1946,  1947,  1948,  1949,     0,
    1950,  1951,     0,  1952,  1953,  1954,  1955,     0,  1956,  1957,
    1958,  1959,     0,  1961,  1962,     0,  1964,     0,  1965,  1966,
    1967,  1968,  1969,     0,     0,  1970,     0,     0,  3151,  1972,
    1973,     0,     0,     0,  1975,  1976,     0,     0,  1977,  1978,
    1979,     0,  1980,     0,     0,  1981,     0,     0,  1982,     0,
    1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,  1990,     0,
    1991,  1992,  1993,  1994,  1995,  1996,     0,     0,     0,     0,
    1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,  2004,  2005,
       0,  2006,  2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,
    2014,  2015,  2016,     0,  2017,     0,  2018,     0,  2019,     0,
    2020,     0,  2021,  2022,  2023,  2024,     0,  2026,  2027,     0,
       0,  2028,     0,  3152,  2030,  2031,  2032,  2033,  2034,  2035,
       0,  2036,     0,  2037,  2038,     0,     0,     0,  2040,  2041,
    2042,     0,     0,  2043,  2044,     0,     0,  2045,  2046,  2047,
    2048,     0,  2049,  2050,  2051,     0,     0,  2052,  2053,     0,
       0,  2054,  2055,     0,  2056,  2057,     0,     0,  2058,  2059,
       0,  2060,  2061,  3153,  2063,     0,     0,  2064,  2065,  2066,
       0,  2067,     0,     0,     0,     0,     0,     0,     0,  2068,
       0,  2069,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2070,  2071,  2072,  2073,  2074,  2075,
    2076,     0,     0,     0,     0,  2077,  2078,  2079,     0,  2080,
    2081,  2082,     0,  2083,  2084,  2085,  2086,     0,  2087,     0,
    2088,  2089,  2090,     0,  2091,  2092,  2093,     0,  2094,     0,
    2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,  2102,     0,
       0,     0,     0,     0,  2103,  2104,  3148,     0,  2105,  2106,
    2107,  2108,  2109,  2110,  2111,  2112,     0,  1818,  1819,  1820,
    1821,     0,  1823,  1824,  1825,     0,  1826,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1830,  1831,     0,     0,
       0,  1833,  1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,
       0,  1842,  1843,  1844,  1845,  1846,     0,     0,     0,  1847,
       0,     0,  1848,     0,  1849,  1850,  1851,  1852,  1853,     0,
       0,     0,  1855,     0,  1856,  1857,  1858,     0,     0,  1859,
       0,  1860,  1861,     0,  1862,  1863,  1864,     0,     0,  1865,
       0,     0,     0,     0,     0,     0,     0,     0,  1866,  1867,
       0,  1868,     0,  1869,  1870,  1871,  1872,     0,  1873,     0,
    1874,  1875,  1876,  1877,  1878,     0,     0,  1879,     0,     0,
       0,     0,  1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,
       0,  1887,  1888,  1889,     0,     0,     0,  1890,  1891,  1892,
    1893,  1894,     0,  1895,  1896,     0,     0,     0,     0,  1897,
    1898,     0,  3150,  1899,     0,  1900,  1901,     0,     0,  1902,
       0,  1903,     0,  1904,  1905,     0,  1906,     0,  1907,  1908,
       0,     0,  1909,     0,  1911,  1912,  1913,     0,  1915,  1916,
    1917,  1918,  1919,  1920,     0,     0,     0,  1921,  1922,  1923,
    1924,  1925,  1926,  1927,     0,  1928,     0,  1929,     0,     0,
    1932,     0,  1933,     0,  1934,  1935,  1936,     0,     0,     0,
       0,     0,  1937,     0,  1938,     0,     0,  1940,  1941,  1942,
       0,     0,  1943,  1944,     0,  1945,     0,  1946,  1947,  1948,
    1949,     0,  1950,  1951,     0,  1952,  1953,  1954,  1955,     0,
    1956,  1957,  1958,  1959,     0,  1961,  1962,     0,  1964,     0,
    1965,  1966,  1967,  1968,  1969,     0,     0,  1970,     0,     0,
    3151,  1972,  1973,     0,     0,     0,  1975,  1976,     0,     0,
    1977,  1978,  1979,     0,  1980,     0,     0,  1981,     0,     0,
    1982,     0,  1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,
    1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,     0,     0,
       0,     0,  1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,
    2004,  2005,     0,  2006,  2007,     0,  2008,  2009,  2010,  2011,
    2012,  2013,  2014,  2015,  2016,     0,  2017,     0,  2018,     0,
    2019,     0,  2020,     0,  2021,  2022,  2023,  2024,     0,  2026,
    2027,     0,     0,  2028,     0,  2029,  2030,  2031,  2032,  2033,
    2034,  2035,     0,  2036,     0,  2037,  2038,     0,     0,     0,
    2040,  2041,  2042,     0,     0,  2043,  2044,     0,     0,  2045,
    2046,  2047,  2048,     0,  2049,  2050,  2051,     0,     0,  2052,
    2053,     0,     0,  2054,  2055,     0,  2056,  2057,     0,     0,
    2058,  2059,     0,  2060,  2061,  2062,  2063,     0,     0,  2064,
    2065,  2066,     0,  2067,     0,     0,     0,     0,     0,     0,
       0,  2068,     0,  2069,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2070,  2071,  2072,  2073,
    2074,  2075,  2076,     0,     0,     0,     0,  2077,  2078,  2079,
       0,  2080,  2081,  2082,     0,  2083,  2084,  2085,  2086,     0,
    2087,     0,  2088,  2089,  2090,     0,  2091,  2092,  2093,     0,
    2094,     0,  2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,
    2102,     0,     0,     0,     0,     0,  2103,  2104,  3148,     0,
    2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112,     0,  1818,
    1819,  1820,  1821,     0,  1823,  1824,  1825,     0,  1826,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1830,  1831,
       0,     0,     0,  1833,  1834,  1835,  1836,     0,  1838,  1839,
    1840,  1841,     0,  1842,  1843,  1844,  1845,  1846,     0,     0,
       0,  1847,     0,     0,  1848,     0,  1849,  1850,  1851,  1852,
    1853,     0,     0,     0,  1855,     0,  1856,  1857,  1858,     0,
       0,  1859,     0,  1860,  1861,     0,  1862,  1863,  1864,     0,
       0,  1865,     0,     0,     0,     0,     0,     0,     0,     0,
    1866,  1867,     0,  1868,     0,  1869,  1870,  1871,  1872,     0,
    1873,     0,  1874,  1875,  1876,  1877,  1878,     0,     0,  1879,
       0,     0,     0,     0,  1880,  1881,  1882,  1883,     0,  1884,
    1885,  1886,     0,  1887,  1888,  1889,     0,     0,     0,  1890,
    1891,  1892,  1893,  1894,     0,  1895,  1896,     0,     0,     0,
       0,  1897,  1898,     0,  3150,  1899,     0,  1900,  1901,     0,
       0,  1902,     0,  1903,     0,  1904,  1905,     0,  1906,     0,
    1907,  1908,     0,     0,  3177,     0,  1911,  1912,  1913,     0,
    1915,  1916,  1917,  1918,  1919,  1920,     0,     0,     0,  1921,
    1922,  1923,  1924,  1925,  1926,  1927,     0,  1928,     0,  1929,
       0,     0,  1932,     0,  1933,     0,  1934,  1935,  1936,     0,
       0,     0,     0,     0,  1937,     0,  1938,     0,     0,  1940,
    1941,  1942,     0,     0,  1943,  1944,     0,  1945,     0,  1946,
    1947,  1948,  1949,     0,  1950,  1951,     0,  1952,  1953,  1954,
    1955,     0,  1956,  1957,  1958,  1959,     0,  1961,  1962,     0,
    1964,     0,  1965,  1966,  1967,  1968,  1969,     0,     0,  1970,
       0,     0,  3151,  1972,  1973,     0,     0,     0,  1975,  1976,
       0,     0,  1977,  1978,  1979,     0,  1980,     0,     0,  1981,
       0,     0,  1982,     0,  1983,  1984,  1985,  1986,     0,  1987,
    1988,  1989,  1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,
       0,     0,     0,     0,  1997,  1998,  1999,  2000,  2001,  2002,
       0,  2003,  2004,  2005,     0,  2006,  2007,     0,  2008,  2009,
    2010,  2011,  2012,  2013,  2014,  2015,  2016,     0,  2017,     0,
    2018,     0,  2019,     0,  2020,     0,  2021,  2022,  2023,  2024,
       0,  2026,  2027,     0,     0,  2028,     0,  2029,  2030,  2031,
    2032,  2033,  2034,  2035,     0,  2036,     0,  2037,  2038,     0,
       0,     0,  2040,  2041,  2042,     0,     0,  2043,  2044,     0,
       0,  2045,  2046,  2047,  2048,     0,  2049,  2050,  2051,     0,
       0,  2052,  2053,     0,     0,  2054,  2055,     0,  2056,  2057,
       0,     0,  2058,  2059,     0,  2060,  2061,  2062,  2063,     0,
       0,  2064,  2065,  2066,     0,  2067,     0,     0,     0,     0,
       0,     0,     0,  2068,     0,  2069,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2070,  2071,
    2072,  2073,  2074,  2075,  2076,     0,     0,     0,     0,  2077,
    2078,  2079,     0,  2080,  2081,  2082,     0,  2083,  2084,  2085,
    2086,     0,  2087,     0,  2088,  2089,  2090,     0,  2091,  2092,
    2093,     0,  2094,     0,  2095,  2096,  2097,     0,  2098,  2099,
    2100,  2101,  2102,     0,     0,     0,     0,     0,  2103,  2104,
    3148,     0,  2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112,
       0,  1818,  1819,  1820,  1821,     0,  1823,  1824,  1825,     0,
    1826,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1830,  1831,     0,     0,     0,  1833,  1834,  1835,  1836,     0,
    1838,  1839,  1840,  1841,     0,  1842,  1843,  1844,  1845,  1846,
       0,     0,     0,  1847,     0,     0,  1848,     0,  1849,  1850,
    1851,  1852,  1853,     0,     0,     0,  1855,     0,  1856,  1857,
    1858,     0,     0,  1859,     0,  1860,  1861,     0,  1862,  1863,
    1864,     0,     0,  1865,     0,     0,     0,     0,     0,     0,
       0,     0,  1866,  1867,     0,  1868,     0,  1869,  1870,  1871,
    1872,     0,  1873,     0,  1874,  1875,  1876,  1877,  1878,     0,
       0,  1879,     0,     0,     0,     0,  1880,  1881,  1882,  1883,
       0,  1884,  1885,  1886,     0,  1887,  1888,  1889,     0,     0,
       0,  1890,  1891,  1892,  1893,  1894,     0,  1895,  1896,     0,
       0,     0,     0,  1897,  1898,     0,  3150,  1899,     0,  1900,
    1901,     0,     0,  1902,     0,  1903,     0,  1904,  1905,     0,
    1906,     0,  1907,  1908,     0,     0,  3824,     0,  1911,  1912,
    1913,     0,  1915,  1916,  1917,  1918,  1919,  1920,     0,     0,
       0,  1921,  1922,  1923,  1924,  1925,  1926,  1927,     0,  1928,
       0,  1929,     0,     0,  1932,     0,  1933,     0,  1934,  1935,
    1936,     0,     0,     0,     0,     0,  1937,     0,  1938,     0,
       0,  1940,  1941,  1942,     0,     0,  1943,  1944,     0,  1945,
       0,  1946,  1947,  1948,  1949,     0,  1950,  1951,     0,  1952,
    1953,  1954,  1955,     0,  1956,  1957,  1958,  1959,     0,  1961,
    1962,     0,  1964,     0,  1965,  1966,  1967,  1968,  1969,     0,
       0,  1970,     0,     0,  3151,  1972,  1973,     0,     0,     0,
    1975,  1976,     0,     0,  1977,  1978,  1979,     0,  1980,     0,
       0,  1981,     0,     0,  1982,     0,  1983,  1984,  1985,  1986,
       0,  1987,  1988,  1989,  1990,     0,  1991,  1992,  1993,  1994,
    1995,  1996,     0,     0,     0,     0,  1997,  1998,  1999,  2000,
    2001,  2002,     0,  2003,  2004,  2005,     0,  2006,  2007,     0,
    2008,  2009,  2010,  2011,  2012,  2013,  2014,  2015,  2016,     0,
    2017,     0,  2018,     0,  2019,     0,  2020,     0,  2021,  2022,
    2023,  2024,     0,  2026,  2027,     0,     0,  2028,     0,  2029,
    2030,  2031,  2032,  2033,  2034,  2035,     0,  2036,     0,  2037,
    2038,     0,     0,     0,  2040,  2041,  2042,     0,     0,  2043,
    2044,     0,     0,  2045,  2046,  2047,  2048,     0,  2049,  2050,
    2051,     0,     0,  2052,  2053,     0,     0,  2054,  2055,     0,
    2056,  2057,     0,     0,  2058,  2059,     0,  2060,  2061,  2062,
    2063,     0,     0,  2064,  2065,  2066,     0,  2067,     0,     0,
       0,     0,     0,     0,     0,  2068,     0,  2069,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2070,  2071,  2072,  2073,  2074,  2075,  2076,     0,     0,     0,
       0,  2077,  2078,  2079,     0,  2080,  2081,  2082,     0,  2083,
    2084,  2085,  2086,     0,  2087,     0,  2088,  2089,  2090,     0,
    2091,  2092,  2093,     0,  2094,     0,  2095,  2096,  2097,     0,
    2098,  2099,  2100,  2101,  2102,     0,     0,     0,     0,     0,
    2103,  2104,  3148,     0,  2105,  2106,  2107,  2108,  2109,  2110,
    2111,  2112,     0,  1818,  1819,  1820,  1821,     0,  1823,  1824,
    1825,     0,  1826,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1830,  1831,     0,     0,     0,  1833,  1834,  1835,
    1836,     0,  1838,  1839,  1840,  1841,     0,  1842,  1843,  1844,
    1845,  1846,     0,     0,     0,  1847,     0,     0,  1848,     0,
    1849,  1850,  1851,  1852,  1853,     0,     0,     0,  1855,     0,
    1856,  1857,  1858,     0,     0,  1859,     0,  1860,  1861,     0,
    1862,  1863,  1864,     0,     0,  1865,     0,     0,     0,     0,
       0,     0,     0,     0,  1866,  1867,     0,  1868,     0,  1869,
    1870,  1871,  1872,     0,  1873,     0,  1874,  1875,  1876,  1877,
    1878,     0,     0,  1879,     0,     0,     0,     0,  1880,  1881,
    1882,  1883,     0,  1884,  1885,  1886,     0,  1887,  1888,  1889,
       0,     0,     0,  1890,  1891,  1892,  1893,  1894,     0,  1895,
    1896,     0,     0,     0,     0,  1897,  1898,     0,  3150,  1899,
       0,  1900,  1901,     0,     0,  1902,     0,  1903,     0,  1904,
    1905,     0,  1906,     0,  1907,  1908,     0,     0,  1909,     0,
    1911,  1912,  1913,     0,  1915,  1916,  1917,  1918,  1919,  1920,
       0,     0,     0,  1921,  1922,  1923,  1924,  1925,  1926,  1927,
       0,  1928,     0,  1929,     0,     0,  1932,     0,  1933,     0,
    1934,  1935,  1936,     0,     0,     0,     0,     0,  1937,     0,
    1938,     0,     0,  1940,  1941,  1942,     0,     0,  1943,  1944,
       0,  1945,     0,  1946,  1947,  1948,  1949,     0,  1950,  1951,
       0,  1952,  1953,  1954,  1955,     0,  1956,  1957,  1958,  1959,
       0,  1961,  1962,     0,  1964,     0,  1965,  1966,  1967,  1968,
    1969,     0,     0,  1970,     0,     0,  3151,  1972,  1973,     0,
       0,     0,  1975,  1976,     0,     0,  1977,  1978,  1979,     0,
    1980,     0,     0,  1981,     0,     0,  1982,     0,  1983,  1984,
    1985,  1986,     0,  1987,  1988,  1989,  1990,     0,  1991,  1992,
    1993,  1994,  1995,  1996,     0,     0,     0,     0,  1997,  1998,
    1999,  2000,  2001,  2002,     0,  2003,  2004,  2005,     0,  2006,
    2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,  2014,  2015,
    2016,     0,  2017,     0,  2018,     0,  2019,     0,  2020,     0,
    2021,  2022,  2023,  2024,     0,  2026,  2027,     0,     0,  2028,
       0,  3152,  2030,  2031,  2032,  2033,  2034,  2035,     0,  2036,
       0,  2037,  2038,     0,     0,     0,  2040,  2041,  2042,     0,
       0,  2043,  2044,     0,     0,  2045,  2046,  2047,  2048,     0,
    2049,  2050,  2051,     0,     0,  2052,  2053,     0,     0,  2054,
    2055,     0,  2056,  2057,     0,     0,  2058,  2059,     0,  2060,
    2061,  2062,  2063,     0,     0,  2064,  2065,  2066,     0,  2067,
       0,     0,     0,     0,     0,     0,     0,  2068,     0,  2069,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2070,  2071,  2072,  2073,  2074,  2075,  2076,     0,
       0,     0,     0,  2077,  2078,  2079,     0,  2080,  2081,  2082,
       0,  2083,  2084,  2085,  2086,     0,  2087,     0,  2088,  2089,
    2090,     0,  2091,  2092,  2093,     0,  2094,     0,  2095,  2096,
    2097,     0,  2098,  2099,  2100,  2101,  2102,     0,     0,     0,
       0,     0,  2103,  2104,  3148,     0,  2105,  2106,  2107,  2108,
    2109,  2110,  2111,  2112,     0,  1818,  1819,  1820,  1821,     0,
    1823,  1824,  1825,     0,  1826,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1830,  1831,     0,     0,     0,  1833,
    1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,     0,  1842,
    1843,  1844,  1845,  1846,     0,     0,     0,  1847,     0,     0,
    1848,     0,  1849,  1850,  1851,  1852,  1853,     0,     0,     0,
    1855,     0,  1856,  1857,  1858,     0,     0,  1859,     0,  1860,
    1861,     0,  1862,  1863,  1864,     0,     0,  1865,     0,     0,
       0,     0,     0,     0,     0,     0,  1866,  1867,     0,  1868,
       0,  1869,  1870,  1871,  1872,     0,  1873,     0,  1874,  1875,
    1876,  1877,  1878,     0,     0,  1879,     0,     0,     0,     0,
    1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,     0,  1887,
    1888,  1889,     0,     0,     0,  1890,  1891,  1892,  1893,  1894,
       0,  1895,  1896,     0,     0,     0,     0,  1897,  1898,     0,
    3150,  1899,     0,  1900,  1901,     0,     0,  1902,     0,  1903,
       0,  1904,  1905,     0,  1906,     0,  1907,  1908,     0,     0,
    1909,     0,  1911,  1912,  1913,     0,  1915,  1916,  1917,  1918,
    1919,  1920,     0,     0,     0,  1921,  1922,  1923,  1924,  1925,
    1926,  1927,     0,  1928,     0,  1929,     0,     0,  1932,     0,
    1933,     0,  1934,  1935,  1936,     0,     0,     0,     0,     0,
    1937,     0,  1938,     0,     0,  1940,  1941,  1942,     0,     0,
    1943,  1944,     0,  1945,     0,  1946,  1947,  1948,  1949,     0,
    1950,  1951,     0,  1952,  1953,  1954,  1955,     0,  1956,  1957,
    1958,  1959,     0,  1961,  1962,     0,  1964,     0,  1965,  1966,
    1967,  1968,  1969,     0,     0,  1970,     0,     0,  3151,  1972,
    1973,     0,     0,     0,  1975,  1976,     0,     0,  1977,  1978,
    1979,     0,  1980,     0,     0,  1981,     0,     0,  1982,     0,
    1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,  1990,     0,
    1991,  1992,  1993,  1994,  1995,  1996,     0,     0,     0,     0,
    1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,  2004,  2005,
       0,  2006,  2007,     0,  2008,  2009,  2010,  2011,  2012,  2013,
    2014,  2015,  2016,     0,  2017,     0,  2018,     0,  2019,     0,
    2020,     0,     0,  2022,  2023,  2024,     0,  2026,  2027,     0,
       0,  2028,     0,  2029,  2030,  2031,  2032,  2033,  2034,  2035,
       0,  2036,     0,  2037,  2038,     0,     0,     0,  2040,  2041,
    2042,     0,     0,  2043,  2044,     0,     0,  2045,  2046,  2047,
    2048,     0,  2049,  2050,  2051,     0,     0,  2052,  2053,     0,
       0,  2054,  2055,     0,  2056,  2057,     0,     0,  2058,  2059,
       0,  2060,  2061,  2062,  2063,     0,     0,  2064,  2065,  2066,
       0,  2067,     0,     0,     0,     0,     0,     0,     0,  2068,
       0,  2069,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2070,  2071,  2072,  2073,  2074,  2075,
    2076,     0,     0,     0,     0,  2077,  2078,  2079,     0,  2080,
    2081,  2082,     0,  2083,  2084,  2085,  2086,     0,  2087,     0,
    2088,  2089,  2090,     0,  2091,  2092,  2093,     0,  2094,     0,
    2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,  2102,     0,
       0,     0,     0,     0,  2103,  2104,  3148,     0,  2105,  2106,
    2107,  2108,  2109,  2110,  2111,  2112,     0,  1818,  1819,  1820,
    1821,     0,  1823,  1824,  1825,     0,  1826,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1830,  1831,     0,     0,
       0,  1833,  1834,  1835,  1836,     0,  1838,  1839,  1840,  1841,
       0,  1842,  1843,  1844,  1845,  1846,     0,     0,     0,  1847,
       0,     0,  1848,     0,  1849,  1850,  1851,  1852,  1853,     0,
       0,     0,  1855,     0,  1856,  1857,  1858,     0,     0,  1859,
       0,  1860,  1861,     0,  1862,  1863,  1864,     0,     0,  1865,
       0,     0,     0,     0,     0,     0,     0,     0,  1866,  1867,
       0,  1868,     0,  1869,  1870,  1871,  1872,     0,  1873,     0,
    1874,  1875,  1876,  1877,  1878,     0,     0,  1879,     0,     0,
       0,     0,  1880,  1881,  1882,  1883,     0,  1884,  1885,  1886,
       0,  1887,  1888,  1889,     0,     0,     0,  1890,  1891,  1892,
    1893,  1894,     0,  1895,  1896,     0,     0,     0,     0,  1897,
    1898,     0,     0,  1899,     0,  1900,  1901,     0,     0,  1902,
       0,  1903,     0,  1904,  1905,     0,  1906,     0,  1907,  1908,
       0,     0,  1909,     0,  1911,  1912,  1913,     0,  1915,  1916,
    1917,  1918,  1919,  1920,     0,     0,     0,  1921,  1922,  1923,
    1924,  1925,  1926,  1927,     0,  1928,     0,  1929,     0,     0,
    1932,     0,  1933,     0,  1934,  1935,  1936,     0,     0,     0,
       0,     0,  1937,     0,  1938,     0,     0,  1940,  1941,  1942,
       0,     0,  1943,  1944,     0,  1945,     0,  1946,  1947,  1948,
    1949,     0,  1950,  1951,     0,  1952,  1953,  1954,  1955,     0,
    1956,  1957,  1958,  1959,     0,  1961,  1962,     0,  1964,     0,
    1965,  1966,  1967,  1968,  1969,     0,     0,  1970,     0,     0,
    3151,  1972,  1973,     0,     0,     0,  1975,  1976,     0,     0,
    1977,  1978,  1979,     0,  1980,     0,     0,  1981,     0,     0,
    1982,     0,  1983,  1984,  1985,  1986,     0,  1987,  1988,  1989,
    1990,     0,  1991,  1992,  1993,  1994,  1995,  1996,     0,     0,
       0,     0,  1997,  1998,  1999,  2000,  2001,  2002,     0,  2003,
    2004,  2005,     0,  2006,  2007,     0,  2008,  2009,  2010,  2011,
    2012,  2013,  2014,  2015,  2016,     0,  2017,     0,  2018,     0,
    2019,     0,  2020,     0,  2021,  2022,  2023,  2024,     0,  2026,
    2027,     0,     0,  2028,     0,  2029,  2030,  2031,  2032,  2033,
    2034,  2035,     0,  2036,     0,  2037,  2038,     0,     0,     0,
    2040,  2041,  2042,     0,     0,  2043,  2044,     0,     0,  2045,
    2046,  2047,  2048,     0,  2049,  2050,  2051,     0,     0,  2052,
    2053,     0,     0,  2054,  2055,     0,  2056,  2057,     0,     0,
    2058,  2059,     0,  2060,  2061,  2062,  2063,     0,     0,  2064,
    2065,  2066,     0,  2067,     0,     0,     0,     0,     0,     0,
       0,  2068,     0,  2069,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2070,  2071,  2072,  2073,
    2074,  2075,  2076,     0,     0,     0,     0,  2077,  2078,  2079,
       0,  2080,  2081,  2082,     0,  2083,  2084,  2085,  2086,     0,
    2087,     0,  2088,  2089,  2090,     0,  2091,  2092,  2093,     0,
    2094,     0,  2095,  2096,  2097,     0,  2098,  2099,  2100,  2101,
    2102,     0,     0,     0,     0,     0,  2103,  2104,     0,     0,
    2105,  2106,  2107,  2108,  2109,  2110,  2111,  2112
};

static const yytype_int16 yycheck[] =
{
      21,     0,     0,     0,     0,    26,     0,     0,  1035,   654,
    1075,   773,  1097,    49,    16,  1340,  1039,   823,    34,   204,
     619,   828,    24,   974,    20,   729,   730,    48,     7,     0,
     734,    21,   181,   906,   675,    14,    26,  1044,  1388,   901,
      11,  1391,   853,  2314,   685,  1705,    12,  2330,  2331,    20,
     695,  1269,   931,  1403,  1541,  1405,   918,  1407,    48,   654,
    2793,  1777,  1387,  1814,  1381,  3154,  1401,  1286,  1023,  1391,
    1125,  1154,  1155,  1499,   673,  2498,  1184,  3164,    49,  1558,
    3377,  3211,   780,  1321,    20,  3118,  2636,    43,  3396,   882,
    1173,  3424,   905,   190,   191,  2644,   987,   194,   911,   196,
    1267,  3803,  1597,   610,  3469,  1323,   997,   920,    42,  1446,
    3190,   973,  3192,  1743,  3702,   977,  3843,  3747,    22,   216,
     982,  3454,   219,  2959,  2960,  2956,    17,   989,  1463,  1464,
      34,   776,  1066,  1296,  3849,  2549,  1458,   999,  2271,  2772,
    3642,  4060,  3743,  1381,  3381,  3382,  3383,  3384,  3385,  3386,
       0,  3813,  2441,  2961,  4349,  3026,   663,  4003,  4377,  2448,
    1327,  3443,  4344,  4049,   183,  1660,  2601,  2456,  1327,  1370,
     183,  4074,  3675,  1387,  3811,  3800,  4575,  3669,   167,  1602,
    3884,   776,    33,  2893,     0,     0,     0,  1613,  3019,    40,
       0,     0,  4567,     0,    39,     0,  4296,     0,     0,     0,
       0,  2302,  3034,  3797,  3798,  3799,  3800,  3155,  2300,  4683,
    4340,  4685,   183,   871,  4574,  3674,  2639,  3714,   200,  5043,
    5044,  3591,  1070,  4922,   206,     5,   820,     0,  2852,  2853,
       9,     5,    44,  2857,    11,   217,  3798,  3799,    99,     0,
      31,    31,     5,    66,     0,    87,    80,    58,     5,     0,
      13,    26,    27,  2956,    83,     5,    48,   149,  3852,     5,
     104,   129,   160,   967,    51,     5,     5,    13,     5,     5,
      68,    18,  1206,    13,   154,   154,   154,     5,   212,   924,
    2904,  2905,  1075,     0,  4915,   174,    48,     5,   135,     0,
    3852,   820,     9,     5,   111,  2718,    68,  2720,     9,     5,
       5,    58,   154,     5,   162,    22,   167,     5,     5,     5,
      11,    22,   155,    37,   162,   104,  3019,    11,    25,   154,
     162,    58,  3032,   106,    37,  5003,  5004,    97,  4715,  4716,
      51,   193,   104,     4,  4061,    77,    51,   255,     9,   125,
       9,    18,    36,    18,    25,     5,   269,   254,  3849,   104,
     251,    51,   951,    22,   285,   127,  1001,    35,     9,  4857,
       5,    35,  1143,  1144,    68,  1306,   155,   228,    31,   135,
     231,   331,    66,   154,   121,  1254,   104,   104,   153,   302,
     155,   154,     4,   239,   149,   239,    20,     9,  1169,     3,
       4,     5,    31,   154,  1561,     9,  1207,   239,   154,  5116,
     109,   174,    34,   154,  1045,   189,    40,   136,   331,   286,
     354,    31,   121,   174,  2130,   199,  1061,  1062,   174,    31,
     104,    97,   290,   174,    22,  1236,   154,   386,   405,   148,
    1075,    29,   407,   386,   619,    84,  1544,   154,    32,   315,
     108,   313,   261,   154,   121,   136,   121,   269,  1531,  1532,
      11,  4765,     5,   242,   195,  4301,  1539,   174,    79,  1252,
       5,   322,  1103,   174,  1257,  1258,   302,  1062,   317,   302,
     269,  1001,  1113,   307,   241,    36,   156,  2449,    38,   246,
     302,  1508,    11,  1702,  1129,  1126,    11,  1706,   673,  1708,
     104,     4,  1711,   396,  1713,   331,     9,   118,   331,    59,
    3737,  4975,    48,   302,   184,    66,  1513,    36,   384,   331,
     159,   608,  4826,   385,   255,   612,  2488,   492,   112,   368,
      22,   308,   289,    22,  1742,  4900,   194,    29,   219,   364,
      29,  1061,   629,   508,  1129,   512,   390,    66,    72,   304,
    1353,   173,   486,  1356,  5261,   272,  3843,  1502,     9,   508,
      16,   104,   512,  4735,   188,   508,   201,  4776,   162,   278,
     421,    22,   246,   239,   319,  1358,   422,   333,   272,   386,
     342,   280,   162,   162,  2290,  1368,   405,   508,   192,  1452,
    1442,    22,  1444,   364,   354,   508,   504,   308,    29,   466,
    1808,  5089,   510,   308,   269,   424,   358,   386,   305,   601,
     447,   508,   216,   465,  1249,   388,  1419,   508,   308,   467,
     317,  1696,  1257,  1258,   512,   395,   508,   446,  1497,   467,
     392,   396,   364,   512,   305,   302,  4328,   302,   457,  5307,
     508,   460,   512,   512,  4349,   617,   364,   384,   395,   621,
     508,  1434,   484,  1666,  1437,  1438,  3069,   508,  5279,   493,
     632,   364,   654,   655,  1249,  1610,   331,   407,   493,   695,
     512,   368,  1829,  3750,   450,   508,   195,   391,   407,   135,
     216,    11,   401,   351,   823,   510,   468,   351,   512,  4381,
    1703,   504,  4528,  4569,   482,   345,   346,   510,   709,  1712,
     711,   477,   713,   512,  4027,  4197,   508,   508,   719,   720,
     721,   246,   123,   493,  5421,  4330,  4331,  3796,    11,   600,
     482,   700,  4416,   488,   389,  4340,  1509,   508,  4221,   709,
    1314,   711,  1380,   713,   695,   512,   505,   693,   508,   719,
    5129,  2391,   509,  5432,  4042,   509,  4330,  4331,   511,  4231,
     742,  4587,   492,  4235,   723,   508,  4340,  3984,  1529,  1530,
     511,   508,  4346,   492,  3037,   511,  3039,  1538,   508,   695,
     511,  4220,   508,   765,  4061,   493,   951,  4137,   508,   508,
     772,   508,   508,   775,   776,   777,     8,  4059,  5138,  4276,
     497,   498,   510,   405,  4346,  1314,   497,   498,   885,   886,
     508,   512,   504,   812,   511,  5619,   508,   512,   510,   812,
     511,   502,   508,   508,  5191,   739,   508,  1741,   502,  1743,
     508,   508,   508,  5637,  5638,   814,   814,   814,   814,  1753,
     814,   814,  5296,  1757,  1672,  1424,   497,   498,   497,   498,
     493,  1765,  1766,  1681,    22,  3666,  1777,   339,  3669,  2326,
     339,   812,   376,   814,  1778,  1779,   497,   498,  4349,   315,
     448,  1792,   106,   451,   493,   195,  1790,  2336,  3147,  5041,
      60,   882,   796,   467,   800,  4711,  1800,   333,   965,  3956,
    3419,  5270,  4718,   493,   658,   497,   498,   467,   467,    22,
    3688,   493,    68,   497,   498,   669,  4719,  5262,   985,   986,
     254,    77,   195,   827,  5024,    73,    97,  4997,   339,  3731,
    3001,  1605,  1606,  3851,   104,   109,   331,  3342,  3000,     5,
    3345,  3346,  1009,   163,  3349,   135,  3747,  4047,   104,  2137,
    3355,     3,   468,     5,  3347,  3348,   472,    70,     5,   774,
      18,   154,  3120,   778,   868,    78,   870,    23,   499,   500,
     501,   502,   315,   197,  1041,  1042,   136,  1709,  1710,  3573,
      68,    97,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,   105,  3666,   814,   156,  3669,   290,   497,   498,
     499,   500,   501,   502,   499,   500,   501,   502,    83,  4898,
     401,   256,    97,    68,   445,  5360,   104,   241,  1769,  1770,
     451,     5,   304,   163,  1805,  1636,    97,    97,   814,   814,
     814,     5,   251,   251,   814,   814,  1647,   814,  3718,   814,
     860,   814,   814,   814,   814,   104,   477,    99,  1659,   104,
    3644,  3645,   405,     5,  5423,   257,   109,   104,  1673,  5211,
    5212,  4864,   104,   121,   108,   178,   405,   291,  4668,   366,
     109,   241,   127,  4770,  3747,  1644,   246,   225,   226,   227,
     104,  4084,   261,   493,  1075,     8,   907,   908,    11,   127,
    1062,    97,    68,   261,  4779,   261,   257,   504,   104,   239,
     510,   508,    18,  1075,  1070,   107,    75,  5476,    24,  4781,
    4782,   408,  4712,   283,  2406,   167,   272,   512,   276,    18,
    2513,    42,  2330,   405,  3377,    24,   319,   297,   104,  1070,
     104,  1080,   188,  1082,   187,  1084,  1108,  1086,  4812,  1088,
    1089,  1090,   321,   333,   113,  2278,  1095,  2280,   187,  4756,
     194,  4623,   302,  1014,  1631,  4750,   449,  1129,    60,   512,
       8,  5268,    68,    11,   324,   508,  2852,  2853,   326,   171,
     390,  2857,  4736,   512,   508,    77,   228,  4741,    99,   231,
     246,   331,   936,   354,   272,    30,  4750,   497,   498,   499,
     500,   501,   502,   947,   354,  4998,  1137,  4670,   104,   357,
    1206,   359,  2494,  5006,   397,   121,  1775,  2344,   364,   379,
     384,   269,  4674,   272,  3467,  2344,  1157,  4679,  2904,  2905,
    4682,   127,   121,    44,   497,   498,   499,   500,   501,   502,
     512,   133,   392,  4290,   347,   241,  1208,  3395,   354,   255,
     331,  5610,  5131,   328,   302,   405,  1218,  1188,   272,   151,
     390,  2972,  4587,  4556,  1008,  2439,  5363,  1011,  2429,   104,
    1232,  1252,   246,   508,    75,  1206,  1257,  1258,  5124,  1424,
     322,  5144,   195,   331,    95,    51,   364,  1249,   426,   427,
    1252,  1253,   324,   354,   354,  1257,  1258,   342,   512,   508,
     508,   493,   494,   495,   246,   497,   498,   499,   500,   501,
     502,   270,   113,  4353,   342,   364,    99,  4559,  4779,  4780,
    1299,  1300,   354,  1302,    60,  4915,  1299,  1300,   371,  1302,
    1279,   711,   712,   713,  4383,  4384,   716,   717,   718,  1396,
     405,   384,   407,   104,   257,  2472,   726,   392,   344,    68,
     364,   347,    68,   509,   512,   384,   512,   195,   508,   424,
     392,    64,   156,   269,   392,    11,   104,   104,  1299,  1300,
     510,  1302,   144,   405,   106,   186,   272,  1358,  5475,   421,
     269,   446,  2679,    84,   167,   104,    98,  1368,   104,  2290,
      36,   283,   457,   162,    42,   460,   302,   133,   104,   358,
       5,   272,   103,  5582,  5375,   167,    22,  5504,  1465,  1466,
    1467,  1468,  3996,   302,   156,   151,    68,  5263,  2695,   257,
      66,   104,  1316,  1317,    68,   331,   261,    22,   239,   364,
      75,   512,  1413,  1414,  4995,   136,  5615,   482,   269,  5024,
    4231,   213,   331,  4274,  4235,   228,   342,     8,   231,   104,
      11,  4247,   104,  1434,  1511,  1512,  1437,  1438,   316,   295,
     104,  2508,  1519,    28,   509,   177,   228,  5622,   113,   270,
    5024,   302,    11,   239,  5280,    36,   508,  4939,   201,   256,
    5359,    42,   146,   354,  4252,  4575,   209,   379,  1450,  4257,
    5369,  2689,   364,   132,  5636,   218,   392,  2695,    75,  1644,
     116,  1352,    75,  1560,  2631,    66,  5128,  5649,  5650,   320,
     356,   272,   508,  4770,   246,   257,   157,   157,  2565,  5490,
    4972,   116,   170,   317,  4117,   970,   174,    66,  1509,   107,
    1587,  1588,  1589,  1590,   272,   272,   113,  1479,   354,   322,
     113,   116,   308,   118,   313,  5424,   106,   283,  3943,   195,
     196,   254,   191,   272,  3949,  3950,   272,   358,   241,   405,
     322,  1523,   398,  1457,   212,   331,   272,   142,  4231,   104,
       8,   136,  4235,    11,   238,  5165,  3825,   512,   372,  2622,
    2759,  5042,  5043,  5044,   497,   498,   499,   500,   501,   502,
    5052,  2313,  1649,   171,  5056,  5057,  3035,   298,   244,   223,
    3843,  1658,  3041,   364,   163,   347,   464,  4191,  4192,  4877,
    1667,     8,   109,   174,    11,  4883,  1426,   272,   155,  1429,
     272,  1583,   261,   324,  2475,   270,   364,   364,   272,  1582,
    1775,    28,  3725,   410,   195,   196,   319,   197,   421,  1581,
     512,   353,   354,   379,   174,   364,  5194,  5195,   364,   268,
     461,   317,    77,   354,   121,  1597,   494,   495,   493,   497,
     498,   499,   500,   501,   502,  2438,  1111,  4041,  1478,   504,
     366,   246,  1482,   508,   509,   510,   251,   512,   114,   104,
     239,   241,  1608,   244,    52,   326,   326,   335,   124,  5279,
     187,   392,    60,   270,  2545,  1637,   257,   270,  1078,    76,
     259,  1081,   368,  1083,   405,  1085,   241,  1087,  4091,   364,
    4093,  1091,   364,   358,   355,   355,  1672,   268,  1660,   282,
     364,   364,  5507,   505,  2711,  1681,   106,   116,    68,   118,
     512,   291,  2715,   374,   271,   200,   174,    77,   407,   378,
    2513,  1672,   174,  1682,   269,  1684,     0,  1686,   125,  1688,
    1681,  1690,  2879,   282,  2721,  1694,   508,   195,  1734,  2886,
      68,  5546,  2535,  2516,   104,  1724,  1724,  1724,  1724,    77,
    1724,  2524,   302,  2526,  1755,  1756,   306,  1673,   338,   228,
     331,   358,  1763,   158,  2606,   358,  1767,  1768,   306,   116,
    2705,   118,   259,  1724,  2567,   370,   104,  1854,   195,   336,
    1762,   331,  1783,   366,  1785,   380,   331,   508,  2659,  2660,
    2661,  2662,  4859,   331,    86,   142,   241,   197,  4061,   257,
    2671,  1780,  5115,   492,  2675,  1719,   511,   324,   205,   206,
    1811,   390,  1813,   269,  2393,  2436,  3034,   366,   110,   306,
    2691,   216,   219,  5391,   317,   408,  3044,  2698,   216,  1780,
     493,   497,   498,   499,   500,   501,   502,  2980,   130,   512,
     257,   241,   251,  3140,   331,   479,   302,   510,  5543,  1733,
     302,    57,    58,   322,   306,   405,   599,  4668,   150,   408,
    1624,   604,  2349,  4674,  5571,  3064,  3506,   384,  4679,  1740,
    1634,  4682,   269,   165,   508,   368,    85,  3573,   315,   331,
    3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,  3584,  3585,
    1804,   291,    77,  4606,   241,   285,   242,   243,   158,   246,
     295,  4712,   107,  5585,   251,   243,   343,  2821,  4311,  4312,
    4923,     5,   272,   368,  3610,     9,   497,   498,   499,   500,
     501,   502,  3140,  5618,   450,   268,  4742,  5622,  4744,   199,
     354,  2852,  2853,    49,  3544,  5280,  2857,   324,  5620,  5621,
    5007,  1705,   144,   291,   272,   324,   155,  3264,  3644,  3645,
     241,   477,   306,   405,   246,   303,   216,  1422,  2872,   356,
      96,   358,   357,  1914,   359,  5278,   171,   354,   407,   239,
      18,  5031,  3274,   158,   183,   354,    24,   331,   324,   327,
      96,   134,  3045,  2904,  2905,  4668,   324,   382,   331,   198,
    2763,  4674,   177,  4706,  2908,  4708,  4679,   289,   289,  4682,
    3568,   210,   268,   398,  2688,   392,  4536,   750,   354,  3074,
     104,   213,   250,   392,   163,  4619,   354,  2504,  4547,  5129,
    3495,   158,   175,   370,  3592,   398,   405,   236,  4558,  4712,
     773,   216,  2946,   380,   321,   493,   494,   495,  1503,   497,
     498,   499,   500,   501,   502,   149,   392,  4651,  4652,   792,
     504,   253,   199,   492,   392,   159,   510,  4472,  4473,   405,
     176,   290,  5543,   333,  5352,   331,   201,   405,     8,   508,
     174,    11,   815,   121,  2699,   260,   493,   494,   495,   216,
     497,   498,   499,   500,   501,   502,   223,   316,   224,   364,
     239,     8,   239,   229,    11,   132,    36,   357,   505,   359,
     259,  1566,    42,   312,  4915,   512,     4,   144,   224,  2734,
     269,     9,   149,   229,   384,   116,   295,   118,  3105,    36,
     269,   508,   382,   239,  2699,    42,    66,   315,   316,   508,
    5197,    96,  3447,    60,   508,  3450,  5149,  5618,  5619,    66,
     883,  5622,   509,   302,   291,   512,   325,   439,   269,    66,
      77,   368,   268,   302,   191,   356,  5637,  5638,  3093,  2734,
    5270,  4972,   508,   455,   154,  1630,   489,   490,   155,  2151,
     508,   509,   357,   511,   359,   354,   213,   104,    11,   106,
    2966,   302,   144,   368,   174,   306,   333,   149,   149,   149,
     509,   307,    20,   512,   379,   106,   183,   382,   125,   368,
    2973,     5,  1579,    36,   405,     9,   407,   311,   169,   169,
     331,   198,    40,   130,   179,     8,   253,   509,    11,   398,
     357,  1598,   359,   210,   261,   357,   342,   359,  2393,  3376,
     170,   432,  4915,    66,   174,   304,   979,   384,   397,  3970,
     241,   390,  5309,    36,   357,   382,   359,   255,   901,    42,
     251,   213,   260,   170,   181,   195,   196,   174,   106,   224,
    1003,  1004,  1005,   916,   229,   918,    26,    27,  3121,   269,
     181,   504,   212,    66,    85,   508,   295,   510,   195,   196,
       4,   482,   255,   507,   405,     9,   321,   260,   512,  4972,
     140,   253,  2970,   269,  5571,   212,  1116,  1117,  2299,  2300,
    3996,   149,   302,   269,   244,  3504,   325,   508,   223,  2386,
    2387,  2388,    21,  5423,   241,  3168,  3775,   257,  2395,   246,
    2397,   223,  2399,  2400,    84,   312,   302,   244,   239,  3122,
     241,   331,    81,   181,  4938,   354,   302,   130,   177,  2318,
     257,   378,    21,   103,   155,  3751,  2925,    26,  2973,   169,
    2266,   132,  1817,   368,  5165,   331,   283,   132,  2354,  1102,
    2356,   269,    74,   144,  3429,   331,  5476,  2318,   149,   144,
     297,   405,   183,   407,   149,  3440,   136,   170,  2340,   398,
     144,   174,  1125,  2345,   398,   149,  2348,   198,    48,  5456,
    5607,   239,     5,   241,   302,   335,   321,    10,   306,   210,
     501,     3,   195,   196,   357,    18,   359,   508,  2370,   510,
     191,  1426,  1316,  1317,  1429,  4830,   191,    19,   335,   212,
     501,   509,    35,   331,   512,   236,  3624,   508,     8,   510,
     509,    11,   213,   512,   508,  3228,   510,  3308,   213,  2421,
    3061,  3062,  4736,   509,   255,  2522,   512,  4741,    28,   213,
     201,   244,   379,  2415,  4607,  4608,  4609,  4610,  4189,  3330,
    3331,   315,   316,  1478,   257,  3612,  3091,  1482,  5279,  3368,
    3369,  3370,   253,  2435,    76,  4878,   509,   508,   253,   512,
     261,  3783,  5165,  4734,   433,  2871,   261,  2873,  2874,   253,
    1794,  2405,     9,  1797,  3529,  4191,  4192,   508,   508,   510,
    5610,   312,  3817,  3818,   319,   509,  2468,  4770,   512,  2586,
    3598,  3599,   405,  3731,   407,  2516,  3091,  2594,  5587,  5588,
    1263,   255,  2599,  2524,   126,  2526,   512,   509,  3726,  3536,
     512,   509,   509,   508,   512,   512,   398,   509,   298,    48,
     512,   356,   335,    38,   357,  2507,   359,   423,  3390,  2511,
    1293,  1294,   197,  3855,   494,   495,   510,   497,   498,   499,
     500,   501,   502,   258,   324,  4816,     8,  2529,  3439,    11,
     509,   509,   174,   512,   512,   386,   509,   179,  2540,   512,
     497,   498,   499,   500,   501,   502,    28,   405,   258,   407,
     405,  2553,   407,  5306,   354,   364,  5279,   378,  3533,   405,
     255,   407,  2564,   378,   509,  2682,   509,   512,   511,  2571,
       8,  2593,   509,    11,   511,   195,   149,   432,  2619,  2601,
    2384,   509,   509,   509,   512,   512,   512,  2391,  3249,   255,
      28,   509,   392,   319,   512,   817,   396,   819,    36,  4236,
    2717,  4238,  2719,  1386,    42,   405,   509,   423,   319,   512,
    1393,   258,  3573,    38,  4917,  3576,  3577,  3578,  3579,  3580,
    3581,  3582,  3583,  3584,  3585,  3728,   509,   482,    66,   512,
     356,   509,   274,   423,   512,   509,  2658,   257,   512,   319,
     315,   316,   197,  3748,  3749,   356,   153,  1430,   512,  3610,
    1433,  3605,   499,   508,   319,  3842,   508,  3844,   154,  2645,
     509,   154,  2681,   512,   497,   498,   499,   500,   501,   502,
    2692,   313,   315,   316,   509,  4182,   356,  2699,   509,   405,
       0,   407,   509,  3644,  3645,   512,  1469,    48,   154,   193,
    2681,   356,     3,  3417,   405,  3882,   407,  2814,   509,   509,
    1483,   512,   512,  4048,   510,   508,   432,   319,   508,   331,
     352,   509,  2734,   195,   512,   409,   509,   174,  1501,   512,
    2925,   432,  2763,   508,  3537,   405,  3391,   407,  3393,   508,
    4067,   509,   170,   137,   512,   377,   174,   510,   509,   174,
     405,   512,   407,   385,   356,   255,   388,  3408,   509,  3410,
     509,   512,   432,   512,   137,   174,   482,   195,   196,  5050,
       8,   137,   149,    11,    84,    76,  3953,   432,  2770,   509,
     509,   482,   512,   512,   212,   257,  3391,   255,  3393,   137,
      28,   509,   508,   302,   512,   509,   428,   211,   512,   431,
    2995,  2793,  3691,   405,   269,   407,   509,   508,   106,   512,
     386,  3466,   482,   241,   509,     8,   244,   512,    11,  4067,
     121,   255,   132,   250,   456,   126,   319,   482,  1601,   257,
     432,   508,   260,   368,   144,    60,  1609,   509,   508,   149,
     512,   473,   319,   132,   154,   509,   398,   509,   512,   159,
     512,   321,   162,   508,   164,   144,   201,   288,    31,  3680,
     149,  3466,  2908,   356,   405,   241,   409,  3683,  3684,  3685,
     508,    38,  4101,  4102,  4103,    38,   269,  3528,   179,   356,
     482,   191,   373,   493,   494,   495,   241,   497,   498,   499,
     500,   501,   502,  4619,   509,   509,   509,   512,   512,   512,
     149,   486,   191,   213,  4630,    74,   508,   335,  3809,   398,
     509,   398,   405,   512,   407,   509,     8,   509,   512,    11,
     512,   137,   137,   137,   213,  4651,  4652,  2908,   405,   509,
     407,   508,   512,   354,  4695,   509,  1709,  1710,   512,   432,
    2971,  2922,  2973,   253,    36,   509,   137,   319,   512,  2444,
      42,   261,   137,  1726,   409,   432,   509,   195,   512,   512,
    2941,  2973,   272,   509,   253,   137,   512,   509,  2999,  3000,
     512,   137,   261,   274,    66,  2956,  3022,   137,  2987,  2987,
    2987,  2987,   255,  2987,   356,  2951,  2952,  2953,   509,   482,
     137,   512,   137,  3100,   137,  3102,  3103,  3104,   509,   309,
     319,   512,   195,  2797,   509,   482,  2987,   512,   509,  2803,
     509,   512,   255,   512,   509,   508,   137,   512,   137,   257,
    4248,   493,   494,   495,   354,   497,   498,   499,   500,   501,
     502,   508,   508,   405,  5315,   407,   509,   356,  3019,   512,
      31,  3022,  3925,  4271,   354,  3996,   509,   509,   509,   512,
     512,   512,   509,  5334,  3046,   512,   509,   150,   509,   512,
     432,   512,   211,   149,   257,   493,   494,   495,   378,   497,
     498,   499,   500,   501,   502,   149,   377,   505,   170,  3091,
     509,   255,   174,   512,   385,   513,   405,   388,   407,   378,
     509,   508,   402,   512,   404,   405,  3088,   509,   509,   509,
     512,   512,   512,   195,   196,   509,   509,     5,   512,   512,
     482,   509,     5,   432,   512,  2610,   508,    44,   509,  5400,
     212,   512,   432,   509,   149,   509,   512,   428,   512,   509,
     431,  3934,   512,   508,  3937,  3938,   508,   279,   509,   509,
     509,   512,   512,   512,   509,   509,   508,   512,   512,   241,
     509,   509,   244,   512,   512,   456,     5,   509,   508,    86,
     512,    60,  2956,   482,   508,   257,   476,    66,   509,     5,
     509,   512,   473,   512,   509,  4076,   509,   512,    77,   512,
     508,   508,  3377,   110,  3196,  4855,   508,   508,   508,   508,
     508,   508,   508,   508,   504,     5,   508,     5,   125,   509,
     510,   511,   508,   130,   508,   104,   508,   106,   508,   508,
    4439,  4440,  4938,  4442,  4158,   504,   508,   508,   508,   406,
     509,   510,   508,   150,  4168,  3019,   153,   508,   508,   508,
     508,   508,   508,   508,  3226,  3247,   266,   193,   165,    31,
    4191,  4192,   512,   335,   512,    87,  3238,   211,    31,   128,
     128,   253,   149,   149,   251,   493,   494,   495,   331,   497,
     498,   499,   500,   501,   502,   364,   364,   319,   510,   364,
     364,   319,    77,   364,   364,   364,   319,   137,  5571,   255,
     255,   323,   181,   481,   208,   364,   364,  2782,   246,  3301,
    3321,  3322,  3323,  3324,   364,  3326,   356,   481,   481,   481,
     493,   494,   495,  4106,   497,   498,   499,   500,   501,   502,
     385,   255,   179,  3325,   251,   364,   508,   168,   508,   246,
      77,  3321,  3322,  3323,  3324,   137,  3326,   254,   255,     0,
    3342,   512,   386,  3345,  3346,  3366,  3367,  3349,  4586,   269,
    3371,   174,   241,  3355,    98,  3337,  3377,   246,   386,   364,
     364,   364,    48,    48,   364,   364,   259,   356,   364,  2132,
     364,    37,   289,    37,   364,  3377,   512,   255,  2141,   364,
    4021,  4022,   364,   409,   364,   255,   331,   195,   405,  3391,
    3411,  3393,  3489,   508,   283,  3492,   508,   395,   508,    31,
      30,    20,   255,   137,   241,   508,   104,   386,   297,   137,
     219,   493,   494,   495,  4479,   497,   498,   499,   500,   501,
     502,   397,   251,    84,   241,    31,   149,  3420,   405,    31,
    3432,   508,   201,   508,   137,   320,   137,   462,   137,   386,
     137,     8,  3539,   386,    11,   137,   250,   154,   364,   245,
     508,   401,   508,   362,  3453,   423,   233,   233,   509,    11,
    4545,   362,   508,  3465,  3466,   512,   331,   508,   364,    36,
     145,   132,   162,   154,   366,    42,   512,   168,  3477,   509,
     168,   508,  3453,   144,   333,  4296,   191,   199,   149,   512,
     379,   256,   386,   154,   512,   263,   509,    48,   159,    66,
     364,   162,  2265,   164,  2267,  3654,  3477,   319,   364,   319,
      76,   508,   386,  3495,   246,   199,  3537,   199,   364,   246,
     364,   364,   439,   368,   508,   398,   246,  3509,   321,   201,
     191,  4482,    38,  4484,   255,   338,    97,  4488,   455,    97,
    4491,   272,  4493,   272,   364,   358,   272,   405,   281,  3531,
    2313,    36,   213,   272,   512,   356,   319,   364,   364,   302,
     302,     8,   169,   125,    11,   364,   328,   364,   195,   291,
      31,  4896,   195,   195,   195,   386,  4467,   195,   254,    30,
     504,   386,   504,   364,   364,   364,   364,   508,   493,    36,
     137,   151,   253,   149,   251,    42,   508,   508,   328,   137,
     261,   354,    31,   170,   398,   255,   255,   174,   149,  3094,
      31,   272,   166,   405,   137,   255,  3652,   166,   255,    66,
     328,   149,   512,   409,   174,    19,  3628,   160,   195,   196,
     174,   174,   512,  3669,   230,   512,   451,   512,   405,    22,
      23,   255,    48,  4810,    27,   212,  4537,  4538,   309,    32,
      33,    34,   368,    36,   354,   250,    39,    40,  3843,    42,
     398,    44,   201,   154,  4263,   512,   423,   509,   273,   509,
    4837,   509,  3769,  3770,  3771,  3772,   154,   244,  4619,   509,
     508,  3652,   509,   130,  4325,   509,  4479,   509,   509,  4630,
     257,   509,   476,   354,   364,  3666,   265,  5047,  3669,   423,
     402,  2464,  3658,  3659,  3660,  3661,    13,    13,   256,   402,
    4651,  4652,   392,   384,   256,   309,    48,   378,   509,   509,
     509,   509,  3506,   170,   509,   213,   509,   174,   255,   493,
    2493,   255,   258,   177,   509,   509,   508,   508,   508,   137,
     364,   402,   508,   404,   405,   185,  4965,   508,   195,   196,
    3235,   409,  3237,   364,   364,   127,  4975,   246,   508,   508,
     478,   435,  4847,  4848,   259,   212,   506,   508,   335,   508,
     137,   432,   137,   137,  4839,     3,   177,   432,   354,   213,
     431,   274,   478,   508,   274,   383,   364,   364,   221,   364,
     221,  4432,  3889,  3890,   508,   508,  3778,   244,   508,   221,
     364,   364,   319,   319,   319,   364,   189,   190,   191,   192,
     257,   194,   319,   196,  3299,   476,   199,   241,   201,   364,
     331,   204,  3843,   137,   364,  4529,   209,   364,   364,   212,
     364,    37,   195,   216,  4479,   218,   219,   483,   483,   483,
     195,  3843,   195,   504,   504,   508,   322,   509,   509,   510,
     511,  5070,   231,  3874,   213,   509,    68,   493,  3343,   512,
     373,   509,    38,   304,  3885,    97,   509,   508,  4759,   254,
     512,   509,    31,   255,  3876,   163,  4061,  3879,  2641,  3881,
    4686,   493,  3666,  3885,  3874,  3669,   386,  4693,   335,   364,
     386,   319,   319,  4700,   319,   512,   258,  3994,   135,   135,
     256,   195,   241,   504,   361,   127,   154,  5145,    11,   149,
     509,   397,    50,  3934,    58,   512,  3937,  3938,   509,   509,
     509,   154,  3904,   508,   261,  3907,   493,   494,   495,   509,
     497,   498,   499,   500,   501,   502,  3957,   402,   154,   512,
     508,  3943,   162,   508,   256,    83,   149,  3949,  3950,    31,
    3952,   386,   509,  5172,  3975,  3976,   491,   373,   185,   364,
     386,  3446,   508,  3747,    48,  3986,   356,   137,     9,   373,
     319,   364,  4834,     8,  5324,   364,    11,   509,   509,   508,
     364,   319,   149,   508,  3986,  3987,  3988,  3989,   508,   364,
     364,   509,    99,    48,  3479,   509,  5081,  4938,   136,   509,
     149,    36,   140,    66,   356,   137,    97,    42,   407,  4943,
     509,   195,   373,  3797,  3798,  3799,  3800,   195,   505,   199,
     287,   505,   409,   125,   405,   508,  5053,   509,   508,   125,
     328,    66,   149,   512,   172,   508,  4029,   509,   512,   180,
    4061,    71,   508,  5066,     3,  5068,  4028,  5054,  4982,   512,
     497,   498,   499,   500,   501,   502,   356,   509,  4057,  4061,
     508,   364,  4064,   328,   159,    97,   154,  3552,  3852,   195,
     208,   195,   195,   195,   116,   154,    48,   509,  4263,   509,
     403,   296,   403,   198,   198,  4106,  4057,  3572,   508,   512,
     509,   509,   509,   508,   508,   130,   509,   508,   264,    48,
     164,   239,   509,   241,   251,   493,   509,   509,   364,   373,
     154,    66,   405,   179,  4713,  3600,   508,    11,   356,   246,
     493,   246,   193,  4125,    48,   356,   512,  4109,    28,   509,
     364,   269,   362,   493,   512,   170,   512,  4899,   137,   174,
     453,   195,   477,   156,   154,   386,   174,   505,  4789,    31,
     401,   386,   122,  4959,   272,   405,   405,  3642,   508,   154,
     195,   196,   508,   182,   302,   258,   154,   154,   306,  5234,
     391,   272,   310,   341,   508,   508,   296,   212,   316,   509,
     509,   508,   198,   508,   297,   323,   404,  2950,   255,   509,
     509,   364,   508,   331,  4839,   485,   485,   508,   508,   364,
    4799,   405,   340,   508,   149,   111,   246,    31,   246,   244,
     348,   222,   438,   177,  5020,  5021,   599,   508,  1051,   287,
     136,   604,   257,   508,   508,   608,   509,   610,    31,   612,
     509,  1064,    48,   259,   509,   316,   619,    48,   316,   622,
     512,    48,    31,   509,   512,  5179,   629,  5181,   508,   508,
     508,   356,   509,   508,    31,  5422,    11,  4259,  4260,   356,
    4231,  4282,   400,   239,  4235,   386,   255,   356,     5,   328,
    4269,   143,  4288,   287,    60,   658,  5361,  4374,   258,    60,
     663,   117,   390,   512,   509,   391,   669,   425,   296,   508,
     673,   508,  4282,    31,    21,   154,   509,   294,  4269,   509,
     335,   512,   402,   356,   149,   122,   405,   690,   179,   255,
     508,   255,    31,    31,   508,  5482,   454,   258,   258,   508,
     508,   440,   509,   508,    48,   434,  3811,    54,   509,   477,
     509,   315,   470,  4335,   446,  5502,  4338,   109,  4359,   384,
      67,    68,     5,   133,  4441,   509,   508,   315,   509,   193,
      77,    17,   140,   255,    81,   471,   739,   508,  4455,    28,
     213,   136,   259,   315,   287,   463,    48,   750,   751,  4359,
     453,    98,   482,   459,  5401,   508,   246,   508,   482,  4400,
    4401,   438,   493,   434,  4405,  4406,   213,  1600,   771,  1481,
     773,   774,   119,  3253,   471,   778,  4810,   477,  2643,   493,
     908,   493,   814,  5570,   131,  5572,   874,  1258,  3168,   792,
    2973,  3842,   139,   796,  4788,  4397,  2558,  3360,   508,   802,
    3952,   508,  5073,   508,   151,  4837,   907,  4409,  4890,   156,
    5234,  4019,   815,  4896,  4522,  4876,  3068,  2751,  4772,  5313,
    4712,  5395,  5343,  5248,   827,  5247,  5613,  4231,  5125,  3072,
     177,  4235,  4771,  4745,  3223,  3805,  4458,  4459,  4479,  5626,
    4557,  3852,   497,   498,   499,   500,   501,   502,  5553,  5618,
    4472,  4473,  4779,  5542,  5480,   202,  5570,  4479,  5526,  5626,
    5655,  4483,  5138,  4504,  5574,   868,  4009,   870,  2634,  2634,
    3836,  3191,  5196,  1584,  2628,  5410,   223,  3431,  5613,  5502,
     883,  4869,   885,   886,  3376,  4063,  4801,  5354,  5593,  5221,
    5331,  4804,  1574,    26,  4504,  4994,  5601,  1104,  4109,  2331,
    4067,  1114,  4065,  3044,   907,   908,  5145,   655,  4713,  5614,
     257,  3302,  5374,  5534,  2267,  2266,  2987,   791,  4046,  1673,
    4025,  5481,  3723,   804,  4270,  5162,  4330,  4331,  1285,  2992,
    2316,  4553,  1308,   936,  1309,  1077,  4340,  3007,  5301,   286,
    2290,  5183,  4346,  2315,   947,  1311,  3027,  5518,   951,  4221,
    5521,  5522,  3019,  5524,  3669,  4237,  4973,  5165,  5164,  3666,
    3724,  4941,   965,  4585,  2609,  4770,   313,   796,  3627,  5234,
     317,  3614,   319,  5304,  5193,  5305,   979,  5292,   325,  5381,
    2995,   328,   985,   986,  2922,  4607,  4608,  4609,  4610,  5560,
    2823,  3620,  5563,  5564,  4799,  5566,  2920,  4714,  4715,  4716,
    1003,  1004,  1005,    -1,  4606,  1008,  1009,   354,  1011,   356,
    2134,  1219,    -1,   360,  3397,  3719,    -1,  3400,    -1,    -1,
      -1,   368,    -1,    -1,    -1,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,  3416,    -1,    -1,  1039,    -1,  1041,  1042,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3430,    -1,    -1,
      -1,   398,     8,    -1,    -1,    11,  4773,    -1,  3441,    -1,
      -1,    -1,    -1,  1066,    -1,    -1,    -1,    -1,    -1,  3452,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3460,    -1,    -1,
      36,    -1,    -1,  4674,    -1,    -1,    42,    -1,  4679,    -1,
      -1,  4682,  4197,    -1,  1097,  1098,    -1,    -1,  4697,  1102,
      -1,  1104,    -1,    -1,  4706,    -1,  4708,    -1,    -1,    -1,
      66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1122,
      -1,    -1,  1125,    -1,    -1,  1128,   473,  4531,    -1,  4770,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1141,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3529,    -1,  4770,    -1,
      -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1170,    -1,    -1,
      -1,    -1,  1625,    -1,   130,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1635,    -1,    83,    -1,  1639,    -1,    -1,  4811,
      -1,  4813,  1645,  1646,    -1,    21,    -1,  4914,    -1,    -1,
    1203,  1204,    -1,  1206,  4309,    -1,    -1,    -1,  4830,    -1,
      -1,    -1,  1665,    -1,   170,    -1,    -1,  4839,   174,    -1,
      -1,  4843,  1225,  4845,    -1,    -1,    -1,  4849,    -1,  4851,
      -1,  4853,    -1,    -1,    -1,    -1,    -1,   136,    -1,   195,
     196,   140,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,  4362,    -1,    -1,
    1263,  4880,    -1,  1266,  4668,    -1,    -1,    -1,  4881,    -1,
    4674,    -1,    98,   172,    -1,  4679,    -1,    -1,  4682,    -1,
    3663,  3664,  3665,    -1,    -1,    -1,    -1,    -1,   244,  4880,
    1293,  1294,    -1,   119,    -1,    -1,    -1,  4402,  1301,    -1,
      -1,   257,  1305,  1306,    -1,   131,    -1,    -1,  4712,   208,
      -1,    -1,    -1,  1316,  1317,  1318,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   151,  4982,    -1,    -1,    -1,
     156,  1334,  4736,    -1,    -1,    -1,    -1,  4741,    -1,    -1,
     239,    -1,   241,    -1,    -1,    -1,  4750,    -1,    -1,    -1,
    5067,    -1,  5069,    -1,    -1,  4460,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,   335,
      -1,  4972,    -1,  1386,  1387,    -1,    -1,    -1,  5193,    -1,
    1393,  4982,    -1,  1396,  4798,    -1,    -1,   223,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,   306,    -1,   308,
      -1,   310,    -1,    -1,    -1,    -1,    -1,   316,    -1,    -1,
      -1,  1424,    -1,    -1,   323,    -1,    -1,  1430,    -1,    36,
    1433,    -1,   331,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   348,
      -1,  4855,  5074,    -1,  1457,    -1,    -1,    -1,    -1,    66,
     286,    -1,  1465,  1466,  1467,  1468,  1469,  3850,    -1,    -1,
      -1,    -1,    -1,    -1,  5191,    -1,    -1,    -1,    -1,    -1,
    1483,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,
      -1,    -1,    -1,   319,    -1,    -1,  1499,    -1,  1501,   325,
      -1,   400,    -1,    -1,  5123,    -1,    -1,    -1,  1511,  1512,
      -1,  4915,    -1,    -1,    -1,    -1,  1519,    -1,  4623,    -1,
      -1,    -1,    -1,   130,    -1,    -1,   425,    -1,   354,    -1,
     356,    -1,  5123,    -1,    -1,    -1,    -1,    -1,  5255,    -1,
      -1,   497,   498,   499,   500,   501,   502,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   454,    -1,  1560,    -1,    -1,
      -1,    -1,    -1,   170,    -1,    -1,    -1,   174,  4972,    -1,
      -1,   470,   398,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1587,  1588,  1589,  1590,   195,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1601,    -1,
    3983,    -1,    -1,    -1,    -1,   212,  1609,    -1,    -1,    -1,
    1613,    -1,  5234,    -1,    -1,    -1,    -1,    -1,  5335,  4002,
    5024,  1624,    -1,    -1,    -1,    -1,    -1,    -1,  1631,    -1,
      -1,  1634,    -1,    -1,  4739,    -1,    -1,   244,    -1,    -1,
      -1,  1644,    -1,    -1,    -1,    -1,  1649,    -1,  4031,    -1,
     257,  4756,  5274,    -1,    -1,  1658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1666,  1667,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1696,    -1,    -1,  5318,  5319,  5102,    -1,
    1703,    -1,  1705,    -1,  5306,    -1,  1709,  1710,    -1,  1712,
      -1,    -1,    -1,    -1,    -1,    -1,  1719,    -1,    -1,    -1,
      -1,    -1,    -1,  1726,    -1,    -1,    -1,    -1,   335,    -1,
    1733,  1734,    -1,    -1,  1737,    -1,  5355,    -1,  1741,    -1,
    1743,    -1,    -1,    -1,    -1,  5367,  5368,  1750,    -1,    -1,
    1753,    -1,    -1,    -1,  1757,  5374,  5374,  5374,  5374,    -1,
    5374,  5165,  1765,  1766,  5355,    -1,  5571,    -1,    -1,    -1,
    1773,    -1,  1775,  1776,  1777,  1778,  1779,    -1,  5434,    -1,
      -1,  5422,    -1,  5374,  1787,  1788,    -1,  1790,    -1,  1792,
    1793,    -1,    -1,  1796,    -1,  1798,    -1,  1800,  1801,    -1,
    5422,  1804,    -1,    -1,    -1,    -1,    -1,  4912,    -1,    -1,
      -1,  2264,    -1,    -1,    -1,  5434,  5434,  5434,  5434,    -1,
    5434,    -1,    -1,    -1,    -1,  1828,    -1,    -1,    -1,    -1,
    4213,  4214,  4215,  4216,  4939,    -1,    -1,  5478,    -1,    -1,
      -1,     0,    -1,  5434,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1854,    -1,    -1,    -1,    14,  5260,    -1,  5499,  5481,
      -1,  5502,    -1,    -1,    -1,    24,    -1,    26,    27,    -1,
      -1,  5512,  4977,    -1,    -1,  5279,    -1,    -1,    -1,    -1,
    5502,    -1,    41,    -1,    -1,    -1,    -1,    -1,  5510,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    -1,    63,    64,    -1,  1910,    -1,    -1,
      69,    -1,    71,    -1,    -1,  5534,  5534,  5534,  5534,    -1,
    5534,    -1,  5326,    82,    -1,    84,    -1,    -1,  5550,  5551,
    5571,    -1,  5554,  5555,    -1,  5557,  1939,    -1,    -1,    -1,
      -1,   100,    -1,  5534,   103,    -1,    -1,  5052,    -1,  5571,
      -1,  5056,  5057,    -1,    -1,    -1,   115,    -1,   117,    -1,
      -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,   127,    -1,
      -1,  1974,  5613,    -1,    -1,    -1,    -1,   136,    -1,   138,
      -1,    -1,    -1,    -1,  5606,   144,    -1,  5628,    -1,    -1,
      -1,  5613,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,  2457,    -1,  5628,    -1,    -1,    -1,
      -1,  5652,    -1,    -1,    -1,    -1,    -1,     0,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2481,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,   214,   215,    -1,    -1,    -1,
      -1,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    -1,     8,   232,    -1,    11,    -1,    36,    -1,    -1,
      -1,    -1,    -1,    42,   243,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    28,    -1,    -1,    -1,  5201,  5202,    -1,    -1,
      36,    84,    -1,    -1,    -1,    -1,    42,    66,    -1,    -1,
    2113,  2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,    -1,
    2123,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,  2132,
      66,  2134,  2135,    -1,   293,  5539,    -1,    -1,  2141,   298,
     299,    -1,   301,    -1,    -1,    -1,    -1,   306,    -1,   132,
      -1,    -1,   311,    -1,    -1,   314,    -1,    -1,    -1,   318,
      -1,   144,    -1,    -1,   323,   324,   149,    -1,    -1,    -1,
      -1,   154,   331,    -1,    -1,   334,   159,    -1,    -1,   162,
      -1,   164,    -1,   342,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4589,    -1,   191,    -1,
      -1,   170,   371,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,   387,    -1,
     213,    -1,    -1,   392,   170,    -1,   195,   196,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   405,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,  2710,    -1,   195,
     196,    -1,  2265,    -1,  2267,    -1,    -1,    -1,  2271,    -1,
     253,    -1,    -1,  2726,  2727,    -1,   212,  2730,   261,    -1,
      -1,    -1,   241,  2736,    -1,   244,    -1,  2290,    -1,   272,
      -1,    -1,    -1,    -1,    -1,    -1,  2299,  2300,   257,    -1,
      -1,   260,    -1,   462,    -1,   241,    -1,    -1,   244,    -1,
    2313,    -1,    -1,    -1,    -1,    -1,  2319,    -1,  2321,    -1,
      -1,   257,    -1,    -1,   260,    -1,   309,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2795,    -1,    -1,    -1,  2349,    -1,    -1,   508,
      -1,  2354,   511,  2356,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2373,   354,    -1,    -1,    -1,    -1,   335,    -1,    -1,    -1,
      -1,  2384,    -1,  2386,  2387,  2388,    -1,    54,  2391,    -1,
    2393,    -1,  2395,    -1,  2397,   378,  2399,  2400,    -1,   335,
      67,    -1,  2405,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,   402,
      -1,   404,   405,    -1,    -1,    -1,  2429,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2439,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,  2450,    -1,   432,
      -1,    -1,   119,    -1,    -1,  2458,    -1,    -1,    -1,    -1,
      28,  2464,    -1,    -1,   131,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    -1,    -1,    42,  4858,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   151,    -1,    -1,    -1,    -1,   156,
    2493,    -1,    -1,   476,  2497,  2498,    -1,    -1,    66,    -1,
      -1,  2504,  2505,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4899,    -1,    -1,  2522,
      -1,   504,    -1,    -1,    -1,    -1,   509,   510,   511,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,    -1,    -1,  2549,    -1,  2551,  2552,
     509,    -1,    -1,   512,    -1,    -1,   223,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   512,    -1,    -1,    -1,
      -1,    -1,    -1,  2586,    -1,    -1,    -1,    -1,    -1,    -1,
     257,  2594,    -1,    -1,    -1,    -1,  2599,    -1,    -1,    -1,
      -1,    -1,   170,    -1,    -1,  2608,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,
      -1,    -1,  5005,    -1,  3077,    -1,    -1,   195,   196,    -1,
      -1,    -1,    -1,  2636,    -1,    -1,  2639,    -1,  2641,    -1,
    2643,    -1,    -1,  2646,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   319,    -1,    -1,    -1,    -1,    -1,   325,    -1,
      -1,   328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2672,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,  2682,
    2683,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,   257,
      -1,    -1,   260,   360,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   373,    -1,    -1,    -1,
      -1,    -1,  2715,    -1,  2717,  2718,  2719,  2720,    -1,    -1,
      -1,    -1,  3175,    -1,    -1,    -1,    -1,  3180,    -1,    -1,
      -1,   398,    -1,    -1,    -1,    -1,  2739,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2751,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2797,    28,    -1,    -1,    -1,    -1,
    2803,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    42,
      -1,  2814,    -1,    -1,    -1,    -1,    -1,    -1,  2821,  2822,
      -1,    -1,    -1,    -1,  2827,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3298,    -1,    -1,    -1,  2852,
    2853,  3304,    -1,    -1,  2857,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,  2872,
    2873,  2874,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,  2885,    11,    -1,  2888,    -1,    -1,    -1,    -1,
      -1,  2894,  2895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      28,  2904,  2905,    -1,    -1,  2908,    -1,    -1,    36,    31,
      -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,  2921,    -1,
    2923,    -1,  2925,    -1,  2927,   493,   494,   495,    50,   497,
     498,   499,   500,   501,   502,    -1,    -1,   170,    66,    -1,
      -1,   174,    -1,  2946,   512,    -1,    -1,  2950,    -1,    -1,
      -1,    -1,    -1,  2956,    -1,    -1,  2959,  2960,  2961,    -1,
      -1,    83,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2976,    -1,     8,    -1,    -1,    11,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2992,
      -1,    -1,    -1,    -1,    -1,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    36,  3007,    -1,    -1,    -1,   241,    42,
      -1,   244,    -1,    -1,   136,    -1,  3019,    -1,   140,  3022,
      -1,    -1,    -1,  3026,   257,  3478,    -1,   260,    -1,  3482,
    3483,    -1,  3485,    66,  3487,  3488,    -1,    -1,    -1,    -1,
      -1,    -1,   170,  3496,    -1,    -1,   174,    -1,    -1,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3067,    -1,  3069,   195,   196,    -1,
      -1,  3074,    -1,    -1,    -1,    18,    -1,  3530,  5461,   201,
      -1,    24,    -1,    -1,   212,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3100,    -1,  3102,
    3103,  3104,   335,    -1,    -1,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,   239,    -1,   241,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,
      -1,    -1,   260,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,   121,   212,
      -1,   124,    -1,    -1,   306,    -1,    -1,    -1,   310,    -1,
      -1,    -1,    -1,    -1,   316,    -1,    -1,    -1,    -1,    -1,
      -1,   323,    -1,    -1,    -1,    -1,    -1,   335,   241,   331,
      -1,   244,    -1,    -1,     8,    -1,    -1,    11,   340,    -1,
      -1,    -1,    -1,    -1,   257,    -1,   348,   260,    -1,    -1,
      -1,    -1,    -1,   176,    28,    -1,   179,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,   970,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     493,   494,   495,    -1,   497,   498,   499,   500,   501,   502,
      -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,   400,   512,
      -1,   224,   404,   405,    -1,    -1,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   239,    -1,   241,    -1,
      -1,    -1,   335,   425,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   259,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,    -1,    -1,
      -1,    -1,   454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3347,  3348,    -1,    -1,   470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,
      -1,    -1,   305,   306,   307,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,    -1,   170,    -1,    -1,    -1,
     174,    -1,    -1,    -1,   512,    -1,  1111,    -1,   331,    -1,
      -1,    -1,    -1,    -1,  3397,  3398,    -1,  3400,    -1,   342,
      -1,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3416,    -1,    -1,    -1,    -1,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3429,  3430,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3440,  3441,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   389,   241,    -1,  3452,
     244,    -1,    -1,    -1,    -1,    -1,    -1,  3460,    -1,    -1,
     493,   494,   495,   257,   497,   498,   499,   500,   501,   502,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,
      -1,    -1,    -1,    -1,    -1,    -1,  3489,    -1,    -1,  3492,
      -1,    -1,    -1,   436,   437,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3506,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    -1,    -1,    -1,    24,  3529,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3539,   480,    -1,    -1,
      -1,   335,    -1,    -1,    -1,    -1,  3549,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3559,    -1,    -1,    -1,
      -1,    -1,  3565,    -1,  3567,    64,    -1,    -1,    -1,     8,
    3573,    -1,    11,  3576,  3577,  3578,  3579,  3580,  3581,  3582,
    3583,  3584,  3585,    -1,    -1,    -1,  3589,  3590,    -1,    28,
      -1,    -1,    -1,    -1,    -1,    -1,  1321,    36,    -1,    -1,
      -1,    -1,  3605,    42,    -1,    -1,  3609,  3610,    -1,    -1,
      -1,  3614,    -1,    -1,    -1,   114,  3619,    -1,    -1,    -1,
      -1,    -1,   121,    -1,    -1,   124,  3629,    66,    -1,  3632,
      -1,  3634,    -1,    -1,    -1,  4088,    -1,    -1,    -1,    -1,
    3643,  3644,  3645,  4096,  4097,    -1,  3649,    -1,    -1,  3652,
      -1,    -1,    -1,  3656,    -1,    -1,  1381,    -1,    -1,    -1,
    3663,  3664,  3665,  3666,    -1,    -1,  3669,  3670,    -1,    -1,
      -1,  3674,  3675,    -1,    -1,    -1,    -1,    -1,  3681,    -1,
     179,    -1,    -1,    -1,  3687,  3688,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,  1422,    -1,   493,
     494,   495,    -1,   497,   498,   499,   500,   501,   502,    -1,
    3713,    -1,    -1,    28,    -1,    -1,  3719,    -1,    -1,    -1,
    3723,    36,  3725,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,   170,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
     239,    -1,   241,    -1,  3747,  3748,  3749,    -1,  3751,    -1,
      -1,    66,   251,    -1,    -1,    -1,   195,   196,    -1,    -1,
     259,    -1,    -1,    -1,    -1,    -1,  3769,  3770,  3771,  3772,
     269,    -1,    -1,   212,    -1,    -1,    -1,    -1,  1503,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3797,  3798,  3799,  3800,    -1,    -1,
      -1,    -1,   241,   302,    -1,   244,   305,   306,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1541,    -1,   257,    -1,
      -1,   260,    -1,  3826,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1566,    -1,  3846,    -1,    -1,    -1,  3850,    -1,  3852,
      -1,    -1,    -1,    -1,  4307,   170,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,    -1,    -1,  3889,  3890,    -1,    -1,
     389,    -1,    -1,    -1,    -1,    -1,   335,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1630,    -1,    -1,    -1,    -1,
    4363,  4364,  4365,  4366,    -1,    -1,    -1,    -1,  3921,    -1,
      -1,    18,    -1,    -1,    -1,    -1,   241,    24,    -1,   244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   436,   437,    -1,
      -1,    -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3983,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3994,    -1,  3996,    -1,    -1,    -1,    -1,    -1,  4002,
      -1,    -1,    -1,    -1,    -1,  4008,    -1,    -1,  4461,  4462,
      -1,    -1,    -1,    -1,    -1,    -1,  4019,   114,    -1,    -1,
     335,    -1,    -1,    -1,   121,    -1,    -1,   124,  4031,    18,
      -1,    -1,    -1,    -1,    -1,    24,    -1,    -1,  4041,    -1,
      -1,    -1,    -1,    -1,    -1,  4048,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,    -1,  4068,  4069,    -1,    -1,    -1,
      -1,     8,    -1,   512,    11,    64,    -1,    -1,    -1,    -1,
      -1,    -1,   179,    -1,    -1,    -1,    -1,    -1,  4091,    -1,
    4093,    28,  1817,    -1,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   114,  4129,    -1,    -1,    66,
      -1,    -1,   121,    -1,    -1,   124,    -1,    -1,  4591,    -1,
    4593,  4594,   239,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4605,    -1,   251,  4158,    -1,    -1,    -1,    -1,
      -1,    -1,   259,    -1,    -1,  4168,    -1,    -1,    -1,    -1,
      -1,    -1,   269,    -1,    -1,    -1,  4179,  4180,   493,   494,
     495,  4184,   497,   498,   499,   500,   501,   502,  4191,  4192,
     179,    -1,    -1,  4196,   509,    -1,    -1,    -1,    -1,  4202,
    4203,    -1,    -1,  4206,    -1,   302,  4209,  4210,   305,   306,
    4213,  4214,  4215,  4216,    -1,    -1,    -1,  4220,  4221,    -1,
    4223,  4224,    -1,    -1,  4227,    -1,    -1,    -1,  4231,    -1,
      -1,    -1,  4235,   170,   331,    -1,    -1,   174,  4241,    -1,
      -1,    -1,    -1,    -1,  4247,    -1,    -1,    -1,    -1,  4252,
     239,    -1,   241,    -1,  4257,    -1,    -1,    -1,   195,   196,
    4263,    -1,   251,     8,    -1,    -1,    11,  4270,    -1,    -1,
     259,  4274,    -1,    -1,   371,   212,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    28,    -1,  4288,    -1,    -1,  4291,    -1,
      -1,    36,   389,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,    -1,    -1,    -1,   241,    -1,    -1,   244,  4311,  4312,
      -1,    -1,    -1,   302,    -1,    -1,   305,   306,    -1,    -1,
     257,    66,    -1,   260,    -1,    -1,    -1,  4330,  4331,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4340,    -1,   436,
     437,    -1,   331,  4346,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   199,   200,  4360,    -1,    -1,
      -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4374,    -1,   217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,   480,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,
     389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4441,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   436,   437,    -1,
     195,   196,  4455,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4931,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   480,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   257,    -1,    -1,   260,    -1,  4520,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4531,    -1,
      -1,    -1,    -1,  4536,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4545,  4996,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4557,  4558,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,  4574,   509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4589,    -1,    -1,    -1,
     335,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,  2326,    -1,    -1,    -1,  2330,  2331,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4619,    28,  5071,    -1,
      -1,    -1,    -1,    -1,    -1,    36,    -1,  4630,    -1,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4642,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4651,  4652,
      -1,    -1,  4655,    -1,    -1,    66,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4668,    -1,  4670,    -1,    -1,
      -1,  4674,    -1,    -1,    -1,    -1,  4679,    -1,    -1,  4682,
    4683,    -1,  4685,    -1,  4687,  4688,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,  4712,
    4713,  4714,  4715,  4716,    -1,    -1,    -1,    -1,    -1,  2444,
      -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4736,    -1,    -1,    -1,    -1,  4741,  4742,
      -1,  4744,    -1,    -1,    -1,    -1,    -1,  4750,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,    83,   170,
      -1,    -1,    -1,   174,   509,    -1,    -1,    -1,    -1,  4772,
    4773,    -1,    -1,   617,    -1,    -1,    -1,   621,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   632,    -1,
      -1,    -1,    -1,    -1,    -1,  4798,  4799,    -1,    -1,    -1,
      -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     654,   136,    -1,    -1,   658,   140,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   669,   670,    -1,    -1,    -1,
     241,   675,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   685,    -1,    -1,  4847,  4848,   257,   172,    -1,   260,
      -1,   695,  4855,    -1,    -1,  4858,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4869,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4878,   201,    -1,    -1,  4882,
      -1,    -1,    -1,   208,    -1,  2610,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4896,    -1,    -1,  4899,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4914,  4915,    -1,   239,    -1,   241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   335,    -1,    -1,   771,    -1,    -1,
      -1,    -1,   776,  4936,    -1,  4938,    -1,  5390,  4941,    -1,
    4943,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   802,    -1,
    4963,    -1,    -1,    -1,  2689,  4968,    28,    -1,    -1,  4972,
    2695,    -1,  4975,    -1,    36,    -1,    -1,    -1,    -1,  4982,
      42,   306,    -1,    -1,  4987,   310,    -1,    -1,    -1,    -1,
      -1,   316,    -1,    -1,    -1,    -1,    -1,    -1,   323,    -1,
      -1,    -1,  5005,    -1,    66,    -1,   331,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,   340,    -1,    -1,    -1,    -1,
      -1,  5024,    -1,   348,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,    -1,
      -1,    -1,    -1,  5066,  5067,  5068,  5069,    66,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,  5081,   404,
     924,    -1,   493,   494,   495,    -1,   497,   498,   499,   500,
     501,   502,   936,    -1,    -1,    -1,    -1,    -1,   509,  5102,
     425,    -1,    -1,   947,    -1,    -1,    -1,    -1,   170,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,  5121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   970,    -1,    -1,   454,
      -1,    -1,    -1,   195,   196,  5138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,
     212,    -1,    -1,    -1,    -1,    -1,    -1,  1001,    -1,  5162,
      -1,    -1,  5165,    -1,  1008,    -1,    -1,  1011,    -1,    -1,
      -1,   170,    -1,    -1,    -1,   174,  5179,    -1,  5181,   241,
    5183,    -1,   244,    -1,    -1,    -1,    -1,    -1,  5191,    -1,
    5193,    -1,    -1,    -1,    -1,   257,   195,   196,   260,    -1,
      -1,  1045,    -1,    -1,  5207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,  1061,  1062,    -1,
      -1,    -1,  1066,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1075,    -1,    -1,  2959,  2960,  2961,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,    -1,  5255,    -1,    -1,    -1,    -1,  5260,   257,  1103,
      -1,   260,    -1,    -1,    -1,    -1,    -1,  1111,    -1,  1113,
      -1,    -1,    -1,   335,    -1,    -1,  5279,    -1,    -1,    -1,
      -1,    -1,  1126,    -1,    -1,  1129,    -1,    -1,  5291,  5292,
      -1,    -1,    -1,  5296,    -1,    -1,    -1,  1141,  5301,    -1,
      -1,  5304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3034,
      -1,    -1,  3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,
      -1,    -1,    -1,  5326,    -1,    -1,  1170,    -1,    -1,    -1,
      -1,    -1,  5335,    -1,    -1,    -1,   335,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,  5361,  1203,
    1204,    -1,  1206,    -1,    -1,    -1,    -1,    -1,    -1,  3094,
      -1,    28,  5375,    -1,    -1,    31,    -1,    -1,    -1,    36,
      -1,  1225,    -1,    -1,    -1,    42,    -1,    -1,    -1,  5392,
      -1,    -1,     8,    -1,    50,    11,    -1,    -1,    -1,  5402,
      -1,    -1,    -1,    -1,    -1,  1249,    -1,    -1,    -1,    66,
      -1,    -1,    28,  1257,  1258,  3140,    -1,    -1,    -1,    -1,
      36,    -1,  1266,  1267,    -1,    -1,    42,    83,    -1,    -1,
      -1,   493,   494,   495,    -1,   497,   498,   499,   500,   501,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,    -1,
      66,    -1,    -1,    -1,    -1,    -1,    -1,  1301,  5461,    -1,
      -1,  1305,  1306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,
     136,    -1,    -1,  1327,   140,    -1,    -1,  5490,    -1,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,    -1,    -1,   505,    -1,    -1,    -1,
    3235,    -1,  3237,   170,    -1,    -1,   172,   174,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5539,  1381,   195,   196,
      -1,    -1,    -1,    28,    -1,   201,    -1,    -1,    -1,    -1,
    5553,    36,   208,    -1,   170,   212,    -1,    42,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3299,    -1,    -1,    -1,  1422,   195,
     196,    66,    -1,   239,   241,   241,    -1,   244,    -1,    -1,
    5593,    -1,    -1,    -1,    -1,    -1,   212,    -1,  5601,    -1,
     257,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5614,    -1,    -1,    -1,    -1,    -1,    -1,  3343,    -1,
      -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,    -1,  1479,    -1,    -1,    -1,    -1,
      -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
     306,    -1,  3377,    -1,   310,    -1,    -1,    -1,    -1,  1503,
     316,    -1,    -1,    -1,    -1,    -1,    -1,   323,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,   335,    -1,
      -1,    -1,    -1,    -1,   340,   170,    -1,    -1,    -1,   174,
      -1,    -1,   348,    -1,    -1,    -1,    -1,  1541,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,    -1,    -1,    -1,  1561,    -1,   335,
      -1,  3446,  1566,    -1,    -1,    -1,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1581,    -1,    -1,
      -1,    -1,  3467,    -1,   400,    -1,    -1,    -1,   404,    -1,
      -1,    -1,    -1,  1597,  3479,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   425,
      -1,    -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,
    1624,    -1,    -1,    -1,    -1,    -1,  1630,    -1,    -1,    -1,
    1634,    -1,  1636,  1637,    -1,    -1,    -1,    -1,   454,    -1,
      -1,    -1,    -1,  1647,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,  1659,  1660,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,  1673,
      -1,     8,    -1,    -1,    11,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,  3572,    -1,    -1,
     335,    28,   509,    -1,    -1,    -1,    -1,    -1,    -1,    36,
      -1,  1705,    -1,    -1,    -1,    42,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,  3600,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    28,    -1,    66,
      -1,    -1,    -1,   509,    -1,    36,    -1,  1741,    -1,  1743,
      -1,    42,    -1,    -1,    -1,    -1,  1750,    -1,    -1,  1753,
      -1,     8,    -1,  1757,    11,    -1,    -1,  3642,    -1,    -1,
      -1,  1765,  1766,    -1,    -1,    66,    -1,    -1,    -1,  1773,
      -1,    28,  1776,  1777,  1778,  1779,    -1,    -1,    -1,    36,
      -1,    -1,    -1,  1787,  1788,    42,  1790,    -1,  1792,  1793,
      -1,    -1,  1796,    -1,  1798,    -1,  1800,  1801,    -1,    -1,
      -1,    -1,    -1,  3688,    -1,    -1,    -1,    -1,    -1,    66,
      -1,    -1,    -1,  1817,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1828,  1829,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   170,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3731,    -1,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,   195,   196,
      -1,    -1,    -1,    -1,   509,    -1,    -1,    -1,    -1,   170,
      -1,    -1,    -1,   174,    -1,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,   241,    -1,  1910,   244,    -1,    -1,
      -1,   212,    -1,   170,    -1,    -1,    -1,   174,    -1,    28,
     257,    -1,    -1,   260,    -1,    -1,  3811,    36,    -1,    -1,
      -1,    -1,    -1,    42,    -1,  1939,    -1,    -1,   195,   196,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,   257,    66,  3843,   260,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1974,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,
     257,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   335,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,  2113,
    2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,    -1,  2123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2134,  2135,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
    4025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,
      -1,   260,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,    -1,  4061,    -1,    -1,    -1,
      -1,    -1,  4067,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   493,   494,   495,    -1,   497,   498,   499,   500,
     501,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,    18,    -1,    -1,    -1,    -1,
      -1,    24,    -1,    -1,    -1,    -1,    -1,  2271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2299,  2300,  4182,    -1,    -1,
      -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2340,    -1,    -1,    -1,
    2344,  2345,    -1,    -1,  2348,    -1,    -1,    -1,    -1,    -1,
      -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,
      -1,   124,  4247,    -1,    -1,    -1,  2370,  4252,    -1,  2373,
      -1,    -1,  4257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2384,    -1,    -1,    -1,   493,   494,   495,  2391,   497,   498,
     499,   500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2415,    -1,    -1,    -1,    -1,   179,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,    -1,    -1,
      -1,  2435,  2436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2444,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2467,  2468,    -1,    -1,    28,  2472,    -1,
      -1,    -1,    -1,    -1,    -1,    36,   239,  4362,   241,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,   200,    -1,    -1,    -1,   259,    -1,   206,    -1,
      -1,    -1,    -1,  2507,    -1,    66,   269,  2511,    -1,   217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4402,    -1,    -1,
       8,    -1,    -1,    11,    -1,  2529,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2540,    -1,    -1,   302,
      28,    -1,   305,   306,    -1,    -1,    -1,    -1,    36,  2553,
      -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,     8,
    2564,    -1,    11,    -1,    -1,    -1,    -1,  2571,   331,    -1,
      -1,    -1,    -1,    -1,    -1,  4460,    -1,    -1,    66,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2608,    -1,  2610,    -1,   371,   170,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    66,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   389,  2631,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   436,   437,    -1,    -1,    -1,    -1,    -1,
     241,    -1,   170,   244,    -1,  2689,   174,    -1,    -1,    -1,
      -1,  2695,    -1,    -1,    -1,  2699,   257,    -1,    -1,   260,
      -1,  4586,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,    -1,
      -1,   170,    -1,    -1,   212,   174,    -1,    -1,    -1,    -1,
    2734,    -1,    -1,    -1,    -1,  2739,    -1,    -1,  4623,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,  2770,    -1,    -1,   257,
      -1,    -1,   260,    -1,   335,    -1,    -1,    -1,  2782,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,  2793,
      11,    -1,   241,  2797,    -1,   244,    -1,    -1,    -1,  2803,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,   257,    -1,
      -1,   260,    -1,    -1,    -1,    36,    -1,  2821,  2822,    -1,
      -1,    42,    -1,  2827,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    66,    -1,   335,  2852,  2853,
      -1,    -1,    -1,  2857,  4739,    -1,    -1,  4742,    -1,  4744,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,  2872,  2873,
    2874,  4756,    -1,    -1,    -1,  2879,    -1,    -1,    -1,    -1,
      -1,  2885,  2886,    -1,  2888,  4770,   335,    -1,    -1,    -1,
    2894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2904,  2905,    -1,    -1,  2908,    -1,    -1,    -1,    -1,   617,
      -1,    -1,    -1,   621,    -1,    -1,    -1,  2921,    -1,  2923,
      -1,    -1,    -1,  2927,   632,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   493,   494,   495,    -1,   497,   498,   499,   500,
     501,   502,  2946,    -1,    -1,    -1,   654,    -1,   509,   170,
      -1,    -1,  2956,   174,    -1,  2959,  2960,  2961,     8,    -1,
      -1,    11,   670,    -1,    -1,    -1,    -1,   675,    -1,  2973,
      -1,    -1,  2976,    -1,   195,   196,    -1,   685,    28,    18,
      -1,    -1,    32,    -1,    -1,    24,    36,   695,  2992,    -1,
      -1,   212,    42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3007,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,  3019,    66,    -1,    -1,    -1,
     241,   509,    -1,   244,    -1,    64,    -1,  4912,    -1,    -1,
    3034,    -1,  4917,  3037,    -1,  3039,   257,    -1,    -1,   260,
    3044,    -1,  3046,    -1,   493,   494,   495,    -1,   497,   498,
     499,   500,   501,   502,  4939,    -1,    -1,  3061,  3062,    -1,
     509,    -1,   112,  3067,    -1,    -1,    -1,    -1,   776,    -1,
      -1,    -1,    -1,    -1,    -1,   114,    -1,    -1,    -1,    -1,
      -1,    -1,   121,    -1,  3088,   124,    -1,  3091,    -1,    -1,
    3094,    -1,  4977,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   335,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,
     179,    -1,   970,    -1,    -1,   195,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   212,    -1,    -1,    -1,    -1,  5052,    -1,    -1,
      -1,  5056,  5057,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3190,  3191,  3192,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     239,    -1,   241,    -1,    -1,    -1,    -1,   257,    -1,    -1,
     260,    -1,   251,    -1,    -1,    -1,   924,    -1,    -1,    -1,
     259,    -1,  3226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,  3235,    -1,  3237,  3238,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3249,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5145,    -1,    -1,   302,    -1,    -1,   305,   306,    -1,    -1,
      -1,    -1,   493,   494,   495,    -1,   497,   498,   499,   500,
     501,   502,    -1,  1111,    -1,   335,    -1,    -1,   509,    -1,
      -1,    -1,   331,  1001,    -1,  3299,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,  3337,    -1,    -1,   386,  1045,    -1,  3343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     389,    -1,    -1,  1061,  1062,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1075,    -1,    -1,
      -1,    -1,  3376,  3377,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3391,    -1,  3393,
      -1,    -1,    -1,    -1,    -1,  1103,    -1,   436,   437,    -1,
      -1,    -1,    -1,    -1,  3408,  1113,  3410,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1126,    -1,
      -1,  1129,    -1,    -1,  1252,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   480,  3446,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3466,  3467,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,  3479,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,
      28,  3495,    -1,  1321,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    28,  3506,    -1,    42,  3509,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3528,    -1,    -1,  3531,    66,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    66,
      -1,  1249,    -1,    -1,    -1,  3549,    -1,    -1,  3552,  1257,
    1258,    -1,    -1,  1381,    -1,  3559,    -1,    -1,    -1,  1267,
      -1,  3565,    -1,  3567,    -1,    -1,    -1,    -1,  3572,  3573,
      -1,    -1,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,    -1,    -1,    -1,  3589,  3590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1422,    -1,  3600,    -1,    -1,    -1,
      -1,  3605,    -1,    -1,    -1,  3609,  3610,    -1,  3612,    -1,
    3614,   149,    -1,    -1,    -1,  3619,   154,    -1,    -1,  1327,
      -1,    -1,    -1,    -1,    -1,  3629,    -1,    -1,  3632,    -1,
    3634,    -1,   170,    -1,    -1,    -1,   174,    -1,  3642,  3643,
    3644,  3645,    -1,   170,    -1,  3649,    -1,   174,  3652,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,    -1,  3666,    -1,   200,  3669,    -1,    -1,   195,   196,
     206,    -1,    -1,    -1,   212,  1503,    -1,  3681,    -1,    -1,
      -1,   217,    -1,  3687,  3688,   212,  5571,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,  3713,
      -1,    -1,    -1,  1541,   241,  3719,    -1,   244,    -1,   257,
      -1,  3725,   260,    -1,    -1,    -1,    -1,  3731,    -1,    -1,
     257,    -1,    -1,   260,    -1,    -1,    -1,    -1,  1566,    -1,
      -1,    -1,    -1,  3747,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    -1,
      24,  1479,    -1,    -1,  3778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3797,  3798,  3799,  3800,   335,    -1,    -1,
      -1,    -1,  1630,    -1,    -1,    -1,    -1,  3811,   335,    -1,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   349,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3836,    -1,    -1,    -1,    -1,    -1,  3842,  3843,
    3844,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3852,    -1,
      -1,    -1,    -1,  1561,     8,    -1,    -1,    11,    -1,    -1,
     114,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,    -1,
     124,    -1,    -1,  1581,    28,    -1,    -1,    -1,  3882,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    42,  1597,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3904,    -1,    -1,  3907,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   179,    -1,    -1,  1636,  1637,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1647,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3953,
      -1,  1659,  1660,    -1,    -1,   493,   494,   495,    -1,   497,
     498,   499,   500,   501,   502,  1673,   493,   494,   495,    -1,
     497,   498,   499,   500,   501,   502,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   239,    -1,   241,    -1,  1817,
      -1,    -1,  3996,    -1,   148,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,     8,    -1,   259,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,   170,  4021,  4022,    -1,
     174,  4025,    -1,    28,  4028,    -1,    31,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,
      -1,   195,   196,    -1,    -1,    -1,    -1,    -1,   302,    -1,
      -1,   305,   306,    -1,    -1,    -1,    -1,  4061,   212,    -1,
      -1,    66,    -1,  4067,  4068,  4069,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,     8,
      -1,   617,    11,    -1,    -1,   621,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   632,    -1,    -1,    28,
      -1,    -1,    31,   257,    -1,  4109,   260,    36,    -1,    -1,
      -1,    -1,    -1,    42,    -1,    -1,    -1,   371,   654,    -1,
      -1,  1829,    -1,    -1,   278,  4129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   670,   389,    -1,    66,    -1,   675,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   685,
      -1,    -1,    -1,    -1,  4158,    -1,    -1,    -1,    -1,   695,
      -1,    -1,    -1,    -1,  4168,   170,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,  4179,  4180,    -1,  4182,    -1,
    4184,   335,   436,   437,    -1,    -1,    -1,  4191,  4192,    -1,
     195,   196,  4196,  4197,    -1,    -1,    -1,    -1,  4202,  4203,
      -1,    -1,  4206,    -1,    -1,  4209,    -1,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4223,
      -1,    -1,    -1,    -1,    -1,    -1,   480,  4231,    -1,    -1,
      -1,  4235,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,
     776,   170,    -1,  4247,    -1,   174,    -1,    -1,  4252,    -1,
      -1,    -1,   257,  4257,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,  4291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,  4325,    -1,    -1,    -1,    -1,  4330,  4331,   257,    -1,
     335,   260,    -1,    -1,    -1,    -1,  4340,    -1,    -1,   493,
     494,   495,  4346,   497,   498,   499,   500,   501,   502,  4353,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4362,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   924,    -1,
      -1,    -1,     8,  4397,    -1,    11,    -1,    -1,  4402,    -1,
      -1,    -1,    -1,    -1,    -1,  4409,   335,    -1,    -1,    -1,
      -1,    -1,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    -1,    -1,    42,    -1,  4432,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      66,    -1,    -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1001,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,  2326,    -1,
      -1,    -1,  2330,  2331,    -1,    -1,    -1,    -1,    -1,  1045,
      -1,    -1,    -1,    -1,    -1,    -1,  4520,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1061,  1062,  4531,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1075,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,   493,   494,   495,  1103,   497,   498,
     499,   500,   501,   502,    -1,    -1,    -1,  1113,    -1,   195,
     196,    -1,  4586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1126,    -1,    -1,  1129,    -1,    -1,   212,    -1,    -1,    -1,
      -1,    -1,  4606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4619,  2444,    -1,    -1,  4623,
      -1,    -1,    -1,    -1,    -1,   241,  4630,    -1,   244,    -1,
      -1,    -1,  2340,    -1,    -1,    -1,  2344,  2345,  4642,    -1,
    2348,   257,    -1,    -1,   260,    -1,    -1,  4651,  4652,    -1,
      -1,  4655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,
      -1,    -1,  2370,    -1,  4668,    -1,    -1,    -1,    -1,    -1,
    4674,    -1,    -1,    -1,    -1,  4679,    -1,    -1,  4682,    -1,
      -1,    -1,    -1,  4687,  4688,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4706,    -1,  4708,    -1,    -1,  2415,  4712,    -1,
      -1,    -1,    -1,  1249,    -1,    -1,    -1,    -1,    -1,   335,
      -1,  1257,  1258,    -1,    -1,    -1,    -1,  2435,  2436,    -1,
      -1,  1267,  4736,    -1,    -1,  4739,    -1,  4741,  4742,    -1,
    4744,    -1,    -1,    -1,    -1,    -1,  4750,    -1,    -1,    -1,
      -1,    -1,  4756,     8,    -1,    -1,    11,    -1,    -1,  2467,
    2468,    -1,    -1,    -1,  2472,    -1,  4770,    -1,    -1,    -1,
      -1,    -1,    -1,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    36,  2610,    -1,    -1,  4789,    -1,    42,    -1,    -1,
      -1,  1327,    -1,    -1,  4798,    18,    -1,    -1,    -1,  2507,
      -1,    24,    -1,  2511,    -1,    -1,  4810,    -1,    -1,    -1,
      -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2529,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2540,  4837,    -1,  4839,    -1,    -1,    -1,    -1,
      -1,    64,    -1,    -1,    -1,  2553,    -1,    -1,    -1,    -1,
      -1,  4855,    -1,    -1,    -1,    -1,  2564,    -1,    -1,    -1,
      -1,  2689,    -1,  2571,    -1,    -1,    -1,  2695,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
      -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,   121,   154,
      -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,  4912,    -1,
      -1,  4915,    -1,  4917,    -1,   170,    -1,    -1,    -1,   174,
      -1,    -1,    -1,  2631,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4936,    -1,  4938,  4939,    -1,  4941,    -1,  4943,
     195,   196,    -1,  1479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2782,    -1,   179,   212,    -1,  4963,
      -1,    -1,    -1,    -1,  4968,    -1,    -1,    -1,  4972,    -1,
      -1,    -1,     8,  4977,    -1,    11,    -1,    -1,  4982,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,  2699,    28,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      36,    -1,   257,    -1,    -1,   260,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   239,    -1,   241,    -1,
    5024,    -1,    -1,    -1,    -1,  1561,  2734,  5031,   251,    -1,
      66,    -1,    -1,    -1,    -1,    -1,   259,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1581,   269,    -1,  5052,    -1,
      -1,    -1,  5056,  5057,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1597,  2770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   302,
     335,    -1,   305,   306,    -1,  2793,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,  5102,    -1,
    1636,  1637,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,
      -1,  1647,    28,    -1,    -1,    31,    -1,  5121,    -1,    -1,
      36,    -1,    -1,  1659,  1660,    -1,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,    -1,  1673,   174,    -1,
      -1,  5145,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
      66,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5162,   195,
     196,  5165,    -1,    -1,    -1,    -1,   389,    -1,    -1,    -1,
      -1,  2879,    -1,    -1,    -1,  5179,   212,  5181,  2886,  5183,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,    -1,
      -1,    -1,    -1,  5207,    -1,   241,  3034,    -1,   244,  3037,
      -1,  3039,    -1,   436,   437,    -1,  3044,    -1,    -1,    -1,
      -1,   257,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
    5234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,  5260,   480,   174,    -1,
      -1,    -1,    -1,    -1,    -1,  2973,  3094,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5279,    -1,    -1,    -1,   195,
     196,    -1,    -1,    -1,    -1,    -1,    -1,  5291,  5292,    -1,
      -1,    -1,    -1,  1829,    -1,    -1,   212,  5301,    -1,   335,
      -1,    -1,  5306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5326,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,  3046,    -1,
      -1,   257,    13,    14,   260,    -1,    -1,    -1,    19,    -1,
      21,    -1,    -1,  3061,  3062,    26,    -1,    28,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,  5375,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
    3088,    -1,    -1,  3091,    -1,    28,    -1,    -1,  5392,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    42,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3235,    -1,  3237,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5422,   335,
      -1,    -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
      -1,  3299,    -1,    -1,    -1,    -1,    -1,    -1,  5482,    -1,
      -1,    -1,  3190,  3191,  3192,    -1,  5490,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5502,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3343,    -1,    -1,  3226,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   170,    -1,    -1,
    3238,   174,    -1,    -1,    -1,  5539,   207,   208,    -1,   210,
      -1,  3249,   213,    -1,   215,    -1,    -1,    -1,   219,  3377,
      -1,    -1,   195,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5570,  5571,  5572,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,   495,
      -1,   497,   498,   499,   500,   501,   502,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5613,
      -1,    -1,    -1,    -1,   257,    -1,    -1,   260,  3446,    -1,
      -1,    -1,  5626,    -1,    -1,    -1,    -1,    -1,    -1,  3337,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3467,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3376,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3391,    -1,  3393,    -1,    21,    -1,    -1,
      -1,    -1,   335,    -1,    -1,    -1,    -1,    -1,    -1,    33,
    3408,    -1,  3410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      54,    -1,    -1,    -1,  3552,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    67,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    77,  3572,    -1,    -1,    81,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3466,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,
     104,    -1,  3600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,  3495,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,
      -1,  3509,    -1,    -1,  2340,   139,   140,    -1,  2344,  2345,
      -1,    -1,  2348,    -1,  3642,    -1,    -1,   151,    -1,    -1,
    3528,    -1,    -1,  3531,   158,    -1,    -1,    -1,   162,    -1,
      -1,    -1,    -1,    -1,  2370,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,
     493,   494,   495,    -1,   497,   498,   499,   500,   501,   502,
      18,    -1,    -1,    -1,    -1,    -1,    24,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2415,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,    -1,   223,
      -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2435,
    2436,    -1,    -1,  3731,  3612,    -1,    64,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   257,    -1,    -1,   260,    -1,    -1,    -1,
      -1,  2467,  2468,    -1,    -1,   606,  2472,    -1,    96,    -1,
      -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   623,   624,    18,    -1,   114,   628,    -1,    -1,
      24,   295,    -1,   121,    -1,    -1,   124,    -1,    -1,    -1,
      -1,  2507,    -1,   970,   645,  2511,    -1,    -1,    -1,   313,
      -1,    -1,    -1,  3811,    -1,   319,    -1,    -1,   659,    -1,
      -1,   325,    -1,  2529,   328,    -1,    -1,    -1,    -1,    -1,
      64,    -1,    -1,    -1,  2540,   676,    -1,    -1,   679,    -1,
     681,    -1,   683,    -1,    -1,  3843,    -1,  2553,   176,    -1,
     354,   179,   356,   357,    -1,   359,   360,    -1,  2564,    -1,
      -1,    -1,    -1,    -1,   368,  2571,    -1,   771,    -1,   373,
      -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,   382,    -1,
     114,   385,   723,    -1,    -1,    -1,    -1,   121,    -1,    -1,
     124,    -1,    -1,    -1,   398,    -1,   224,    -1,   802,    -1,
    3778,   229,    -1,    -1,    -1,   746,    -1,   748,    -1,    -1,
      -1,   239,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,  2631,    -1,    -1,    -1,    -1,
      -1,   259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,    -1,  1111,   179,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   458,    -1,    -1,    -1,  3836,    -1,
      -1,    -1,    -1,   804,  3842,   469,  3844,    -1,    -1,   473,
      -1,    -1,    -1,    -1,   302,    -1,    -1,   305,   306,   307,
      -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2699,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   331,  3882,   239,    -1,   241,    -1,    -1,
      -1,    -1,    -1,    -1,   342,    -1,    -1,   251,    -1,    -1,
     970,    -1,    -1,   864,    -1,   259,  3904,  4025,  2734,  3907,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    18,
      -1,    -1,    -1,   371,    -1,    24,    -1,    -1,    -1,    -1,
      18,    -1,    -1,    -1,    -1,    -1,    24,    -1,    -1,    -1,
      -1,   389,    -1,  4061,  2770,    -1,    -1,    -1,   302,  4067,
      -1,   305,   306,    -1,    -1,  3953,    -1,    -1,    -1,    -1,
      -1,    -1,   923,    -1,   925,    64,    -1,  2793,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    64,   331,    -1,   940,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   436,   437,
      -1,    -1,   953,    -1,    -1,    -1,    -1,    -1,    -1,   960,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   972,    -1,    -1,   975,   114,    -1,   371,    -1,    -1,
      -1,    -1,   121,  4021,  4022,   124,   114,    -1,    -1,    -1,
    4028,    -1,   480,   121,  1321,   389,   124,    -1,    -1,  1000,
      -1,  1111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1012,    -1,  2879,    -1,    -1,    -1,    -1,    -1,    -1,
    2886,    -1,    -1,    -1,  4182,    -1,    18,    -1,    -1,    -1,
      -1,    -1,    24,    -1,    -1,    -1,    -1,    -1,    -1,  4197,
     179,    -1,   436,   437,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   179,    -1,    -1,  1381,    -1,    -1,    -1,    -1,  1060,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4109,    64,    -1,    -1,    -1,    -1,  1141,    -1,  1080,
      -1,  1082,    -1,  1084,    -1,  1086,   480,  1088,  1089,  1090,
      -1,    -1,    -1,    -1,  1095,  1422,    -1,    -1,    -1,    -1,
     239,    -1,   241,    -1,    -1,    -1,  1170,  2973,    -1,    -1,
      -1,   239,   251,   241,    -1,    -1,    -1,    -1,    -1,    -1,
     259,    -1,   114,   251,    -1,    -1,    -1,    -1,    -1,   121,
     269,   259,   124,    -1,    -1,    -1,    -1,    -1,    -1,  1203,
    1204,   269,  1206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4309,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1225,    -1,   302,    -1,    -1,   305,   306,    -1,    -1,
      -1,    -1,    -1,    -1,   302,    -1,  1503,   305,   306,    -1,
    3046,    -1,    -1,    -1,    -1,    -1,    -1,   179,    -1,    -1,
      -1,    -1,   331,    -1,    -1,  3061,  3062,    -1,    -1,    -1,
      -1,    -1,  1266,   331,  4362,    -1,    -1,    -1,    -1,    -1,
      -1,  1321,    -1,    -1,  1541,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3088,    -1,    -1,  3091,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,  1301,    -1,  1566,
      -1,  1305,  1306,   371,  4402,    -1,    -1,   239,    -1,   241,
     389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   389,    -1,    -1,    -1,    -1,    -1,   259,    -1,    -1,
      -1,  1381,    -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,
      -1,    -1,    -1,    -1,  1285,    -1,    -1,  4325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   436,   437,    -1,
      -1,    -1,  4460,  1630,    -1,    -1,    -1,    -1,   436,   437,
     302,    -1,  1422,   305,   306,  4353,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3190,  3191,  3192,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,
      -1,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   480,  1354,    -1,    -1,    -1,    -1,    -1,  4397,
    3226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4409,  3238,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    -1,  3249,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1503,  4432,    -1,    -1,   389,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1541,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4479,    -1,    -1,   436,   437,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1566,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4623,    -1,    -1,    -1,    -1,
      -1,  3337,    -1,    -1,    -1,    -1,    -1,    -1,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,
    1817,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1630,    -1,    -1,    -1,    67,  3391,    -1,  3393,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,
      -1,    -1,  3408,    -1,  3410,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,  4606,  1570,
      -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,
      -1,  4739,    -1,    -1,  1585,    -1,    -1,    -1,   131,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   139,   140,  4756,    -1,
    3466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   151,    -1,
      -1,    -1,  4770,   156,    -1,  1616,    -1,    -1,    -1,   162,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3495,
      -1,    -1,  1633,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3509,    -1,    -1,    -1,  1648,    -1,  1650,
      -1,  1652,    -1,    -1,    -1,    -1,  1657,    -1,    -1,   202,
      -1,    -1,  3528,    -1,    -1,  3531,    -1,    -1,  4706,    -1,
    4708,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     223,  1682,    -1,  1684,    -1,  1686,  1750,  1688,    -1,  1690,
      -1,    -1,    -1,  1694,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1817,    -1,  1773,
      -1,    -1,  1776,    -1,   257,  1779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1787,  1788,    -1,    -1,    -1,  1792,  1793,
      -1,    -1,  1796,    -1,  1798,    -1,    -1,  1801,    -1,    -1,
      -1,    -1,    -1,   286,    -1,    -1,  3612,    -1,    -1,    -1,
      -1,  4789,    -1,    -1,  4912,    -1,    -1,    -1,    -1,  4917,
      -1,    -1,    -1,    -1,  1828,    -1,    -1,    -1,    -1,    -1,
     313,    -1,  4810,    -1,   317,    -1,   319,    -1,    -1,    -1,
      -1,  4939,   325,    -1,    -1,   328,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   970,    -1,    -1,    -1,    -1,  4837,
      -1,  4839,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     353,   354,    -1,   356,    -1,    -1,    -1,   360,    -1,  4977,
      -1,    -1,    -1,    -1,    -1,   368,    21,    -1,    -1,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    -1,   385,    -1,    -1,    -1,  1910,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   398,    -1,    -1,    -1,    54,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    67,    -1,    -1,  1939,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5052,    -1,    -1,    -1,  5056,  5057,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
    1974,    -1,  3778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   119,    -1,    -1,    -1,    -1,    -1,
     473,    -1,    -1,    -1,    -1,  1111,   131,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   139,   140,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   151,    -1,    -1,    -1,
      -1,   156,    -1,    -1,    -1,    -1,    -1,   162,    -1,    -1,
    3836,    -1,    -1,    -1,    -1,    -1,  3842,    -1,  3844,    -1,
      -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5031,    -1,    -1,    -1,    -1,    -1,  2326,
      -1,    -1,    -1,  2330,  2331,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3882,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3904,    -1,
      -1,  3907,    -1,  5201,  5202,    -1,    -1,    -1,    -1,  2113,
    2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,    -1,  2123,
      -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2134,  2135,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3953,    -1,    -1,
      -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2444,   313,    -1,
      -1,    -1,   317,    -1,   319,    -1,    -1,    -1,    -1,    -1,
     325,    -1,    -1,   328,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4021,  4022,    -1,    -1,   354,
      -1,   356,  4028,    -1,    -1,   360,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   368,    -1,    -1,    -1,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,    -1,    -1,    -1,    -1,    -1,  5234,    -1,    -1,    -1,
      -1,    -1,    -1,   398,    -1,  1381,    -1,  2271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2326,    -1,    -1,    -1,
    2330,  2331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2299,  2300,    -1,    -1,    -1,
      -1,    -1,    -1,  4109,    -1,    -1,  1422,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5306,    -1,
      -1,   466,    -1,    -1,    -1,  2276,  2277,    -1,   473,    -1,
      -1,    -1,    -1,  2610,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1503,    -1,    -1,
      -1,    -1,    -1,    -1,  2444,    -1,    -1,    -1,    -1,    -1,
    2341,  2342,    -1,    -1,    -1,  2346,  2347,    -1,    -1,  2350,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2360,
      -1,    -1,  2689,    -1,    -1,  1541,  2367,    -1,  2695,    -1,
    2371,  2372,    -1,    -1,  2375,  2376,    -1,    -1,    -1,    -1,
      -1,  2382,    -1,    -1,  5422,    -1,    -1,    -1,    -1,    -1,
    1566,    -1,    -1,  2394,    -1,  2396,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5571,    -1,  2416,    -1,    -1,    -1,    -1,
    2421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2437,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5482,  2446,    -1,    -1,    -1,    -1,
    2451,  2452,  2453,  2454,  1630,  2782,    -1,    -1,    -1,  4325,
    2461,  2462,    -1,    -1,  5502,    -1,    -1,    -1,  2469,    -1,
      -1,    -1,    -1,  2474,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2482,    -1,    -1,    -1,    -1,    -1,  4353,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2610,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2523,    -1,  2525,    -1,    -1,    -1,    -1,  2530,
      -1,  4397,  5570,  2534,  5572,  2536,  2537,  2538,  2539,    -1,
    2541,    -1,    -1,  4409,  2608,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2554,  2555,    -1,  2557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4432,  2568,  2569,  2570,
      -1,    -1,    -1,    -1,    -1,  5613,    -1,    -1,    -1,  2689,
      -1,    -1,    -1,    -1,    -1,  2695,    -1,    -1,  5626,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     970,  1817,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2782,    -1,    -1,  2739,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3034,    -1,    -1,
    3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2822,    -1,
      -1,    -1,    -1,  2827,    -1,    -1,    -1,  3094,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1111,    -1,    -1,    -1,    -1,    -1,  2788,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,    -1,  2873,
    2874,    -1,    -1,  3140,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2885,    -1,    -1,  2888,    -1,    -1,    -1,    -1,    -1,
    2894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4706,    -1,  4708,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2921,    -1,  2923,
      -1,    -1,    -1,  2927,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2959,  2960,  2961,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3235,    -1,
    3237,    -1,  2976,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4789,  3034,    -1,    -1,  3037,  2992,  3039,
      -1,    -1,    -1,    -1,  3044,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3007,  4810,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4837,  3299,  4839,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3094,  2986,    -1,   970,    -1,    -1,
      -1,  1321,    -1,    -1,    -1,    -1,   970,    -1,    -1,    -1,
      -1,    -1,    -1,  3067,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3047,  3048,    -1,    -1,
    3377,  1381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3089,    -1,
      -1,    -1,  1422,    -1,    -1,    -1,    -1,  3098,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3113,  3114,    -1,    -1,    -1,  3118,    -1,  3446,
      -1,    -1,  3123,  3124,  3125,  3235,    -1,  3237,  1111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1111,    -1,    -1,
    3467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2326,    -1,  3479,    -1,  2330,  2331,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5031,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1503,    -1,    -1,    -1,    -1,    -1,    -1,
    3181,  3182,  3183,  3184,    -1,    -1,    -1,    -1,    -1,  3299,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1541,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3552,  3227,    -1,  3229,  3230,
    3231,    -1,    -1,  3343,    -1,    -1,  1566,    -1,  3239,    -1,
      -1,    -1,    -1,    -1,    -1,  3572,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3377,  2444,    -1,
      -1,    -1,    -1,  3600,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1630,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3312,    -1,    -1,    -1,  3642,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3446,  3338,  1321,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3467,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5234,  3479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3392,    -1,    -1,    -1,    -1,    -1,    -1,  1381,    -1,
      -1,    -1,    -1,    -1,  3731,    -1,    -1,  1381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2610,    -1,  3437,    -1,    -1,  1422,
    5306,  3442,  3552,    -1,    -1,    -1,    -1,    -1,  1422,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3572,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3480,
      -1,    -1,    -1,    -1,  3811,  3549,    -1,  1817,    -1,    -1,
    3600,    -1,    -1,  3494,    -1,  3559,    -1,    -1,    -1,    -1,
      -1,  3565,    -1,  3567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2689,    -1,    -1,  3843,    -1,    -1,  2695,
    1503,    -1,    -1,    -1,    -1,  3589,  3590,    -1,    -1,  1503,
      -1,    -1,  3642,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3609,    -1,    -1,    -1,    -1,
    3614,    -1,    -1,    -1,    -1,  3619,  5422,    -1,  1541,    -1,
      -1,    -1,    -1,    -1,    -1,  3629,    -1,  1541,  3632,    -1,
    3634,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3643,
      -1,    -1,    -1,  1566,    -1,  3649,    -1,    -1,  3652,    -1,
      -1,    -1,  1566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5482,  3681,    -1,    -1,
      -1,  3731,    -1,  3687,  3688,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5502,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1630,    -1,  3713,
      -1,    -1,    -1,    -1,    -1,  3719,  1630,    -1,    -1,    -1,
      -1,  3725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4025,    -1,
      -1,  3811,    -1,    -1,  5570,    -1,  5572,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3843,  4061,    -1,    -1,    -1,    -1,    -1,
    4067,    -1,    -1,    -1,    -1,    -1,    -1,  5613,    -1,    -1,
      -1,    -1,    -1,  3754,    -1,  3756,    -1,    -1,    -1,    -1,
    5626,    -1,  3763,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3779,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3795,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3808,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1817,    -1,    -1,    -1,    -1,  3840,
      -1,    -1,    -1,  1817,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4182,    -1,    -1,  3034,    -1,
      -1,  3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,    -1,
    4197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3891,  3892,  3893,    -1,    -1,  3896,  3897,  3898,  3899,  3900,
      -1,    -1,    -1,    -1,  3905,  3906,    -1,  3908,  3909,  3910,
    3911,  3912,  3913,  3914,    -1,  4025,    -1,    -1,  3094,    -1,
      -1,    -1,  3923,    -1,    -1,  3926,  3927,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4061,    -1,    -1,    -1,    -1,    -1,  4067,    -1,    -1,
      -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4309,    -1,    -1,    -1,    -1,    -1,    -1,  3990,
    3991,  3992,    -1,    -1,  3995,    -1,  2326,    -1,    -1,    -1,
    2330,  2331,    -1,    -1,  4068,  4069,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4362,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3235,
      -1,  3237,    -1,    -1,    -1,  4129,    -1,    -1,    -1,    -1,
      -1,    -1,  4182,    -1,    -1,  4402,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4084,    -1,    -1,    -1,  4197,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2444,  4179,  4180,    -1,    -1,    -1,
    4184,    -1,    -1,  3299,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4196,  4460,    -1,    -1,    -1,    -1,  4202,  4203,
      -1,    -1,  4206,    -1,    -1,  4209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3343,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4247,    -1,    -1,    -1,    -1,  4252,    -1,
      -1,    -1,    -1,  4257,    -1,    -1,    -1,    -1,    -1,  4309,
      -1,  3377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4362,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2610,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3467,  4402,    -1,    -1,    -1,  4623,    -1,    -1,    -1,
      -1,    -1,    -1,  3479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4320,
    4321,  4322,  4323,    -1,    -1,  4326,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,
    4460,    -1,  2326,    -1,    -1,    -1,  2330,  2331,    -1,  2689,
      -1,    -1,    -1,    -1,    -1,  2695,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4393,  4394,  4395,  4396,  3572,  4398,  4399,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4410,
    4411,    -1,  4739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3600,    -1,    -1,    -1,    -1,  4756,
      -1,    -1,  4433,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2782,    -1,    -1,    -1,  4520,    -1,    -1,    -1,
      -1,  2444,    -1,    -1,    -1,    -1,  3642,    -1,    -1,    -1,
    2444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4540,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4549,    -1,
      -1,    -1,    -1,    -1,    -1,  3731,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4642,    -1,
      -1,    -1,    -1,    -1,    -1,  4912,    -1,    -1,    -1,    -1,
    4917,  4655,    -1,    -1,    -1,    -1,  4597,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4939,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4687,  4688,    -1,    -1,  2610,    -1,  4739,
      -1,    -1,    -1,    -1,    -1,  3811,  2610,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4756,    -1,    -1,    -1,
    4977,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4770,    -1,    -1,    -1,    -1,    -1,    -1,  3843,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4742,    -1,
    4744,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4697,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3034,    -1,  2689,  3037,    -1,  3039,
      -1,    -1,  2695,    -1,  3044,  2689,    -1,    -1,    -1,    -1,
      -1,  2695,    -1,    -1,    -1,  5052,    -1,    -1,    -1,  5056,
    5057,    -1,    -1,    -1,    -1,  1219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4753,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3094,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4790,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1281,    -1,  2782,
      -1,    -1,  4912,    -1,    -1,    -1,    -1,  4917,  2782,    -1,
    3140,    -1,    -1,    -1,    -1,    -1,  4817,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4939,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4025,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4977,    -1,    -1,
      -1,    -1,  4936,    -1,  5201,  5202,    -1,  4941,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4061,    -1,    -1,    -1,    -1,
      -1,  4067,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4963,
      -1,    -1,    -1,    -1,  4968,  3235,    -1,  3237,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4982,    -1,
      -1,    -1,  4923,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5052,    -1,    -1,    -1,  5056,  5057,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3299,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4182,    -1,  5009,    -1,
      -1,    -1,    -1,  3343,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3377,    -1,    -1,
    5051,  3034,    -1,    -1,  3037,    -1,  3039,  5121,    -1,    -1,
    3034,  3044,    -1,  3037,    -1,  3039,    -1,    -1,    -1,    -1,
    3044,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5201,  5202,    -1,    -1,    -1,    -1,    -1,  5162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3094,    -1,    -1,    -1,    -1,  3446,    -1,    -1,  5183,
    3094,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4309,    -1,    -1,    -1,  3467,    -1,    -1,
      -1,    -1,    -1,  5207,    -1,    -1,    -1,    -1,  5149,  3479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1669,  4362,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5200,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3552,  5224,    -1,    -1,  4402,  5291,  5292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5301,    -1,    -1,
      -1,    -1,  3572,    -1,  5571,    -1,    -1,    -1,  5249,    -1,
      -1,    -1,  3235,  5254,  3237,    -1,    -1,    -1,    -1,    -1,
      -1,  3235,    -1,  3237,  1748,    -1,    -1,    -1,    -1,    -1,
    3600,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,  1772,    -1,
      -1,    -1,    -1,  1777,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5375,  3642,    -1,    -1,    -1,  3299,    -1,  1802,  1803,
      -1,    -1,  1806,    -1,  5325,  3299,    -1,    -1,  5392,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3377,    -1,    -1,    -1,    -1,    -1,
      -1,  3731,    -1,  3377,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5490,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4623,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5571,    -1,  3446,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3811,    -1,    -1,  3467,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3467,    -1,    -1,  3479,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3843,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4739,    -1,    -1,    -1,    -1,    -1,  3552,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3552,    -1,
    4756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3572,
      -1,    -1,    -1,    -1,  4770,    -1,    -1,    -1,  3572,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3600,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3600,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2131,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3642,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3642,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2167,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4025,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4061,    -1,    -1,    -1,    -1,  4912,  4067,    -1,    -1,
      -1,  4917,    -1,    -1,    -1,    -1,    -1,    -1,  3731,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3731,    -1,    -1,
      -1,    -1,    -1,  4939,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4977,  2286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2298,    -1,    -1,    -1,    -1,  2303,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3811,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3811,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4182,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3843,    -1,    -1,    -1,    -1,    -1,    -1,  4197,    -1,  3843,
      -1,    -1,    -1,    -1,    -1,    -1,  5052,    -1,    -1,    -1,
    5056,  5057,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5201,  5202,    -1,    -1,    -1,
      -1,    -1,  4362,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4402,    -1,    -1,    -1,    -1,    -1,  4061,    -1,
      -1,    -1,    -1,    -1,  4067,    -1,    -1,  4061,    -1,    -1,
      -1,    -1,    -1,  4067,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4182,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4182,    -1,
      -1,    -1,    -1,    -1,  4197,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4197,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4309,    -1,    -1,    -1,    -1,
      -1,  2825,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2848,    -1,  2850,    -1,  2852,  2853,
    2854,    -1,    -1,  2857,    -1,    -1,    -1,  2861,    -1,  4362,
      -1,    -1,    -1,    -1,    -1,    -1,  2870,    -1,  4362,    -1,
      -1,  2875,    -1,    -1,    -1,  5571,  2880,    -1,  2882,    -1,
      -1,    -1,    -1,  2887,    -1,  2889,    -1,    -1,  2892,  4739,
      -1,    -1,    -1,    -1,    -1,    -1,  2900,    -1,    -1,  4402,
    2904,  2905,    -1,  2907,    -1,    -1,  4756,    -1,  4402,    -1,
      -1,    -1,    -1,    -1,    -1,  2919,    -1,    -1,    -1,    -1,
    4770,    -1,  2926,    -1,  2928,  2929,  2930,  2931,  2932,  2933,
    2934,  2935,  2936,  2937,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4460,    -1,    -1,
      -1,  2965,    -1,    -1,    -1,    -1,  4460,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4912,    -1,    -1,    -1,    -1,  4917,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3082,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4939,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4623,    -1,    -1,    -1,    -1,    -1,    -1,  4977,    -1,  4623,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5052,    -1,    -1,    -1,  5056,  5057,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4739,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4739,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4756,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4756,    -1,    -1,    -1,    -1,  4770,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5201,  5202,    -1,    -1,    -1,    -1,    -1,  3362,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4912,
      -1,    -1,    -1,    -1,  4917,    -1,    -1,    -1,  4912,    -1,
      -1,    -1,    -1,  4917,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4939,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4939,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4977,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4977,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3547,    -1,    -1,    -1,    -1,    -1,  5052,
    3554,    -1,    -1,  5056,  5057,    -1,    -1,    -1,  5052,    -1,
      -1,    -1,  5056,  5057,    -1,    -1,  3570,  3571,    -1,  3573,
      -1,    -1,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,  3586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3615,    -1,    -1,  3618,    -1,    -1,    -1,    -1,    -1,
      -1,  3625,    -1,    -1,    -1,    -1,  3630,  3631,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3644,  3645,  3646,    -1,  3648,    -1,    -1,  3651,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3695,    -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5201,  5202,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3744,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3996,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5571,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5571,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4130,    -1,    -1,    -1,
    4134,  4135,  4136,    -1,    -1,  4139,    -1,    -1,    -1,    -1,
    4144,  4145,  4146,  4147,  4148,  4149,  4150,  4151,  4152,  4153,
    4154,  4155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4169,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4183,
      -1,    -1,    -1,    -1,    -1,    -1,  4190,  4191,  4192,  4193,
      -1,  4195,    -1,    -1,    -1,  4199,  4200,  4201,    -1,    -1,
    4204,    -1,    -1,  4207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4249,    -1,    -1,    -1,    -1,
      -1,    -1,  4256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4523,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4583,
    4584,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4615,    -1,    -1,    -1,  4619,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4635,    -1,  4637,    -1,    -1,    -1,    -1,    -1,  4643,
      -1,    -1,  4646,  4647,  4648,    -1,    -1,  4651,  4652,  4653,
    4654,    -1,  4656,    -1,    -1,  4659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4669,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4861,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4937,  4938,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4952,    -1,
    4954,  4955,  4956,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4985,  4986,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5153,
    5154,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5168,    -1,    -1,  5171,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5259,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5378,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5455,    14,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   509,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,   509,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    33,    34,    -1,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    67,    -1,    69,
      70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,    -1,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,   498,   499,
       3,     4,     5,     6,     7,     8,     9,    10,   508,   509,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,   498,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,   508,   509,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,   498,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   508,   509,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      14,    15,    16,    17,    18,    19,    20,    21,   509,    23,
      24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      34,    -1,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    52,    -1,
      -1,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    -1,    -1,    67,    -1,    69,    70,    71,    72,    73,
      74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
      -1,   105,    -1,   107,   108,   109,   110,   111,    -1,   113,
     114,   115,    -1,    -1,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,    -1,   128,   129,   130,   131,    -1,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,    -1,   143,
      -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
      -1,   205,   206,    -1,   208,    -1,   210,   211,   212,    -1,
     214,   215,   216,    -1,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,    -1,    -1,   242,   243,
     244,   245,    -1,    -1,   248,   249,   250,   251,   252,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,    -1,   273,
     274,    -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
      -1,   325,   326,   327,   328,   329,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,    -1,   352,   353,
      -1,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,    -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,
     374,    -1,   376,   377,    -1,    -1,   380,   381,   382,   383,
     384,    -1,    -1,   387,   388,   389,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,    -1,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,   431,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,    -1,   477,   478,    -1,   480,   481,   482,   483,
     484,   485,   486,   487,   488,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   509,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,    -1,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,    -1,    -1,   242,   243,   244,   245,    -1,
      -1,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,    -1,    -1,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
      -1,   368,    -1,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,    -1,
     477,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,
      -1,    -1,   509,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
      -1,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,   274,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,   493,   494,   495,    -1,   497,   498,   499,   500,
     501,   502,    -1,    -1,    -1,    -1,    -1,   508,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,     6,     7,     8,
       9,    10,   497,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,     6,     7,     8,     9,    10,   497,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,   498,    -1,    -1,    -1,    -1,
      -1,   504,   505,    -1,    -1,   508,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,     6,     7,     8,     9,    10,
     497,   498,   499,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   497,   498,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,   508,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,     6,     7,     8,
       9,    10,   497,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,     6,     7,     8,     9,    10,   497,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,     4,     5,     6,
       7,     8,     9,    10,   497,   498,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,     6,     7,     8,     9,    10,
     497,   498,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,     6,     7,     8,     9,    10,   497,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,     6,     7,     8,
       9,    10,   497,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,     6,     7,     8,     9,    10,   497,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,     4,     5,     6,
       7,     8,     9,    10,   497,   498,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,     6,     7,     8,     9,    10,
     497,   498,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,     6,     7,     8,     9,    10,   497,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,     6,     7,     8,
       9,    10,   497,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,     6,     7,     8,     9,    10,   497,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,     4,     5,     6,
       7,     8,     9,    10,   497,   498,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,     6,     7,    -1,     9,    10,
     497,   498,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,     6,     7,     8,     9,    10,   497,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,    -1,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,     6,     7,    -1,
       9,    10,   497,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,     6,     7,    -1,     9,    10,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,    -1,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,    -1,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,     6,     7,     8,     9,    10,
     497,   498,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,    -1,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,    -1,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,   385,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   497,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,   256,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
     385,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,     4,     5,     6,     7,    -1,     9,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,     6,     7,    -1,     9,    -1,    -1,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,     6,     7,    -1,
       9,    -1,    -1,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,   498,   499,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    26,
      27,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,   508,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,   508,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,   508,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,   508,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,   508,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,
      -1,    -1,    -1,   508,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,    -1,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,    -1,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,    -1,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,   274,   275,   276,    -1,   278,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,    -1,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,    -1,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,
      40,    41,    42,    43,    -1,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,    69,
      70,    71,    72,    73,    -1,    75,    76,    -1,    78,    79,
      80,    81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,   113,   114,   115,    -1,    -1,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,   131,    -1,    -1,   134,   135,   136,   137,   138,   139,
     140,   141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,
     150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,
     200,   201,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,    -1,   242,   243,    -1,   245,    -1,   247,   248,   249,
     250,   251,   252,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,   269,
     270,   271,    -1,   273,   274,    -1,   276,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,    -1,   325,   326,   327,   328,   329,
      -1,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,    -1,    -1,
     380,   381,   382,   383,   384,    -1,    -1,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,   431,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    14,    15,    16,    17,    18,    19,
      20,    21,    -1,    23,    24,    -1,    -1,    -1,    28,    -1,
      -1,    31,    -1,    33,    34,    -1,    36,    -1,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    -1,    -1,    -1,    56,    -1,    -1,    59,
      -1,    61,    62,    63,    64,    65,    66,    -1,    -1,    69,
      -1,    71,    72,    73,    -1,    -1,    76,    -1,    78,    79,
      -1,    81,    82,    83,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    95,    96,    -1,    98,    -1,
     100,   101,   102,   103,    -1,   105,    -1,   107,   108,   109,
     110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,
     120,   121,   122,    -1,   124,   125,   126,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,   135,   136,   137,   138,    -1,
     140,   141,    -1,    -1,    -1,    -1,   146,   147,    -1,    -1,
     150,    -1,   152,   153,    -1,    -1,   156,    -1,   158,    -1,
     160,   161,    -1,   163,    -1,   165,   166,    -1,    -1,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,    -1,    -1,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,    -1,    -1,    -1,    -1,    -1,   209,
      -1,   211,   212,    -1,   214,   215,   216,    -1,    -1,   219,
     220,    -1,   222,    -1,   224,   225,   226,   227,    -1,   229,
     230,    -1,   232,   233,   234,   235,    -1,   237,   238,   239,
     240,   241,   242,   243,   244,   245,    -1,   247,   248,   249,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,   259,
     260,    -1,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,   271,    -1,    -1,   274,    -1,    -1,   277,    -1,   279,
     280,   281,   282,    -1,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,    -1,    -1,    -1,    -1,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,    -1,   323,    -1,   325,    -1,   327,    -1,   329,
      -1,   331,   332,   333,   334,   335,   336,   337,    -1,    -1,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,    -1,   352,   353,    -1,    -1,   356,   357,   358,   359,
      -1,    -1,   362,   363,    -1,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,    -1,   376,   377,    -1,    -1,
     380,   381,    -1,   383,   384,    -1,    -1,   387,   388,    -1,
     390,   391,   392,   393,    -1,    -1,   396,   397,   398,    -1,
     400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,
     410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,    -1,    -1,   434,   435,   436,    -1,   438,   439,
     440,    -1,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,    -1,   453,   454,   455,    -1,   457,    -1,   459,
     460,   461,    -1,   463,   464,   465,   466,   467,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,   482,   483,   484,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,   493,   494,   495,    -1,   497,   498,   499,
     500,   501,   502,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   499,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   499,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     499,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   499,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,    -1,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,    -1,    -1,   242,   243,   244,   245,    -1,
      -1,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,    -1,    -1,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
      -1,   368,    -1,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,    -1,
     477,   478,    -1,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    -1,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,    -1,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,    -1,
      -1,   242,   243,   244,   245,    -1,    -1,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,    -1,    -1,    -1,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,    -1,   368,    -1,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,    -1,   477,   478,    -1,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,     6,     7,    -1,     9,    -1,    -1,    -1,   499,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,     4,     5,    -1,    -1,    -1,
       9,    -1,    -1,   498,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,     4,     5,    -1,    -1,    -1,     9,    -1,   497,   498,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,   497,   498,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,     9,    -1,
     497,   498,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,   154,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,     4,
       5,    -1,    -1,    -1,     9,    -1,   497,   498,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    26,    27,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,    -1,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,    -1,   242,   243,   244,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
      -1,   242,   243,   244,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    -1,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,   133,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,   151,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    -1,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
     133,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,   151,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,   133,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,   151,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,   151,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    26,    27,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,   256,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,   256,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    -1,    39,    40,    41,    42,    43,    -1,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    -1,    86,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,   139,   140,   141,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,    -1,    -1,    -1,   156,
     157,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,    -1,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    -1,    39,    40,
      41,    42,    43,    -1,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
      71,    72,    73,    -1,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    -1,    86,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,   137,   138,   139,   140,
     141,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,    -1,    -1,    -1,   156,   157,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,   167,   168,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,   263,    -1,   265,    -1,   267,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    -1,    39,    40,    41,    42,    43,    -1,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      -1,    86,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,   137,   138,   139,   140,   141,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,    -1,    -1,
      -1,   156,   157,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,   263,    -1,
     265,    -1,   267,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    33,    34,    -1,    36,    37,    -1,
      39,    40,    41,    42,    43,    -1,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    70,    71,    72,    73,    -1,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    -1,    86,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
     139,   140,   141,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,    -1,    -1,    -1,   156,   157,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,   263,    -1,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,    -1,   332,   333,   334,    -1,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,    -1,   393,    -1,   395,    -1,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    -1,    39,    40,    41,    42,
      43,    -1,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
      73,    -1,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    -1,    86,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
      -1,    -1,    -1,   156,   157,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
     263,    -1,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,    -1,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,    -1,    -1,   242,   243,   244,   245,    -1,
      -1,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,    -1,    -1,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
      -1,   368,    -1,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,    -1,
     477,   478,     3,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    -1,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,    -1,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,    -1,
      -1,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,    -1,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,    -1,    -1,    -1,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,    -1,   368,    -1,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,    -1,   477,   478,     3,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      -1,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,    -1,   143,    -1,
     145,   146,   147,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,    -1,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,    -1,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,    -1,   242,   243,   244,
     245,    -1,    -1,   248,   249,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,    -1,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
      -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,    -1,   477,   478,     3,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    14,    15,    16,    17,    18,
      19,    20,    21,    -1,    23,    24,    25,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    -1,    -1,    67,    -1,
      69,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
      99,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,   113,   114,   115,    -1,    -1,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,    -1,   143,    -1,   145,   146,   147,    -1,
      -1,   150,    -1,   152,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,    -1,   208,
      -1,   210,   211,   212,    -1,   214,   215,   216,    -1,    -1,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,    -1,   242,   243,   244,   245,    -1,    -1,   248,
     249,   250,   251,   252,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,   262,    -1,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,    -1,
      -1,   280,   281,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,    -1,   325,   326,   327,   328,
     329,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,    -1,   352,   353,    -1,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,    -1,   366,    -1,   368,
      -1,    -1,   371,   372,   373,   374,    -1,   376,   377,    -1,
      -1,   380,   381,   382,   383,   384,    -1,    -1,   387,   388,
     389,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,   400,    -1,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,   431,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,    -1,   477,   478,
       3,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,    14,    15,    16,    17,    18,    19,    20,    21,    -1,
      23,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    -1,    -1,    67,    -1,    69,    70,    71,    72,
      73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    95,    96,    97,    98,    99,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
     113,   114,   115,    -1,    -1,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,    -1,
     143,    -1,   145,   146,   147,    -1,    -1,   150,    -1,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,    -1,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,    -1,   210,   211,   212,
      -1,   214,   215,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,    -1,    -1,   242,
     243,   244,   245,    -1,    -1,   248,   249,   250,   251,   252,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,   262,
      -1,   264,   265,   266,    -1,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,    -1,    -1,   280,   281,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,    -1,   325,   326,   327,   328,   329,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,    -1,   352,
     353,    -1,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,    -1,   366,    -1,   368,    -1,    -1,   371,   372,
     373,   374,    -1,   376,   377,    -1,    -1,   380,   381,   382,
     383,   384,    -1,    -1,   387,   388,   389,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,   400,    -1,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,   431,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,    -1,   477,   478,     3,   480,   481,   482,
     483,   484,   485,   486,   487,   488,    -1,    14,    15,    16,
      17,    18,    19,    20,    21,    -1,    23,    24,    25,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    -1,    -1,
      67,    -1,    69,    70,    71,    72,    73,    74,    75,    76,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
      97,    98,    99,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,   113,   114,   115,    -1,
      -1,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,    -1,   143,    -1,   145,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,    -1,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
      -1,   208,    -1,   210,   211,   212,    -1,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,    -1,    -1,   242,   243,   244,   245,    -1,
      -1,   248,   249,   250,   251,   252,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,   262,    -1,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,    -1,    -1,   280,   281,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,    -1,   325,   326,
     327,   328,   329,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,    -1,   352,   353,    -1,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,    -1,   366,
      -1,   368,    -1,    -1,   371,   372,   373,   374,    -1,   376,
     377,    -1,    -1,   380,   381,   382,   383,   384,    -1,    -1,
     387,   388,   389,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,   400,    -1,    -1,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,   431,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,    -1,
     477,   478,     3,   480,   481,   482,   483,   484,   485,   486,
     487,   488,    -1,    14,    15,    16,    17,    18,    19,    20,
      21,    -1,    23,    24,    25,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    -1,    -1,    67,    -1,    69,    70,
      71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    95,    96,    97,    98,    99,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,   113,   114,   115,    -1,    -1,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
     131,    -1,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,    -1,   143,    -1,   145,   146,   147,    -1,    -1,   150,
      -1,   152,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,    -1,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,   182,   183,    -1,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,    -1,   208,    -1,   210,
     211,   212,    -1,   214,   215,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,    -1,
      -1,   242,   243,   244,   245,    -1,    -1,   248,   249,   250,
     251,   252,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,   262,    -1,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,    -1,   276,    -1,    -1,    -1,   280,
     281,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,    -1,   325,   326,   327,   328,   329,    -1,
     331,    -1,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,    -1,
      -1,   352,   353,    -1,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,    -1,   366,    -1,   368,    -1,    -1,
     371,   372,   373,   374,    -1,   376,   377,    -1,    -1,   380,
     381,   382,   383,   384,    -1,    -1,   387,   388,   389,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,   400,
      -1,    -1,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
     431,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,    -1,   477,   478,     3,   480,
     481,   482,   483,   484,   485,   486,   487,   488,    -1,    14,
      15,    16,    17,    18,    19,    20,    21,    -1,    23,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    36,    37,    38,    39,    40,    41,    -1,    -1,    44,
      -1,    -1,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      55,    56,    -1,    -1,    59,    -1,    61,    62,    63,    64,
      -1,    -1,    67,    -1,    69,    70,    71,    72,    73,    74,
      75,    76,    -1,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      95,    96,    97,    98,    99,   100,    -1,    -1,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,   113,   114,
     115,    -1,    -1,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,   131,    -1,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,    -1,   143,    -1,
     145,   146,    -1,    -1,    -1,   150,    -1,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,   182,   183,    -1,
     185,   186,   187,   188,    -1,    -1,    -1,    -1,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,    -1,
     205,   206,    -1,   208,    -1,   210,   211,   212,    -1,   214,
     215,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
      -1,   236,    -1,   238,   239,    -1,    -1,   242,   243,   244,
     245,    -1,    -1,   248,    -1,   250,   251,   252,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,   262,    -1,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
      -1,   276,    -1,    -1,    -1,   280,   281,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,    -1,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,    -1,
     325,   326,   327,   328,   329,    -1,   331,    -1,   333,   334,
     335,   336,    -1,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,    -1,   352,   353,    -1,
     355,   356,   357,   358,   359,   360,    -1,    -1,    -1,    -1,
      -1,   366,    -1,   368,    -1,    -1,   371,   372,   373,   374,
      -1,   376,   377,    -1,    -1,   380,   381,   382,   383,   384,
      -1,    -1,   387,   388,   389,   390,   391,    -1,    -1,    -1,
     395,   396,   397,   398,   399,   400,    -1,    -1,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,    -1,   477,   478,     3,   480,   481,   482,   483,   484,
     485,   486,   487,   488,    -1,    14,    15,    16,    17,    -1,
      19,    20,    21,    -1,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    -1,    -1,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    -1,    56,    -1,    -1,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    -1,    71,    72,    73,    -1,    -1,    76,    -1,    78,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    -1,    98,
      -1,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
     129,   130,    -1,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,    -1,    -1,    -1,    -1,   146,   147,    -1,
     149,   150,    -1,   152,   153,    -1,    -1,   156,    -1,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,    -1,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,    -1,   201,   202,   203,    -1,    -1,    -1,    -1,    -1,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,   224,   225,   226,   227,    -1,
     229,   230,    -1,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,    -1,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,    -1,    -1,    -1,    -1,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,   323,    -1,   325,    -1,   327,    -1,
     329,    -1,   331,   332,   333,   334,    -1,   336,   337,    -1,
      -1,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,    -1,   352,   353,    -1,    -1,    -1,   357,   358,
     359,    -1,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,    -1,   376,   377,    -1,
      -1,   380,   381,    -1,   383,   384,    -1,    -1,   387,   388,
      -1,   390,   391,   392,   393,    -1,    -1,   396,   397,   398,
      -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,
      -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,    -1,    -1,   434,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
     459,   460,   461,    -1,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,   473,   474,     3,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,    -1,    14,    15,    16,
      17,    -1,    19,    20,    21,    -1,    23,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    -1,    56,
      -1,    -1,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    -1,    71,    72,    73,    -1,    -1,    76,
      -1,    78,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      -1,    98,    -1,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,    -1,    -1,    -1,    -1,   146,
     147,    -1,   149,   150,    -1,   152,   153,    -1,    -1,   156,
      -1,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,    -1,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,    -1,   201,   202,   203,    -1,    -1,    -1,
      -1,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,   224,   225,   226,
     227,    -1,   229,   230,    -1,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,   271,    -1,    -1,   274,    -1,    -1,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,    -1,    -1,
      -1,    -1,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,   323,    -1,   325,    -1,
     327,    -1,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,    -1,    -1,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,    -1,   352,   353,    -1,    -1,    -1,
     357,   358,   359,    -1,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,    -1,   376,
     377,    -1,    -1,   380,   381,    -1,   383,   384,    -1,    -1,
     387,   388,    -1,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,    -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,    -1,    -1,   434,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,    -1,   463,   464,   465,   466,
     467,    -1,    -1,    -1,    -1,    -1,   473,   474,     3,    -1,
     477,   478,   479,   480,   481,   482,   483,   484,    -1,    14,
      15,    16,    17,    -1,    19,    20,    21,    -1,    23,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    34,
      -1,    -1,    -1,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    -1,    -1,
      -1,    56,    -1,    -1,    59,    -1,    61,    62,    63,    64,
      65,    -1,    -1,    -1,    69,    -1,    71,    72,    73,    -1,
      -1,    76,    -1,    78,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      95,    96,    -1,    98,    -1,   100,   101,   102,   103,    -1,
     105,    -1,   107,   108,   109,   110,   111,    -1,    -1,   114,
      -1,    -1,    -1,    -1,   119,   120,   121,   122,    -1,   124,
     125,   126,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
     135,   136,   137,   138,    -1,   140,   141,    -1,    -1,    -1,
      -1,   146,   147,    -1,   149,   150,    -1,   152,   153,    -1,
      -1,   156,    -1,   158,    -1,   160,   161,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,    -1,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,    -1,    -1,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,    -1,   194,
      -1,    -1,   197,    -1,   199,    -1,   201,   202,   203,    -1,
      -1,    -1,    -1,    -1,   209,    -1,   211,    -1,    -1,   214,
     215,   216,    -1,    -1,   219,   220,    -1,   222,    -1,   224,
     225,   226,   227,    -1,   229,   230,    -1,   232,   233,   234,
     235,    -1,   237,   238,   239,   240,    -1,   242,   243,    -1,
     245,    -1,   247,   248,   249,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,    -1,   277,    -1,   279,   280,   281,   282,    -1,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
      -1,    -1,    -1,    -1,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,    -1,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,    -1,   323,    -1,
     325,    -1,   327,    -1,   329,    -1,   331,   332,   333,   334,
      -1,   336,   337,    -1,    -1,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,    -1,   352,   353,    -1,
      -1,    -1,   357,   358,   359,    -1,    -1,   362,   363,    -1,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
      -1,   376,   377,    -1,    -1,   380,   381,    -1,   383,   384,
      -1,    -1,   387,   388,    -1,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   408,    -1,   410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,    -1,    -1,   434,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,    -1,   453,   454,
     455,    -1,   457,    -1,   459,   460,   461,    -1,   463,   464,
     465,   466,   467,    -1,    -1,    -1,    -1,    -1,   473,   474,
       3,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
      -1,    14,    15,    16,    17,    -1,    19,    20,    21,    -1,
      23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    34,    -1,    -1,    -1,    38,    39,    40,    41,    -1,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      -1,    -1,    -1,    56,    -1,    -1,    59,    -1,    61,    62,
      63,    64,    65,    -1,    -1,    -1,    69,    -1,    71,    72,
      73,    -1,    -1,    76,    -1,    78,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    95,    96,    -1,    98,    -1,   100,   101,   102,
     103,    -1,   105,    -1,   107,   108,   109,   110,   111,    -1,
      -1,   114,    -1,    -1,    -1,    -1,   119,   120,   121,   122,
      -1,   124,   125,   126,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,    -1,
      -1,    -1,    -1,   146,   147,    -1,   149,   150,    -1,   152,
     153,    -1,    -1,   156,    -1,   158,    -1,   160,   161,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,    -1,    -1,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
      -1,   194,    -1,    -1,   197,    -1,   199,    -1,   201,   202,
     203,    -1,    -1,    -1,    -1,    -1,   209,    -1,   211,    -1,
      -1,   214,   215,   216,    -1,    -1,   219,   220,    -1,   222,
      -1,   224,   225,   226,   227,    -1,   229,   230,    -1,   232,
     233,   234,   235,    -1,   237,   238,   239,   240,    -1,   242,
     243,    -1,   245,    -1,   247,   248,   249,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,    -1,   277,    -1,   279,   280,   281,   282,
      -1,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,    -1,    -1,    -1,    -1,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,    -1,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,    -1,
     323,    -1,   325,    -1,   327,    -1,   329,    -1,   331,   332,
     333,   334,    -1,   336,   337,    -1,    -1,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,    -1,   352,
     353,    -1,    -1,    -1,   357,   358,   359,    -1,    -1,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,    -1,   376,   377,    -1,    -1,   380,   381,    -1,
     383,   384,    -1,    -1,   387,   388,    -1,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,    -1,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,    -1,
      -1,   434,   435,   436,    -1,   438,   439,   440,    -1,   442,
     443,   444,   445,    -1,   447,    -1,   449,   450,   451,    -1,
     453,   454,   455,    -1,   457,    -1,   459,   460,   461,    -1,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
     473,   474,     3,    -1,   477,   478,   479,   480,   481,   482,
     483,   484,    -1,    14,    15,    16,    17,    -1,    19,    20,
      21,    -1,    23,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,    -1,    -1,    -1,    38,    39,    40,
      41,    -1,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    -1,    -1,    -1,    56,    -1,    -1,    59,    -1,
      61,    62,    63,    64,    65,    -1,    -1,    -1,    69,    -1,
      71,    72,    73,    -1,    -1,    76,    -1,    78,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    95,    96,    -1,    98,    -1,   100,
     101,   102,   103,    -1,   105,    -1,   107,   108,   109,   110,
     111,    -1,    -1,   114,    -1,    -1,    -1,    -1,   119,   120,
     121,   122,    -1,   124,   125,   126,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,   135,   136,   137,   138,    -1,   140,
     141,    -1,    -1,    -1,    -1,   146,   147,    -1,   149,   150,
      -1,   152,   153,    -1,    -1,   156,    -1,   158,    -1,   160,
     161,    -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
      -1,    -1,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,    -1,   194,    -1,    -1,   197,    -1,   199,    -1,
     201,   202,   203,    -1,    -1,    -1,    -1,    -1,   209,    -1,
     211,    -1,    -1,   214,   215,   216,    -1,    -1,   219,   220,
      -1,   222,    -1,   224,   225,   226,   227,    -1,   229,   230,
      -1,   232,   233,   234,   235,    -1,   237,   238,   239,   240,
      -1,   242,   243,    -1,   245,    -1,   247,   248,   249,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,    -1,   277,    -1,   279,   280,
     281,   282,    -1,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,    -1,    -1,    -1,    -1,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,    -1,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,    -1,   323,    -1,   325,    -1,   327,    -1,   329,    -1,
     331,   332,   333,   334,    -1,   336,   337,    -1,    -1,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
      -1,   352,   353,    -1,    -1,    -1,   357,   358,   359,    -1,
      -1,   362,   363,    -1,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,    -1,   376,   377,    -1,    -1,   380,
     381,    -1,   383,   384,    -1,    -1,   387,   388,    -1,   390,
     391,   392,   393,    -1,    -1,   396,   397,   398,    -1,   400,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,   410,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,    -1,    -1,   434,   435,   436,    -1,   438,   439,   440,
      -1,   442,   443,   444,   445,    -1,   447,    -1,   449,   450,
     451,    -1,   453,   454,   455,    -1,   457,    -1,   459,   460,
     461,    -1,   463,   464,   465,   466,   467,    -1,    -1,    -1,
      -1,    -1,   473,   474,     3,    -1,   477,   478,   479,   480,
     481,   482,   483,   484,    -1,    14,    15,    16,    17,    -1,
      19,    20,    21,    -1,    23,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    34,    -1,    -1,    -1,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    -1,    -1,    -1,    56,    -1,    -1,
      59,    -1,    61,    62,    63,    64,    65,    -1,    -1,    -1,
      69,    -1,    71,    72,    73,    -1,    -1,    76,    -1,    78,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    95,    96,    -1,    98,
      -1,   100,   101,   102,   103,    -1,   105,    -1,   107,   108,
     109,   110,   111,    -1,    -1,   114,    -1,    -1,    -1,    -1,
     119,   120,   121,   122,    -1,   124,   125,   126,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,    -1,    -1,    -1,    -1,   146,   147,    -1,
     149,   150,    -1,   152,   153,    -1,    -1,   156,    -1,   158,
      -1,   160,   161,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,    -1,    -1,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,    -1,   194,    -1,    -1,   197,    -1,
     199,    -1,   201,   202,   203,    -1,    -1,    -1,    -1,    -1,
     209,    -1,   211,    -1,    -1,   214,   215,   216,    -1,    -1,
     219,   220,    -1,   222,    -1,   224,   225,   226,   227,    -1,
     229,   230,    -1,   232,   233,   234,   235,    -1,   237,   238,
     239,   240,    -1,   242,   243,    -1,   245,    -1,   247,   248,
     249,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,    -1,   277,    -1,
     279,   280,   281,   282,    -1,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,    -1,    -1,    -1,    -1,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
      -1,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,   323,    -1,   325,    -1,   327,    -1,
     329,    -1,    -1,   332,   333,   334,    -1,   336,   337,    -1,
      -1,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,    -1,   352,   353,    -1,    -1,    -1,   357,   358,
     359,    -1,    -1,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,    -1,   376,   377,    -1,
      -1,   380,   381,    -1,   383,   384,    -1,    -1,   387,   388,
      -1,   390,   391,   392,   393,    -1,    -1,   396,   397,   398,
      -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,
      -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,    -1,    -1,   434,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,    -1,   453,   454,   455,    -1,   457,    -1,
     459,   460,   461,    -1,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,   473,   474,     3,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,    -1,    14,    15,    16,
      17,    -1,    19,    20,    21,    -1,    23,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    39,    40,    41,    -1,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    52,    -1,    -1,    -1,    56,
      -1,    -1,    59,    -1,    61,    62,    63,    64,    65,    -1,
      -1,    -1,    69,    -1,    71,    72,    73,    -1,    -1,    76,
      -1,    78,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    95,    96,
      -1,    98,    -1,   100,   101,   102,   103,    -1,   105,    -1,
     107,   108,   109,   110,   111,    -1,    -1,   114,    -1,    -1,
      -1,    -1,   119,   120,   121,   122,    -1,   124,   125,   126,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,    -1,    -1,    -1,    -1,   146,
     147,    -1,    -1,   150,    -1,   152,   153,    -1,    -1,   156,
      -1,   158,    -1,   160,   161,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,    -1,    -1,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,    -1,   194,    -1,    -1,
     197,    -1,   199,    -1,   201,   202,   203,    -1,    -1,    -1,
      -1,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
      -1,    -1,   219,   220,    -1,   222,    -1,   224,   225,   226,
     227,    -1,   229,   230,    -1,   232,   233,   234,   235,    -1,
     237,   238,   239,   240,    -1,   242,   243,    -1,   245,    -1,
     247,   248,   249,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,   271,    -1,    -1,   274,    -1,    -1,
     277,    -1,   279,   280,   281,   282,    -1,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,    -1,    -1,
      -1,    -1,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,    -1,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,    -1,   323,    -1,   325,    -1,
     327,    -1,   329,    -1,   331,   332,   333,   334,    -1,   336,
     337,    -1,    -1,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,    -1,   352,   353,    -1,    -1,    -1,
     357,   358,   359,    -1,    -1,   362,   363,    -1,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,    -1,   376,
     377,    -1,    -1,   380,   381,    -1,   383,   384,    -1,    -1,
     387,   388,    -1,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,    -1,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,    -1,    -1,   434,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,    -1,   453,   454,   455,    -1,
     457,    -1,   459,   460,   461,    -1,   463,   464,   465,   466,
     467,    -1,    -1,    -1,    -1,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,   482,   483,   484
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,    14,    24,    26,    27,    41,    61,    63,    64,    69,
      71,    82,    84,   100,   103,   115,   117,   121,   127,   136,
     138,   144,   159,   214,   215,   220,   232,   243,   281,   293,
     298,   299,   301,   306,   311,   314,   318,   323,   324,   331,
     334,   342,   354,   371,   381,   387,   392,   405,   462,   508,
     515,   516,   517,   518,   521,   522,   523,   524,   525,   528,
     543,   544,   546,   547,   548,   549,   550,   551,   552,   554,
     555,   559,   571,   576,   577,   580,   581,   582,   599,   602,
     603,   620,   697,   700,   726,   729,   730,   731,   738,   744,
     746,   748,   749,   752,   755,   756,   760,   761,   770,   774,
     775,   776,   777,   778,   780,   781,   782,   795,   796,   800,
     802,   803,   804,   815,   817,   824,   825,   828,   829,   830,
     831,   832,   837,   839,   842,   846,   850,   851,   861,   862,
     865,   870,   881,   903,   906,   907,   908,   911,   914,   916,
     918,   921,   922,   923,   926,   927,   928,   935,   936,   938,
     939,   940,   945,   947,   948,   952,   953,   956,   957,   958,
     959,   961,   962,   963,   964,   966,   969,   970,   976,   983,
     986,   988,   991,   996,   998,  1003,  1010,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,  1023,  1053,   366,   408,   941,    21,
      67,    81,    98,   104,   119,   131,   139,   140,   151,   156,
     162,   177,   202,   223,   257,   286,   313,   317,   319,   325,
     328,   353,   354,   356,   360,   368,   373,   385,   398,   466,
     473,   745,   941,     3,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    33,    34,    36,    37,
      39,    40,    41,    42,    43,    45,    46,    48,    49,    50,
      51,    52,    55,    56,    57,    58,    59,    61,    62,    63,
      64,    65,    69,    70,    71,    72,    73,    75,    76,    78,
      79,    80,    81,    82,    83,    86,    87,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   105,   107,   108,   109,
     110,   111,   113,   114,   115,   118,   119,   120,   121,   122,
     124,   125,   126,   128,   129,   130,   131,   134,   135,   136,
     137,   138,   139,   140,   141,   143,   145,   146,   147,   150,
     152,   156,   157,   158,   160,   161,   163,   165,   166,   167,
     168,   169,   171,   172,   173,   175,   176,   177,   178,   179,
     180,   182,   184,   185,   186,   187,   188,   189,   190,   192,
     194,   197,   199,   200,   201,   202,   203,   205,   206,   208,
     209,   211,   214,   215,   216,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   237,   238,   239,   240,   242,   243,   245,   247,
     248,   249,   250,   251,   252,   254,   257,   258,   259,   262,
     263,   265,   267,   268,   269,   270,   271,   273,   274,   276,
     277,   279,   280,   281,   282,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   310,
     311,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   325,   326,   327,   328,   329,   331,   332,   333,
     334,   336,   337,   338,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   352,   353,   355,   356,   357,
     358,   359,   360,   362,   363,   366,   367,   368,   369,   371,
     372,   373,   374,   376,   377,   380,   381,   382,   383,   384,
     387,   388,   389,   390,   391,   392,   393,   395,   397,   398,
     399,   400,   403,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   431,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,  1011,  1180,  1194,  1198,  1203,   396,   971,
     255,   282,   941,    44,   611,  1016,    33,    54,    67,    77,
      98,   104,   119,   131,   139,   151,   158,   162,   216,   257,
     260,   313,   319,   328,   356,   357,   359,   360,   368,   373,
     379,   382,   385,   458,   469,   473,   487,   621,   701,   728,
     805,   820,   871,   882,    22,   281,  1180,  1011,    22,   276,
     326,   357,   359,     5,   201,   912,   913,  1189,    21,    33,
      54,    67,    81,    98,   119,   131,   139,   140,   151,   156,
     162,   177,   223,   257,   268,   313,   317,   319,   325,   328,
     354,   356,   360,   368,   373,   385,   398,   466,   473,   745,
     833,   941,  1180,    84,   396,   508,   620,   697,   726,   729,
     970,   977,   986,   991,   996,  1003,  1010,  1014,     9,    15,
      22,    39,   146,   152,   154,   174,   203,   238,   284,   300,
     497,   498,   847,   848,  1011,  1188,  1193,    22,    84,   297,
     324,   852,   853,   854,  1194,  1194,  1185,  1189,   354,  1026,
     847,  1194,   366,  1180,   268,   223,    98,   177,   353,   354,
     919,   318,  1194,    22,   329,   362,   366,   563,   572,   573,
    1194,    19,   159,   852,   853,   282,   941,  1194,   200,    22,
     116,  1028,    55,    78,   216,   234,   313,   319,   329,   362,
     366,   411,   560,   561,   562,   563,    22,   329,   362,   366,
     563,   366,   256,  1064,  1178,  1194,  1026,   499,  1194,   155,
     508,   973,   508,  1173,   295,  1021,  1022,  1180,    22,  1193,
    1016,  1017,  1020,     0,   511,   971,   132,   191,   261,   378,
    1029,  1030,  1016,  1018,  1019,   109,   187,   384,   512,     3,
      38,    44,    67,    74,    85,    91,   153,   155,   170,   183,
     195,   196,   198,   210,   212,   236,   244,   264,   266,   312,
     335,   396,  1186,  1194,  1195,  1198,  1204,   835,  1194,   835,
    1181,  1194,   285,   835,   368,   835,  1180,  1194,   354,    97,
     354,   860,  1186,     3,  1190,  1196,  1198,  1203,  1204,    22,
     169,  1178,   250,   398,     8,    62,   143,   493,   494,   495,
     497,   498,   499,   500,   501,   502,   910,  1134,  1135,  1194,
      22,  1190,  1180,  1180,   169,  1178,  1180,   306,   331,    22,
     169,  1064,  1180,   321,  1180,   835,    22,   221,  1190,   169,
    1178,   835,  1180,   162,   467,   201,   106,   197,   241,   291,
     942,   943,   944,  1178,  1184,  1194,    21,    54,    67,    68,
      77,    81,    98,   119,   131,   139,   151,   156,   177,   202,
     223,   257,   313,   317,   319,   325,   328,   354,   356,   360,
     368,   373,   398,   473,   745,   840,  1189,  1178,   364,  1180,
     508,   835,   368,  1181,   835,   368,   169,  1180,    97,   354,
     357,   359,  1190,   357,   359,    62,   143,   910,   304,  1190,
     169,   556,  1194,  1180,  1180,   321,  1180,   835,   221,  1190,
     162,   467,   295,   325,   354,   398,   140,   223,    21,    81,
     177,   156,   317,   372,   739,    22,  1180,  1012,   570,  1189,
    1196,   913,   169,  1186,  1180,   169,   917,   169,  1181,   368,
     354,   486,    97,   354,   169,  1186,   169,  1190,  1192,    74,
     398,    62,   143,   169,   910,    48,   169,  1192,   169,  1180,
     169,  1180,   169,  1180,   321,   169,  1180,   169,   221,  1192,
     162,   467,   201,   169,   834,   835,   508,   987,   621,   433,
     978,   392,   970,   979,   980,   981,  1196,   971,  1193,   848,
     849,    22,   849,  1193,   849,    22,   849,  1193,   849,   849,
     849,  1193,  1188,  1188,  1011,   849,   285,   508,   508,   642,
     642,   642,   255,   364,   512,   642,  1064,  1065,   512,   937,
    1189,   508,   984,    48,   398,  1180,  1180,  1178,  1194,    38,
     423,   197,   510,   258,   258,   255,   154,  1189,   364,   149,
     843,   255,     4,     6,     7,     8,    10,    30,    43,    45,
      46,    53,    54,    57,    58,    65,    67,    88,    89,    90,
      91,    92,    93,    94,   101,   102,   120,   137,   141,   142,
     147,   161,   189,   190,   192,   209,   217,   218,   235,   237,
     241,   246,   247,   249,   257,   267,   277,   292,   315,   330,
     337,   350,   354,   362,   363,   367,   369,   370,   379,   385,
     393,   413,   414,   415,   416,   417,   418,   419,   420,   430,
     442,   443,   452,   497,   498,   499,   508,  1016,  1081,  1084,
    1087,  1088,  1089,  1091,  1092,  1093,  1094,  1097,  1098,  1102,
    1104,  1107,  1108,  1110,  1132,  1136,  1156,  1162,  1166,  1174,
    1175,  1176,  1186,  1187,  1188,  1189,  1194,  1189,    22,   578,
    1177,  1178,   329,   560,   104,   569,  1189,   570,  1189,    38,
      59,   560,   423,   338,   943,   258,   154,   364,   493,    38,
     423,   197,   944,   508,  1178,   499,   504,   510,  1167,  1168,
    1065,   153,   155,   396,   488,   967,   968,   970,   153,   974,
     104,  1102,  1171,  1172,  1021,   512,   508,   975,   154,   154,
     509,   509,   517,   441,   475,   972,  1178,    22,   116,  1027,
    1027,    48,  1027,   144,   149,   213,   253,  1033,  1035,  1036,
    1047,  1049,  1050,  1051,  1029,  1030,   154,   193,  1064,  1066,
    1173,   508,   894,  1168,   269,   302,   331,   510,   836,   269,
     302,   331,   269,   302,   331,   405,   529,   571,   574,   866,
      18,   121,   269,   302,   331,   389,   585,  1180,   331,    18,
     121,   384,   553,  1064,   409,   169,  1064,    50,    83,   136,
     140,   172,   208,   239,   241,   269,   302,   310,   316,   323,
     331,   340,   348,   400,   425,   454,   470,   571,   575,   897,
     904,   508,   883,   302,   553,   174,   137,    18,    24,    64,
     114,   121,   124,   179,   239,   241,   251,   259,   269,   302,
     305,   306,   331,   371,   389,   436,   437,   480,   583,   584,
     598,   764,     4,   497,   498,   736,  1193,    22,   169,  1178,
     835,   835,   508,   909,   510,   174,   545,   302,   529,   545,
     255,   269,   302,   137,    49,    96,   176,   224,   229,   239,
     268,   302,   307,   331,   342,   583,   733,   734,   269,   302,
     397,   764,   772,   573,   561,   563,   174,   137,   302,   331,
     583,   269,   302,   306,   331,    75,   113,   270,   358,   255,
      18,    24,   121,   269,   302,   331,   600,   601,   545,   149,
     302,   529,   545,   137,   302,   331,   583,   302,   269,  1180,
    1191,  1196,  1180,   211,   106,   256,   410,   512,   942,   386,
     965,   255,  1186,   508,  1180,   368,    97,   354,  1186,   250,
     398,    62,   143,   910,  1180,   321,  1180,   162,   467,   201,
     835,   642,   288,   605,    60,     3,    43,    45,    46,    57,
      58,   101,   102,   147,   189,   190,   192,   235,   237,   249,
     292,   332,   337,   362,   363,   393,  1077,  1080,  1082,  1084,
    1086,  1088,  1089,  1090,  1092,  1093,  1097,  1098,  1195,  1198,
     154,   508,   806,  1180,   529,    31,   960,  1180,   241,   529,
     409,   169,  1178,   529,   835,   835,   806,   382,   621,   529,
     241,    38,   557,   373,   771,   269,   747,    75,   113,   270,
     358,    20,    40,   188,   783,    31,   806,   149,   529,  1180,
    1191,   398,  1178,   169,   698,  1178,  1178,   486,   702,   398,
    1186,   835,    74,   872,  1186,  1180,   466,   745,    44,    95,
     186,   239,   320,   461,   137,   894,    51,   308,   586,   137,
     508,   137,   354,   409,   137,   883,   137,   512,   169,   834,
     169,   835,   169,   835,   137,   909,  1192,   137,   137,   255,
     137,   586,   137,    75,   113,   270,   358,   137,   255,   137,
     149,   169,  1180,  1191,   169,   570,   137,   512,   586,  1102,
    1139,   977,   509,   512,   142,   255,   370,   567,   570,   736,
     982,   978,   849,  1011,   849,  1011,   849,  1011,   849,  1011,
     849,  1011,  1011,  1011,   849,  1011,   508,   643,   644,  1194,
     643,    22,    98,   119,   151,   156,   201,   202,   319,   325,
     354,   356,   373,   466,   855,  1177,  1192,   854,   174,   512,
     999,  1189,  1077,  1142,    31,  1192,   872,   150,   920,   920,
     920,   211,  1194,   149,   149,   855,  1192,   318,  1194,   570,
     255,   508,  1169,   504,  1016,  1144,   395,  1095,  1102,  1161,
     508,  1095,  1095,   508,   149,   508,   508,   508,  1083,  1083,
     279,  1016,   508,   508,  1085,   508,   508,   508,   508,    57,
      58,  1095,  1102,   508,  1083,   508,   508,   508,   508,   508,
     508,   407,   492,   508,  1099,   508,  1099,   508,   508,  1016,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,  1102,  1102,   354,  1016,  1102,  1139,  1168,  1189,
      58,   508,  1096,   508,  1189,     3,     8,    11,    14,    15,
      16,    17,    18,    19,    20,    21,    23,    24,    28,    31,
      33,    34,    36,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    48,    49,    50,    51,    52,    56,    59,    61,
      62,    63,    64,    65,    66,    69,    71,    72,    73,    76,
      78,    79,    81,    82,    83,    86,    95,    96,    98,   100,
     101,   102,   103,   105,   107,   108,   109,   110,   111,   114,
     119,   120,   121,   122,   124,   125,   126,   128,   129,   130,
     134,   135,   136,   137,   138,   140,   141,   146,   147,   150,
     152,   153,   156,   158,   160,   161,   163,   165,   166,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   184,   185,   186,   187,   188,   189,   190,   192,   194,
     195,   196,   197,   199,   201,   202,   203,   209,   211,   212,
     214,   215,   216,   219,   220,   222,   224,   225,   226,   227,
     229,   230,   232,   233,   234,   235,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   247,   248,   249,   250,   251,
     254,   257,   258,   259,   260,   263,   264,   267,   268,   269,
     271,   274,   277,   279,   280,   281,   282,   284,   285,   286,
     287,   289,   290,   291,   292,   293,   294,   299,   300,   301,
     302,   303,   304,   306,   307,   308,   310,   311,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   323,   325,   327,
     329,   331,   332,   333,   334,   335,   336,   337,   340,   342,
     343,   344,   345,   346,   347,   348,   350,   352,   353,   356,
     357,   358,   359,   362,   363,   366,   367,   368,   369,   371,
     372,   373,   376,   377,   380,   381,   383,   384,   387,   388,
     390,   391,   392,   393,   396,   397,   398,   400,   408,   410,
     423,   424,   425,   426,   427,   428,   429,   434,   435,   436,
     438,   439,   440,   442,   443,   444,   445,   447,   449,   450,
     451,   453,   454,   455,   457,   459,   460,   461,   463,   464,
     465,   466,   467,   473,   474,   477,   478,   479,   480,   481,
     482,   483,   484,   493,   494,   495,   497,   498,   499,   500,
     501,   502,  1134,  1136,  1138,  1199,  1200,  1202,   406,  1119,
     266,  1102,   193,  1024,   512,   508,  1189,  1168,   107,   171,
     579,   512,    59,   104,   570,    31,     3,   104,   216,   568,
     736,  1098,  1189,  1189,    79,   118,  1116,    87,   104,   564,
     565,   567,   736,   104,   564,   211,  1178,  1102,     3,    22,
      26,    27,    28,    29,    30,    31,    32,    35,    47,    53,
      54,    60,    66,    68,    77,    84,    88,    89,    90,    92,
      93,    94,   104,   106,   112,   116,   117,   123,   127,   132,
     133,   142,   144,   148,   149,   151,   154,   159,   162,   164,
     174,   181,   191,   193,   204,   207,   213,   217,   218,   241,
     246,   253,   255,   256,   260,   261,   272,   275,   278,   283,
     297,   309,   324,   330,   339,   351,   354,   361,   364,   365,
     370,   375,   378,   379,   385,   386,   394,   401,   402,   404,
     405,   430,   432,   476,   499,  1183,  1197,  1198,  1203,  1204,
    1205,  1167,    80,   307,   838,   509,   512,   971,    36,   257,
     509,   512,  1022,  1179,  1180,    31,   128,   128,  1178,    22,
    1178,   975,  1018,  1018,  1031,  1032,  1102,  1018,   146,   238,
    1042,   199,   239,   291,   333,   384,    22,  1037,  1102,   497,
     498,  1038,  1039,  1102,  1104,  1047,  1048,  1036,  1035,  1033,
    1034,   149,  1050,   251,  1052,  1033,  1047,  1066,  1066,    31,
    1194,   331,   174,   184,   261,   263,   332,   394,   499,   887,
     888,   889,   891,   893,   895,  1077,  1195,   269,   302,   331,
     364,   364,   319,  1183,   510,   364,   364,   319,   364,   364,
     356,   560,   954,   149,   159,   174,   311,   867,   868,    60,
      77,   133,   151,   283,   379,   639,   640,    77,   104,   241,
     364,    77,   364,   104,   241,   319,    77,   114,   124,   269,
     302,   801,   319,   753,    21,    54,    67,    81,   119,   131,
     151,   156,   223,   257,   319,   325,   328,   354,   360,   373,
     398,   745,   302,   583,  1180,   137,   302,   331,   583,   255,
     736,   255,   323,   481,   208,   364,   364,   246,   736,   108,
     194,   319,   329,   366,   562,   481,   481,   481,   308,   331,
     897,   905,   509,   884,   887,   364,   385,   356,  1178,    68,
     104,   272,   629,   639,  1194,    68,    77,   104,   272,   597,
     924,   255,   317,   368,    77,   104,   272,   597,   924,    25,
     305,   317,   368,  1178,   179,   251,   835,   508,   364,   364,
     597,   168,   508,   590,   356,   405,   407,   432,   482,   590,
     662,   597,    77,   597,   272,   354,   104,   597,   512,     4,
       4,   269,   174,   137,   302,   331,   583,   386,   386,   240,
    1077,   269,   331,   910,    98,   331,   574,   364,   531,   574,
    1178,   364,   364,  1178,   736,    48,   735,   736,   736,    96,
     224,   229,    48,   364,   529,   319,   529,   239,   734,   364,
     364,   246,  1189,   764,   356,  1064,    77,   364,   924,   319,
     364,   364,   590,   590,   835,   835,   835,   835,  1178,    37,
     391,    37,    37,   364,    37,   364,   104,   319,   512,   574,
      94,   385,   779,  1190,   364,   531,   574,  1178,   364,   319,
     364,   364,   331,   519,   269,   302,   291,   303,   327,   566,
     942,  1184,  1194,  1178,   894,  1077,   255,   409,   883,   736,
     835,   835,   909,   195,   255,    75,   113,   270,   358,   255,
     835,   195,   405,   612,   345,   346,   607,  1189,   508,  1080,
      31,    30,  1079,    99,   167,   228,   231,   322,   421,   508,
    1100,  1101,   836,  1083,   835,   807,   808,  1197,    20,   949,
    1077,   255,   137,   750,  1180,   241,   508,   530,   820,   386,
     295,   398,   530,   137,  1190,    84,   159,   558,   620,   730,
     782,   850,   870,   945,  1189,   772,   773,  1180,   219,   835,
     835,   835,   835,   251,   109,   187,   371,   384,   784,   785,
     129,   290,   508,   779,   530,   405,   519,  1178,   732,   733,
     241,    31,   251,   508,   642,   642,   621,   727,  1178,   508,
     810,   894,   149,   873,  1184,   508,   885,    31,  1180,   201,
     405,   407,  1013,   320,   462,  1186,   586,  1077,  1181,   169,
    1180,  1186,   586,  1192,  1190,   137,   586,   137,   386,   137,
     386,   910,   586,   586,  1192,  1180,   835,  1180,  1180,  1180,
     835,  1192,   779,   137,   137,   586,   834,   835,   509,   512,
     977,   980,   977,  1011,  1011,  1011,  1011,  1011,  1011,   643,
     509,   512,   509,   157,   326,   355,  1179,   834,    97,   328,
     859,   860,  1179,   250,  1179,  1177,  1177,  1179,   834,  1179,
     364,   405,   863,    16,   135,   315,   333,  1000,  1064,   245,
    1001,   509,   512,   985,   991,   996,  1003,  1014,   364,  1178,
     853,   852,   853,   154,   160,   864,  1194,    21,    68,    98,
     119,   131,   151,   156,   202,   223,   313,   319,   325,   354,
     356,   373,   398,   745,   844,  1139,  1167,   505,  1139,  1144,
    1145,   508,   401,  1157,  1158,  1102,  1139,   508,  1188,  1188,
    1139,     3,    99,   167,   228,   231,   322,   421,  1146,  1147,
    1189,  1188,  1139,  1139,  1188,  1188,  1095,  1095,  1102,   910,
    1102,  1148,   497,   498,  1103,  1104,  1132,  1136,  1150,   509,
    1139,  1102,  1139,  1151,  1014,  1106,   362,   423,  1188,  1188,
    1102,    47,   154,   207,   365,  1102,  1139,  1154,  1139,   233,
    1102,  1104,  1102,  1114,  1115,  1116,   233,  1102,  1116,  1102,
     509,  1139,  1102,   509,   512,   331,  1188,  1188,  1100,  1077,
    1102,  1197,   362,    35,   351,  1170,   835,  1102,   508,  1016,
    1155,   116,   118,   142,   241,   246,   251,   370,   380,  1102,
      42,   170,   174,   212,   335,   508,  1102,   364,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,    22,    29,
     339,  1133,   162,   145,  1120,   315,   508,  1132,   158,   216,
     354,   357,   359,   382,  1025,  1178,   154,  1054,  1176,    22,
     116,   394,   499,   509,   889,  1102,  1140,  1141,  1195,  1178,
     366,   508,  1189,   512,   509,   505,   513,   168,   168,   586,
    1178,   968,   969,  1178,  1171,   509,   512,   508,  1180,  1180,
     975,   975,   512,    32,   112,   386,   879,   315,   316,   497,
     498,  1039,  1041,  1104,   333,   199,   256,   512,     4,  1040,
    1188,  1040,   315,   316,  1041,  1177,  1001,  1048,  1034,   386,
     997,   104,   508,   992,  1014,  1194,   508,  1004,  1005,  1006,
    1007,  1008,  1194,   263,    48,  1195,   509,   889,   891,   888,
     891,  1195,   261,   509,   512,   836,   364,   364,   319,  1190,
    1180,  1180,  1183,  1190,  1180,  1180,  1190,  1181,  1180,    76,
     955,   313,   385,   852,   319,   159,   852,   508,  1180,   386,
     874,   199,   199,   386,   508,   660,   169,  1180,   246,  1190,
    1180,  1180,  1102,   246,  1180,  1180,    25,   305,   364,   364,
    1180,   364,   754,  1186,   508,   835,   835,   835,   368,    97,
     354,   860,   398,    62,   143,   910,  1180,   835,  1180,   835,
     321,   835,   835,   201,   163,   239,   269,   302,   390,   757,
     758,   759,  1064,   364,   924,   319,   246,    22,    29,   448,
     451,   108,   194,  1190,  1180,   255,  1180,    97,    97,   509,
     512,  1190,  1192,  1180,   302,   583,   629,   272,     3,   127,
     149,   257,   342,   392,   596,   675,   676,   679,   680,   683,
    1201,  1202,  1077,  1078,  1180,   272,   596,   584,  1194,  1180,
    1180,    22,   385,  1180,   169,  1180,   272,   169,   586,   169,
    1194,   317,   368,   317,   368,  1180,    22,   385,  1180,  1178,
      18,   121,   331,   765,   766,   767,   768,  1197,  1190,  1180,
     364,   104,   155,   242,   386,   589,   592,   593,  1197,  1180,
     254,   806,    64,   254,    48,   216,   468,   472,   358,   586,
    1180,   405,   281,   272,    36,   584,   364,   356,  1178,   364,
     924,   319,  1182,  1194,  1182,   512,   509,   512,   364,   319,
    1181,  1190,     3,    76,   121,   126,   179,   274,   377,   385,
     388,   428,   431,   456,   473,   532,   533,   535,   302,  1190,
    1180,   302,   331,   583,   733,   736,   835,  1180,   736,  1180,
     736,  1190,  1180,  1180,   302,   331,   583,  1180,  1180,  1180,
    1180,  1190,  1180,    18,    24,   121,   269,   302,   331,   269,
     302,   331,   806,   302,   331,   302,   331,   302,  1076,  1194,
     169,   816,  1194,   169,  1194,  1190,  1180,  1180,   125,  1180,
      18,   601,   328,  1190,   302,   331,   583,  1180,  1180,  1180,
    1190,    73,   225,   226,   227,   426,   427,   526,   527,    83,
     405,   407,   424,   446,   457,   460,   520,   364,   364,    72,
     376,   291,   195,    31,   835,   195,   195,   386,   386,   195,
     246,   841,  1189,   835,   835,   195,   841,   254,   154,   364,
     604,   529,  1102,    30,  1079,  1077,   504,   504,   364,   364,
     364,   508,   364,  1188,  1083,   509,   512,   493,   784,    76,
     125,   205,   206,   219,   269,   356,   358,   950,   631,  1197,
    1180,   154,   319,   397,   751,   758,   759,   137,    68,   104,
     212,   622,   624,   626,   628,   629,   636,   639,    19,   174,
     313,   352,   533,   534,   149,  1182,   398,  1178,   556,  1194,
     557,   260,   621,   151,  1189,   806,   806,   806,   806,   251,
     255,   260,   508,   806,  1074,  1075,  1076,   328,   806,   405,
     508,   137,   136,  1014,   835,   622,  1194,   405,   407,   656,
     405,   591,   354,    31,   642,     3,   811,   812,   806,  1189,
     255,   509,   886,   887,   892,    31,   201,   310,   404,   896,
     897,   898,   255,   806,   570,   166,   166,   149,   894,    31,
     137,   586,   883,   834,   835,  1182,   835,  1182,   909,   255,
     586,   586,   255,   586,   328,   149,   570,   586,  1102,   509,
     644,   174,   174,   174,   409,  1179,   512,   736,   737,   162,
     856,   857,  1190,    19,   864,   135,   333,   135,   333,   315,
     384,   230,   451,  1002,  1077,  1180,   405,   699,   154,   255,
     856,    48,   586,  1186,   368,   354,  1186,   250,   398,   201,
     835,   509,   505,   505,   512,  1139,   195,  1102,  1159,   123,
    1158,  1160,    31,   509,  1102,   509,   509,   509,   509,   154,
     509,   509,   509,   509,   509,   512,   509,   275,  1149,   509,
    1103,  1103,    11,   174,   195,   257,   493,   494,   495,   497,
     498,   499,   500,   501,   502,  1136,  1103,   509,   509,   149,
     154,  1152,  1153,   509,   476,  1105,   509,   423,   509,   509,
      31,  1154,  1139,  1154,  1154,   154,   509,   509,  1197,   512,
     273,  1118,    31,   509,   512,  1102,  1197,   512,  1102,   512,
    1163,  1164,   509,   509,  1169,  1102,  1194,   509,   509,   423,
    1103,  1103,   130,  1139,   154,   116,   118,   142,   246,   251,
     370,   380,   508,   130,   351,  1170,  1102,  1155,  1102,   364,
     910,  1102,   508,  1016,   508,   508,   265,  1124,   357,   359,
     357,   359,  1178,  1026,  1026,  1026,   204,   316,   430,   508,
    1016,  1055,  1056,  1057,  1064,  1067,  1107,  1109,  1110,  1186,
    1194,   402,  1072,  1140,  1140,  1141,   509,    13,   512,  1029,
    1030,   943,  1188,  1100,   565,  1102,   975,  1180,   985,  1032,
     257,  1134,  1137,   489,   490,   880,     4,  1188,  1041,   256,
     384,  1038,  1055,   402,  1073,   392,   993,   994,  1194,   309,
     995,  1008,  1009,   512,  1054,   493,  1169,   895,   836,   891,
     891,    48,   893,   501,  1190,  1180,  1180,   213,  1192,  1192,
     255,  1179,   258,   255,  1102,   640,  1182,   508,   508,   508,
     660,   177,   643,   793,   137,   586,   364,  1190,  1180,   570,
     894,  1077,  1180,   409,   835,   835,   835,   835,   909,    75,
     113,   270,   358,  1180,   740,  1180,   163,   390,   364,   364,
     740,   757,   764,   302,   331,   583,  1180,  1180,  1180,   185,
     478,   246,   887,   268,   331,   364,   596,   508,   508,   508,
     508,   342,   392,   680,   676,   678,   435,   677,   356,   405,
     666,   506,   259,   762,   793,   596,   121,   306,   331,   585,
     764,   925,   137,   586,   169,   137,   137,   586,  1180,  1180,
    1180,  1180,   767,   768,   767,   509,   512,   769,  1189,     3,
     177,   509,   512,   493,   510,   662,   508,   478,   661,   508,
     354,   675,   508,  1190,  1180,   302,   331,   583,  1180,  1180,
    1180,   269,   302,   331,    18,   121,   269,   302,   331,  1077,
     240,  1077,  1190,  1180,   213,   431,   274,   246,  1189,   274,
    1192,   383,   508,   540,    42,    99,   536,   538,   540,   162,
     467,   364,   364,   319,   268,   331,   364,   924,   319,   364,
     364,   221,   221,   221,   364,   364,   319,   364,   364,   319,
     364,   319,   364,   319,   364,   586,  1077,   241,  1189,   331,
     925,   137,   586,   364,   806,  1180,   364,   319,  1193,  1193,
    1193,  1193,  1189,  1193,   483,   806,   806,   483,   483,  1190,
    1180,   841,  1077,   195,   841,   841,  1182,  1182,   841,   195,
     195,   841,   605,   508,   608,   609,   509,   504,   509,  1188,
     505,  1188,   167,   228,  1101,   228,  1101,  1101,  1188,   231,
     509,   808,   240,   257,   315,   497,   498,   736,   809,   891,
    1137,  1189,  1205,   255,   213,   493,   951,   951,   951,   951,
     951,   951,   951,    60,    66,    77,   104,   106,   181,   241,
     246,   283,   297,   379,   632,   634,   635,   136,   401,   529,
     570,  1180,   570,   762,  1178,  1194,    68,  1178,   509,   512,
    1192,   162,   313,  1192,  1188,   373,  1178,   642,    38,   557,
     304,   354,    97,   591,   643,  1178,   785,   813,   814,  1189,
     509,   512,  1180,   806,   643,  1178,  1180,   699,   508,   623,
     509,   254,   590,   254,   255,   657,   590,    31,  1178,  1014,
     591,   493,   509,   512,   364,  1178,   509,   512,   104,   493,
     899,  1189,   570,   354,   890,   891,   405,   898,   900,   109,
     187,   324,   384,   933,   163,  1014,   586,  1077,  1180,   586,
     586,   386,   586,   386,   586,   586,   835,   835,  1180,   779,
     586,   319,   319,   319,  1179,   860,   512,  1190,   405,   512,
     858,   258,   135,   135,   256,    97,   239,  1192,   855,   586,
    1190,   894,   883,   736,   835,   195,  1144,   509,   241,   361,
    1102,   127,  1077,   509,  1102,  1102,  1102,  1152,  1077,  1103,
     116,   118,   241,   251,  1103,  1103,  1103,  1103,  1103,  1103,
    1103,  1103,  1103,  1103,  1102,  1102,  1153,  1152,    48,   468,
    1099,  1099,  1077,   509,   509,   509,  1139,   509,   512,  1102,
      48,  1104,   509,  1197,  1115,   280,   349,  1117,   509,   512,
     397,  1111,    31,  1102,   512,  1164,  1165,   509,  1096,  1189,
    1102,    28,    28,  1102,   509,  1102,   154,   508,  1142,  1102,
    1103,  1103,   130,   130,  1102,   509,   130,  1102,  1030,   402,
     508,  1125,  1194,  1026,  1026,  1026,  1026,  1178,  1178,  1178,
    1016,  1067,   154,   508,  1016,  1056,  1057,    31,  1058,  1059,
    1194,   512,    85,   155,   183,   198,   210,   236,   312,  1061,
    1059,    31,  1058,  1060,  1194,   491,  1071,   508,  1168,  1102,
     162,  1043,   512,  1029,  1029,  1029,  1102,   394,  1141,   509,
     509,   505,   509,   508,   880,   256,    87,  1102,   995,   509,
     512,  1169,  1175,   509,   512,  1005,  1073,  1171,   509,   501,
     895,   373,   951,   157,   326,   355,   374,   869,   149,   869,
     509,   508,   648,   649,   876,  1109,  1194,   643,   643,   793,
    1184,   509,   106,   181,   239,   241,   794,  1180,  1180,    31,
    1180,   386,   386,   835,   835,   835,   835,   836,  1190,  1180,
     364,   924,   319,   364,   185,    48,   356,  1180,   680,    54,
     498,   508,   671,   672,   673,  1186,  1187,   673,  1186,   673,
     508,   671,   681,   682,   666,   677,   508,  1180,   806,   508,
     668,  1078,  1143,   508,   631,   241,   590,    97,   241,   344,
     347,   590,   373,  1180,   137,   596,  1194,   766,  1180,   593,
     809,  1197,   645,   646,  1194,     9,   104,   482,   509,   628,
     670,   679,   686,   689,   690,  1178,   676,   392,   673,   683,
     684,   268,   331,   364,   924,   319,   364,   364,   364,   319,
     156,   257,   347,   818,   819,   156,   257,   826,   827,   364,
     364,   319,   509,   509,   509,  1193,   149,  1189,  1189,  1189,
     541,   542,  1197,   538,   537,  1188,  1189,   835,   835,  1180,
    1180,  1180,    48,   356,  1180,  1180,  1180,  1180,  1180,   149,
     149,   304,   149,   169,  1190,  1180,  1180,  1190,  1180,  1180,
    1180,  1180,  1180,  1180,  1180,    66,   587,   137,    20,    40,
     373,  1194,  1180,   764,  1180,  1180,   736,   407,   736,   736,
     509,   841,   195,   195,   841,   841,   607,   615,   616,  1197,
      44,    86,   110,   125,   130,   150,   153,   165,   246,   254,
     255,   289,   439,   455,   610,   793,  1188,   405,   407,   505,
     505,   509,  1100,  1178,   951,   104,  1188,  1189,   104,  1189,
     104,  1189,   104,  1189,   104,  1180,   104,  1180,   104,  1180,
     508,   835,  1180,  1103,   107,   171,   106,   246,   199,  1178,
     900,   287,   797,   798,  1194,   750,   508,   125,   125,   637,
     328,   626,  1192,  1192,  1077,   508,   591,  1190,  1178,   409,
     149,   786,   509,   512,  1076,   762,   509,   251,   508,   987,
     662,   663,   625,   627,   630,   639,  1194,   656,   180,   655,
      71,   356,   658,  1014,   508,   699,   658,   809,     3,   812,
    1189,   874,   892,  1102,  1102,   512,   508,   896,   806,   364,
     740,   509,   586,  1182,  1182,   586,   586,   328,  1179,  1179,
    1179,   736,   159,   857,    97,   864,   154,   195,   195,   195,
     195,   246,   845,  1189,   116,  1102,   509,   509,  1153,   154,
     116,   118,   251,   508,  1139,   509,   412,  1113,  1139,   509,
     296,    48,   403,   403,   509,  1102,   239,  1102,   512,  1112,
    1080,   509,   512,  1102,   509,  1100,  1103,  1103,  1102,  1142,
     509,    28,    28,  1102,  1102,   130,  1102,   509,   509,  1102,
    1126,  1194,  1178,  1178,  1178,  1178,  1059,  1060,   508,  1102,
     509,  1194,   508,  1056,   198,   264,  1062,  1056,  1062,   198,
    1061,  1062,   198,   508,  1194,   508,  1140,    48,   164,  1046,
     509,   509,   509,  1141,  1189,  1189,   910,   251,  1014,   994,
     493,  1008,   995,   373,   509,  1193,   364,   852,   154,   793,
    1102,   509,   512,   405,    66,   877,   877,   509,   509,   900,
     107,   171,   179,   106,   388,   586,  1077,  1182,  1182,  1180,
    1180,  1180,  1180,  1192,  1180,   666,   508,   671,   671,    11,
     509,   512,   508,   509,   508,   509,   682,   509,   512,   509,
     512,   668,   673,   356,   670,   507,   512,   763,   767,   125,
     633,   246,   246,  1193,  1194,  1077,   586,   586,   586,   586,
     493,   509,   512,   386,   835,   878,   482,  1201,   509,   512,
     666,   680,   680,   405,   407,   595,   193,   594,   509,    48,
     356,  1180,  1180,  1180,  1180,  1190,  1180,  1180,  1188,  1188,
    1077,   512,  1188,  1188,   512,  1190,  1180,  1180,   538,   509,
     512,   493,    28,   362,   539,  1192,  1180,   364,  1179,  1179,
     835,  1179,   137,   835,  1189,  1189,  1077,   586,   586,   806,
     195,   841,   841,   386,   613,   614,   509,   512,   499,   508,
     567,   617,   736,   960,  1189,   960,   241,   246,   289,   960,
     477,   960,   453,   960,   505,   156,   184,   156,   154,   792,
    1193,  1102,   241,   634,   900,   642,   386,   659,  1186,    28,
     136,   174,   622,   806,   806,   134,   175,  1180,   386,   643,
      31,   557,   508,  1180,   122,   787,   401,   789,  1189,   591,
     835,   622,   699,   272,   692,   509,   512,   405,   657,   508,
     656,   109,   121,   280,  1180,   405,   946,   636,   715,   716,
     717,   718,  1194,   663,   154,   508,  1189,   889,   901,   902,
    1195,   900,  1178,   182,   741,   586,   586,   586,  1180,   258,
     586,   856,   845,   845,   845,   845,   154,  1103,   154,   508,
    1142,   508,   509,   512,   509,  1104,   296,   509,   391,   341,
     509,   509,  1102,   509,  1103,  1103,  1102,   509,   272,  1127,
    1068,  1069,  1109,   512,  1058,   508,  1179,  1056,   255,   386,
    1063,  1056,   198,  1056,  1075,   508,  1075,  1194,  1029,   429,
     443,   474,   508,  1044,  1045,  1102,  1102,   404,  1121,  1029,
    1100,   509,  1011,  1173,   856,   255,   856,   509,   900,   649,
     257,   910,   835,   878,   878,   297,   900,   659,   509,   364,
     331,  1001,   668,   672,   509,  1077,   135,   447,   674,   672,
    1140,  1140,   674,   509,   508,   671,   509,  1180,   509,  1078,
     509,   512,   806,   587,   809,   661,   646,   835,  1201,   686,
     628,   664,   665,   666,   666,   485,   485,   508,   594,  1192,
    1180,   364,   508,  1186,   910,   819,   508,   508,   827,   542,
    1189,   538,  1189,   331,  1001,  1180,   405,   304,   405,   405,
     149,   587,   841,   529,   111,   616,   567,   618,   619,  1189,
    1189,   246,   643,   499,   643,  1189,  1189,   438,  1189,   860,
      31,   915,   915,  1178,   793,   509,   659,   222,   647,   177,
     508,   798,   287,   508,   509,    22,    70,    78,   105,   178,
     347,   638,   638,   762,  1182,   509,  1014,   762,   315,   343,
     788,   508,   136,    31,   623,   509,    48,   627,   259,   658,
    1177,   657,   316,   316,    52,    60,   216,   509,   512,  1077,
     835,   875,   876,   891,   509,   512,  1072,   740,   239,   390,
     742,   743,   586,  1102,  1103,  1142,   509,  1114,  1139,    48,
     239,   422,    48,  1029,   509,   512,    31,  1070,  1102,  1179,
     509,  1102,   508,  1056,  1063,   509,  1075,   509,   509,   508,
     479,   508,   509,   512,  1122,  1123,  1194,   509,   858,   869,
     586,   877,   659,   508,   879,   879,  1178,   659,   793,  1180,
     356,    31,    11,  1029,  1029,   682,   767,   386,   588,   668,
     628,   664,   664,   597,   331,  1001,  1180,  1142,   883,   149,
     822,   909,  1142,  1142,   356,   834,   835,   834,   835,  1179,
     586,   608,  1189,   509,   512,   643,   915,    34,   173,   149,
     239,   641,   155,   271,   336,   255,   651,   652,   653,   356,
     509,  1186,     5,   799,   328,   143,   821,   591,   946,  1102,
     287,  1014,   656,   655,   290,   449,   691,   631,   663,   509,
     658,    60,   258,    60,   136,   219,   703,   717,   509,   512,
     896,   901,   117,   390,   740,   509,   509,   509,   296,   391,
    1031,   290,   316,  1128,  1071,  1068,   508,   509,  1179,   509,
    1139,   508,  1139,  1045,   512,    31,   154,   878,   402,   650,
     910,   880,   880,   642,   793,  1180,  1077,  1077,   509,   509,
     509,  1102,   668,   668,   512,   356,   509,   261,   321,   294,
     823,   822,   509,   509,  1180,   405,   450,   719,   720,   619,
     122,   179,   109,   384,   255,   653,   255,   652,  1180,   508,
     509,   512,  1180,   835,    31,    31,   509,  1186,   946,   657,
     656,   508,   692,   663,   258,   258,  1189,   508,   440,   591,
     876,   900,    23,   188,   934,    42,    87,   375,  1102,  1129,
    1130,  1129,   509,  1075,   509,   509,  1044,   509,  1123,  1125,
     856,   879,   508,   793,   509,   647,  1001,   509,   509,   597,
    1180,  1186,    48,   823,  1001,   835,   434,   446,   606,   477,
     315,    51,   239,   308,   331,   654,   654,   509,     5,   762,
     818,  1014,   508,   658,   657,   643,   692,   704,   989,   990,
    1189,  1189,   658,   242,   508,   929,   931,   936,   991,   996,
    1003,  1014,  1130,   315,   148,   278,   148,   278,   133,  1131,
    1131,   509,   509,   586,   880,  1102,   651,   509,  1001,   883,
     835,   193,   140,   471,   789,    17,   104,   246,   946,     4,
     790,   791,  1188,  1189,  1197,   663,   658,   509,   255,   705,
     509,   512,   508,   706,  1072,   930,   931,   932,  1016,  1017,
      28,    87,   162,   239,   484,   509,   793,  1178,   463,   213,
     136,   509,   512,   692,   663,   482,   694,   695,   696,    22,
     445,   451,   477,  1188,   704,   990,    86,   110,   130,   150,
     165,   246,   289,   439,   455,   509,   707,   708,   709,   710,
    1197,   259,   711,   509,   511,  1130,   315,   459,  1188,   287,
     791,   692,    48,   508,   667,   482,   693,   696,  1189,  1188,
     960,   960,   241,   289,   960,   960,   453,   960,    86,   110,
     130,   150,   165,   246,   289,   439,   455,   509,   710,   509,
     512,   493,   508,   712,   724,   932,   316,   464,   723,  1186,
     691,   104,   272,   628,   669,   679,   685,   687,   688,   358,
     696,  1189,  1189,   246,   499,   643,  1189,  1189,   438,  1189,
     709,   508,   809,   509,   713,   714,  1197,   125,   450,   720,
     721,   722,   725,   508,   508,   272,  1201,   509,   512,   666,
     680,   680,   508,   643,   643,   509,   512,  1189,   951,   434,
     663,   477,   790,   643,  1201,   685,   664,   666,   666,   670,
     509,   714,  1188,  1189,   465,   471,   509,   509,   668,   664,
     664,   509,   213,   668,   668,  1188,   723
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   514,   515,   516,   516,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   518,   518,   519,   519,   520,   520,   520,   520,   520,
     521,   521,   521,   521,   522,   523,   524,   525,   526,   527,
     527,   527,   527,   527,   527,   528,   529,   529,   530,   530,
     531,   531,   532,   532,   533,   533,   533,   533,   533,   533,
     533,   533,   533,   533,   533,   533,   533,   533,   534,   534,
     534,   534,   534,   534,   535,   535,   536,   537,   537,   538,
     539,   539,   540,   540,   541,   541,   542,   543,   544,   545,
     545,   546,   546,   547,   548,   548,   549,   549,   550,   550,
     551,   552,   553,   553,   554,   554,   555,   555,   555,   555,
     556,   556,   557,   557,   558,   558,   558,   558,   558,   558,
     559,   559,   559,   560,   560,   560,   561,   561,   561,   561,
     562,   562,   562,   562,   562,   562,   562,   562,   562,   562,
     562,   563,   563,   564,   564,   565,   565,   566,   566,   566,
     566,   567,   567,   567,   567,   568,   568,   568,   568,   568,
     568,   568,   569,   569,   569,   570,   570,   571,   572,   572,
     572,   572,   573,   573,   574,   574,   575,   575,   576,   576,
     576,   576,   576,   577,   578,   578,   579,   579,   580,   581,
     581,   581,   581,   581,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   582,   582,   582,   582,   582,   582,   582,
     582,   583,   583,   584,   584,   584,   584,   584,   584,   584,
     584,   584,   584,   584,   584,   584,   584,   584,   584,   584,
     584,   584,   584,   584,   584,   584,   584,   584,   584,   584,
     584,   584,   584,   584,   584,   584,   584,   584,   584,   584,
     584,   584,   584,   584,   584,   584,   584,   584,   584,   584,
     584,   584,   584,   585,   585,   586,   586,   586,   587,   587,
     588,   588,   589,   589,   589,   589,   590,   591,   591,   592,
     592,   593,   593,   593,   593,   594,   594,   595,   595,   595,
     596,   596,   596,   597,   597,   597,   598,   598,   598,   598,
     598,   598,   598,   598,   598,   598,   598,   598,   598,   598,
     598,   599,   600,   600,   601,   601,   601,   601,   602,   602,
     603,   603,   604,   604,   605,   605,   606,   606,   607,   607,
     607,   608,   608,   609,   609,   610,   610,   610,   610,   610,
     610,   610,   610,   610,   610,   610,   610,   610,   610,   610,
     610,   610,   611,   611,   612,   612,   613,   613,   614,   614,
     615,   615,   616,   617,   617,   617,   617,   617,   618,   618,
     619,   620,   620,   620,   620,   621,   621,   621,   621,   621,
     621,   621,   621,   622,   622,   623,   623,   624,   624,   625,
     625,   626,   626,   626,   626,   627,   627,   628,   628,   629,
     630,   631,   631,   632,   632,   632,   632,   633,   633,   634,
     634,   634,   634,   634,   634,   634,   635,   635,   635,   635,
     636,   637,   637,   637,   638,   638,   638,   638,   638,   638,
     639,   639,   640,   640,   640,   640,   640,   640,   640,   641,
     641,   642,   642,   643,   643,   644,   645,   645,   646,   647,
     647,   647,   647,   648,   648,   649,   649,   650,   650,   651,
     651,   651,   651,   651,   652,   653,   654,   654,   654,   654,
     654,   655,   655,   656,   656,   656,   656,   657,   657,   657,
     657,   658,   658,   659,   659,   660,   661,   661,   662,   662,
     662,   662,   663,   663,   664,   664,   665,   665,   666,   666,
     666,   666,   667,   667,   668,   668,   669,   669,   670,   670,
     671,   671,   671,   671,   672,   672,   672,   673,   673,   674,
     674,   674,   675,   676,   677,   677,   678,   678,   679,   679,
     679,   680,   680,   681,   681,   682,   682,   683,   683,   684,
     684,   685,   685,   685,   685,   686,   686,   686,   686,   687,
     688,   689,   690,   691,   691,   691,   692,   692,   693,   694,
     694,   695,   696,   696,   696,   696,   697,   698,   699,   699,
     699,   700,   701,   701,   701,   702,   702,   703,   703,   704,
     704,   705,   705,   705,   705,   705,   705,   706,   706,   706,
     706,   707,   707,   708,   708,   709,   709,   710,   710,   710,
     710,   710,   710,   710,   710,   710,   710,   710,   711,   711,
     712,   712,   713,   713,   714,   715,   715,   716,   716,   717,
     717,   718,   719,   719,   720,   720,   720,   721,   721,   722,
     722,   723,   723,   723,   724,   724,   725,   725,   726,   727,
     728,   728,   729,   730,   731,   731,   732,   732,   733,   733,
     734,   734,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   735,   735,   736,   736,   736,   736,   737,   737,
     738,   738,   739,   739,   740,   740,   741,   741,   742,   742,
     743,   743,   744,   744,   745,   745,   746,   747,   747,   748,
     748,   749,   749,   750,   750,   751,   751,   751,   752,   753,
     753,   754,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   756,   757,   757,   757,
     757,   758,   758,   759,   759,   760,   760,   761,   761,   762,
     762,   763,   763,   764,   765,   765,   766,   766,   766,   766,
     767,   768,   769,   770,   771,   771,   772,   772,   773,   773,
     774,   774,   775,   775,   775,   776,   776,   777,   777,   778,
     779,   779,   779,   780,   780,   781,   782,   782,   783,   783,
     783,   784,   784,   785,   785,   785,   785,   785,   786,   786,
     787,   787,   788,   788,   789,   789,   790,   790,   790,   791,
     791,   791,   791,   792,   792,   793,   793,   794,   794,   794,
     794,   794,   794,   795,   795,   796,   796,   797,   797,   798,
     799,   799,   800,   801,   801,   801,   801,   802,   803,   804,
     804,   804,   804,   804,   804,   804,   804,   804,   804,   804,
     804,   804,   804,   804,   805,   805,   806,   807,   807,   808,
     808,   809,   809,   809,   809,   809,   809,   809,   810,   811,
     811,   812,   813,   813,   814,   814,   815,   815,   815,   816,
     816,   817,   818,   818,   819,   819,   819,   819,   819,   820,
     820,   821,   821,   822,   822,   822,   823,   823,   824,   825,
     825,   826,   826,   827,   827,   828,   828,   829,   829,   830,
     831,   832,   832,   832,   832,   833,   833,   833,   833,   833,
     833,   833,   833,   833,   833,   833,   833,   833,   833,   833,
     833,   833,   833,   833,   833,   834,   834,   835,   835,   836,
     836,   837,   838,   838,   838,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   841,   841,   842,   842,   842,   842,   842,
     843,   843,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   845,   845,   846,   846,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   848,   848,   849,   849,   850,
     851,   851,   852,   852,   852,   852,   852,   853,   853,   854,
     854,   854,   854,   855,   855,   855,   855,   855,   855,   855,
     855,   855,   855,   855,   855,   855,   855,   855,   855,   855,
     856,   856,   857,   857,   858,   858,   859,   859,   860,   861,
     862,   862,   863,   863,   864,   864,   865,   866,   866,   867,
     867,   867,   868,   868,   868,   869,   869,   869,   869,   870,
     871,   871,   872,   872,   873,   873,   874,   874,   875,   875,
     876,   876,   876,   877,   877,   878,   878,   878,   879,   879,
     879,   880,   880,   880,   881,   881,   881,   882,   882,   883,
     883,   884,   884,   885,   885,   886,   886,   887,   887,   887,
     887,   887,   888,   888,   888,   888,   888,   889,   890,   891,
     891,   891,   892,   892,   892,   893,   894,   894,   894,   894,
     895,   895,   896,   896,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   898,   898,   898,
     898,   899,   899,   900,   900,   901,   902,   902,   903,   904,
     904,   905,   905,   906,   906,   907,   907,   908,   908,   909,
     909,   909,   909,   910,   910,   911,   912,   912,   913,   913,
     914,   914,   914,   915,   915,   915,   916,   917,   917,   918,
     918,   918,   919,   919,   920,   920,   921,   922,   922,   923,
     923,   923,   923,   923,   923,   923,   923,   923,   923,   923,
     923,   923,   923,   923,   923,   923,   923,   923,   923,   923,
     923,   923,   923,   923,   923,   923,   923,   923,   923,   923,
     923,   923,   923,   923,   923,   923,   923,   923,   923,   923,
     923,   923,   923,   923,   923,   924,   924,   925,   925,   926,
     926,   926,   926,   926,   926,   926,   926,   926,   926,   926,
     926,   926,   926,   926,   926,   926,   926,   926,   926,   926,
     926,   926,   926,   927,   927,   927,   927,   927,   927,   927,
     927,   927,   927,   927,   927,   927,   927,   927,   927,   927,
     927,   927,   927,   928,   929,   929,   929,   930,   930,   931,
     931,   931,   931,   931,   932,   932,   933,   933,   933,   933,
     934,   934,   934,   935,   935,   936,   937,   937,   938,   939,
     939,   940,   940,   940,   940,   940,   940,   940,   940,   940,
     940,   940,   940,   940,   940,   941,   941,   941,   942,   942,
     942,   942,   942,   943,   943,   943,   944,   944,   945,   945,
     945,   945,   946,   946,   946,   946,   947,   948,   949,   949,
     950,   950,   950,   950,   950,   950,   950,   950,   950,   950,
     950,   950,   950,   950,   950,   950,   951,   951,   952,   952,
     953,   954,   954,   955,   956,   956,   957,   957,   958,   959,
     959,   959,   959,   959,   959,   959,   960,   960,   961,   962,
     962,   962,   962,   962,   962,   963,   964,   964,   964,   965,
     965,   966,   966,   966,   966,   966,   967,   967,   968,   968,
     968,   968,   968,   969,   969,   969,   969,   970,   970,   971,
     971,   972,   972,   973,   973,   974,   974,   975,   975,   976,
     976,   976,   976,   977,   977,   977,   977,   977,   977,   977,
     977,   977,   977,   978,   978,   979,   979,   980,   981,   981,
     982,   982,   982,   983,   984,   984,   985,   985,   985,   985,
     986,   986,   987,   987,   988,   988,   988,   988,   989,   989,
     990,   991,   992,   992,   992,   993,   993,   994,   995,   995,
     996,   997,   997,   998,   999,   999,  1000,  1000,  1000,  1000,
    1000,  1000,  1000,  1000,  1001,  1001,  1002,  1002,  1003,  1004,
    1004,  1005,  1005,  1006,  1007,  1008,  1009,  1009,  1010,  1011,
    1012,  1012,  1012,  1012,  1012,  1012,  1013,  1013,  1013,  1014,
    1014,  1015,  1015,  1016,  1016,  1017,  1017,  1017,  1017,  1017,
    1017,  1017,  1017,  1018,  1018,  1019,  1019,  1019,  1019,  1019,
    1019,  1020,  1020,  1021,  1021,  1022,  1023,  1023,  1024,  1024,
    1025,  1025,  1025,  1025,  1025,  1025,  1025,  1025,  1025,  1026,
    1026,  1027,  1027,  1027,  1028,  1028,  1028,  1028,  1029,  1029,
    1030,  1031,  1031,  1032,  1032,  1033,  1033,  1033,  1033,  1034,
    1034,  1035,  1035,  1035,  1035,  1036,  1036,  1037,  1037,  1038,
    1039,  1039,  1039,  1040,  1040,  1041,  1041,  1042,  1042,  1043,
    1043,  1044,  1044,  1045,  1045,  1045,  1045,  1045,  1046,  1046,
    1047,  1047,  1048,  1048,  1049,  1049,  1050,  1051,  1051,  1051,
    1051,  1052,  1052,  1053,  1053,  1054,  1054,  1055,  1055,  1056,
    1056,  1056,  1056,  1056,  1056,  1056,  1057,  1057,  1057,  1057,
    1057,  1057,  1058,  1058,  1058,  1058,  1059,  1059,  1060,  1060,
    1060,  1060,  1060,  1061,  1061,  1061,  1061,  1062,  1062,  1063,
    1063,  1064,  1064,  1064,  1064,  1065,  1065,  1066,  1066,  1066,
    1067,  1067,  1068,  1069,  1069,  1070,  1070,  1071,  1071,  1072,
    1072,  1073,  1073,  1073,  1074,  1074,  1075,  1075,  1076,  1077,
    1077,  1077,  1077,  1077,  1077,  1078,  1078,  1079,  1079,  1079,
    1080,  1080,  1080,  1080,  1080,  1080,  1080,  1081,  1081,  1081,
    1081,  1082,  1082,  1083,  1083,  1084,  1084,  1084,  1084,  1084,
    1084,  1084,  1084,  1084,  1084,  1084,  1085,  1085,  1086,  1086,
    1087,  1087,  1088,  1089,  1090,  1090,  1091,  1091,  1092,  1093,
    1094,  1094,  1094,  1094,  1094,  1094,  1095,  1095,  1096,  1096,
    1097,  1097,  1097,  1097,  1098,  1099,  1099,  1099,  1100,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1100,  1101,  1101,  1102,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,  1102,
    1102,  1102,  1102,  1103,  1103,  1103,  1103,  1103,  1103,  1103,
    1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,
    1103,  1103,  1103,  1103,  1103,  1104,  1104,  1104,  1104,  1104,
    1104,  1104,  1104,  1104,  1104,  1104,  1104,  1104,  1104,  1105,
    1105,  1105,  1106,  1107,  1107,  1107,  1107,  1107,  1107,  1107,
    1108,  1108,  1109,  1109,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1111,  1111,  1112,  1112,  1112,  1112,  1113,  1114,  1114,
    1115,  1115,  1116,  1116,  1117,  1117,  1117,  1118,  1118,  1118,
    1118,  1119,  1119,  1120,  1120,  1121,  1121,  1122,  1122,  1123,
    1124,  1124,  1124,  1125,  1126,  1126,  1127,  1127,  1128,  1128,
    1128,  1129,  1129,  1130,  1130,  1130,  1130,  1130,  1131,  1131,
    1131,  1131,  1131,  1132,  1132,  1132,  1133,  1133,  1133,  1134,
    1134,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1136,  1136,  1137,  1137,  1138,  1138,  1138,  1138,  1138,  1138,
    1139,  1139,  1140,  1140,  1141,  1141,  1142,  1142,  1143,  1143,
    1144,  1144,  1144,  1145,  1145,  1146,  1146,  1147,  1147,  1147,
    1147,  1147,  1147,  1147,  1147,  1148,  1148,  1149,  1150,  1150,
    1151,  1151,  1151,  1151,  1151,  1151,  1152,  1153,  1154,  1154,
    1154,  1155,  1155,  1156,  1157,  1157,  1158,  1159,  1159,  1160,
    1160,  1161,  1161,  1162,  1163,  1163,  1164,  1165,  1165,  1166,
    1166,  1167,  1167,  1167,  1167,  1168,  1168,  1169,  1169,  1170,
    1170,  1171,  1171,  1172,  1172,  1173,  1174,  1174,  1175,  1175,
    1176,  1176,  1176,  1176,  1176,  1177,  1177,  1178,  1178,  1179,
    1179,  1180,  1181,  1182,  1183,  1184,  1185,  1186,  1186,  1187,
    1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,  1187,
    1187,  1187,  1188,  1189,  1190,  1191,  1192,  1192,  1193,  1193,
    1193,  1194,  1194,  1194,  1195,  1195,  1195,  1196,  1196,  1196,
    1196,  1197,  1197,  1197,  1197,  1197,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1198,  1199,  1200,  1200,  1200,  1200,  1200,  1201,  1201,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1202,  1202,  1202,  1202,  1202,  1202,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,  1203,
    1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,
    1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,
    1204,  1204,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1205
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     5,     7,     2,     0,     3,     3,     3,     1,     1,
       5,     7,     7,     9,     4,     6,     4,     6,     1,     2,
       2,     2,     2,     2,     2,     5,     1,     0,     2,     0,
       2,     0,     1,     4,     2,     2,     3,     3,     1,     3,
       3,     3,     3,     2,     2,     2,     1,     1,     1,     2,
       2,     2,     3,     3,     2,     2,     4,     1,     1,     3,
       2,     0,     3,     0,     1,     3,     3,     5,     5,     0,
       3,     5,     5,     5,     5,     5,     3,     5,     3,     5,
       5,     6,     1,     1,     3,     5,     6,     4,     9,     7,
       1,     0,     2,     0,     1,     1,     1,     1,     1,     1,
       2,     3,     3,     2,     5,     1,     3,     3,     3,     3,
       1,     3,     3,     2,     2,     2,     2,     3,     3,     3,
       3,     1,     3,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     3,     6,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     1,     2,
       3,     2,     1,     1,     2,     1,     2,     1,     2,     3,
       4,     3,     2,     4,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     4,     6,     5,    10,    13,     4,
       6,    10,    13,     4,     6,     4,     6,     5,     7,    11,
      14,     1,     3,     2,     3,     4,     6,     6,     6,     5,
       5,     6,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     3,     3,     3,     3,     3,     4,     4,     3,     3,
       3,     3,     3,     3,     4,     4,     3,     2,     3,     2,
       4,     3,     1,     2,     3,     2,     2,     3,     3,     2,
       2,     3,     1,     3,     2,     1,     1,     0,     2,     0,
       2,     0,     1,     1,     1,     3,     3,     2,     0,     1,
       3,     3,     1,     5,     3,     6,     0,     2,     2,     0,
       1,     4,     8,     2,     3,     2,     5,     7,     6,     3,
       6,     6,     3,     2,     6,     4,     6,     5,     6,     7,
       3,     4,     1,     3,     4,     6,     4,     8,     2,     2,
      13,     7,     1,     1,     1,     0,     3,     0,     1,     1,
       1,     1,     3,     2,     0,     1,     1,     1,     3,     3,
       1,     1,     3,     3,     3,     3,     4,     3,     2,     3,
       3,     2,     1,     0,     2,     0,     3,     0,     1,     0,
       1,     3,     2,     1,     1,     1,     3,     0,     1,     3,
       1,    13,    16,    12,    15,     1,     1,     2,     2,     2,
       2,     1,     0,     1,     0,     3,     0,     1,     3,     1,
       3,     1,     1,     1,     1,     1,     1,     4,     4,     5,
       4,     2,     0,     3,     1,     1,     2,     2,     0,     2,
       1,     3,     4,     5,     2,     5,     1,     2,     2,     2,
       3,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       3,     1,     5,     7,     3,     8,     4,     9,    11,     2,
       0,     3,     0,     1,     3,     1,     1,     3,     2,     2,
       2,     2,     0,     1,     3,     3,     6,     4,     0,     1,
       1,     2,     2,     0,     3,     3,     2,     1,     1,     2,
       2,     4,     0,     2,     2,     2,     0,     3,     4,     4,
       0,     2,     0,     4,     0,     3,     2,     0,     6,     3,
       2,     2,     1,     0,     1,     0,     1,     2,     4,     2,
       2,     0,     3,     0,     3,     0,     1,     3,     1,     3,
       1,     6,     3,     2,     1,     3,     5,     1,     3,     1,
       1,     0,     5,     5,     4,     0,     1,     0,     1,     3,
       2,     1,     0,     3,     5,     1,     3,     4,     4,     1,
       1,     5,     5,     4,     1,     5,     5,     4,     1,     2,
       3,     2,     3,     1,     1,     0,     8,     0,     5,     1,
       0,     6,     2,     1,     2,     3,     9,     5,     2,     3,
       0,    18,     1,     1,     0,     1,     0,     5,     3,     2,
       0,     2,     3,     2,     2,     3,     2,     3,     3,     2,
       0,     1,     2,     1,     3,     3,     5,     3,     3,     1,
       1,     3,     3,     4,     3,     3,     3,     3,     2,     0,
       3,     2,     1,     3,     2,     1,     0,     1,     3,     1,
       1,     2,     6,     0,     4,     2,     0,     6,     0,     1,
       3,     1,     1,     0,     2,     0,     3,     3,     9,     4,
       1,     0,     6,     5,     4,     6,     1,     0,     1,     2,
       2,     1,     2,     3,     2,     2,     2,     2,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     1,     1,     3,
       6,    10,     1,     0,     1,     2,     2,     0,     2,     2,
       1,     0,     5,     7,     1,     0,     7,     2,     0,     3,
       5,     5,     8,     2,     0,     2,     2,     2,     5,     2,
       0,     2,     7,    10,     6,     6,     6,     6,     7,     7,
       9,     9,     6,     7,     6,     8,     8,     8,     8,     6,
       6,     7,     7,     8,     6,     6,     7,     2,     2,     2,
       2,     1,     2,     1,     0,     6,     8,     7,     6,     4,
       0,     1,     3,     4,     1,     3,     1,     2,     2,     2,
       2,     1,     1,    10,     2,     0,     2,     2,     1,     0,
       4,     6,     5,     4,     4,    10,    13,     5,     7,     8,
       1,     1,     1,     7,     9,     8,    15,    20,     1,     1,
       2,     1,     3,     1,     1,     1,     3,     1,     3,     0,
       1,     0,     1,     1,     4,     0,     1,     3,     0,     1,
       1,     1,     1,     2,     0,     0,     2,     2,     1,     2,
       2,     2,     2,     6,     8,    11,    13,     1,     3,     5,
       1,     3,     5,     1,     2,     2,     1,     8,     4,     6,
       5,     4,     4,     3,     7,     6,     8,     6,     6,     6,
       6,     6,     4,     5,     1,     0,     3,     1,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       3,     3,     1,     0,     1,     3,     7,     9,     9,     3,
       0,    13,     1,     3,     5,     6,     4,     7,     2,     1,
       0,     2,     0,     2,     4,     0,     1,     0,     6,     8,
       8,     1,     3,     5,     5,     7,     9,     7,     9,     5,
       6,     6,     4,     5,     7,     1,     2,     3,     1,     1,
       2,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     1,     1,     3,     1,     2,     2,
       3,     5,     2,     2,     0,     6,     7,     7,     7,     8,
       8,     6,     8,     9,     9,     7,    10,     7,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     1,     3,     2,     3,     3,     3,
       3,     2,     2,     1,     1,     8,     9,     9,     9,     9,
       2,     0,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     2,     1,
       2,     3,     3,     3,     3,     4,     4,     3,     3,     3,
       4,     4,     3,     4,     4,     1,     1,     1,     0,     7,
       7,    10,     1,     1,     2,     4,     5,     1,     3,     2,
       2,     2,     2,     1,     2,     2,     4,     3,     2,     2,
       2,     2,     3,     2,     2,     2,     2,     5,     5,     5,
       1,     3,     1,     2,     3,     0,     1,     3,     2,     6,
       6,     9,     3,     0,     3,     0,     5,     2,     0,     3,
       3,     3,     7,     7,    10,     1,     1,     1,     1,    14,
       1,     0,     1,     0,     1,     0,     2,     0,     1,     3,
       5,     5,     7,     2,     0,     1,     2,     0,     1,     1,
       0,     1,     1,     0,     9,    12,     7,     2,     0,     3,
       2,     1,     3,     3,     2,     1,     3,     3,     3,     2,
       2,     1,     1,     1,     1,     2,     1,     1,     1,     1,
       4,     5,     1,     3,     3,     1,     3,     3,     5,     6,
       1,     3,     1,     2,     4,     5,     1,     1,     1,     1,
       3,     3,     2,     2,     1,     2,     2,     2,     1,     2,
       2,     3,     3,     3,     3,     3,     4,     2,     2,     1,
       1,     1,     3,     2,     0,     2,     1,     3,     5,     1,
       2,     1,     0,     5,     7,     5,     7,     5,     7,     3,
       5,     5,     5,     1,     3,     2,     1,     2,     1,     2,
      11,    10,    10,     2,     2,     0,     9,     2,     0,     4,
       4,     4,     1,     1,     1,     0,     7,     5,     5,     7,
       6,     6,     6,     6,     8,     8,     6,     6,     7,     9,
       9,     6,     6,     6,     8,     6,     8,     6,     8,     7,
       9,     6,     8,     7,     9,     8,    10,     9,    11,     8,
       9,    11,     8,     8,     7,     6,     6,     6,     8,     8,
       8,     8,     6,     9,     6,     1,     0,     2,     0,     7,
       6,     6,     6,     6,     6,     7,     9,     9,     6,     8,
       8,     8,     8,     8,     6,     8,     6,     8,     7,     9,
       7,     9,     6,     7,     6,     6,     6,     6,     6,     7,
       7,     7,     9,     9,     6,     6,     6,     6,     8,     8,
       8,     6,     7,    13,     1,     1,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     0,     6,     8,     3,     2,     0,     2,     2,
       2,     2,     3,     3,     2,     2,     2,     2,     3,     2,
       5,     4,     3,     3,     3,     1,     1,     0,     3,     2,
       2,     1,     2,     1,     3,     2,     1,     0,     9,    11,
      12,    14,     3,     4,     4,     0,     2,     5,     2,     0,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     4,     3,     3,     1,     0,     5,     6,
       4,     2,     0,     4,     3,     5,     4,     4,     6,     4,
       6,     6,     5,     7,     9,     6,     1,     0,     6,    11,
      11,    11,    13,     9,    11,    10,     4,     2,     5,     2,
       0,     4,     5,     5,     4,     6,     1,     3,     1,     1,
       1,     1,     1,     3,     4,     5,     5,     1,     1,     1,
       0,     2,     0,     1,     0,     1,     0,     3,     0,     2,
       5,     4,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     3,     2,     1,     1,
       1,     1,     0,     5,     3,     0,     1,     1,     1,     1,
       3,     9,     3,     0,     2,     3,     2,     3,     1,     3,
       1,     6,     1,     4,     2,     1,     3,     2,     2,     0,
       7,     2,     0,     6,     3,     0,     2,     2,     2,     3,
       1,     3,     1,     2,     1,     0,     2,     0,     8,     1,
       3,     1,     1,     3,     5,     2,     1,     3,     7,     1,
       0,     3,     2,     2,     2,     3,     0,     2,     2,     1,
       1,     5,     5,     3,     3,     1,     2,     4,     4,     2,
       3,     5,     5,     1,     1,     9,     1,     2,     4,     4,
       4,     2,     3,     1,     3,     6,     1,     0,     2,     0,
       3,     3,     4,     4,     4,     4,     3,     2,     1,     1,
       0,     1,     1,     0,     1,     5,     1,     0,     1,     0,
       3,     1,     3,     4,     3,     2,     2,     1,     1,     1,
       0,     2,     4,     5,     4,     2,     3,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     3,
       0,     1,     3,     1,     4,     4,     5,     2,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     2,     3,     2,     0,     1,     3,     2,
       2,     3,     2,     3,     1,     4,     3,     4,     5,     4,
       5,     4,     5,     2,     4,     1,     1,     0,     1,     4,
       5,     4,     0,     2,     2,     2,     1,     1,     0,     4,
       2,     1,     2,     2,     4,     1,     3,     1,     2,     3,
       2,     6,     2,     1,     3,     4,     0,     1,     0,     2,
       0,     2,     4,     0,     1,     0,     1,     3,     3,     2,
       3,     5,     6,     2,     3,     1,     4,     3,     4,     0,
       1,     1,     1,     1,     1,     2,     5,     1,     1,     1,
       1,     2,     3,     3,     0,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     2,     1,     3,     0,     1,     1,
       1,     1,     5,     2,     1,     1,     1,     1,     5,     2,
       2,     2,     1,     3,     3,     2,     1,     0,     3,     0,
       5,     2,     5,     2,     1,     2,     3,     0,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     4,     1,     3,     3,     5,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     3,     3,     2,     3,     5,     4,     6,     3,
       5,     4,     6,     4,     6,     5,     7,     3,     2,     4,
       2,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       2,     3,     4,     1,     3,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     5,
       6,     6,     7,     3,     4,     1,     1,     2,     4,     1,
       1,     1,     1,     2,     2,     2,     2,     4,     1,     0,
       2,     3,     2,     3,     5,     6,     8,     6,     6,     4,
       4,     1,     1,     1,     5,     1,     1,     4,     1,     4,
       1,     4,     1,     4,     1,     1,     1,     1,     1,     1,
       6,     4,     4,     4,     4,     6,     5,     5,     5,     4,
       6,     4,     4,     4,     4,     3,     4,     6,     4,     5,
       7,     7,     9,     5,     6,     4,     6,     5,     7,     7,
       7,     2,     3,     3,     3,     4,     0,     4,     1,     3,
       3,     1,     1,     1,     2,     2,     0,     2,     4,     4,
       6,     5,     0,     5,     0,     2,     0,     1,     3,     3,
       2,     2,     0,     6,     1,     0,     3,     0,     3,     3,
       0,     1,     4,     2,     2,     2,     2,     2,     3,     2,
       2,     3,     0,     4,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     1,     4,     1,     4,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     1,     3,
       3,     3,     2,     1,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     3,     2,     3,     0,
       3,     3,     2,     2,     1,     0,     2,     2,     3,     2,
       1,     1,     3,     5,     1,     2,     4,     1,     5,     2,
       0,     1,     0,     6,     1,     2,     4,     2,     0,     1,
       2,     2,     2,     3,     5,     1,     2,     0,     2,     1,
       0,     1,     1,     1,     3,     3,     1,     0,     1,     3,
       3,     2,     2,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     6,     2,     3,     6,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF

/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YYLOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

# ifndef YYLOCATION_PRINT

#  if defined YY_LOCATION_PRINT

   /* Temporary convenience wrapper in case some people defined the
      undocumented and private YY_LOCATION_PRINT macros.  */
#   define YYLOCATION_PRINT(File, Loc)  YY_LOCATION_PRINT(File, *(Loc))

#  elif defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static int
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  int res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
}

#   define YYLOCATION_PRINT  yy_location_print_

    /* Temporary convenience wrapper in case some people defined the
       undocumented and private YY_LOCATION_PRINT macros.  */
#   define YY_LOCATION_PRINT(File, Loc)  YYLOCATION_PRINT(File, &(Loc))

#  else

#   define YYLOCATION_PRINT(File, Loc) ((void) 0)
    /* Temporary convenience wrapper in case some people defined the
       undocumented and private YY_LOCATION_PRINT macros.  */
#   define YY_LOCATION_PRINT  YYLOCATION_PRINT

#  endif
# endif /* !defined YYLOCATION_PRINT */


# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (yylocationp);
  YY_USE (yyscanner);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  YYLOCATION_PRINT (yyo, yylocationp);
  YYFPRINTF (yyo, ": ");
  yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,
                 int yyrule, core_yyscan_t yyscanner)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)],
                       &(yylsp[(yyi + 1) - (yynrhs)]), yyscanner);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, yyscanner); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
{
  YY_USE (yyvaluep);
  YY_USE (yylocationp);
  YY_USE (yyscanner);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (core_yyscan_t yyscanner)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

    /* The location stack: array, bottom, top.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls = yylsa;
    YYLTYPE *yylsp = yyls;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[3];



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  yylsp[0] = yylloc;
  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yyls1, yysize * YYSIZEOF (*yylsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
        yyls = yyls1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, &yylloc, yyscanner);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      yyerror_range[1] = yylloc;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location. */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  yyerror_range[1] = yyloc;
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* stmtblock: stmtmulti  */
#line 1136 "gram.y"
                        {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[0].list);
			}
#line 26863 "gram.cpp"
    break;

  case 3: /* stmtmulti: stmtmulti ';' stmt  */
#line 1143 "gram.y"
                                {
					if ((yyvsp[0].node) != NULL)
						(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
					else
						(yyval.list) = (yyvsp[-2].list);
				}
#line 26874 "gram.cpp"
    break;

  case 4: /* stmtmulti: stmt  */
#line 1150 "gram.y"
                                {
					if ((yyvsp[0].node) != NULL)
						(yyval.list) = list_make1((yyvsp[0].node));
					else
						(yyval.list) = NIL;
				}
#line 26885 "gram.cpp"
    break;

  case 130: /* stmt: %empty  */
#line 1285 "gram.y"
                                { (yyval.node) = NULL; }
#line 26891 "gram.cpp"
    break;

  case 131: /* CreateQueueStmt: CREATE RESOURCE QUEUE QueueId OptQueueList  */
#line 1296 "gram.y"
                                {
					CreateQueueStmt *n = makeNode(CreateQueueStmt);
					DefElem         *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-1].str);
					n->options = list_concat(lappend((yyvsp[0].list), def1), NULL); 
					(yyval.node) = (Node *)n;
				}
#line 26905 "gram.cpp"
    break;

  case 132: /* CreateQueueStmt: CREATE RESOURCE QUEUE QueueId OptQueueList WITH definition  */
#line 1306 "gram.y"
                                {
					CreateQueueStmt *n    = makeNode(CreateQueueStmt);
					DefElem         *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-3].str);
					n->options = list_concat(lappend((yyvsp[-2].list), def1), (yyvsp[0].list)); 
					(yyval.node) = (Node *)n;
				}
#line 26919 "gram.cpp"
    break;

  case 133: /* OptQueueList: OptQueueList OptQueueElem  */
#line 1321 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 26925 "gram.cpp"
    break;

  case 134: /* OptQueueList: %empty  */
#line 1322 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 26931 "gram.cpp"
    break;

  case 135: /* OptQueueElem: ACTIVE THRESHOLD NumericOnly  */
#line 1327 "gram.y"
                                {
					/* was "activelimit" */
					(yyval.defelt) = makeDefElem("active_statements", (Node *)(yyvsp[0].value));
				}
#line 26940 "gram.cpp"
    break;

  case 136: /* OptQueueElem: COST THRESHOLD NumericOnly  */
#line 1332 "gram.y"
                                {
					/* was "costlimit" */
					(yyval.defelt) = makeDefElem("max_cost", (Node *)(yyvsp[0].value));
				}
#line 26949 "gram.cpp"
    break;

  case 137: /* OptQueueElem: IGNORE_P THRESHOLD NumericOnly  */
#line 1337 "gram.y"
                                {
					/* was "ignorecostlimit" */
					(yyval.defelt) = makeDefElem("min_cost", (Node *)(yyvsp[0].value));
				}
#line 26958 "gram.cpp"
    break;

  case 138: /* OptQueueElem: OVERCOMMIT  */
#line 1342 "gram.y"
                                {
					/* was "overcommit" */
					(yyval.defelt) = makeDefElem("cost_overcommit", (Node *)makeInteger(TRUE));
				}
#line 26967 "gram.cpp"
    break;

  case 139: /* OptQueueElem: NOOVERCOMMIT  */
#line 1347 "gram.y"
                                {
					/* was "overcommit" */
					(yyval.defelt) = makeDefElem("cost_overcommit", (Node *)makeInteger(FALSE));
				}
#line 26976 "gram.cpp"
    break;

  case 140: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList  */
#line 1361 "gram.y"
                                 {
					AlterQueueStmt *n = makeNode(AlterQueueStmt);
					n->queue = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 26987 "gram.cpp"
    break;

  case 141: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList WITH definition  */
#line 1368 "gram.y"
                                 {
					AlterQueueStmt *n    = makeNode(AlterQueueStmt);
					DefElem        *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					DefElem        *def2 = /* mark start of WITHOUT items */
						makeDefElem("withoutliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-3].str);
					n->options = list_concat(lappend((yyvsp[-2].list), def1), (yyvsp[0].list)); 
					n->options = lappend(n->options, def2); 
					(yyval.node) = (Node *)n;
				 }
#line 27005 "gram.cpp"
    break;

  case 142: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList WITHOUT definition  */
#line 1382 "gram.y"
                                 {
					AlterQueueStmt *n    = makeNode(AlterQueueStmt);
					DefElem        *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					DefElem        *def2 = /* mark start of WITHOUT items */
						makeDefElem("withoutliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-3].str);
					n->options = lappend((yyvsp[-2].list), def1); 
					n->options = list_concat(lappend(n->options, def2), (yyvsp[0].list)); 
					(yyval.node) = (Node *)n;
				 }
#line 27023 "gram.cpp"
    break;

  case 143: /* AlterQueueStmt: ALTER RESOURCE QUEUE QueueId OptQueueList WITH definition WITHOUT definition  */
#line 1397 "gram.y"
                                 {
					AlterQueueStmt *n    = makeNode(AlterQueueStmt);
					DefElem        *def1 = /* mark start of WITH items */
						makeDefElem("withliststart", 
									(Node *)makeInteger(TRUE));
					DefElem        *def2 = /* mark start of WITHOUT items */
						makeDefElem("withoutliststart", 
									(Node *)makeInteger(TRUE));
					n->queue = (yyvsp[-5].str);
					n->options = list_concat(lappend((yyvsp[-4].list), def1), (yyvsp[-2].list)); 
					n->options = list_concat(lappend(n->options, def2), (yyvsp[0].list));
					(yyval.node) = (Node *)n;
				 }
#line 27041 "gram.cpp"
    break;

  case 144: /* DropQueueStmt: DROP RESOURCE QUEUE QueueId  */
#line 1420 "gram.y"
                                 {
					DropQueueStmt *n = makeNode(DropQueueStmt);
					n->queue = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				 }
#line 27051 "gram.cpp"
    break;

  case 145: /* CreateResourceGroupStmt: CREATE RESOURCE GROUP_P name WITH definition  */
#line 1435 "gram.y"
                                {
					CreateResourceGroupStmt *n = makeNode(CreateResourceGroupStmt);
					n->name = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27062 "gram.cpp"
    break;

  case 146: /* DropResourceGroupStmt: DROP RESOURCE GROUP_P name  */
#line 1451 "gram.y"
                                 {
					DropResourceGroupStmt *n = makeNode(DropResourceGroupStmt);
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				 }
#line 27072 "gram.cpp"
    break;

  case 147: /* AlterResourceGroupStmt: ALTER RESOURCE GROUP_P name SET OptResourceGroupList  */
#line 1465 "gram.y"
                                 {
					AlterResourceGroupStmt *n = makeNode(AlterResourceGroupStmt);
					n->name = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27083 "gram.cpp"
    break;

  case 148: /* OptResourceGroupList: OptResourceGroupElem  */
#line 1476 "gram.y"
                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 27089 "gram.cpp"
    break;

  case 149: /* OptResourceGroupElem: CONCURRENCY SignedIconst  */
#line 1481 "gram.y"
                                {
					/* was "concurrency" */
					(yyval.defelt) = makeDefElem("concurrency", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27098 "gram.cpp"
    break;

  case 150: /* OptResourceGroupElem: CPU_RATE_LIMIT SignedIconst  */
#line 1486 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cpu_rate_limit", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27106 "gram.cpp"
    break;

  case 151: /* OptResourceGroupElem: CPUSET Sconst  */
#line 1490 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cpuset", (Node *) makeString((yyvsp[0].str)));
				}
#line 27114 "gram.cpp"
    break;

  case 152: /* OptResourceGroupElem: MEMORY_SHARED_QUOTA SignedIconst  */
#line 1494 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("memory_shared_quota", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27122 "gram.cpp"
    break;

  case 153: /* OptResourceGroupElem: MEMORY_LIMIT SignedIconst  */
#line 1498 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("memory_limit", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27130 "gram.cpp"
    break;

  case 154: /* OptResourceGroupElem: MEMORY_SPILL_RATIO SignedIconst  */
#line 1502 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("memory_spill_ratio", (Node *) makeInteger((yyvsp[0].ival)));
				}
#line 27138 "gram.cpp"
    break;

  case 155: /* CreateRoleStmt: CREATE ROLE RoleId opt_with OptRoleList  */
#line 1515 "gram.y"
                                {
					CreateRoleStmt *n = makeNode(CreateRoleStmt);
					n->stmt_type = ROLESTMT_ROLE;
					n->role = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27150 "gram.cpp"
    break;

  case 156: /* opt_with: WITH  */
#line 1525 "gram.y"
                                                                                        {}
#line 27156 "gram.cpp"
    break;

  case 157: /* opt_with: %empty  */
#line 1526 "gram.y"
                                                                                                {}
#line 27162 "gram.cpp"
    break;

  case 158: /* OptRoleList: OptRoleList CreateOptRoleElem  */
#line 1535 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 27168 "gram.cpp"
    break;

  case 159: /* OptRoleList: %empty  */
#line 1536 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 27174 "gram.cpp"
    break;

  case 160: /* AlterOptRoleList: AlterOptRoleList AlterOnlyOptRoleElem  */
#line 1540 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 27180 "gram.cpp"
    break;

  case 161: /* AlterOptRoleList: %empty  */
#line 1541 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 27186 "gram.cpp"
    break;

  case 162: /* AlterOnlyOptRoleElem: AlterOptRoleElem  */
#line 1551 "gram.y"
                                                                { (yyval.defelt) = (yyvsp[0].defelt); }
#line 27192 "gram.cpp"
    break;

  case 163: /* AlterOnlyOptRoleElem: DROP DENY FOR deny_point  */
#line 1552 "gram.y"
                                                        { (yyval.defelt) = makeDefElem("drop_deny", (yyvsp[0].node)); }
#line 27198 "gram.cpp"
    break;

  case 164: /* AlterOptRoleElem: PASSWORD Sconst  */
#line 1557 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("password",
									 (Node *)makeString((yyvsp[0].str)));
				}
#line 27207 "gram.cpp"
    break;

  case 165: /* AlterOptRoleElem: PASSWORD NULL_P  */
#line 1562 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("password", NULL);
				}
#line 27215 "gram.cpp"
    break;

  case 166: /* AlterOptRoleElem: ENCRYPTED PASSWORD Sconst  */
#line 1566 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encryptedPassword",
									 (Node *)makeString((yyvsp[0].str)));
				}
#line 27224 "gram.cpp"
    break;

  case 167: /* AlterOptRoleElem: UNENCRYPTED PASSWORD Sconst  */
#line 1571 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("unencryptedPassword",
									 (Node *)makeString((yyvsp[0].str)));
				}
#line 27233 "gram.cpp"
    break;

  case 168: /* AlterOptRoleElem: INHERIT  */
#line 1576 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(TRUE));
				}
#line 27241 "gram.cpp"
    break;

  case 169: /* AlterOptRoleElem: CONNECTION LIMIT SignedIconst  */
#line 1580 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 27249 "gram.cpp"
    break;

  case 170: /* AlterOptRoleElem: VALID UNTIL Sconst  */
#line 1584 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("validUntil", (Node *)makeString((yyvsp[0].str)));
				}
#line 27257 "gram.cpp"
    break;

  case 171: /* AlterOptRoleElem: RESOURCE QUEUE any_name  */
#line 1588 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("resourceQueue", (Node *)(yyvsp[0].list));
				}
#line 27265 "gram.cpp"
    break;

  case 172: /* AlterOptRoleElem: RESOURCE GROUP_P any_name  */
#line 1592 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("resourceGroup", (Node *)(yyvsp[0].list));
				}
#line 27273 "gram.cpp"
    break;

  case 173: /* AlterOptRoleElem: CREATEEXTTABLE exttab_auth_list  */
#line 1596 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exttabauth", (Node *)(yyvsp[0].list));
				}
#line 27281 "gram.cpp"
    break;

  case 174: /* AlterOptRoleElem: NOCREATEEXTTABLE exttab_auth_list  */
#line 1600 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exttabnoauth", (Node *)(yyvsp[0].list));
				}
#line 27289 "gram.cpp"
    break;

  case 175: /* AlterOptRoleElem: USER role_list  */
#line 1605 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[0].list));
				}
#line 27297 "gram.cpp"
    break;

  case 176: /* AlterOptRoleElem: deny_login_role  */
#line 1609 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("deny", (Node *)(yyvsp[0].node));
				}
#line 27305 "gram.cpp"
    break;

  case 177: /* AlterOptRoleElem: IDENT  */
#line 1613 "gram.y"
                                {
					/*
					 * We handle identifiers that aren't parser keywords with
					 * the following special-case codes, to avoid bloating the
					 * size of the main parser.
					 */
					if (strcmp((yyvsp[0].str), "superuser") == 0)
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nosuperuser") == 0)
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "createuser") == 0)
					{
						/* For backwards compatibility, synonym for SUPERUSER */
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(TRUE));
					}
					else if (strcmp((yyvsp[0].str), "nocreateuser") == 0)
					{
						/* For backwards compatibility, synonym for SUPERUSER */
						(yyval.defelt) = makeDefElem("superuser", (Node *)makeInteger(FALSE));
					}
					else if (strcmp((yyvsp[0].str), "createrole") == 0)
						(yyval.defelt) = makeDefElem("createrole", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nocreaterole") == 0)
						(yyval.defelt) = makeDefElem("createrole", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "replication") == 0)
						(yyval.defelt) = makeDefElem("isreplication", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "noreplication") == 0)
						(yyval.defelt) = makeDefElem("isreplication", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "createdb") == 0)
						(yyval.defelt) = makeDefElem("createdb", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nocreatedb") == 0)
						(yyval.defelt) = makeDefElem("createdb", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "login") == 0)
						(yyval.defelt) = makeDefElem("canlogin", (Node *)makeInteger(TRUE));
					else if (strcmp((yyvsp[0].str), "nologin") == 0)
						(yyval.defelt) = makeDefElem("canlogin", (Node *)makeInteger(FALSE));
					else if (strcmp((yyvsp[0].str), "noinherit") == 0)
					{
						/*
						 * Note that INHERIT is a keyword, so it's handled by main parser, but
						 * NOINHERIT is handled here.
						 */
						(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(FALSE));
					}
					else
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("unrecognized role option \"%s\"", (yyvsp[0].str)),
									 parser_errposition((yylsp[0])));
				}
#line 27360 "gram.cpp"
    break;

  case 178: /* CreateOptRoleElem: AlterOptRoleElem  */
#line 1666 "gram.y"
                                                                { (yyval.defelt) = (yyvsp[0].defelt); }
#line 27366 "gram.cpp"
    break;

  case 179: /* CreateOptRoleElem: SYSID Iconst  */
#line 1669 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("sysid", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 27374 "gram.cpp"
    break;

  case 180: /* CreateOptRoleElem: ADMIN role_list  */
#line 1673 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("adminmembers", (Node *)(yyvsp[0].list));
				}
#line 27382 "gram.cpp"
    break;

  case 181: /* CreateOptRoleElem: ROLE role_list  */
#line 1677 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[0].list));
				}
#line 27390 "gram.cpp"
    break;

  case 182: /* CreateOptRoleElem: IN_P ROLE role_list  */
#line 1681 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[0].list));
				}
#line 27398 "gram.cpp"
    break;

  case 183: /* CreateOptRoleElem: IN_P GROUP_P role_list  */
#line 1685 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[0].list));
				}
#line 27406 "gram.cpp"
    break;

  case 184: /* deny_login_role: DENY deny_interval  */
#line 1690 "gram.y"
                                    { (yyval.node) = (Node *)(yyvsp[0].node); }
#line 27412 "gram.cpp"
    break;

  case 185: /* deny_login_role: DENY deny_point  */
#line 1691 "gram.y"
                                          { (yyval.node) = (Node *)(yyvsp[0].node); }
#line 27418 "gram.cpp"
    break;

  case 186: /* deny_interval: BETWEEN deny_point AND deny_point  */
#line 1695 "gram.y"
                                {
					DenyLoginInterval *n = makeNode(DenyLoginInterval);
					n->start = (DenyLoginPoint *)(yyvsp[-2].node);
					n->end = (DenyLoginPoint *)(yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 27429 "gram.cpp"
    break;

  case 187: /* deny_day_specifier: Sconst  */
#line 1703 "gram.y"
                           { (yyval.node) = (Node *)makeString((yyvsp[0].str)); }
#line 27435 "gram.cpp"
    break;

  case 188: /* deny_day_specifier: Iconst  */
#line 1704 "gram.y"
                                 { (yyval.node) = (Node *)makeInteger((yyvsp[0].ival)); }
#line 27441 "gram.cpp"
    break;

  case 189: /* deny_point: DAY_P deny_day_specifier opt_time  */
#line 1708 "gram.y"
                                {
					DenyLoginPoint *n = makeNode(DenyLoginPoint);
					n->day = (Value *)(yyvsp[-1].node);
					n->time = (Value *)(yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 27452 "gram.cpp"
    break;

  case 190: /* opt_time: TIME Sconst  */
#line 1716 "gram.y"
                      { (yyval.node) = (Node *)makeString((yyvsp[0].str)); }
#line 27458 "gram.cpp"
    break;

  case 191: /* opt_time: %empty  */
#line 1717 "gram.y"
                                { (yyval.node) = NULL; }
#line 27464 "gram.cpp"
    break;

  case 192: /* exttab_auth_list: '(' keyvalue_list ')'  */
#line 1721 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 27470 "gram.cpp"
    break;

  case 193: /* exttab_auth_list: %empty  */
#line 1722 "gram.y"
                                                        { (yyval.list) = NIL; }
#line 27476 "gram.cpp"
    break;

  case 194: /* keyvalue_list: keyvalue_pair  */
#line 1726 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 27482 "gram.cpp"
    break;

  case 195: /* keyvalue_list: keyvalue_list ',' keyvalue_pair  */
#line 1727 "gram.y"
                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 27488 "gram.cpp"
    break;

  case 196: /* keyvalue_pair: ColLabel '=' Sconst  */
#line 1732 "gram.y"
                {
			(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *)makeString((yyvsp[0].str)));
		}
#line 27496 "gram.cpp"
    break;

  case 197: /* CreateUserStmt: CREATE USER RoleId opt_with OptRoleList  */
#line 1746 "gram.y"
                                {
					CreateRoleStmt *n = makeNode(CreateRoleStmt);
					n->stmt_type = ROLESTMT_USER;
					n->role = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27508 "gram.cpp"
    break;

  case 198: /* AlterRoleStmt: ALTER ROLE RoleId opt_with AlterOptRoleList  */
#line 1764 "gram.y"
                                 {
					AlterRoleStmt *n = makeNode(AlterRoleStmt);
					n->role = (yyvsp[-2].str);
					n->action = +1;	/* add, if there are members */
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27520 "gram.cpp"
    break;

  case 199: /* opt_in_database: %empty  */
#line 1774 "gram.y"
                                                                        { (yyval.str) = NULL; }
#line 27526 "gram.cpp"
    break;

  case 200: /* opt_in_database: IN_P DATABASE database_name  */
#line 1775 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 27532 "gram.cpp"
    break;

  case 201: /* AlterRoleSetStmt: ALTER ROLE RoleId opt_in_database SetResetClause  */
#line 1780 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = (yyvsp[-2].str);
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27544 "gram.cpp"
    break;

  case 202: /* AlterRoleSetStmt: ALTER ROLE ALL opt_in_database SetResetClause  */
#line 1788 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = NULL;
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27556 "gram.cpp"
    break;

  case 203: /* AlterUserStmt: ALTER USER RoleId opt_with AlterOptRoleList  */
#line 1806 "gram.y"
                                 {
					AlterRoleStmt *n = makeNode(AlterRoleStmt);
					n->role = (yyvsp[-2].str);
					n->action = +1;	/* add, if there are members */
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 27568 "gram.cpp"
    break;

  case 204: /* AlterUserSetStmt: ALTER USER RoleId opt_in_database SetResetClause  */
#line 1818 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = (yyvsp[-2].str);
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27580 "gram.cpp"
    break;

  case 205: /* AlterUserSetStmt: ALTER USER ALL opt_in_database SetResetClause  */
#line 1826 "gram.y"
                                {
					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
					n->role = NULL;
					n->database = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 27592 "gram.cpp"
    break;

  case 206: /* DropRoleStmt: DROP ROLE role_list  */
#line 1847 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = FALSE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27603 "gram.cpp"
    break;

  case 207: /* DropRoleStmt: DROP ROLE IF_P EXISTS role_list  */
#line 1854 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = TRUE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27614 "gram.cpp"
    break;

  case 208: /* DropUserStmt: DROP USER role_list  */
#line 1873 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = FALSE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27625 "gram.cpp"
    break;

  case 209: /* DropUserStmt: DROP USER IF_P EXISTS role_list  */
#line 1880 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->roles = (yyvsp[0].list);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 27636 "gram.cpp"
    break;

  case 210: /* CreateGroupStmt: CREATE GROUP_P RoleId opt_with OptRoleList  */
#line 1897 "gram.y"
                                {
					CreateRoleStmt *n = makeNode(CreateRoleStmt);
					n->stmt_type = ROLESTMT_GROUP;
					n->role = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27648 "gram.cpp"
    break;

  case 211: /* AlterGroupStmt: ALTER GROUP_P RoleId add_drop USER role_list  */
#line 1915 "gram.y"
                                {
					AlterRoleStmt *n = makeNode(AlterRoleStmt);
					n->role = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->options = list_make1(makeDefElem("rolemembers",
														(Node *)(yyvsp[0].list)));
					(yyval.node) = (Node *)n;
				}
#line 27661 "gram.cpp"
    break;

  case 212: /* add_drop: ADD_P  */
#line 1925 "gram.y"
                                                                                        { (yyval.ival) = +1; }
#line 27667 "gram.cpp"
    break;

  case 213: /* add_drop: DROP  */
#line 1926 "gram.y"
                                                                                                { (yyval.ival) = -1; }
#line 27673 "gram.cpp"
    break;

  case 214: /* DropGroupStmt: DROP GROUP_P role_list  */
#line 1939 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = FALSE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27684 "gram.cpp"
    break;

  case 215: /* DropGroupStmt: DROP GROUP_P IF_P EXISTS role_list  */
#line 1946 "gram.y"
                                {
					DropRoleStmt *n = makeNode(DropRoleStmt);
					n->missing_ok = TRUE;
					n->roles = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 27695 "gram.cpp"
    break;

  case 216: /* CreateSchemaStmt: CREATE SCHEMA OptSchemaName AUTHORIZATION RoleId OptSchemaEltList  */
#line 1963 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* One can omit the schema name or the authorization id. */
					if ((yyvsp[-3].str) != NULL)
						n->schemaname = (yyvsp[-3].str);
					else
						n->schemaname = (yyvsp[-1].str);
					n->authid = (yyvsp[-1].str);
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = false;
					(yyval.node) = (Node *)n;
				}
#line 27712 "gram.cpp"
    break;

  case 217: /* CreateSchemaStmt: CREATE SCHEMA ColId OptSchemaEltList  */
#line 1976 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[-1].str);
					n->authid = NULL;
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = false;
					(yyval.node) = (Node *)n;
				}
#line 27726 "gram.cpp"
    break;

  case 218: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS OptSchemaName AUTHORIZATION RoleId OptSchemaEltList  */
#line 1986 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* One can omit the schema name or the authorization id. */
					if ((yyvsp[-3].str) != NULL)
						n->schemaname = (yyvsp[-3].str);
					else
						n->schemaname = (yyvsp[-1].str);
					n->authid = (yyvsp[-1].str);
					if ((yyvsp[0].list) != NIL)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[0])));
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = true;
					(yyval.node) = (Node *)n;
				}
#line 27748 "gram.cpp"
    break;

  case 219: /* CreateSchemaStmt: CREATE SCHEMA IF_P NOT EXISTS ColId OptSchemaEltList  */
#line 2004 "gram.y"
                                {
					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[-1].str);
					n->authid = NULL;
					if ((yyvsp[0].list) != NIL)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[0])));
					n->schemaElts = (yyvsp[0].list);
					n->if_not_exists = true;
					(yyval.node) = (Node *)n;
				}
#line 27767 "gram.cpp"
    break;

  case 220: /* OptSchemaName: ColId  */
#line 2021 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 27773 "gram.cpp"
    break;

  case 221: /* OptSchemaName: %empty  */
#line 2022 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 27779 "gram.cpp"
    break;

  case 222: /* OptSchemaEltList: OptSchemaEltList schema_stmt  */
#line 2027 "gram.y"
                                {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[0]);
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 27789 "gram.cpp"
    break;

  case 223: /* OptSchemaEltList: %empty  */
#line 2033 "gram.y"
                                { (yyval.list) = NIL; }
#line 27795 "gram.cpp"
    break;

  case 230: /* VariableSetStmt: SET set_rest  */
#line 2061 "gram.y"
                                {
					VariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->is_local = false;
					(yyval.node) = (Node *) n;
				}
#line 27805 "gram.cpp"
    break;

  case 231: /* VariableSetStmt: SET LOCAL set_rest  */
#line 2067 "gram.y"
                                {
					VariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->is_local = true;
					(yyval.node) = (Node *) n;
				}
#line 27815 "gram.cpp"
    break;

  case 232: /* VariableSetStmt: SET SESSION set_rest  */
#line 2073 "gram.y"
                                {
					VariableSetStmt *n = (yyvsp[0].vsetstmt);
					n->is_local = false;
					(yyval.node) = (Node *) n;
				}
#line 27825 "gram.cpp"
    break;

  case 233: /* set_rest: TRANSACTION transaction_mode_list  */
#line 2082 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_MULTI;
					n->name = "TRANSACTION";
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27837 "gram.cpp"
    break;

  case 234: /* set_rest: SESSION CHARACTERISTICS AS TRANSACTION transaction_mode_list  */
#line 2090 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_MULTI;
					n->name = "SESSION CHARACTERISTICS";
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27849 "gram.cpp"
    break;

  case 236: /* generic_set: var_name TO var_list  */
#line 2102 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27861 "gram.cpp"
    break;

  case 237: /* generic_set: var_name '=' var_list  */
#line 2110 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[-2].str);
					n->args = (yyvsp[0].list);
					(yyval.vsetstmt) = n;
				}
#line 27873 "gram.cpp"
    break;

  case 238: /* generic_set: var_name TO DEFAULT  */
#line 2118 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 27884 "gram.cpp"
    break;

  case 239: /* generic_set: var_name '=' DEFAULT  */
#line 2125 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 27895 "gram.cpp"
    break;

  case 240: /* set_rest_more: generic_set  */
#line 2134 "gram.y"
                                                                                {(yyval.vsetstmt) = (yyvsp[0].vsetstmt);}
#line 27901 "gram.cpp"
    break;

  case 241: /* set_rest_more: var_name FROM CURRENT_P  */
#line 2136 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[-2].str);
					(yyval.vsetstmt) = n;
				}
#line 27912 "gram.cpp"
    break;

  case 242: /* set_rest_more: TIME ZONE zone_value  */
#line 2144 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "timezone";
					if ((yyvsp[0].node) != NULL)
						n->args = list_make1((yyvsp[0].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				}
#line 27927 "gram.cpp"
    break;

  case 243: /* set_rest_more: CATALOG_P Sconst  */
#line 2155 "gram.y"
                                {
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("current database cannot be changed"),
							 parser_errposition((yylsp[0])));
					(yyval.vsetstmt) = NULL; /*not reached*/
				}
#line 27939 "gram.cpp"
    break;

  case 244: /* set_rest_more: SCHEMA Sconst  */
#line 2163 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "search_path";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 27951 "gram.cpp"
    break;

  case 245: /* set_rest_more: NAMES opt_encoding  */
#line 2171 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "client_encoding";
					if ((yyvsp[0].str) != NULL)
						n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				}
#line 27966 "gram.cpp"
    break;

  case 246: /* set_rest_more: ROLE NonReservedWord_or_Sconst  */
#line 2182 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "role";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 27978 "gram.cpp"
    break;

  case 247: /* set_rest_more: SESSION AUTHORIZATION NonReservedWord_or_Sconst  */
#line 2190 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "session_authorization";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 27990 "gram.cpp"
    break;

  case 248: /* set_rest_more: SESSION AUTHORIZATION DEFAULT  */
#line 2198 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = "session_authorization";
					(yyval.vsetstmt) = n;
				}
#line 28001 "gram.cpp"
    break;

  case 249: /* set_rest_more: XML_P OPTION document_or_content  */
#line 2205 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = "xmloption";
					n->args = list_make1(makeStringConst((yyvsp[0].ival) == XMLOPTION_DOCUMENT ? pstrdup("DOCUMENT") : pstrdup("CONTENT"), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28013 "gram.cpp"
    break;

  case 250: /* set_rest_more: TRANSACTION SNAPSHOT Sconst  */
#line 2214 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_SET_MULTI;
					n->name = "TRANSACTION SNAPSHOT";
					n->args = list_make1(makeStringConst((yyvsp[0].str), (yylsp[0])));
					(yyval.vsetstmt) = n;
				}
#line 28025 "gram.cpp"
    break;

  case 251: /* var_name: ColId  */
#line 2223 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28031 "gram.cpp"
    break;

  case 252: /* var_name: var_name '.' ColId  */
#line 2225 "gram.y"
                                { (yyval.str) = psprintf("%s.%s", (yyvsp[-2].str), (yyvsp[0].str)); }
#line 28037 "gram.cpp"
    break;

  case 253: /* var_list: var_value  */
#line 2228 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 28043 "gram.cpp"
    break;

  case 254: /* var_list: var_list ',' var_value  */
#line 2229 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 28049 "gram.cpp"
    break;

  case 255: /* var_value: opt_boolean_or_string  */
#line 2233 "gram.y"
                                { (yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0])); }
#line 28055 "gram.cpp"
    break;

  case 256: /* var_value: NumericOnly  */
#line 2235 "gram.y"
                                { (yyval.node) = makeAConst((yyvsp[0].value), (yylsp[0])); }
#line 28061 "gram.cpp"
    break;

  case 257: /* iso_level: READ UNCOMMITTED  */
#line 2238 "gram.y"
                                                                                { (yyval.str) = "read uncommitted"; }
#line 28067 "gram.cpp"
    break;

  case 258: /* iso_level: READ COMMITTED  */
#line 2239 "gram.y"
                                                                                        { (yyval.str) = "read committed"; }
#line 28073 "gram.cpp"
    break;

  case 259: /* iso_level: REPEATABLE READ  */
#line 2240 "gram.y"
                                                                                        { (yyval.str) = "repeatable read"; }
#line 28079 "gram.cpp"
    break;

  case 260: /* iso_level: SERIALIZABLE  */
#line 2241 "gram.y"
                                                                                        { (yyval.str) = "serializable"; }
#line 28085 "gram.cpp"
    break;

  case 261: /* opt_boolean_or_string: TRUE_P  */
#line 2245 "gram.y"
                                                                                                { (yyval.str) = "true"; }
#line 28091 "gram.cpp"
    break;

  case 262: /* opt_boolean_or_string: FALSE_P  */
#line 2246 "gram.y"
                                                                                                { (yyval.str) = "false"; }
#line 28097 "gram.cpp"
    break;

  case 263: /* opt_boolean_or_string: ON  */
#line 2247 "gram.y"
                                                                                                { (yyval.str) = "on"; }
#line 28103 "gram.cpp"
    break;

  case 264: /* opt_boolean_or_string: NonReservedWord_or_Sconst  */
#line 2253 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28109 "gram.cpp"
    break;

  case 265: /* zone_value: Sconst  */
#line 2266 "gram.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 28117 "gram.cpp"
    break;

  case 266: /* zone_value: IDENT  */
#line 2270 "gram.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 28125 "gram.cpp"
    break;

  case 267: /* zone_value: ConstInterval Sconst opt_interval  */
#line 2274 "gram.y"
                                {
					TypeName *t = (yyvsp[-2].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						A_Const *n = (A_Const *) linitial((yyvsp[0].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[0])));
					}
					t->typmods = (yyvsp[0].list);
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 28144 "gram.cpp"
    break;

  case 268: /* zone_value: ConstInterval '(' Iconst ')' Sconst opt_interval  */
#line 2289 "gram.y"
                                {
					TypeName *t = (yyvsp[-5].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						A_Const *n = (A_Const *) linitial((yyvsp[0].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[0])));
						if (list_length((yyvsp[0].list)) != 1)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("interval precision specified twice"),
									 parser_errposition((yylsp[-5])));
						t->typmods = lappend((yyvsp[0].list), makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 28171 "gram.cpp"
    break;

  case 269: /* zone_value: NumericOnly  */
#line 2311 "gram.y"
                                                                                        { (yyval.node) = makeAConst((yyvsp[0].value), (yylsp[0])); }
#line 28177 "gram.cpp"
    break;

  case 270: /* zone_value: DEFAULT  */
#line 2312 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 28183 "gram.cpp"
    break;

  case 271: /* zone_value: LOCAL  */
#line 2313 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 28189 "gram.cpp"
    break;

  case 272: /* opt_encoding: Sconst  */
#line 2317 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28195 "gram.cpp"
    break;

  case 273: /* opt_encoding: DEFAULT  */
#line 2318 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 28201 "gram.cpp"
    break;

  case 274: /* opt_encoding: %empty  */
#line 2319 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 28207 "gram.cpp"
    break;

  case 275: /* NonReservedWord_or_Sconst: NonReservedWord  */
#line 2323 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 28213 "gram.cpp"
    break;

  case 276: /* NonReservedWord_or_Sconst: Sconst  */
#line 2324 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 28219 "gram.cpp"
    break;

  case 277: /* VariableResetStmt: RESET reset_rest  */
#line 2328 "gram.y"
                                                                                        { (yyval.node) = (Node *) (yyvsp[0].vsetstmt); }
#line 28225 "gram.cpp"
    break;

  case 278: /* reset_rest: generic_reset  */
#line 2332 "gram.y"
                                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 28231 "gram.cpp"
    break;

  case 279: /* reset_rest: TIME ZONE  */
#line 2334 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = "timezone";
					(yyval.vsetstmt) = n;
				}
#line 28242 "gram.cpp"
    break;

  case 280: /* reset_rest: TRANSACTION ISOLATION LEVEL  */
#line 2341 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = "transaction_isolation";
					(yyval.vsetstmt) = n;
				}
#line 28253 "gram.cpp"
    break;

  case 281: /* reset_rest: SESSION AUTHORIZATION  */
#line 2348 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = "session_authorization";
					(yyval.vsetstmt) = n;
				}
#line 28264 "gram.cpp"
    break;

  case 282: /* generic_reset: var_name  */
#line 2358 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[0].str);
					(yyval.vsetstmt) = n;
				}
#line 28275 "gram.cpp"
    break;

  case 283: /* generic_reset: ALL  */
#line 2365 "gram.y"
                                {
					VariableSetStmt *n = makeNode(VariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				}
#line 28285 "gram.cpp"
    break;

  case 284: /* SetResetClause: SET set_rest  */
#line 2374 "gram.y"
                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 28291 "gram.cpp"
    break;

  case 285: /* SetResetClause: VariableResetStmt  */
#line 2375 "gram.y"
                                                                        { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[0].node); }
#line 28297 "gram.cpp"
    break;

  case 286: /* FunctionSetResetClause: SET set_rest_more  */
#line 2380 "gram.y"
                                                                        { (yyval.vsetstmt) = (yyvsp[0].vsetstmt); }
#line 28303 "gram.cpp"
    break;

  case 287: /* FunctionSetResetClause: VariableResetStmt  */
#line 2381 "gram.y"
                                                                        { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[0].node); }
#line 28309 "gram.cpp"
    break;

  case 288: /* VariableShowStmt: SHOW var_name  */
#line 2387 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 28319 "gram.cpp"
    break;

  case 289: /* VariableShowStmt: SHOW TIME ZONE  */
#line 2393 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "timezone";
					(yyval.node) = (Node *) n;
				}
#line 28329 "gram.cpp"
    break;

  case 290: /* VariableShowStmt: SHOW TRANSACTION ISOLATION LEVEL  */
#line 2399 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "transaction_isolation";
					(yyval.node) = (Node *) n;
				}
#line 28339 "gram.cpp"
    break;

  case 291: /* VariableShowStmt: SHOW SESSION AUTHORIZATION  */
#line 2405 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "session_authorization";
					(yyval.node) = (Node *) n;
				}
#line 28349 "gram.cpp"
    break;

  case 292: /* VariableShowStmt: SHOW ALL  */
#line 2411 "gram.y"
                                {
					VariableShowStmt *n = makeNode(VariableShowStmt);
					n->name = "all";
					(yyval.node) = (Node *) n;
				}
#line 28359 "gram.cpp"
    break;

  case 293: /* ConstraintsSetStmt: SET CONSTRAINTS constraints_set_list constraints_set_mode  */
#line 2421 "gram.y"
                                {
					ConstraintsSetStmt *n = makeNode(ConstraintsSetStmt);
					n->constraints = (yyvsp[-1].list);
					n->deferred = (yyvsp[0].boolean);
					(yyval.node) = (Node *) n;
				}
#line 28370 "gram.cpp"
    break;

  case 294: /* constraints_set_list: ALL  */
#line 2430 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 28376 "gram.cpp"
    break;

  case 295: /* constraints_set_list: qualified_name_list  */
#line 2431 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 28382 "gram.cpp"
    break;

  case 296: /* constraints_set_mode: DEFERRED  */
#line 2435 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 28388 "gram.cpp"
    break;

  case 297: /* constraints_set_mode: IMMEDIATE  */
#line 2436 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 28394 "gram.cpp"
    break;

  case 298: /* CheckPointStmt: CHECKPOINT  */
#line 2445 "gram.y"
                                {
					CheckPointStmt *n = makeNode(CheckPointStmt);
					(yyval.node) = (Node *)n;
				}
#line 28403 "gram.cpp"
    break;

  case 299: /* DiscardStmt: DISCARD ALL  */
#line 2460 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_ALL;
					(yyval.node) = (Node *) n;
				}
#line 28413 "gram.cpp"
    break;

  case 300: /* DiscardStmt: DISCARD TEMP  */
#line 2466 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_TEMP;
					(yyval.node) = (Node *) n;
				}
#line 28423 "gram.cpp"
    break;

  case 301: /* DiscardStmt: DISCARD TEMPORARY  */
#line 2472 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_TEMP;
					(yyval.node) = (Node *) n;
				}
#line 28433 "gram.cpp"
    break;

  case 302: /* DiscardStmt: DISCARD PLANS  */
#line 2478 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_PLANS;
					(yyval.node) = (Node *) n;
				}
#line 28443 "gram.cpp"
    break;

  case 303: /* DiscardStmt: DISCARD SEQUENCES  */
#line 2484 "gram.y"
                                {
					DiscardStmt *n = makeNode(DiscardStmt);
					n->target = DISCARD_SEQUENCES;
					(yyval.node) = (Node *) n;
				}
#line 28453 "gram.cpp"
    break;

  case 304: /* AlterTableStmt: ALTER TABLE relation_expr alter_table_cmds  */
#line 2503 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28466 "gram.cpp"
    break;

  case 305: /* AlterTableStmt: ALTER TABLE IF_P EXISTS relation_expr alter_table_cmds  */
#line 2512 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28479 "gram.cpp"
    break;

  case 306: /* AlterTableStmt: ALTER EXTERNAL TABLE relation_expr alter_table_cmds  */
#line 2521 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_EXTTABLE;
					(yyval.node) = (Node *)n;
				}
#line 28491 "gram.cpp"
    break;

  case 307: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
#line 2529 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-4].str);
					n->objtype = OBJECT_TABLE;
					n->roles = NIL;
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28506 "gram.cpp"
    break;

  case 308: /* AlterTableStmt: ALTER TABLE ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
#line 2540 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-7].str);
					n->objtype = OBJECT_TABLE;
					n->roles = (yyvsp[-4].list);
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28521 "gram.cpp"
    break;

  case 309: /* AlterTableStmt: ALTER INDEX qualified_name alter_table_cmds  */
#line 2551 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28534 "gram.cpp"
    break;

  case 310: /* AlterTableStmt: ALTER INDEX IF_P EXISTS qualified_name alter_table_cmds  */
#line 2560 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28547 "gram.cpp"
    break;

  case 311: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
#line 2569 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-4].str);
					n->objtype = OBJECT_INDEX;
					n->roles = NIL;
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28562 "gram.cpp"
    break;

  case 312: /* AlterTableStmt: ALTER INDEX ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
#line 2580 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-7].str);
					n->objtype = OBJECT_INDEX;
					n->roles = (yyvsp[-4].list);
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28577 "gram.cpp"
    break;

  case 313: /* AlterTableStmt: ALTER SEQUENCE qualified_name alter_table_cmds  */
#line 2591 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28590 "gram.cpp"
    break;

  case 314: /* AlterTableStmt: ALTER SEQUENCE IF_P EXISTS qualified_name alter_table_cmds  */
#line 2600 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28603 "gram.cpp"
    break;

  case 315: /* AlterTableStmt: ALTER VIEW qualified_name alter_table_cmds  */
#line 2609 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28616 "gram.cpp"
    break;

  case 316: /* AlterTableStmt: ALTER VIEW IF_P EXISTS qualified_name alter_table_cmds  */
#line 2618 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28629 "gram.cpp"
    break;

  case 317: /* AlterTableStmt: ALTER MATERIALIZED VIEW qualified_name alter_table_cmds  */
#line 2627 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_MATVIEW;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 28642 "gram.cpp"
    break;

  case 318: /* AlterTableStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name alter_table_cmds  */
#line 2636 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_MATVIEW;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 28655 "gram.cpp"
    break;

  case 319: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name SET TABLESPACE name opt_nowait  */
#line 2645 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-4].str);
					n->objtype = OBJECT_MATVIEW;
					n->roles = NIL;
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28670 "gram.cpp"
    break;

  case 320: /* AlterTableStmt: ALTER MATERIALIZED VIEW ALL IN_P TABLESPACE name OWNED BY role_list SET TABLESPACE name opt_nowait  */
#line 2656 "gram.y"
                                {
					AlterTableMoveAllStmt *n =
						makeNode(AlterTableMoveAllStmt);
					n->orig_tablespacename = (yyvsp[-7].str);
					n->objtype = OBJECT_MATVIEW;
					n->roles = (yyvsp[-4].list);
					n->new_tablespacename = (yyvsp[-1].str);
					n->nowait = (yyvsp[0].boolean);
					(yyval.node) = (Node *)n;
				}
#line 28685 "gram.cpp"
    break;

  case 321: /* alter_table_cmds: alter_table_cmd  */
#line 2669 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 28691 "gram.cpp"
    break;

  case 322: /* alter_table_cmds: alter_table_cmds ',' alter_table_cmd  */
#line 2670 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 28697 "gram.cpp"
    break;

  case 323: /* alter_table_cmd: ADD_P columnDef  */
#line 2676 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddColumn;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 28708 "gram.cpp"
    break;

  case 324: /* alter_table_cmd: ADD_P COLUMN columnDef  */
#line 2684 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddColumn;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 28719 "gram.cpp"
    break;

  case 325: /* alter_table_cmd: ALTER opt_column ColId alter_column_default  */
#line 2692 "gram.y"
                                {
					ColumnDef *colDef = makeNode(ColumnDef);
					colDef->raw_default = (yyvsp[0].node);
					
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ColumnDefault;
					n->name = (yyvsp[-1].str);
					n->def = (Node *) colDef;
					(yyval.node) = (Node *)n;
				}
#line 28734 "gram.cpp"
    break;

  case 326: /* alter_table_cmd: ALTER opt_column ColId DROP NOT NULL_P  */
#line 2704 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropNotNull;
					n->name = (yyvsp[-3].str);
					(yyval.node) = (Node *)n;
				}
#line 28745 "gram.cpp"
    break;

  case 327: /* alter_table_cmd: ALTER opt_column ColId SET NOT NULL_P  */
#line 2712 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetNotNull;
					n->name = (yyvsp[-3].str);
					(yyval.node) = (Node *)n;
				}
#line 28756 "gram.cpp"
    break;

  case 328: /* alter_table_cmd: ALTER opt_column ColId SET STATISTICS SignedIconst  */
#line 2720 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetStatistics;
					n->name = (yyvsp[-3].str);
					n->def = (Node *) makeInteger((yyvsp[0].ival));
					(yyval.node) = (Node *)n;
				}
#line 28768 "gram.cpp"
    break;

  case 329: /* alter_table_cmd: ALTER opt_column ColId SET reloptions  */
#line 2729 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetOptions;
					n->name = (yyvsp[-2].str);
					n->def = (Node *) (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 28780 "gram.cpp"
    break;

  case 330: /* alter_table_cmd: ALTER opt_column ColId RESET reloptions  */
#line 2738 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ResetOptions;
					n->name = (yyvsp[-2].str);
					n->def = (Node *) (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 28792 "gram.cpp"
    break;

  case 331: /* alter_table_cmd: ALTER opt_column ColId SET STORAGE ColId  */
#line 2747 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetStorage;
					n->name = (yyvsp[-3].str);
					n->def = (Node *) makeString((yyvsp[0].str));
					(yyval.node) = (Node *)n;
				}
#line 28804 "gram.cpp"
    break;

  case 332: /* alter_table_cmd: DROP opt_column IF_P EXISTS ColId opt_drop_behavior  */
#line 2756 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 28817 "gram.cpp"
    break;

  case 333: /* alter_table_cmd: DROP opt_column ColId opt_drop_behavior  */
#line 2766 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 28830 "gram.cpp"
    break;

  case 334: /* alter_table_cmd: ALTER opt_column ColId opt_set_data TYPE_P Typename opt_collate_clause alter_using  */
#line 2779 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					ColumnDef *def = makeNode(ColumnDef);
					n->subtype = AT_AlterColumnType;
					n->name = (yyvsp[-5].str);
					n->def = (Node *) def;
					/* We only use these fields of the ColumnDef node */
					def->typeName = (yyvsp[-2].typnam);
					def->collClause = (CollateClause *) (yyvsp[-1].node);
					def->raw_default = (yyvsp[0].node);
					def->location = (yylsp[-5]);
					(yyval.node) = (Node *)n;
				}
#line 28848 "gram.cpp"
    break;

  case 335: /* alter_table_cmd: ALTER opt_column ColId alter_generic_options  */
#line 2794 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AlterColumnGenericOptions;
					n->name = (yyvsp[-1].str);
					n->def = (Node *) (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 28860 "gram.cpp"
    break;

  case 336: /* alter_table_cmd: ADD_P TableConstraint  */
#line 2803 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddConstraint;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 28871 "gram.cpp"
    break;

  case 337: /* alter_table_cmd: ALTER CONSTRAINT name ConstraintAttributeSpec  */
#line 2811 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					Constraint *c = makeNode(Constraint);
					n->subtype = AT_AlterConstraint;
					n->def = (Node *) c;
					c->contype = CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 28889 "gram.cpp"
    break;

  case 338: /* alter_table_cmd: VALIDATE CONSTRAINT name  */
#line 2826 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ValidateConstraint;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 28900 "gram.cpp"
    break;

  case 339: /* alter_table_cmd: DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
#line 2834 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropConstraint;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 28913 "gram.cpp"
    break;

  case 340: /* alter_table_cmd: DROP CONSTRAINT name opt_drop_behavior  */
#line 2844 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropConstraint;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 28926 "gram.cpp"
    break;

  case 341: /* alter_table_cmd: SET WITH OIDS  */
#line 2854 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddOids;
					(yyval.node) = (Node *)n;
				}
#line 28936 "gram.cpp"
    break;

  case 342: /* alter_table_cmd: SET WITHOUT OIDS  */
#line 2861 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropOids;
					(yyval.node) = (Node *)n;
				}
#line 28946 "gram.cpp"
    break;

  case 343: /* alter_table_cmd: CLUSTER ON name  */
#line 2868 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ClusterOn;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 28957 "gram.cpp"
    break;

  case 344: /* alter_table_cmd: SET WITHOUT CLUSTER  */
#line 2876 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropCluster;
					n->name = NULL;
					(yyval.node) = (Node *)n;
				}
#line 28968 "gram.cpp"
    break;

  case 345: /* alter_table_cmd: ENABLE_P TRIGGER name  */
#line 2884 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 28979 "gram.cpp"
    break;

  case 346: /* alter_table_cmd: ENABLE_P ALWAYS TRIGGER name  */
#line 2892 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableAlwaysTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 28990 "gram.cpp"
    break;

  case 347: /* alter_table_cmd: ENABLE_P REPLICA TRIGGER name  */
#line 2900 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableReplicaTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29001 "gram.cpp"
    break;

  case 348: /* alter_table_cmd: ENABLE_P TRIGGER ALL  */
#line 2908 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableTrigAll;
					(yyval.node) = (Node *)n;
				}
#line 29011 "gram.cpp"
    break;

  case 349: /* alter_table_cmd: ENABLE_P TRIGGER USER  */
#line 2915 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableTrigUser;
					(yyval.node) = (Node *)n;
				}
#line 29021 "gram.cpp"
    break;

  case 350: /* alter_table_cmd: DISABLE_P TRIGGER name  */
#line 2922 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableTrig;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29032 "gram.cpp"
    break;

  case 351: /* alter_table_cmd: DISABLE_P TRIGGER ALL  */
#line 2930 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableTrigAll;
					(yyval.node) = (Node *)n;
				}
#line 29042 "gram.cpp"
    break;

  case 352: /* alter_table_cmd: DISABLE_P TRIGGER USER  */
#line 2937 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableTrigUser;
					(yyval.node) = (Node *)n;
				}
#line 29052 "gram.cpp"
    break;

  case 353: /* alter_table_cmd: ENABLE_P RULE name  */
#line 2944 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29063 "gram.cpp"
    break;

  case 354: /* alter_table_cmd: ENABLE_P ALWAYS RULE name  */
#line 2952 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableAlwaysRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29074 "gram.cpp"
    break;

  case 355: /* alter_table_cmd: ENABLE_P REPLICA RULE name  */
#line 2960 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_EnableReplicaRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29085 "gram.cpp"
    break;

  case 356: /* alter_table_cmd: DISABLE_P RULE name  */
#line 2968 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DisableRule;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29096 "gram.cpp"
    break;

  case 357: /* alter_table_cmd: INHERIT qualified_name  */
#line 2976 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddInherit;
					n->def = (Node *) (yyvsp[0].range);
					(yyval.node) = (Node *)n;
				}
#line 29107 "gram.cpp"
    break;

  case 358: /* alter_table_cmd: NO INHERIT qualified_name  */
#line 2984 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropInherit;
					n->def = (Node *) (yyvsp[0].range);
					(yyval.node) = (Node *)n;
				}
#line 29118 "gram.cpp"
    break;

  case 359: /* alter_table_cmd: SET DistributedBy  */
#line 2993 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetDistributedBy;
					n->def = (Node *) list_make2(NULL, (yyvsp[0].node));
					(yyval.node) = (Node *)n;
				}
#line 29129 "gram.cpp"
    break;

  case 360: /* alter_table_cmd: SET WITH definition DistributedBy  */
#line 3001 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetDistributedBy;
					n->def = (Node *) list_make2((yyvsp[-1].list), (yyvsp[0].node));
					(yyval.node) = (Node *)n;
				}
#line 29140 "gram.cpp"
    break;

  case 361: /* alter_table_cmd: SET WITH definition  */
#line 3009 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetDistributedBy;
					n->def = (Node *) list_make2((yyvsp[0].list), NULL);
					(yyval.node) = (Node *)n;
				}
#line 29151 "gram.cpp"
    break;

  case 362: /* alter_table_cmd: alter_table_partition_cmd  */
#line 3016 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 29159 "gram.cpp"
    break;

  case 363: /* alter_table_cmd: EXPAND TABLE  */
#line 3021 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ExpandTable;
					(yyval.node) = (Node *)n;
				}
#line 29169 "gram.cpp"
    break;

  case 364: /* alter_table_cmd: EXPAND PARTITION PREPARE  */
#line 3028 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ExpandPartitionTablePrepare;
					(yyval.node) = (Node *)n;
				}
#line 29179 "gram.cpp"
    break;

  case 365: /* alter_table_cmd: OF any_name  */
#line 3035 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					TypeName *def = makeTypeNameFromNameList((yyvsp[0].list));
					def->location = (yylsp[0]);
					n->subtype = AT_AddOf;
					n->def = (Node *) def;
					(yyval.node) = (Node *)n;
				}
#line 29192 "gram.cpp"
    break;

  case 366: /* alter_table_cmd: NOT OF  */
#line 3045 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropOf;
					(yyval.node) = (Node *)n;
				}
#line 29202 "gram.cpp"
    break;

  case 367: /* alter_table_cmd: OWNER TO RoleId  */
#line 3052 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ChangeOwner;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29213 "gram.cpp"
    break;

  case 368: /* alter_table_cmd: SET TABLESPACE name  */
#line 3060 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetTableSpace;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 29224 "gram.cpp"
    break;

  case 369: /* alter_table_cmd: SET reloptions  */
#line 3068 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_SetRelOptions;
					n->def = (Node *)(yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 29235 "gram.cpp"
    break;

  case 370: /* alter_table_cmd: RESET reloptions  */
#line 3076 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ResetRelOptions;
					n->def = (Node *)(yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 29246 "gram.cpp"
    break;

  case 371: /* alter_table_cmd: REPLICA IDENTITY_P replica_identity  */
#line 3084 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_ReplicaIdentity;
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 29257 "gram.cpp"
    break;

  case 372: /* alter_table_cmd: alter_generic_options  */
#line 3091 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_GenericOptions;
					n->def = (Node *)(yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 29268 "gram.cpp"
    break;

  case 373: /* alter_column_default: SET DEFAULT a_expr  */
#line 3100 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 29274 "gram.cpp"
    break;

  case 374: /* alter_column_default: DROP DEFAULT  */
#line 3101 "gram.y"
                                                                { (yyval.node) = NULL; }
#line 29280 "gram.cpp"
    break;

  case 375: /* opt_drop_behavior: CASCADE  */
#line 3105 "gram.y"
                                                                        { (yyval.dbehavior) = DROP_CASCADE; }
#line 29286 "gram.cpp"
    break;

  case 376: /* opt_drop_behavior: RESTRICT  */
#line 3106 "gram.y"
                                                                        { (yyval.dbehavior) = DROP_RESTRICT; }
#line 29292 "gram.cpp"
    break;

  case 377: /* opt_drop_behavior: %empty  */
#line 3107 "gram.y"
                                                                { (yyval.dbehavior) = DROP_RESTRICT; /* default */ }
#line 29298 "gram.cpp"
    break;

  case 378: /* opt_collate_clause: COLLATE any_name  */
#line 3112 "gram.y"
                                {
					CollateClause *n = makeNode(CollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *) n;
				}
#line 29310 "gram.cpp"
    break;

  case 379: /* opt_collate_clause: %empty  */
#line 3119 "gram.y"
                                                                { (yyval.node) = NULL; }
#line 29316 "gram.cpp"
    break;

  case 380: /* alter_using: USING a_expr  */
#line 3123 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 29322 "gram.cpp"
    break;

  case 381: /* alter_using: %empty  */
#line 3124 "gram.y"
                                                                { (yyval.node) = NULL; }
#line 29328 "gram.cpp"
    break;

  case 382: /* replica_identity: NOTHING  */
#line 3129 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_NOTHING;
					n->name = NULL;
					(yyval.node) = (Node *) n;
				}
#line 29339 "gram.cpp"
    break;

  case 383: /* replica_identity: FULL  */
#line 3136 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_FULL;
					n->name = NULL;
					(yyval.node) = (Node *) n;
				}
#line 29350 "gram.cpp"
    break;

  case 384: /* replica_identity: DEFAULT  */
#line 3143 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_DEFAULT;
					n->name = NULL;
					(yyval.node) = (Node *) n;
				}
#line 29361 "gram.cpp"
    break;

  case 385: /* replica_identity: USING INDEX name  */
#line 3150 "gram.y"
                                {
					ReplicaIdentityStmt *n = makeNode(ReplicaIdentityStmt);
					n->identity_type = REPLICA_IDENTITY_INDEX;
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 29372 "gram.cpp"
    break;

  case 386: /* reloptions: '(' reloption_list ')'  */
#line 3159 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 29378 "gram.cpp"
    break;

  case 387: /* opt_reloptions: WITH reloptions  */
#line 3162 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 29384 "gram.cpp"
    break;

  case 388: /* opt_reloptions: %empty  */
#line 3163 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 29390 "gram.cpp"
    break;

  case 389: /* reloption_list: reloption_elem  */
#line 3167 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 29396 "gram.cpp"
    break;

  case 390: /* reloption_list: reloption_list ',' reloption_elem  */
#line 3168 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 29402 "gram.cpp"
    break;

  case 391: /* reloption_elem: ColLabel '=' def_arg  */
#line 3174 "gram.y"
                                {
					/*
					 * appendoptimized is an alias for appendonly in order to
					 * provide a reloption syntax which better reflects the
					 * featureset of AO tables. It is implemented as a very
					 * thin alias, the reloptions and messaging will still
					 * say appendonly.
					 */
					if (strcmp((yyvsp[-2].str), "appendoptimized") == 0)
						(yyval.defelt) = makeDefElem("appendonly", (Node *) (yyvsp[0].node));
					else
						(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node));
				}
#line 29420 "gram.cpp"
    break;

  case 392: /* reloption_elem: ColLabel  */
#line 3188 "gram.y"
                                {
					/*
					 * Similarly to the above, translate 'appendoptimized' to
					 * 'appendonly'. Also, adding the implicit 'true' in case 
					 * we don't handle that properly in parse analysis.
					 * See: https://github.com/greenplum-db/gpdb/issues/14510.
					 */
					if (strcmp((yyvsp[0].str), "appendonly") == 0 || strcmp((yyvsp[0].str), "appendoptimized") == 0)
						(yyval.defelt) = makeDefElem("appendonly", (Node *) makeString(pstrdup("true")));
					else
						(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL);
				}
#line 29437 "gram.cpp"
    break;

  case 393: /* reloption_elem: ColLabel '.' ColLabel '=' def_arg  */
#line 3201 "gram.y"
                                {
					(yyval.defelt) = makeDefElemExtended((yyvsp[-4].str), (yyvsp[-2].str), (Node *) (yyvsp[0].node),
											 DEFELEM_UNSPEC);
				}
#line 29446 "gram.cpp"
    break;

  case 394: /* reloption_elem: ColLabel '.' ColLabel  */
#line 3206 "gram.y"
                                {
					(yyval.defelt) = makeDefElemExtended((yyvsp[-2].str), (yyvsp[0].str), NULL, DEFELEM_UNSPEC);
				}
#line 29454 "gram.cpp"
    break;

  case 395: /* opt_table_partition_split_into: INTO '(' alter_table_partition_id_spec_with_opt_default ',' alter_table_partition_id_spec_with_opt_default ')'  */
#line 3215 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = (Node *)(yyvsp[-3].node);
                    pc->arg1 = (Node *)(yyvsp[-1].node);
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);
					(yyval.node) = (Node *)pc;
                }
#line 29468 "gram.cpp"
    break;

  case 396: /* opt_table_partition_split_into: %empty  */
#line 3224 "gram.y"
                                                                                { (yyval.node) = NULL; /* default */ }
#line 29474 "gram.cpp"
    break;

  case 397: /* opt_table_partition_exchange_validate: WITH VALIDATION  */
#line 3228 "gram.y"
                                                                                { (yyval.ival) = +1; }
#line 29480 "gram.cpp"
    break;

  case 398: /* opt_table_partition_exchange_validate: WITHOUT VALIDATION  */
#line 3229 "gram.y"
                                                                        { (yyval.ival) = +0; }
#line 29486 "gram.cpp"
    break;

  case 399: /* opt_table_partition_exchange_validate: %empty  */
#line 3230 "gram.y"
                                                                                        { (yyval.ival) = +1; /* default */ }
#line 29492 "gram.cpp"
    break;

  case 400: /* alter_table_partition_id_spec: PartitionColId  */
#line 3235 "gram.y"
                                {
					AlterPartitionId *n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDName;
                    n->partiddef = (Node *)makeString((yyvsp[0].str));
                    n->location  = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 29504 "gram.cpp"
    break;

  case 401: /* alter_table_partition_id_spec: FOR '(' TabPartitionBoundarySpecValList ')'  */
#line 3244 "gram.y"
                                {
					AlterPartitionId *n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDValue;
                    n->partiddef = (Node *)(yyvsp[-1].list);
                    n->location  = (yylsp[-1]);
					(yyval.node) = reinterpret_cast<Node *>(n);
				}
#line 29516 "gram.cpp"
    break;

  case 402: /* alter_table_partition_id_spec: FOR '(' func_name '(' func_arg_list opt_sort_clause ')' ')'  */
#line 3274 "gram.y"
                                {
					Node		   *arg;
					Value		   *val;
					Node		   *fname;
					AlterPartitionId *n;

                    /* allow RANK only */
					if (list_length((yyvsp[-5].list)) != 1)
                        parser_yyerror("syntax error");
					fname = reinterpret_cast<Node*>(linitial((yyvsp[-5].list)));
					if (!(strcmp(strVal(linitial((yyvsp[-5].list))), "rank") == 0))
                        parser_yyerror("syntax error");

					/* expr_list must be a single numeric constant */
					if (list_length((yyvsp[-3].list)) != 1)
						parser_yyerror("syntax error");

					arg = reinterpret_cast<Node*>(linitial((yyvsp[-3].list)));
					if (!IsA(arg, A_Const))
						parser_yyerror("syntax error");
					val = &((A_Const *) arg)->val;
					if (!IsA(val, Integer) && !IsA(val, Float))
						parser_yyerror("syntax error");

					/* we don't want a sort clause */
					if ((yyvsp[-2].list))
						parser_yyerror("syntax error");

					n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDRank;
                    n->partiddef = (Node *) val;
                    n->location  = (yylsp[-3]);

					(yyval.node) = (Node *)n;
				}
#line 29556 "gram.cpp"
    break;

  case 403: /* alter_table_partition_id_spec_with_opt_default: PARTITION alter_table_partition_id_spec  */
#line 3313 "gram.y"
                                {
					AlterPartitionId *n = (AlterPartitionId*)(yyvsp[0].node);
                    (yyval.node) = (Node *)n;
				}
#line 29565 "gram.cpp"
    break;

  case 404: /* alter_table_partition_id_spec_with_opt_default: DEFAULT PARTITION alter_table_partition_id_spec  */
#line 3318 "gram.y"
                                {
					ereport(ERROR,
							errcode(ERRCODE_SYNTAX_ERROR),
							 errmsg("cannot specify a name, rank, or value for a DEFAULT partition in this context"));
				}
#line 29575 "gram.cpp"
    break;

  case 405: /* alter_table_partition_id_spec_with_opt_default: DEFAULT PARTITION  */
#line 3324 "gram.y"
                                {
					AlterPartitionId *n = makeNode(AlterPartitionId);
					n->idtype = AT_AP_IDDefault;
                    n->partiddef = NULL;
                    n->location  = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 29587 "gram.cpp"
    break;

  case 406: /* alter_table_partition_cmd: ADD_P PARTITION OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabSubPartitionSpec  */
#line 3339 "gram.y"
                                {
					AlterPartitionId  *pid   = makeNode(AlterPartitionId);
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 

                    pid->idtype = AT_AP_IDNone;
                    pid->location = (yylsp[-2]);
                    pid->partiddef = NULL;

                    pc->partid = (Node *) pid;

                    pelem->partName  = NULL;
                    pelem->boundSpec = (yyvsp[-2].node);
                    pelem->subSpec   = (yyvsp[0].node);
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = false; /* not default */
                    pelem->storeAttr = (yyvsp[-1].node);
                    pelem->AddPartDesc = NULL;
					pc->arg1 = (Node *) pelem;

                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartAdd;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29619 "gram.cpp"
    break;

  case 407: /* alter_table_partition_cmd: ADD_P DEFAULT PARTITION alter_table_partition_id_spec OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabSubPartitionSpec  */
#line 3371 "gram.y"
                                {
					AlterPartitionId  *pid   = (AlterPartitionId *)(yyvsp[-3].node);
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 

                    if (pid->idtype != AT_AP_IDName)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("can only ADD a partition by name"));

                    pc->partid = (Node *) pid;

                    pelem->partName  = NULL;
                    pelem->boundSpec = (yyvsp[-2].node);
                    pelem->subSpec   = (yyvsp[0].node);
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = true;
                    pelem->storeAttr = (yyvsp[-1].node);
                    pelem->AddPartDesc = NULL;
					pc->arg1 = (Node *) pelem;
                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartAdd;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29651 "gram.cpp"
    break;

  case 408: /* alter_table_partition_cmd: ADD_P PARTITION alter_table_partition_id_spec OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabSubPartitionSpec  */
#line 3403 "gram.y"
                                {
					AlterPartitionId  *pid   = (AlterPartitionId *)(yyvsp[-3].node);
					AlterPartitionCmd *pc    = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 

                    if (pid->idtype != AT_AP_IDName)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("can only ADD a partition by name"));

                    pc->partid = (Node *) pid;

                    pelem->partName  = NULL;
                    pelem->boundSpec = (yyvsp[-2].node);
                    pelem->subSpec   = (yyvsp[0].node);
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = false;
                    pelem->storeAttr = (yyvsp[-1].node);
                    pelem->AddPartDesc = NULL;
                    pc->arg1 = (Node *) pelem;

                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartAdd;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29684 "gram.cpp"
    break;

  case 409: /* alter_table_partition_cmd: ALTER alter_table_partition_id_spec_with_opt_default alter_table_cmd  */
#line 3434 "gram.y"
                                {
                    /* NOTE: only allow a subset of valid ALTER TABLE
                       cmds for partitions.
                    */

					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)(yyvsp[0].node);
                    pc->arg2 = NULL;
                    pc->location = (yylsp[0]);

					n->subtype = AT_PartAlter;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29706 "gram.cpp"
    break;

  case 410: /* alter_table_partition_cmd: DROP PARTITION IF_P EXISTS alter_table_partition_id_spec opt_drop_behavior  */
#line 3454 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);

					ds->missing_ok = TRUE;
					ds->behavior = (yyvsp[0].dbehavior);

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29734 "gram.cpp"
    break;

  case 411: /* alter_table_partition_cmd: DROP DEFAULT PARTITION IF_P EXISTS opt_drop_behavior  */
#line 3479 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);
					AlterPartitionId *pid = makeNode(AlterPartitionId);

					pid->idtype = AT_AP_IDDefault;
                    pid->partiddef = NULL;
                    pid->location  = (yylsp[-4]);

					ds->missing_ok = TRUE;
					ds->behavior = (yyvsp[0].dbehavior);

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    pc->partid = (Node *)pid;
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-3]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29767 "gram.cpp"
    break;

  case 412: /* alter_table_partition_cmd: DROP alter_table_partition_id_spec_with_opt_default opt_drop_behavior  */
#line 3510 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);

					ds->missing_ok = FALSE;
					ds->behavior = (yyvsp[0].dbehavior);

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29795 "gram.cpp"
    break;

  case 413: /* alter_table_partition_cmd: DROP PARTITION  */
#line 3534 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					DropStmt *ds = makeNode(DropStmt);
					AlterPartitionId *pid = makeNode(AlterPartitionId);

					ds->missing_ok = FALSE;
					ds->behavior = DROP_RESTRICT; /* default */ 

                    /* 
                       build an (incomplete) drop statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */

                    /* just try to drop the first partition if not specified */
					pid->idtype = AT_AP_IDNone;
                    pid->location  = (yylsp[0]);

                    pc->partid = (Node *)pid;
                    pc->arg1 = (Node *)ds;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[0]);

					n->subtype = AT_PartDrop;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29828 "gram.cpp"
    break;

  case 414: /* alter_table_partition_cmd: EXCHANGE alter_table_partition_id_spec_with_opt_default WITH TABLE qualified_name opt_table_partition_exchange_validate  */
#line 3566 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterPartitionCmd *pc2 = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-4].node);
                    pc->arg1 = (Node *)(yyvsp[-1].range);
                    pc->arg2 = (Node *)pc2;
                    pc2->arg1 = (Node *)makeInteger((yyvsp[0].ival));
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartExchange;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29848 "gram.cpp"
    break;

  case 415: /* alter_table_partition_cmd: RENAME alter_table_partition_id_spec_with_opt_default TO IDENT  */
#line 3583 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-2].node);
                    pc->arg1 = (Node *)makeString((yyvsp[0].str));
                    pc->arg2 = NULL;
                    pc->location = (yylsp[0]);

					n->subtype = AT_PartRename;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29866 "gram.cpp"
    break;

  case 416: /* alter_table_partition_cmd: SET SUBPARTITION TEMPLATE '(' TabSubPartitionElemList ')'  */
#line 3598 "gram.y"
                                {
					AlterPartitionId  *pid   = makeNode(AlterPartitionId);
					AlterPartitionCmd *pc    = makeNode(AlterPartitionCmd);
					AlterTableCmd     *n     = makeNode(AlterTableCmd);
                    PartitionElem     *pelem = makeNode(PartitionElem); 
					PartitionSpec	  *ps    = makeNode(PartitionSpec); 

					/* treat this case as similar to ADD PARTITION */

                    pid->idtype    = AT_AP_IDName;
                    pid->location  = (yylsp[-3]);
                    pid->partiddef = 
						(Node *)makeString("subpartition_template");

                    pc->partid = (Node *) pid;

					/* build a subpartition spec and add it to CREATE TABLE */
					ps->partElem   = (yyvsp[-1].list); 
					ps->subSpec	   = NULL;
					ps->istemplate = true;
					ps->location   = (yylsp[-2]);

                    pelem->partName  = NULL;
                    pelem->boundSpec = NULL;
                    pelem->subSpec   = (Node *)ps;
                    pelem->location  = (yylsp[-2]);
                    pelem->isDefault = true;
                    pelem->storeAttr = NULL;
                    pelem->AddPartDesc = NULL;
					pc->arg1 = (Node *) pelem;

					/* a little (temporary?) syntax check on templates */
					if (ps->partElem)
					{
						List *elems;
						ListCell *lc;
						Assert(IsA(ps->partElem, List));

						elems = (List *)ps->partElem;
						foreach(lc, elems)
						{
							PartitionElem *e = reinterpret_cast<PartitionElem*>(lfirst(lc));

							if (!IsA(e, PartitionElem))
								continue;

							if (e->subSpec)
								ereport(ERROR,
										errcode(ERRCODE_SYNTAX_ERROR),
										 errmsg("template cannot contain "
												"specification for child "
												"partition"));
						}
					}

                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartSetTemplate;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29932 "gram.cpp"
    break;

  case 417: /* alter_table_partition_cmd: SET SUBPARTITION TEMPLATE '(' ')'  */
#line 3661 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = NULL; 
                    pc->arg1 = NULL;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartSetTemplate;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29950 "gram.cpp"
    break;

  case 418: /* alter_table_partition_cmd: SPLIT DEFAULT PARTITION TabPartitionBoundarySpecStart TabPartitionBoundarySpecEnd opt_table_partition_split_into  */
#line 3678 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					AlterPartitionId *pid = makeNode(AlterPartitionId);

					pid->idtype = AT_AP_IDDefault;
                    pid->partiddef = NULL;
                    pid->location  = (yylsp[-4]);

                    pc->partid = (Node *)pid;
                    pc->arg1 = (Node *)list_make2((yyvsp[-2].node), (yyvsp[-1].node));
                    pc->arg2 = (Node *)(yyvsp[0].node);
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartSplit;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29973 "gram.cpp"
    break;

  case 419: /* alter_table_partition_cmd: SPLIT alter_table_partition_id_spec_with_opt_default AT '(' part_values_or_spec_list ')' opt_table_partition_split_into  */
#line 3700 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);

                    pc->partid = (Node *)(yyvsp[-5].node);

					/* 
					 * The first element of the list is only defined if
					 * we're doing default splits for range partitioning.
				 	 */
                    pc->arg1 = (Node *)list_make2(NULL, (yyvsp[-2].list));
                    pc->arg2 = (Node *)(yyvsp[0].node);
                    pc->location = (yylsp[-2]);

					n->subtype = AT_PartSplit;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 29996 "gram.cpp"
    break;

  case 420: /* alter_table_partition_cmd: TRUNCATE alter_table_partition_id_spec_with_opt_default opt_drop_behavior  */
#line 3721 "gram.y"
                                {
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
					AlterTableCmd *n = makeNode(AlterTableCmd);
					TruncateStmt *ts = makeNode(TruncateStmt);

                    /* 
                       build an (incomplete) truncate statement for arg1: 
                       fill in the rest after the partition id spec is
                       validated
                    */
					ts->relations = NULL;
					ts->behavior = (yyvsp[0].dbehavior);

                    pc->partid = (Node *)(yyvsp[-1].node);
                    pc->arg1 = (Node *)ts;
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);

					n->subtype = AT_PartTruncate;
					n->def = (Node *)pc;
					(yyval.node) = (Node *)n;
				}
#line 30023 "gram.cpp"
    break;

  case 421: /* AlterCompositeTypeStmt: ALTER TYPE_P any_name alter_type_cmds  */
#line 3755 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);

					/* can't use qualified_name, sigh */
					n->relation = makeRangeVarFromAnyName((yyvsp[-1].list), (yylsp[-1]), yyscanner);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_TYPE;
					(yyval.node) = (Node *)n;
				}
#line 30037 "gram.cpp"
    break;

  case 422: /* alter_type_cmds: alter_type_cmd  */
#line 3767 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 30043 "gram.cpp"
    break;

  case 423: /* alter_type_cmds: alter_type_cmds ',' alter_type_cmd  */
#line 3768 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 30049 "gram.cpp"
    break;

  case 424: /* alter_type_cmd: ADD_P ATTRIBUTE TableFuncElement opt_drop_behavior  */
#line 3774 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_AddColumn;
					n->def = (yyvsp[-1].node);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 30061 "gram.cpp"
    break;

  case 425: /* alter_type_cmd: DROP ATTRIBUTE IF_P EXISTS ColId opt_drop_behavior  */
#line 3783 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 30074 "gram.cpp"
    break;

  case 426: /* alter_type_cmd: DROP ATTRIBUTE ColId opt_drop_behavior  */
#line 3793 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					n->subtype = AT_DropColumn;
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 30087 "gram.cpp"
    break;

  case 427: /* alter_type_cmd: ALTER ATTRIBUTE ColId opt_set_data TYPE_P Typename opt_collate_clause opt_drop_behavior  */
#line 3803 "gram.y"
                                {
					AlterTableCmd *n = makeNode(AlterTableCmd);
					ColumnDef *def = makeNode(ColumnDef);
					n->subtype = AT_AlterColumnType;
					n->name = (yyvsp[-5].str);
					n->def = (Node *) def;
					n->behavior = (yyvsp[0].dbehavior);
					/* We only use these fields of the ColumnDef node */
					def->typeName = (yyvsp[-2].typnam);
					def->collClause = (CollateClause *) (yyvsp[-1].node);
					def->raw_default = NULL;
					def->location = (yylsp[-5]);
					(yyval.node) = (Node *)n;
				}
#line 30106 "gram.cpp"
    break;

  case 428: /* ClosePortalStmt: CLOSE cursor_name  */
#line 3829 "gram.y"
                                {
					ClosePortalStmt *n = makeNode(ClosePortalStmt);
					n->portalname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 30116 "gram.cpp"
    break;

  case 429: /* ClosePortalStmt: CLOSE ALL  */
#line 3835 "gram.y"
                                {
					ClosePortalStmt *n = makeNode(ClosePortalStmt);
					n->portalname = NULL;
					(yyval.node) = (Node *)n;
				}
#line 30126 "gram.cpp"
    break;

  case 430: /* CopyStmt: COPY opt_binary qualified_name opt_column_list opt_oids copy_from opt_program copy_file_name copy_delimiter opt_with copy_options OptSingleRowErrorHandling skip_external_partition  */
#line 3867 "gram.y"
                                {
					CopyStmt *n = makeNode(CopyStmt);
					n->relation = (yyvsp[-10].range);
					n->query = NULL;
					n->attlist = (yyvsp[-9].list);
					n->is_from = (yyvsp[-7].boolean);
					n->is_program = (yyvsp[-6].boolean);
					n->filename = (yyvsp[-5].str);
					n->sreh = reinterpret_cast<Node*>((yyvsp[-1].list));
					n->partitions = NULL;
					n->ao_segnos = NIL;

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[-5])));

// -- non-upstream patch begin
					if (n->is_program) {
						/*
						* MDB-21297: forbit usage of COPY TO PROGRAM and COPY FROM PROGRAM at all
						*/
						// ereport(ERROR,
						// 	errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
						// 		errmsg("forbidden to COPY to or from an external program or file in Yandex Cloud"),
						// 		errhint("Anyone can COPY to stdout or from stdin. "
						// 				"psql's \\copy command also works for anyone."));
					}
// --- non-upstream patch end

					n->options = NIL;
					n->skip_ext_partition = (yyvsp[0].boolean);


					/* Concatenate user-supplied flags */
					if ((yyvsp[-11].defelt))
						n->options = lappend(n->options, (yyvsp[-11].defelt));
					if ((yyvsp[-8].defelt))
						n->options = lappend(n->options, (yyvsp[-8].defelt));
					if ((yyvsp[-4].defelt))
						n->options = lappend(n->options, (yyvsp[-4].defelt));
					if ((yyvsp[-2].list))
						n->options = list_concat(n->options, (yyvsp[-2].list));
					if ((yyvsp[-1].list)) {
						n->options = list_concat(n->options, (yyvsp[-1].list));
					}
					(yyval.node) = (Node *)n;
				}
#line 30180 "gram.cpp"
    break;

  case 431: /* CopyStmt: COPY select_with_parens TO opt_program copy_file_name opt_with copy_options  */
#line 3917 "gram.y"
                                {
					CopyStmt *n = makeNode(CopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[-5].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[-3].boolean);
					n->filename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					n->partitions = NULL;
					n->ao_segnos = NIL;
					n->skip_ext_partition = false;

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[-2])));

// -- non-upstream patch begin
					if (n->is_program) {
						/*
						* MDB-21297: forbit usage of COPY TO PROGRAM and COPY FROM PROGRAM at all
						*/
						// ereport(ERROR,
						// 	errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
						// 		errmsg("forbidden to COPY to or from an external program or file in Yandex Cloud"),
						// 		errhint("Anyone can COPY to stdout or from stdin. "
						// 				"psql's \\copy command also works for anyone."));
					}
// --- non-upstream patch end


					(yyval.node) = (Node *)n;
				}
#line 30220 "gram.cpp"
    break;

  case 432: /* copy_from: FROM  */
#line 3955 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 30226 "gram.cpp"
    break;

  case 433: /* copy_from: TO  */
#line 3956 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 30232 "gram.cpp"
    break;

  case 434: /* opt_program: PROGRAM  */
#line 3960 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 30238 "gram.cpp"
    break;

  case 435: /* opt_program: %empty  */
#line 3961 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 30244 "gram.cpp"
    break;

  case 436: /* skip_external_partition: IGNORE_P EXTERNAL PARTITIONS  */
#line 3965 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 30250 "gram.cpp"
    break;

  case 437: /* skip_external_partition: %empty  */
#line 3966 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 30256 "gram.cpp"
    break;

  case 438: /* copy_file_name: Sconst  */
#line 3975 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 30262 "gram.cpp"
    break;

  case 439: /* copy_file_name: STDIN  */
#line 3976 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 30268 "gram.cpp"
    break;

  case 440: /* copy_file_name: STDOUT  */
#line 3977 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 30274 "gram.cpp"
    break;

  case 441: /* copy_options: copy_opt_list  */
#line 3980 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 30280 "gram.cpp"
    break;

  case 442: /* copy_options: '(' copy_generic_opt_list ')'  */
#line 3981 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 30286 "gram.cpp"
    break;

  case 443: /* copy_opt_list: copy_opt_list copy_opt_item  */
#line 3986 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 30292 "gram.cpp"
    break;

  case 444: /* copy_opt_list: %empty  */
#line 3987 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 30298 "gram.cpp"
    break;

  case 445: /* copy_opt_item: BINARY  */
#line 3992 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
				}
#line 30306 "gram.cpp"
    break;

  case 446: /* copy_opt_item: OIDS  */
#line 3996 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
				}
#line 30314 "gram.cpp"
    break;

  case 447: /* copy_opt_item: FREEZE  */
#line 4000 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("freeze", (Node *)makeInteger(TRUE));
				}
#line 30322 "gram.cpp"
    break;

  case 448: /* copy_opt_item: DELIMITER opt_as Sconst  */
#line 4004 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[0].str)));
				}
#line 30330 "gram.cpp"
    break;

  case 449: /* copy_opt_item: NULL_P opt_as Sconst  */
#line 4008 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[0].str)));
				}
#line 30338 "gram.cpp"
    break;

  case 450: /* copy_opt_item: CSV  */
#line 4012 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("format", (Node *)makeString("csv"));
				}
#line 30346 "gram.cpp"
    break;

  case 451: /* copy_opt_item: HEADER_P  */
#line 4016 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
				}
#line 30354 "gram.cpp"
    break;

  case 452: /* copy_opt_item: QUOTE opt_as Sconst  */
#line 4020 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[0].str)));
				}
#line 30362 "gram.cpp"
    break;

  case 453: /* copy_opt_item: ESCAPE opt_as Sconst  */
#line 4024 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[0].str)));
				}
#line 30370 "gram.cpp"
    break;

  case 454: /* copy_opt_item: FORCE QUOTE columnList  */
#line 4028 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[0].list));
				}
#line 30378 "gram.cpp"
    break;

  case 455: /* copy_opt_item: FORCE QUOTE '*'  */
#line 4032 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
				}
#line 30386 "gram.cpp"
    break;

  case 456: /* copy_opt_item: FORCE NOT NULL_P columnList  */
#line 4036 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[0].list));
				}
#line 30394 "gram.cpp"
    break;

  case 457: /* copy_opt_item: FORCE NULL_P columnList  */
#line 4040 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("force_null", (Node *)(yyvsp[0].list));
				}
#line 30402 "gram.cpp"
    break;

  case 458: /* copy_opt_item: ENCODING Sconst  */
#line 4044 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[0].str)));
				}
#line 30410 "gram.cpp"
    break;

  case 459: /* copy_opt_item: FILL MISSING FIELDS  */
#line 4048 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("fill_missing_fields", (Node *)makeInteger(TRUE));
				}
#line 30418 "gram.cpp"
    break;

  case 460: /* copy_opt_item: NEWLINE opt_as Sconst  */
#line 4052 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("newline", (Node *)makeString((yyvsp[0].str)));
				}
#line 30426 "gram.cpp"
    break;

  case 461: /* copy_opt_item: ON SEGMENT  */
#line 4056 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("on_segment", (Node *)makeInteger(TRUE));
				}
#line 30434 "gram.cpp"
    break;

  case 462: /* opt_binary: BINARY  */
#line 4065 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
				}
#line 30442 "gram.cpp"
    break;

  case 463: /* opt_binary: %empty  */
#line 4068 "gram.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 30448 "gram.cpp"
    break;

  case 464: /* opt_oids: WITH OIDS  */
#line 4073 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
				}
#line 30456 "gram.cpp"
    break;

  case 465: /* opt_oids: %empty  */
#line 4076 "gram.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 30462 "gram.cpp"
    break;

  case 466: /* copy_delimiter: opt_using DELIMITERS Sconst  */
#line 4081 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[0].str)));
				}
#line 30470 "gram.cpp"
    break;

  case 467: /* copy_delimiter: %empty  */
#line 4084 "gram.y"
                                                                                                { (yyval.defelt) = NULL; }
#line 30476 "gram.cpp"
    break;

  case 468: /* opt_using: USING  */
#line 4088 "gram.y"
                                                                                                {}
#line 30482 "gram.cpp"
    break;

  case 469: /* opt_using: %empty  */
#line 4089 "gram.y"
                                                                                                {}
#line 30488 "gram.cpp"
    break;

  case 470: /* copy_generic_opt_list: copy_generic_opt_elem  */
#line 4095 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 30496 "gram.cpp"
    break;

  case 471: /* copy_generic_opt_list: copy_generic_opt_list ',' copy_generic_opt_elem  */
#line 4099 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 30504 "gram.cpp"
    break;

  case 472: /* copy_generic_opt_elem: ColLabel copy_generic_opt_arg  */
#line 4106 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node));
				}
#line 30512 "gram.cpp"
    break;

  case 473: /* copy_generic_opt_arg: opt_boolean_or_string  */
#line 4112 "gram.y"
                                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 30518 "gram.cpp"
    break;

  case 474: /* copy_generic_opt_arg: NumericOnly  */
#line 4113 "gram.y"
                                                                        { (yyval.node) = (Node *) (yyvsp[0].value); }
#line 30524 "gram.cpp"
    break;

  case 475: /* copy_generic_opt_arg: '*'  */
#line 4114 "gram.y"
                                                                                { (yyval.node) = (Node *) makeNode(A_Star); }
#line 30530 "gram.cpp"
    break;

  case 476: /* copy_generic_opt_arg: '(' copy_generic_opt_arg_list ')'  */
#line 4115 "gram.y"
                                                                        { (yyval.node) = (Node *) (yyvsp[-1].list); }
#line 30536 "gram.cpp"
    break;

  case 477: /* copy_generic_opt_arg: %empty  */
#line 4116 "gram.y"
                                                                        { (yyval.node) = NULL; }
#line 30542 "gram.cpp"
    break;

  case 478: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list_item  */
#line 4121 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 30550 "gram.cpp"
    break;

  case 479: /* copy_generic_opt_arg_list: copy_generic_opt_arg_list ',' copy_generic_opt_arg_list_item  */
#line 4125 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 30558 "gram.cpp"
    break;

  case 480: /* copy_generic_opt_arg_list_item: opt_boolean_or_string  */
#line 4132 "gram.y"
                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 30564 "gram.cpp"
    break;

  case 481: /* CreateStmt: CREATE OptTemp TABLE qualified_name '(' OptTableElementList ')' OptInherit OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4146 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-9].range)->relpersistence = (yyvsp[-11].ival);
					n->relation = (yyvsp[-9].range);
					n->tableElts = (yyvsp[-7].list);
					n->inhRelations = (yyvsp[-5].list);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = false;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30585 "gram.cpp"
    break;

  case 482: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' OptInherit OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4166 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-9].range)->relpersistence = (yyvsp[-14].ival);
					n->relation = (yyvsp[-9].range);
					n->tableElts = (yyvsp[-7].list);
					n->inhRelations = (yyvsp[-5].list);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = true;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30606 "gram.cpp"
    break;

  case 483: /* CreateStmt: CREATE OptTemp TABLE qualified_name OF any_name OptTypedTableElementList OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4185 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-8].range)->relpersistence = (yyvsp[-10].ival);
					n->relation = (yyvsp[-8].range);
					n->tableElts = (yyvsp[-5].list);
					n->ofTypename = makeTypeNameFromNameList((yyvsp[-6].list));
					n->ofTypename->location = (yylsp[-6]);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = false;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30628 "gram.cpp"
    break;

  case 484: /* CreateStmt: CREATE OptTemp TABLE IF_P NOT EXISTS qualified_name OF any_name OptTypedTableElementList OptWith OnCommitOption OptTableSpace OptDistributedBy OptTabPartitionBy  */
#line 4205 "gram.y"
                                {
					CreateStmt *n = makeNode(CreateStmt);
					(yyvsp[-8].range)->relpersistence = (yyvsp[-13].ival);
					n->relation = (yyvsp[-8].range);
					n->tableElts = (yyvsp[-5].list);
					n->ofTypename = makeTypeNameFromNameList((yyvsp[-6].list));
					n->ofTypename->location = (yylsp[-6]);
					n->constraints = NIL;
					n->options = (yyvsp[-4].list);
					n->oncommit = (yyvsp[-3].oncommit);
					n->tablespacename = (yyvsp[-2].str);
					n->if_not_exists = true;
					n->distributedBy = (DistributedBy *) (yyvsp[-1].node);
					n->partitionBy = (yyvsp[0].node);
					n->relKind = RELKIND_RELATION;
					(yyval.node) = (Node *)n;
				}
#line 30650 "gram.cpp"
    break;

  case 485: /* OptTemp: TEMPORARY  */
#line 4235 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30656 "gram.cpp"
    break;

  case 486: /* OptTemp: TEMP  */
#line 4236 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30662 "gram.cpp"
    break;

  case 487: /* OptTemp: LOCAL TEMPORARY  */
#line 4237 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30668 "gram.cpp"
    break;

  case 488: /* OptTemp: LOCAL TEMP  */
#line 4238 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_TEMP; }
#line 30674 "gram.cpp"
    break;

  case 489: /* OptTemp: GLOBAL TEMPORARY  */
#line 4240 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-1])));
					(yyval.ival) = RELPERSISTENCE_TEMP;
				}
#line 30685 "gram.cpp"
    break;

  case 490: /* OptTemp: GLOBAL TEMP  */
#line 4247 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-1])));
					(yyval.ival) = RELPERSISTENCE_TEMP;
				}
#line 30696 "gram.cpp"
    break;

  case 491: /* OptTemp: UNLOGGED  */
#line 4253 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
#line 30702 "gram.cpp"
    break;

  case 492: /* OptTemp: %empty  */
#line 4254 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
#line 30708 "gram.cpp"
    break;

  case 493: /* OptTableElementList: TableElementList  */
#line 4258 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 30714 "gram.cpp"
    break;

  case 494: /* OptTableElementList: %empty  */
#line 4259 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 30720 "gram.cpp"
    break;

  case 495: /* OptTypedTableElementList: '(' TypedTableElementList ')'  */
#line 4263 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 30726 "gram.cpp"
    break;

  case 496: /* OptTypedTableElementList: %empty  */
#line 4264 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 30732 "gram.cpp"
    break;

  case 497: /* TableElementList: TableElement  */
#line 4269 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 30740 "gram.cpp"
    break;

  case 498: /* TableElementList: TableElementList ',' TableElement  */
#line 4273 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 30748 "gram.cpp"
    break;

  case 499: /* TypedTableElementList: TypedTableElement  */
#line 4280 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 30756 "gram.cpp"
    break;

  case 500: /* TypedTableElementList: TypedTableElementList ',' TypedTableElement  */
#line 4284 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 30764 "gram.cpp"
    break;

  case 501: /* TableElement: columnDef  */
#line 4290 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 30770 "gram.cpp"
    break;

  case 502: /* TableElement: TableLikeClause  */
#line 4291 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30776 "gram.cpp"
    break;

  case 503: /* TableElement: TableConstraint  */
#line 4292 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30782 "gram.cpp"
    break;

  case 504: /* TableElement: column_reference_storage_directive  */
#line 4293 "gram.y"
                                                             { (yyval.node) = (yyvsp[0].node); }
#line 30788 "gram.cpp"
    break;

  case 505: /* TypedTableElement: columnOptions  */
#line 4297 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30794 "gram.cpp"
    break;

  case 506: /* TypedTableElement: TableConstraint  */
#line 4298 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 30800 "gram.cpp"
    break;

  case 507: /* column_reference_storage_directive: COLUMN ColId ENCODING definition  */
#line 4303 "gram.y"
                                {
					ColumnReferenceStorageDirective *n =
						makeNode(ColumnReferenceStorageDirective);

					n->column = (yyvsp[-2].str);
					n->encoding = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 30813 "gram.cpp"
    break;

  case 508: /* column_reference_storage_directive: DEFAULT COLUMN ENCODING definition  */
#line 4312 "gram.y"
                                {
					ColumnReferenceStorageDirective *n =
						makeNode(ColumnReferenceStorageDirective);

					n->deflt = true;
					n->encoding = (yyvsp[0].list);

					(yyval.node) = (Node *)n;
				}
#line 30827 "gram.cpp"
    break;

  case 509: /* columnDef: ColId NestedTypename create_generic_options ColQualList opt_storage_encoding  */
#line 4324 "gram.y"
                                {
					ColumnDef *n = makeNode(ColumnDef);
					n->colname = (yyvsp[-4].str);
					n->typeName = (yyvsp[-3].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->encoding = (yyvsp[0].list);
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[-2].list);
					SplitColQualList((yyvsp[-1].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[-4]);
					(yyval.node) = (Node *)n;
				}
#line 30851 "gram.cpp"
    break;

  case 510: /* columnOptions: ColId WITH OPTIONS ColQualList  */
#line 4346 "gram.y"
                                {
					ColumnDef *n = makeNode(ColumnDef);
					n->colname = (yyvsp[-3].str);
					n->typeName = NULL;
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					SplitColQualList((yyvsp[0].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[-3]);
					(yyval.node) = (Node *)n;
				}
#line 30873 "gram.cpp"
    break;

  case 511: /* ColQualList: ColQualList ColConstraint  */
#line 4366 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 30879 "gram.cpp"
    break;

  case 512: /* ColQualList: %empty  */
#line 4367 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 30885 "gram.cpp"
    break;

  case 513: /* ColConstraint: CONSTRAINT name ColConstraintElem  */
#line 4372 "gram.y"
                                {
					Constraint *n = (Constraint *) (yyvsp[0].node);
					Assert(IsA(n, Constraint));
					n->conname = (yyvsp[-1].str);
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *) n;
				}
#line 30897 "gram.cpp"
    break;

  case 514: /* ColConstraint: ColConstraintElem  */
#line 4379 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 30903 "gram.cpp"
    break;

  case 515: /* ColConstraint: ConstraintAttr  */
#line 4380 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 30909 "gram.cpp"
    break;

  case 516: /* ColConstraint: COLLATE any_name  */
#line 4382 "gram.y"
                                {
					/*
					 * Note: the CollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					CollateClause *n = makeNode(CollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *) n;
				}
#line 30926 "gram.cpp"
    break;

  case 517: /* opt_storage_encoding: ENCODING definition  */
#line 4396 "gram.y"
                                          { (yyval.list) = (yyvsp[0].list); }
#line 30932 "gram.cpp"
    break;

  case 518: /* opt_storage_encoding: %empty  */
#line 4397 "gram.y"
                                        { (yyval.list) = NIL; }
#line 30938 "gram.cpp"
    break;

  case 519: /* ColConstraintElem: NOT NULL_P  */
#line 4417 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_NOTNULL;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 30949 "gram.cpp"
    break;

  case 520: /* ColConstraintElem: NULL_P  */
#line 4424 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_NULL;
					n->location = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 30960 "gram.cpp"
    break;

  case 521: /* ColConstraintElem: UNIQUE opt_definition OptConsTableSpace  */
#line 4431 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_UNIQUE;
					n->location = (yylsp[-2]);
					n->keys = NULL;
					n->options = (yyvsp[-1].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 30975 "gram.cpp"
    break;

  case 522: /* ColConstraintElem: PRIMARY KEY opt_definition OptConsTableSpace  */
#line 4442 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_PRIMARY;
					n->location = (yylsp[-3]);
					n->keys = NULL;
					n->options = (yyvsp[-1].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 30990 "gram.cpp"
    break;

  case 523: /* ColConstraintElem: CHECK '(' a_expr ')' opt_no_inherit  */
#line 4453 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_CHECK;
					n->location = (yylsp[-4]);
					n->is_no_inherit = (yyvsp[0].boolean);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					(yyval.node) = (Node *)n;
				}
#line 31004 "gram.cpp"
    break;

  case 524: /* ColConstraintElem: DEFAULT b_expr  */
#line 4463 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_DEFAULT;
					n->location = (yylsp[-1]);
					n->raw_expr = (yyvsp[0].node);
					n->cooked_expr = NULL;
					(yyval.node) = (Node *)n;
				}
#line 31017 "gram.cpp"
    break;

  case 525: /* ColConstraintElem: REFERENCES qualified_name opt_column_list key_match key_actions  */
#line 4472 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_FOREIGN;
					n->location = (yylsp[-4]);
					n->pktable			= (yyvsp[-3].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[-2].list);
					n->fk_matchtype		= (yyvsp[-1].ival);
					n->fk_upd_action	= (char) ((yyvsp[0].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[0].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (Node *)n;
				}
#line 31036 "gram.cpp"
    break;

  case 526: /* ConstraintAttr: DEFERRABLE  */
#line 4505 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 31047 "gram.cpp"
    break;

  case 527: /* ConstraintAttr: NOT DEFERRABLE  */
#line 4512 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31058 "gram.cpp"
    break;

  case 528: /* ConstraintAttr: INITIALLY DEFERRED  */
#line 4519 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31069 "gram.cpp"
    break;

  case 529: /* ConstraintAttr: INITIALLY IMMEDIATE  */
#line 4526 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 31080 "gram.cpp"
    break;

  case 530: /* TableLikeClause: LIKE qualified_name TableLikeOptionList  */
#line 4537 "gram.y"
                                {
					TableLikeClause *n = makeNode(TableLikeClause);
					n->relation = (yyvsp[-1].range);
					n->options = (yyvsp[0].ival);
					(yyval.node) = (Node *)n;
				}
#line 31091 "gram.cpp"
    break;

  case 531: /* TableLikeOptionList: TableLikeOptionList INCLUDING TableLikeOption  */
#line 4546 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
#line 31097 "gram.cpp"
    break;

  case 532: /* TableLikeOptionList: TableLikeOptionList EXCLUDING TableLikeOption  */
#line 4547 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) & ~(yyvsp[0].ival); }
#line 31103 "gram.cpp"
    break;

  case 533: /* TableLikeOptionList: %empty  */
#line 4548 "gram.y"
                                                                                        { (yyval.ival) = 0; }
#line 31109 "gram.cpp"
    break;

  case 534: /* TableLikeOption: DEFAULTS  */
#line 4552 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; }
#line 31115 "gram.cpp"
    break;

  case 535: /* TableLikeOption: CONSTRAINTS  */
#line 4553 "gram.y"
                                                        { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; }
#line 31121 "gram.cpp"
    break;

  case 536: /* TableLikeOption: INDEXES  */
#line 4554 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; }
#line 31127 "gram.cpp"
    break;

  case 537: /* TableLikeOption: STORAGE  */
#line 4555 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; }
#line 31133 "gram.cpp"
    break;

  case 538: /* TableLikeOption: COMMENTS  */
#line 4556 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; }
#line 31139 "gram.cpp"
    break;

  case 539: /* TableLikeOption: ALL  */
#line 4557 "gram.y"
                                                                { (yyval.ival) = CREATE_TABLE_LIKE_ALL; }
#line 31145 "gram.cpp"
    break;

  case 540: /* TableConstraint: CONSTRAINT name ConstraintElem  */
#line 4567 "gram.y"
                                {
					Constraint *n = (Constraint *) (yyvsp[0].node);
					Assert(IsA(n, Constraint));
					n->conname = (yyvsp[-1].str);
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *) n;
				}
#line 31157 "gram.cpp"
    break;

  case 541: /* TableConstraint: ConstraintElem  */
#line 4574 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 31163 "gram.cpp"
    break;

  case 542: /* ConstraintElem: CHECK '(' a_expr ')' ConstraintAttributeSpec  */
#line 4579 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_CHECK;
					n->location = (yylsp[-4]);
					n->raw_expr = (yyvsp[-2].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (Node *)n;
				}
#line 31180 "gram.cpp"
    break;

  case 543: /* ConstraintElem: UNIQUE '(' columnList ')' opt_definition OptConsTableSpace ConstraintAttributeSpec  */
#line 4593 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_UNIQUE;
					n->location = (yylsp[-6]);
					n->keys = (yyvsp[-4].list);
					n->options = (yyvsp[-2].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31198 "gram.cpp"
    break;

  case 544: /* ConstraintElem: UNIQUE ExistingIndex ConstraintAttributeSpec  */
#line 4607 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_UNIQUE;
					n->location = (yylsp[-2]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[-1].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31216 "gram.cpp"
    break;

  case 545: /* ConstraintElem: PRIMARY KEY '(' columnList ')' opt_definition OptConsTableSpace ConstraintAttributeSpec  */
#line 4622 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_PRIMARY;
					n->location = (yylsp[-7]);
					n->keys = (yyvsp[-4].list);
					n->options = (yyvsp[-2].list);
					n->indexname = NULL;
					n->indexspace = (yyvsp[-1].str);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31234 "gram.cpp"
    break;

  case 546: /* ConstraintElem: PRIMARY KEY ExistingIndex ConstraintAttributeSpec  */
#line 4636 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_PRIMARY;
					n->location = (yylsp[-3]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[-1].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31252 "gram.cpp"
    break;

  case 547: /* ConstraintElem: EXCLUDE access_method_clause '(' ExclusionConstraintList ')' opt_definition OptConsTableSpace ExclusionWhereClause ConstraintAttributeSpec  */
#line 4652 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_EXCLUSION;
					n->location = (yylsp[-8]);
					n->access_method	= (yyvsp[-7].str);
					n->exclusions		= (yyvsp[-5].list);
					n->options			= (yyvsp[-3].list);
					n->indexname		= NULL;
					n->indexspace		= (yyvsp[-2].str);
					n->where_clause		= (yyvsp[-1].node);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "EXCLUDE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 31272 "gram.cpp"
    break;

  case 548: /* ConstraintElem: FOREIGN KEY '(' columnList ')' REFERENCES qualified_name opt_column_list key_match key_actions ConstraintAttributeSpec  */
#line 4669 "gram.y"
                                {
					Constraint *n = makeNode(Constraint);
					n->contype = CONSTR_FOREIGN;
					n->location = (yylsp[-10]);
					n->pktable			= (yyvsp[-4].range);
					n->fk_attrs			= (yyvsp[-7].list);
					n->pk_attrs			= (yyvsp[-3].list);
					n->fk_matchtype		= (yyvsp[-2].ival);
					n->fk_upd_action	= (char) ((yyvsp[-1].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[-1].ival) & 0xFF);
					processCASbits((yyvsp[0].ival), (yylsp[0]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (Node *)n;
				}
#line 31294 "gram.cpp"
    break;

  case 549: /* opt_no_inherit: NO INHERIT  */
#line 4688 "gram.y"
                                                                                {  (yyval.boolean) = TRUE; }
#line 31300 "gram.cpp"
    break;

  case 550: /* opt_no_inherit: %empty  */
#line 4689 "gram.y"
                                                                                        {  (yyval.boolean) = FALSE; }
#line 31306 "gram.cpp"
    break;

  case 551: /* opt_column_list: '(' columnList ')'  */
#line 4693 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 31312 "gram.cpp"
    break;

  case 552: /* opt_column_list: %empty  */
#line 4694 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 31318 "gram.cpp"
    break;

  case 553: /* columnList: columnElem  */
#line 4698 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31324 "gram.cpp"
    break;

  case 554: /* columnList: columnList ',' columnElem  */
#line 4699 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31330 "gram.cpp"
    break;

  case 555: /* columnElem: ColId  */
#line 4703 "gram.y"
                                {
					(yyval.node) = (Node *) makeString((yyvsp[0].str));
				}
#line 31338 "gram.cpp"
    break;

  case 556: /* distributed_by_list: distributed_by_elem  */
#line 4709 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].ielem)); }
#line 31344 "gram.cpp"
    break;

  case 557: /* distributed_by_list: distributed_by_list ',' distributed_by_elem  */
#line 4711 "gram.y"
                                {
					IndexElem *newelem = (yyvsp[0].ielem);
					ListCell *lc;

					foreach(lc, (yyvsp[-2].list))
					{
						IndexElem  *oldelem = (IndexElem *) lfirst(lc);

						if (strcmp(oldelem->name, newelem->name) == 0)
							ereport(ERROR,
									errcode(ERRCODE_DUPLICATE_COLUMN),
									 errmsg("duplicate column in DISTRIBUTED BY clause"),
									 parser_errposition((yylsp[0])));
					}

					(yyval.list) = lappend((yyvsp[-2].list), newelem);
				}
#line 31366 "gram.cpp"
    break;

  case 558: /* distributed_by_elem: ColId opt_class  */
#line 4731 "gram.y"
                                {
					/*
					 * only these fields are used, leave others as 0/NULL
					 */
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = (yyvsp[-1].str);
					(yyval.ielem)->opclass = (yyvsp[0].list);
				}
#line 31379 "gram.cpp"
    break;

  case 559: /* key_match: MATCH FULL  */
#line 4742 "gram.y"
                        {
				(yyval.ival) = FKCONSTR_MATCH_FULL;
			}
#line 31387 "gram.cpp"
    break;

  case 560: /* key_match: MATCH PARTIAL  */
#line 4746 "gram.y"
                        {
				ereport(ERROR,
						errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[-1])));
				(yyval.ival) = FKCONSTR_MATCH_PARTIAL;
			}
#line 31399 "gram.cpp"
    break;

  case 561: /* key_match: MATCH SIMPLE  */
#line 4754 "gram.y"
                        {
				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
			}
#line 31407 "gram.cpp"
    break;

  case 562: /* key_match: %empty  */
#line 4758 "gram.y"
                        {
				(yyval.ival) = FKCONSTR_MATCH_SIMPLE;
			}
#line 31415 "gram.cpp"
    break;

  case 563: /* ExclusionConstraintList: ExclusionConstraintElem  */
#line 4764 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 31421 "gram.cpp"
    break;

  case 564: /* ExclusionConstraintList: ExclusionConstraintList ',' ExclusionConstraintElem  */
#line 4766 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 31427 "gram.cpp"
    break;

  case 565: /* ExclusionConstraintElem: index_elem WITH any_operator  */
#line 4770 "gram.y"
                        {
				(yyval.list) = list_make2((yyvsp[-2].ielem), (yyvsp[0].list));
			}
#line 31435 "gram.cpp"
    break;

  case 566: /* ExclusionConstraintElem: index_elem WITH OPERATOR '(' any_operator ')'  */
#line 4775 "gram.y"
                        {
				(yyval.list) = list_make2((yyvsp[-5].ielem), (yyvsp[-1].list));
			}
#line 31443 "gram.cpp"
    break;

  case 567: /* ExclusionWhereClause: WHERE '(' a_expr ')'  */
#line 4781 "gram.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 31449 "gram.cpp"
    break;

  case 568: /* ExclusionWhereClause: %empty  */
#line 4782 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31455 "gram.cpp"
    break;

  case 569: /* key_actions: key_update  */
#line 4793 "gram.y"
                                { (yyval.ival) = ((yyvsp[0].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
#line 31461 "gram.cpp"
    break;

  case 570: /* key_actions: key_delete  */
#line 4795 "gram.y"
                                { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[0].ival) & 0xFF); }
#line 31467 "gram.cpp"
    break;

  case 571: /* key_actions: key_update key_delete  */
#line 4797 "gram.y"
                                { (yyval.ival) = ((yyvsp[-1].ival) << 8) | ((yyvsp[0].ival) & 0xFF); }
#line 31473 "gram.cpp"
    break;

  case 572: /* key_actions: key_delete key_update  */
#line 4799 "gram.y"
                                { (yyval.ival) = ((yyvsp[0].ival) << 8) | ((yyvsp[-1].ival) & 0xFF); }
#line 31479 "gram.cpp"
    break;

  case 573: /* key_actions: %empty  */
#line 4801 "gram.y"
                                { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
#line 31485 "gram.cpp"
    break;

  case 574: /* key_update: ON UPDATE key_action  */
#line 4804 "gram.y"
                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 31491 "gram.cpp"
    break;

  case 575: /* key_delete: ON DELETE_P key_action  */
#line 4807 "gram.y"
                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 31497 "gram.cpp"
    break;

  case 576: /* key_action: NO ACTION  */
#line 4811 "gram.y"
                                                                        { (yyval.ival) = FKCONSTR_ACTION_NOACTION; }
#line 31503 "gram.cpp"
    break;

  case 577: /* key_action: RESTRICT  */
#line 4812 "gram.y"
                                                                        { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; }
#line 31509 "gram.cpp"
    break;

  case 578: /* key_action: CASCADE  */
#line 4813 "gram.y"
                                                                        { (yyval.ival) = FKCONSTR_ACTION_CASCADE; }
#line 31515 "gram.cpp"
    break;

  case 579: /* key_action: SET NULL_P  */
#line 4814 "gram.y"
                                                                { (yyval.ival) = FKCONSTR_ACTION_SETNULL; }
#line 31521 "gram.cpp"
    break;

  case 580: /* key_action: SET DEFAULT  */
#line 4815 "gram.y"
                                                                { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; }
#line 31527 "gram.cpp"
    break;

  case 581: /* OptInherit: INHERITS '(' qualified_name_list ')'  */
#line 4818 "gram.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 31533 "gram.cpp"
    break;

  case 582: /* OptInherit: %empty  */
#line 4819 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 31539 "gram.cpp"
    break;

  case 583: /* OptWith: WITH reloptions  */
#line 4824 "gram.y"
                                                                { (yyval.list) = (yyvsp[0].list); }
#line 31545 "gram.cpp"
    break;

  case 584: /* OptWith: WITH OIDS  */
#line 4825 "gram.y"
                                                                        { (yyval.list) = list_make1(defWithOids(true)); }
#line 31551 "gram.cpp"
    break;

  case 585: /* OptWith: WITHOUT OIDS  */
#line 4826 "gram.y"
                                                                { (yyval.list) = list_make1(defWithOids(false)); }
#line 31557 "gram.cpp"
    break;

  case 586: /* OptWith: %empty  */
#line 4827 "gram.y"
                                                                        { (yyval.list) = NIL; }
#line 31563 "gram.cpp"
    break;

  case 587: /* OnCommitOption: ON COMMIT DROP  */
#line 4830 "gram.y"
                                                        { (yyval.oncommit) = ONCOMMIT_DROP; }
#line 31569 "gram.cpp"
    break;

  case 588: /* OnCommitOption: ON COMMIT DELETE_P ROWS  */
#line 4831 "gram.y"
                                                                { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; }
#line 31575 "gram.cpp"
    break;

  case 589: /* OnCommitOption: ON COMMIT PRESERVE ROWS  */
#line 4832 "gram.y"
                                                                { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; }
#line 31581 "gram.cpp"
    break;

  case 590: /* OnCommitOption: %empty  */
#line 4833 "gram.y"
                                                                                { (yyval.oncommit) = ONCOMMIT_NOOP; }
#line 31587 "gram.cpp"
    break;

  case 591: /* OptTableSpace: TABLESPACE name  */
#line 4836 "gram.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 31593 "gram.cpp"
    break;

  case 592: /* OptTableSpace: %empty  */
#line 4837 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 31599 "gram.cpp"
    break;

  case 593: /* OptConsTableSpace: USING INDEX TABLESPACE name  */
#line 4840 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 31605 "gram.cpp"
    break;

  case 594: /* OptConsTableSpace: %empty  */
#line 4841 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 31611 "gram.cpp"
    break;

  case 595: /* ExistingIndex: USING INDEX index_name  */
#line 4844 "gram.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 31617 "gram.cpp"
    break;

  case 596: /* optNumsegments: SEGMENTS ICONST  */
#line 4849 "gram.y"
        {
		(yyval.ival) = (yyvsp[0].ival);
	}
#line 31625 "gram.cpp"
    break;

  case 597: /* optNumsegments: %empty  */
#line 4853 "gram.y"
        {
		(yyval.ival) = -1;
	}
#line 31633 "gram.cpp"
    break;

  case 598: /* DistributedBy: DISTRIBUTED BY '(' distributed_by_list ')' optNumsegments  */
#line 4859 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_PARTITIONED;
				distributedBy->numsegments = (yyvsp[0].ival);
				distributedBy->keyCols = (yyvsp[-2].list);
				(yyval.node) = (Node *)distributedBy;
			}
#line 31645 "gram.cpp"
    break;

  case 599: /* DistributedBy: DISTRIBUTED RANDOMLY optNumsegments  */
#line 4867 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_PARTITIONED;
				distributedBy->numsegments = (yyvsp[0].ival);
				distributedBy->keyCols = NIL;
				(yyval.node) = (Node *)distributedBy;
			}
#line 31657 "gram.cpp"
    break;

  case 600: /* DistributedBy: DISTRIBUTED REPLICATED  */
#line 4875 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_REPLICATED;
				distributedBy->numsegments = -1;
				distributedBy->keyCols = NIL;
				(yyval.node) = (Node *)distributedBy;
			}
#line 31669 "gram.cpp"
    break;

  case 601: /* DistributedBy: DISTRIBUTED LOCAL  */
#line 4883 "gram.y"
                        {
				DistributedBy *distributedBy = makeNode(DistributedBy);
				distributedBy->ptype = POLICYTYPE_LOCAL;
				distributedBy->numsegments = -1;
				distributedBy->keyCols = NIL;
				(yyval.node) = (Node *)distributedBy;

			}
#line 31682 "gram.cpp"
    break;

  case 602: /* OptDistributedBy: DistributedBy  */
#line 4893 "gram.y"
                                                        { (yyval.node) = (yyvsp[0].node); }
#line 31688 "gram.cpp"
    break;

  case 603: /* OptDistributedBy: %empty  */
#line 4894 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31694 "gram.cpp"
    break;

  case 604: /* OptTabPartitionColumnEncList: TabPartitionColumnEncList  */
#line 4899 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 31700 "gram.cpp"
    break;

  case 605: /* OptTabPartitionColumnEncList: %empty  */
#line 4900 "gram.y"
                                    { (yyval.list) = NULL; }
#line 31706 "gram.cpp"
    break;

  case 606: /* TabPartitionColumnEncList: column_reference_storage_directive  */
#line 4904 "gram.y"
                                           { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31712 "gram.cpp"
    break;

  case 607: /* TabPartitionColumnEncList: TabPartitionColumnEncList column_reference_storage_directive  */
#line 4906 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node));
				}
#line 31720 "gram.cpp"
    break;

  case 608: /* OptTabPartitionStorageAttr: WITH definition TABLESPACE name  */
#line 4912 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = NULL;
                    pc->arg1 = (Node *)(yyvsp[-2].list);
                    pc->arg2 = (Node *)makeString((yyvsp[0].str));
                    pc->location = (yylsp[-3]);
					(yyval.node) = (Node *)pc;
                }
#line 31734 "gram.cpp"
    break;

  case 609: /* OptTabPartitionStorageAttr: WITH definition  */
#line 4922 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = NULL;
                    pc->arg1 = (Node *)(yyvsp[0].list);
                    pc->arg2 = NULL;
                    pc->location = (yylsp[-1]);
					(yyval.node) = (Node *)pc;
 				}
#line 31748 "gram.cpp"
    break;

  case 610: /* OptTabPartitionStorageAttr: TABLESPACE name  */
#line 4932 "gram.y"
                                {
                    /* re-use alterpartitioncmd struct here... */
					AlterPartitionCmd *pc = makeNode(AlterPartitionCmd);
                    pc->partid = NULL;
                    pc->arg1 = NULL;
                    pc->arg2 = (Node *)makeString((yyvsp[0].str));
                    pc->location = (yylsp[-1]);
					(yyval.node) = (Node *)pc;
				}
#line 31762 "gram.cpp"
    break;

  case 611: /* OptTabPartitionStorageAttr: %empty  */
#line 4941 "gram.y"
                                    { (yyval.node) = NULL; }
#line 31768 "gram.cpp"
    break;

  case 612: /* OptTabPartitionSpec: '(' TabPartitionElemList ')'  */
#line 4945 "gram.y"
                                {
                        PartitionSpec *n = makeNode(PartitionSpec); 
                        n->partElem  = (yyvsp[-1].list);
                        n->subSpec   = NULL;
                        n->location  = (yylsp[-1]);
                        (yyval.node) = (Node *)n;
				}
#line 31780 "gram.cpp"
    break;

  case 613: /* OptTabPartitionSpec: %empty  */
#line 4952 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31786 "gram.cpp"
    break;

  case 614: /* OptTabSubPartitionSpec: '(' TabSubPartitionElemList ')'  */
#line 4957 "gram.y"
                                {
                        PartitionSpec *n = makeNode(PartitionSpec); 
                        n->partElem  = (yyvsp[-1].list);
                        n->subSpec   = NULL;
                        n->location  = (yylsp[-1]);
                        (yyval.node) = (Node *)n;
				}
#line 31798 "gram.cpp"
    break;

  case 615: /* OptTabSubPartitionSpec: %empty  */
#line 4964 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31804 "gram.cpp"
    break;

  case 616: /* TabPartitionElemList: TabPartitionElem  */
#line 4968 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31810 "gram.cpp"
    break;

  case 617: /* TabPartitionElemList: TabPartitionElemList ',' TabPartitionElem  */
#line 4970 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31816 "gram.cpp"
    break;

  case 618: /* TabSubPartitionElemList: TabSubPartitionElem  */
#line 4973 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31822 "gram.cpp"
    break;

  case 619: /* TabSubPartitionElemList: TabSubPartitionElemList ',' TabSubPartitionElem  */
#line 4975 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31828 "gram.cpp"
    break;

  case 620: /* tab_part_val_no_paran: AexprConst  */
#line 4978 "gram.y"
                                  { (yyval.node) = (yyvsp[0].node); }
#line 31834 "gram.cpp"
    break;

  case 621: /* tab_part_val_no_paran: CAST '(' tab_part_val AS Typename ')'  */
#line 4980 "gram.y"
                                { 
					(yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), (yylsp[-2]));
				}
#line 31842 "gram.cpp"
    break;

  case 622: /* tab_part_val_no_paran: tab_part_val_no_paran TYPECAST Typename  */
#line 4984 "gram.y"
                                { 
					(yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); 
				}
#line 31850 "gram.cpp"
    break;

  case 623: /* tab_part_val_no_paran: '-' tab_part_val_no_paran  */
#line 4987 "gram.y"
                                                    { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 31856 "gram.cpp"
    break;

  case 624: /* tab_part_val: tab_part_val_no_paran  */
#line 4990 "gram.y"
                                    { (yyval.node) = (yyvsp[0].node); }
#line 31862 "gram.cpp"
    break;

  case 625: /* tab_part_val: '(' tab_part_val_no_paran ')'  */
#line 4991 "gram.y"
                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 31868 "gram.cpp"
    break;

  case 626: /* tab_part_val: '(' tab_part_val_no_paran ')' TYPECAST Typename  */
#line 4993 "gram.y"
                                { 
					(yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[0].typnam), (yylsp[-1])); 
				}
#line 31876 "gram.cpp"
    break;

  case 627: /* TabPartitionBoundarySpecValList: tab_part_val  */
#line 4999 "gram.y"
                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 31882 "gram.cpp"
    break;

  case 628: /* TabPartitionBoundarySpecValList: TabPartitionBoundarySpecValList ',' tab_part_val  */
#line 5001 "gram.y"
                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 31888 "gram.cpp"
    break;

  case 629: /* OptTabPartitionRangeInclusive: INCLUSIVE  */
#line 5005 "gram.y"
                                                        { (yyval.ival) = PART_EDGE_INCLUSIVE; }
#line 31894 "gram.cpp"
    break;

  case 630: /* OptTabPartitionRangeInclusive: EXCLUSIVE  */
#line 5006 "gram.y"
                                                        { (yyval.ival) = PART_EDGE_EXCLUSIVE; }
#line 31900 "gram.cpp"
    break;

  case 631: /* OptTabPartitionRangeInclusive: %empty  */
#line 5007 "gram.y"
                                                        { (yyval.ival) = PART_EDGE_UNSPECIFIED; }
#line 31906 "gram.cpp"
    break;

  case 632: /* TabPartitionBoundarySpecStart: START '(' TabPartitionBoundarySpecValList ')' OptTabPartitionRangeInclusive  */
#line 5014 "gram.y"
                                {
                        PartitionRangeItem *n = makeNode(PartitionRangeItem); 
                        n->partRangeVal  = (yyvsp[-2].list);
                        if (!((yyvsp[0].ival)))
                            n->partedge = PART_EDGE_INCLUSIVE;
                        else
                            n->partedge = static_cast<PartitionEdgeBounding>((yyvsp[0].ival));
                        n->location  = (yylsp[-4]);
                        (yyval.node) = (Node *)n;
				}
#line 31921 "gram.cpp"
    break;

  case 633: /* TabPartitionBoundarySpecEnd: END_P '(' TabPartitionBoundarySpecValList ')' OptTabPartitionRangeInclusive  */
#line 5030 "gram.y"
                                {
                        PartitionRangeItem *n = makeNode(PartitionRangeItem); 
                        n->partRangeVal  = (yyvsp[-2].list);
                        if (!((yyvsp[0].ival)))
                            n->partedge = PART_EDGE_EXCLUSIVE;
                        else
                            n->partedge = static_cast<PartitionEdgeBounding>((yyvsp[0].ival));
                        n->location  = (yylsp[-4]);
                        (yyval.node) = (Node *)n;
				}
#line 31936 "gram.cpp"
    break;

  case 634: /* OptTabPartitionBoundarySpecEvery: EVERY '(' TabPartitionBoundarySpecValList ')'  */
#line 5044 "gram.y"
                                {
                        PartitionRangeItem *n = makeNode(PartitionRangeItem); 
                        n->partRangeVal  = (yyvsp[-1].list);
                        n->location  = (yylsp[-3]);

                        (yyval.node) = (Node *)n;
				}
#line 31948 "gram.cpp"
    break;

  case 635: /* OptTabPartitionBoundarySpecEvery: %empty  */
#line 5051 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31954 "gram.cpp"
    break;

  case 636: /* OptTabPartitionBoundarySpecEnd: TabPartitionBoundarySpecEnd  */
#line 5055 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 31960 "gram.cpp"
    break;

  case 637: /* OptTabPartitionBoundarySpecEnd: %empty  */
#line 5056 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 31966 "gram.cpp"
    break;

  case 638: /* TabPartitionBoundarySpec: part_values_clause  */
#line 5062 "gram.y"
                                {
                        PartitionValuesSpec *n = makeNode(PartitionValuesSpec); 

                        n->partValues = (yyvsp[0].list);
                        n->location  = (yylsp[0]);
                        (yyval.node) = (Node *)n;
				}
#line 31978 "gram.cpp"
    break;

  case 639: /* TabPartitionBoundarySpec: TabPartitionBoundarySpecStart OptTabPartitionBoundarySpecEnd OptTabPartitionBoundarySpecEvery  */
#line 5072 "gram.y"
                                {
                        PartitionBoundSpec *n = makeNode(PartitionBoundSpec); 
                        n->partStart = (yyvsp[-2].node);
                        n->partEnd   = (yyvsp[-1].node);
                        n->partEvery = (yyvsp[0].node);
                        n->everyGenList = NIL; 
						n->pWithTnameStr = NULL;
                        n->location  = (yylsp[-2]);
                        (yyval.node) = (Node *)n;
				}
#line 31993 "gram.cpp"
    break;

  case 640: /* TabPartitionBoundarySpec: TabPartitionBoundarySpecEnd OptTabPartitionBoundarySpecEvery  */
#line 5084 "gram.y"
                                {
                        PartitionBoundSpec *n = makeNode(PartitionBoundSpec); 
                        n->partStart = NULL;
                        n->partEnd   = (yyvsp[-1].node);
                        n->partEvery = (yyvsp[0].node);
                        n->everyGenList = NIL; 
						n->pWithTnameStr = NULL;
                        n->location  = (yylsp[-1]);
                        (yyval.node) = (Node *)n;
				}
#line 32008 "gram.cpp"
    break;

  case 641: /* OptTabPartitionBoundarySpec: TabPartitionBoundarySpec  */
#line 5097 "gram.y"
                                                                { (yyval.node) = (yyvsp[0].node); }
#line 32014 "gram.cpp"
    break;

  case 642: /* OptTabPartitionBoundarySpec: %empty  */
#line 5098 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 32020 "gram.cpp"
    break;

  case 643: /* multi_spec_value_list: '(' part_values_single ')'  */
#line 5102 "gram.y"
                                {
					ListCell *lc;
					List *out = NIL;

					foreach(lc, (yyvsp[-1].list))
						out = lappend(out, linitial(reinterpret_cast<const PGList*>(lfirst(lc))));

					(yyval.list) = list_make1(out);
				}
#line 32034 "gram.cpp"
    break;

  case 644: /* multi_spec_value_list: multi_spec_value_list ',' '(' part_values_single ')'  */
#line 5112 "gram.y"
                                {
					ListCell *lc;
					List *out = NIL;

					foreach(lc, (yyvsp[-1].list))
						out = lappend(out, linitial(reinterpret_cast<const PGList*>(lfirst(lc))));

					(yyval.list) = lappend((yyvsp[-4].list), out);
				}
#line 32048 "gram.cpp"
    break;

  case 645: /* part_values_single: tab_part_val_no_paran  */
#line 5124 "gram.y"
                                {
					(yyval.list) = list_make1(list_make1((yyvsp[0].node)));
				}
#line 32056 "gram.cpp"
    break;

  case 646: /* part_values_single: part_values_single ',' tab_part_val_no_paran  */
#line 5128 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), list_make1((yyvsp[0].node)));
				}
#line 32064 "gram.cpp"
    break;

  case 647: /* part_values_clause: VALUES '(' part_values_single ')'  */
#line 5135 "gram.y"
                                {
					(yyval.list) = (yyvsp[-1].list);
				}
#line 32072 "gram.cpp"
    break;

  case 648: /* part_values_clause: VALUES '(' multi_spec_value_list ')'  */
#line 5139 "gram.y"
                                {
					(yyval.list) = (yyvsp[-1].list);
				}
#line 32080 "gram.cpp"
    break;

  case 649: /* part_values_or_spec_list: TabPartitionBoundarySpecValList  */
#line 5144 "gram.y"
                                                          { (yyval.list) = (yyvsp[0].list); }
#line 32086 "gram.cpp"
    break;

  case 650: /* part_values_or_spec_list: part_values_clause  */
#line 5145 "gram.y"
                                             { (yyval.list) = (yyvsp[0].list); }
#line 32092 "gram.cpp"
    break;

  case 651: /* TabPartitionElem: TabPartitionNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5154 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = 0;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32109 "gram.cpp"
    break;

  case 652: /* TabPartitionElem: TabPartitionDefaultNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5173 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = true;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        (yyval.node) = (Node *)n;
				}
#line 32125 "gram.cpp"
    break;

  case 653: /* TabPartitionElem: TabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5188 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = NULL;
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-3]);
                        n->isDefault = 0;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32142 "gram.cpp"
    break;

  case 654: /* TabPartitionElem: column_reference_storage_directive  */
#line 5201 "gram.y"
                                {
					(yyval.node) = (Node *)(yyvsp[0].node);
				}
#line 32150 "gram.cpp"
    break;

  case 655: /* TabSubPartitionElem: TabSubPartitionNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5211 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = 0;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32167 "gram.cpp"
    break;

  case 656: /* TabSubPartitionElem: TabSubPartitionDefaultNameDecl OptTabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5228 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = (yyvsp[-4].str);
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-4]);
                        n->isDefault = true;
                        n->storeAttr = (yyvsp[-2].node);
                        n->colencs   = (yyvsp[-1].list);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32184 "gram.cpp"
    break;

  case 657: /* TabSubPartitionElem: TabPartitionBoundarySpec OptTabPartitionStorageAttr OptTabPartitionColumnEncList OptTabSubPartitionSpec  */
#line 5244 "gram.y"
                                {
                        PartitionElem *n = makeNode(PartitionElem); 
                        n->partName  = NULL;
                        n->boundSpec = (yyvsp[-3].node);
                        n->subSpec   = (yyvsp[0].node);
                        n->location  = (yylsp[-3]);
                        n->isDefault = false;
                        n->colencs   = (yyvsp[-1].list);
                        n->storeAttr = (yyvsp[-2].node);
                        n->AddPartDesc = NULL;
                        (yyval.node) = (Node *)n;
				}
#line 32201 "gram.cpp"
    break;

  case 658: /* TabSubPartitionElem: column_reference_storage_directive  */
#line 5257 "gram.y"
                                {
					(yyval.node) = (Node *)(yyvsp[0].node);
				}
#line 32209 "gram.cpp"
    break;

  case 659: /* TabPartitionNameDecl: PARTITION PartitionColId  */
#line 5263 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32217 "gram.cpp"
    break;

  case 660: /* TabPartitionDefaultNameDecl: DEFAULT PARTITION PartitionColId  */
#line 5268 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32225 "gram.cpp"
    break;

  case 661: /* TabSubPartitionNameDecl: SUBPARTITION PartitionColId  */
#line 5274 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32233 "gram.cpp"
    break;

  case 662: /* TabSubPartitionDefaultNameDecl: DEFAULT SUBPARTITION PartitionColId  */
#line 5280 "gram.y"
                                {
					(yyval.str) = (yyvsp[0].str);
				}
#line 32241 "gram.cpp"
    break;

  case 663: /* TabPartitionByType: RANGE  */
#line 5286 "gram.y"
                                                        { (yyval.ival) = PARTTYP_RANGE; }
#line 32247 "gram.cpp"
    break;

  case 664: /* TabPartitionByType: LIST  */
#line 5287 "gram.y"
                                                        { (yyval.ival) = PARTTYP_LIST; }
#line 32253 "gram.cpp"
    break;

  case 665: /* TabPartitionByType: %empty  */
#line 5289 "gram.y"
                                {
					(yyval.ival) = PARTTYP_RANGE; 

					ereport(ERROR,
							errcode(ERRCODE_SYNTAX_ERROR),
							 errmsg("PARTITION BY must specify RANGE or LIST"));
				}
#line 32265 "gram.cpp"
    break;

  case 666: /* OptTabPartitionBy: PARTITION BY TabPartitionByType '(' columnList ')' opt_list_subparts OptTabPartitionSpec  */
#line 5303 "gram.y"
                                {
					PartitionBy *n = makeNode(PartitionBy); 
						
					n->partType = static_cast<PartitionByType>((yyvsp[-5].ival));
					n->keys     = (yyvsp[-3].list); 
					n->subPart  = (yyvsp[-1].node);
					if (PointerIsValid(n->subPart) &&
						!IsA(n->subPart, PartitionBy))
						parser_yyerror("syntax error");

					n->partSpec = (yyvsp[0].node);
					n->partDepth = 0;
					n->partQuiet = PART_VERBO_NODISTRO;
					n->location  = (yylsp[-5]);
					n->partDefault = NULL;
					(yyval.node) = (Node *)n;
				}
#line 32287 "gram.cpp"
    break;

  case 667: /* OptTabPartitionBy: %empty  */
#line 5320 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 32293 "gram.cpp"
    break;

  case 668: /* TabSubPartitionTemplate: SUBPARTITION TEMPLATE '(' TabSubPartitionElemList ')'  */
#line 5326 "gram.y"
                                {
					PartitionSpec *n = makeNode(PartitionSpec); 
					n->partElem  = (yyvsp[-1].list);
					n->subSpec   = NULL;
					n->istemplate  = true;
					n->location  = (yylsp[-2]);
					(yyval.node) = (Node *)n;

					/* a little (temporary?) syntax check on templates */
					if (n->partElem)
					{
						List *elems;
						ListCell *lc;
						Assert(IsA(n->partElem, List));

						elems = (List *)n->partElem;
						foreach(lc, elems)
						{
							PartitionElem *e = reinterpret_cast<PartitionElem *>(lfirst(lc));

							if (!IsA(e, PartitionElem)) continue;

							if (e->subSpec)
								ereport(ERROR,
										errcode(ERRCODE_SYNTAX_ERROR),
										 errmsg("template cannot contain "
												"specification for child "
												"partition"));
						}

					}
				}
#line 32330 "gram.cpp"
    break;

  case 669: /* opt_list_subparts: TabSubPartition  */
#line 5360 "gram.y"
                                   { (yyval.node) = (yyvsp[0].node); }
#line 32336 "gram.cpp"
    break;

  case 670: /* opt_list_subparts: %empty  */
#line 5361 "gram.y"
                                    { (yyval.node) = NULL; }
#line 32342 "gram.cpp"
    break;

  case 671: /* TabSubPartitionBy: SUBPARTITION BY TabPartitionByType '(' columnList ')'  */
#line 5367 "gram.y"
                                {
					PartitionBy *n = makeNode(PartitionBy);
					n->partType = static_cast<PartitionByType>((yyvsp[-3].ival));
					n->keys = (yyvsp[-1].list);
					n->subPart  = NULL;
					n->partSpec = NULL;
					n->partDepth = 0;
					n->partQuiet = PART_VERBO_NODISTRO;
					n->location  = (yylsp[-3]);
					n->partDefault = NULL;
					(yyval.node) = (Node *)n;
				}
#line 32359 "gram.cpp"
    break;

  case 672: /* TabSubPartition: TabSubPartitionBy TabSubPartitionTemplate  */
#line 5383 "gram.y"
                                {
					PartitionBy *pby = (PartitionBy *)(yyvsp[-1].node);

					((PartitionBy *)pby)->partSpec = (yyvsp[0].node);

					(yyval.node) = (yyvsp[-1].node);
				}
#line 32371 "gram.cpp"
    break;

  case 673: /* TabSubPartition: TabSubPartitionBy  */
#line 5390 "gram.y"
                                            { (yyval.node) = (yyvsp[0].node); }
#line 32377 "gram.cpp"
    break;

  case 674: /* TabSubPartition: TabSubPartitionBy TabSubPartition  */
#line 5392 "gram.y"
                                {
					PartitionBy *pby = (PartitionBy *)(yyvsp[-1].node);
					pby->subPart = (yyvsp[0].node);
					(yyval.node) = (Node *)pby;
				}
#line 32387 "gram.cpp"
    break;

  case 675: /* TabSubPartition: TabSubPartitionBy TabSubPartitionTemplate TabSubPartition  */
#line 5398 "gram.y"
                                {
					PartitionBy *pby = (PartitionBy *)(yyvsp[-2].node);
					pby->partSpec = (yyvsp[-1].node);
					pby->subPart = (yyvsp[0].node);
					(yyval.node) = (Node *)pby;
				}
#line 32398 "gram.cpp"
    break;

  case 676: /* CreateAsStmt: CREATE OptTemp TABLE create_as_target AS SelectStmt opt_with_data OptDistributedBy OptTabPartitionBy  */
#line 5420 "gram.y"
                                {
					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
					ctas->query = (yyvsp[-3].node);
					ctas->into = (yyvsp[-5].into);
					ctas->relkind = OBJECT_TABLE;
					ctas->is_select_into = false;
					/* cram additional flags into the IntoClause */
					(yyvsp[-5].into)->rel->relpersistence = (yyvsp[-7].ival);
					ctas->into->distributedBy = (yyvsp[-1].node);

					if ((yyvsp[0].node))
						ereport(ERROR,
                                errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("Cannot create a partitioned table using CREATE TABLE AS SELECT"),
                                 errhint("Use CREATE TABLE...LIKE (followed by INSERT...SELECT) instead"));

					(yyvsp[-5].into)->skipData = !((yyvsp[-2].boolean));
					(yyval.node) = (Node *) ctas;
				}
#line 32422 "gram.cpp"
    break;

  case 677: /* create_as_target: qualified_name opt_column_list OptWith OnCommitOption OptTableSpace  */
#line 5443 "gram.y"
                                {
					(yyval.into) = makeNode(IntoClause);
					(yyval.into)->rel = (yyvsp[-4].range);
					(yyval.into)->colNames = (yyvsp[-3].list);
					(yyval.into)->options = (yyvsp[-2].list);
					(yyval.into)->onCommit = (yyvsp[-1].oncommit);
					(yyval.into)->tableSpaceName = (yyvsp[0].str);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				}
#line 32437 "gram.cpp"
    break;

  case 678: /* opt_with_data: WITH DATA_P  */
#line 5456 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 32443 "gram.cpp"
    break;

  case 679: /* opt_with_data: WITH NO DATA_P  */
#line 5457 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 32449 "gram.cpp"
    break;

  case 680: /* opt_with_data: %empty  */
#line 5458 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 32455 "gram.cpp"
    break;

  case 681: /* CreateExternalStmt: CREATE OptWritable EXTERNAL OptWeb OptTemp TABLE qualified_name '(' OptExtTableElementList ')' ExtTypedesc FORMAT Sconst format_opt ext_options_opt ext_opt_encoding_list ExtSingleRowErrorHandling OptDistributedBy  */
#line 5470 "gram.y"
                                                {
							CreateExternalStmt *n = makeNode(CreateExternalStmt);
							n->iswritable = (yyvsp[-16].boolean);
							n->isweb = (yyvsp[-14].boolean);
							(yyvsp[-11].range)->relpersistence = (yyvsp[-13].ival);
							n->relation = (yyvsp[-11].range);
							n->tableElts = (yyvsp[-9].list);
							n->exttypedesc = (ExtTableTypeDesc *) (yyvsp[-7].node);
							n->format = (yyvsp[-5].str);
							n->formatOpts = (yyvsp[-4].list);
							n->extOptions = (yyvsp[-3].list);
							n->encoding = (yyvsp[-2].list);
							n->sreh = (yyvsp[-1].node);
							n->distributedBy = (DistributedBy *) (yyvsp[0].node);
							
							/* various syntax checks for EXECUTE external table */
							if(((ExtTableTypeDesc *) n->exttypedesc)->exttabletype == EXTTBL_TYPE_EXECUTE)
							{
								ExtTableTypeDesc *extdesc = (ExtTableTypeDesc *) n->exttypedesc;
								
								if(!n->isweb)
									ereport(ERROR,
											errcode(ERRCODE_SYNTAX_ERROR),
										 	 errmsg("EXECUTE may not be used with a regular external table"),
										 	 errhint("Use CREATE EXTERNAL WEB TABLE instead"));
								
								/* if no ON clause specified, default to "ON ALL" */
								if(extdesc->on_clause == NIL)
								{									
									extdesc->on_clause = lappend(extdesc->on_clause, 
										   				   		 makeDefElem("all", (Node *)makeInteger(TRUE)));
								}
								else if(n->iswritable)
								{
									ereport(ERROR,
											errcode(ERRCODE_SYNTAX_ERROR),
									 		 errmsg("ON clause may not be used with a writable external table"));
								}
							}

							if(n->sreh)
							{
								if (n->iswritable)
									ereport(ERROR,
										errcode(ERRCODE_SYNTAX_ERROR),
										 errmsg("Single row error handling may not be used with a writable external table"));

								if (((SingleRowErrorDesc *)n->sreh)->log_errors_type == LOG_ERRORS_PERSISTENTLY)
								{
									n->extOptions = lappend(n->extOptions,
															makeDefElem("error_log_persistent", (Node *)makeString("true")));
								}
							}

							(yyval.node) = (Node *)n;							
						}
#line 32516 "gram.cpp"
    break;

  case 682: /* OptWritable: WRITABLE  */
#line 5528 "gram.y"
                                                        { (yyval.boolean) = TRUE; }
#line 32522 "gram.cpp"
    break;

  case 683: /* OptWritable: READABLE  */
#line 5529 "gram.y"
                                                                        { (yyval.boolean) = FALSE; }
#line 32528 "gram.cpp"
    break;

  case 684: /* OptWritable: %empty  */
#line 5530 "gram.y"
                                                                        { (yyval.boolean) = FALSE; }
#line 32534 "gram.cpp"
    break;

  case 685: /* OptWeb: WEB  */
#line 5533 "gram.y"
                                                                { (yyval.boolean) = TRUE; }
#line 32540 "gram.cpp"
    break;

  case 686: /* OptWeb: %empty  */
#line 5534 "gram.y"
                                                                { (yyval.boolean) = FALSE; }
#line 32546 "gram.cpp"
    break;

  case 687: /* ExtTypedesc: LOCATION '(' cdb_string_list ')' ext_on_clause_list  */
#line 5539 "gram.y"
                        {
				ExtTableTypeDesc *n = makeNode(ExtTableTypeDesc);
				n->exttabletype = EXTTBL_TYPE_LOCATION;
				n->location_list = (yyvsp[-2].list); 
				n->on_clause = (yyvsp[0].list);
				n->command_string = NULL;
				(yyval.node) = (Node *)n;
	
			}
#line 32560 "gram.cpp"
    break;

  case 688: /* ExtTypedesc: EXECUTE Sconst ext_on_clause_list  */
#line 5549 "gram.y"
                        {
				ExtTableTypeDesc *n = makeNode(ExtTableTypeDesc);
				n->exttabletype = EXTTBL_TYPE_EXECUTE;
				n->location_list = NIL; 
				n->command_string = (yyvsp[-1].str);
				n->on_clause = (yyvsp[0].list); /* default will get set later if needed */
						
				(yyval.node) = (Node *)n;
			}
#line 32574 "gram.cpp"
    break;

  case 689: /* ext_on_clause_list: ext_on_clause_list ext_on_clause_item  */
#line 5561 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 32580 "gram.cpp"
    break;

  case 690: /* ext_on_clause_list: %empty  */
#line 5562 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 32586 "gram.cpp"
    break;

  case 691: /* ext_on_clause_item: ON ALL  */
#line 5567 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("all", (Node *)makeInteger(TRUE));
			}
#line 32594 "gram.cpp"
    break;

  case 692: /* ext_on_clause_item: ON HOST Sconst  */
#line 5571 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("hostname", (Node *)makeString((yyvsp[0].str)));
			}
#line 32602 "gram.cpp"
    break;

  case 693: /* ext_on_clause_item: ON HOST  */
#line 5575 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("eachhost", (Node *)makeInteger(TRUE));
			}
#line 32610 "gram.cpp"
    break;

  case 694: /* ext_on_clause_item: ON MASTER  */
#line 5579 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("master", (Node *)makeInteger(TRUE));
			}
#line 32618 "gram.cpp"
    break;

  case 695: /* ext_on_clause_item: ON SEGMENT Iconst  */
#line 5583 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("segment", (Node *)makeInteger((yyvsp[0].ival)));
			}
#line 32626 "gram.cpp"
    break;

  case 696: /* ext_on_clause_item: ON Iconst  */
#line 5587 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("random", (Node *)makeInteger((yyvsp[0].ival)));
			}
#line 32634 "gram.cpp"
    break;

  case 697: /* format_opt: '(' format_opt_list ')'  */
#line 5593 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 32640 "gram.cpp"
    break;

  case 698: /* format_opt: '(' format_def_list ')'  */
#line 5594 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 32646 "gram.cpp"
    break;

  case 699: /* format_opt: '(' ')'  */
#line 5595 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 32652 "gram.cpp"
    break;

  case 700: /* format_opt: %empty  */
#line 5596 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 32658 "gram.cpp"
    break;

  case 701: /* format_opt_list: format_opt_item  */
#line 5601 "gram.y"
                        { 
				(yyval.list) = list_make1((yyvsp[0].defelt));
			}
#line 32666 "gram.cpp"
    break;

  case 702: /* format_opt_list: format_opt_list format_opt_item  */
#line 5605 "gram.y"
                        { 
				(yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); 
			}
#line 32674 "gram.cpp"
    break;

  case 703: /* format_def_list: format_def_item  */
#line 5612 "gram.y"
                        { 
				(yyval.list) = list_make1((yyvsp[0].defelt));
			}
#line 32682 "gram.cpp"
    break;

  case 704: /* format_def_list: format_def_list ',' format_def_item  */
#line 5616 "gram.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
			}
#line 32690 "gram.cpp"
    break;

  case 705: /* format_def_item: ColLabel '=' def_arg  */
#line 5623 "gram.y"
                        {
				(yyval.defelt) = makeDefElem((yyvsp[-2].str), (yyvsp[0].node));
			}
#line 32698 "gram.cpp"
    break;

  case 706: /* format_def_item: ColLabel '=' '(' columnList ')'  */
#line 5627 "gram.y"
                        {
				(yyval.defelt) = makeDefElem((yyvsp[-4].str), (Node *) (yyvsp[-1].list));
			}
#line 32706 "gram.cpp"
    break;

  case 707: /* format_opt_item: DELIMITER opt_as Sconst  */
#line 5634 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[0].str)));
			}
#line 32714 "gram.cpp"
    break;

  case 708: /* format_opt_item: NULL_P opt_as Sconst  */
#line 5638 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[0].str)));
			}
#line 32722 "gram.cpp"
    break;

  case 709: /* format_opt_item: CSV  */
#line 5642 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("csv", (Node *)makeInteger(TRUE));
			}
#line 32730 "gram.cpp"
    break;

  case 710: /* format_opt_item: HEADER_P  */
#line 5646 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
			}
#line 32738 "gram.cpp"
    break;

  case 711: /* format_opt_item: QUOTE opt_as Sconst  */
#line 5650 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[0].str)));
			}
#line 32746 "gram.cpp"
    break;

  case 712: /* format_opt_item: ESCAPE opt_as Sconst  */
#line 5654 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[0].str)));
			}
#line 32754 "gram.cpp"
    break;

  case 713: /* format_opt_item: FORCE NOT NULL_P columnList  */
#line 5658 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[0].list));
			}
#line 32762 "gram.cpp"
    break;

  case 714: /* format_opt_item: FORCE QUOTE columnList  */
#line 5662 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[0].list));
			}
#line 32770 "gram.cpp"
    break;

  case 715: /* format_opt_item: FORCE QUOTE '*'  */
#line 5666 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
			}
#line 32778 "gram.cpp"
    break;

  case 716: /* format_opt_item: FILL MISSING FIELDS  */
#line 5670 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("fill_missing_fields", (Node *)makeInteger(TRUE));
			}
#line 32786 "gram.cpp"
    break;

  case 717: /* format_opt_item: NEWLINE opt_as Sconst  */
#line 5674 "gram.y"
                        {
				(yyval.defelt) = makeDefElem("newline", (Node *)makeString((yyvsp[0].str)));
			}
#line 32794 "gram.cpp"
    break;

  case 718: /* ext_options_opt: OPTIONS ext_options  */
#line 5680 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 32800 "gram.cpp"
    break;

  case 719: /* ext_options_opt: %empty  */
#line 5681 "gram.y"
                                                            { (yyval.list) = NIL; }
#line 32806 "gram.cpp"
    break;

  case 720: /* ext_options: '(' ext_options_list ')'  */
#line 5685 "gram.y"
                                                           { (yyval.list) = (yyvsp[-1].list); }
#line 32812 "gram.cpp"
    break;

  case 721: /* ext_options: '(' ')'  */
#line 5686 "gram.y"
                                                            { (yyval.list) = NIL; }
#line 32818 "gram.cpp"
    break;

  case 722: /* ext_options_list: ext_options_item  */
#line 5691 "gram.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].defelt));
			}
#line 32826 "gram.cpp"
    break;

  case 723: /* ext_options_list: ext_options_list ',' ext_options_item  */
#line 5695 "gram.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
			}
#line 32834 "gram.cpp"
    break;

  case 724: /* ext_options_item: ColLabel Sconst  */
#line 5702 "gram.y"
                        {
				(yyval.defelt) = makeDefElem((yyvsp[-1].str), (Node *)makeString((yyvsp[0].str)));
			}
#line 32842 "gram.cpp"
    break;

  case 725: /* OptExtTableElementList: ExtTableElementList  */
#line 5708 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 32848 "gram.cpp"
    break;

  case 726: /* OptExtTableElementList: %empty  */
#line 5709 "gram.y"
                                                                                { (yyval.list) = NIL; }
#line 32854 "gram.cpp"
    break;

  case 727: /* ExtTableElementList: ExtTableElement  */
#line 5714 "gram.y"
                        {
				(yyval.list) = list_make1((yyvsp[0].node));
			}
#line 32862 "gram.cpp"
    break;

  case 728: /* ExtTableElementList: ExtTableElementList ',' ExtTableElement  */
#line 5718 "gram.y"
                        {
				(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
			}
#line 32870 "gram.cpp"
    break;

  case 729: /* ExtTableElement: ExtcolumnDef  */
#line 5724 "gram.y"
                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 32876 "gram.cpp"
    break;

  case 730: /* ExtTableElement: TableLikeClause  */
#line 5725 "gram.y"
                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 32882 "gram.cpp"
    break;

  case 731: /* ExtcolumnDef: ColId Typename  */
#line 5730 "gram.y"
                {
			ColumnDef *n = makeNode(ColumnDef);
			n->colname = (yyvsp[-1].str);
			n->typeName = (yyvsp[0].typnam);
			n->is_local = true;
			n->is_not_null = false;
			n->constraints = NIL;
			(yyval.node) = (Node *)n;
		}
#line 32896 "gram.cpp"
    break;

  case 732: /* OptSingleRowErrorHandling: OptLogErrorTable SEGMENT REJECT_P LIMIT Iconst OptSrehLimitType  */
#line 5746 "gram.y"
                {
			SingleRowErrorDesc *n = makeNode(SingleRowErrorDesc);
			n->into_file = (yyvsp[-5].ival) == LOG_ERRORS_DISABLE ? false : true;
			n->log_errors_type = n->into_file ? LOG_ERRORS_ENABLE : LOG_ERRORS_DISABLE;
			n->rejectlimit = (yyvsp[-1].ival);
			n->is_limit_in_rows = (yyvsp[0].boolean); /* true for ROWS false for PERCENT */

			/* PERCENT value check */
			if(!n->is_limit_in_rows && (n->rejectlimit < 1 || n->rejectlimit > 100))
				ereport(ERROR,
						errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						 errmsg("invalid PERCENT value. Should be (1 - 100)"));
			
			/* ROW values check */
			if(n->is_limit_in_rows && n->rejectlimit < 2)
			   ereport(ERROR,
					   errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						errmsg("invalid (ROWS) reject limit. Should be 2 or larger"));

			(yyval.list) = lappend(NULL, makeDefElem("sreh", (Node *) n));
		}
#line 32922 "gram.cpp"
    break;

  case 733: /* OptSingleRowErrorHandling: %empty  */
#line 5767 "gram.y"
                                        { (yyval.list) = NULL; }
#line 32928 "gram.cpp"
    break;

  case 734: /* OptLogErrorTable: LOG_P ERRORS INTO qualified_name  */
#line 5772 "gram.y"
                {
			if (gp_ignore_error_table) /* ignore the [INTO error-table] clause for backward compatibility */
			{
			ereport(WARNING,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 errmsg("error table is not supported"),
					 errhint("Use gp_read_error_log() and gp_truncate_error_log() to view and manage the internal error log associated with your table."));
			}
			else
			{
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 errmsg("error table is not supported"),
					 errhint("Set gp_ignore_error_table to ignore the [INTO error-table] clause for backward compatibility."),
					 parser_errposition((yylsp[-1])));
			}
			(yyval.ival) = LOG_ERRORS_ENABLE;
		}
#line 32951 "gram.cpp"
    break;

  case 735: /* OptLogErrorTable: LOG_P ERRORS  */
#line 5790 "gram.y"
                                                                        { (yyval.ival) = LOG_ERRORS_ENABLE; }
#line 32957 "gram.cpp"
    break;

  case 736: /* OptLogErrorTable: %empty  */
#line 5791 "gram.y"
                                                                                { (yyval.ival) = LOG_ERRORS_DISABLE; }
#line 32963 "gram.cpp"
    break;

  case 737: /* ExtSingleRowErrorHandling: ExtLogErrorTable SEGMENT REJECT_P LIMIT Iconst OptSrehLimitType  */
#line 5795 "gram.y"
                {
			SingleRowErrorDesc *n = makeNode(SingleRowErrorDesc);
			n->log_errors_type = static_cast<LogErrorsType>((yyvsp[-5].ival));
			n->into_file = n->log_errors_type == LOG_ERRORS_DISABLE ? false : true;
			n->rejectlimit = (yyvsp[-1].ival);
			n->is_limit_in_rows = (yyvsp[0].boolean); /* true for ROWS false for PERCENT */

			/* PERCENT value check */
			if(!n->is_limit_in_rows && (n->rejectlimit < 1 || n->rejectlimit > 100))
				ereport(ERROR,
						errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						 errmsg("invalid PERCENT value. Should be (1 - 100)"));

			/* ROW values check */
			if(n->is_limit_in_rows && n->rejectlimit < 2)
			   ereport(ERROR,
					   errcode(ERRCODE_INVALID_PARAMETER_VALUE),
						errmsg("invalid (ROWS) reject limit. Should be 2 or larger"));

			(yyval.node) = (Node *)n;
		}
#line 32989 "gram.cpp"
    break;

  case 738: /* ExtSingleRowErrorHandling: %empty  */
#line 5816 "gram.y"
                                        { (yyval.node) = NULL; }
#line 32995 "gram.cpp"
    break;

  case 739: /* ExtLogErrorTable: OptLogErrorTable  */
#line 5820 "gram.y"
                                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 33001 "gram.cpp"
    break;

  case 740: /* ExtLogErrorTable: LOG_P ERRORS PERSISTENTLY  */
#line 5821 "gram.y"
                                                        { (yyval.ival) = LOG_ERRORS_PERSISTENTLY; }
#line 33007 "gram.cpp"
    break;

  case 741: /* OptSrehLimitType: ROWS  */
#line 5825 "gram.y"
                                                        { (yyval.boolean) = TRUE; }
#line 33013 "gram.cpp"
    break;

  case 742: /* OptSrehLimitType: PERCENT  */
#line 5826 "gram.y"
                                                        { (yyval.boolean) = FALSE; }
#line 33019 "gram.cpp"
    break;

  case 743: /* OptSrehLimitType: %empty  */
#line 5827 "gram.y"
                                        { (yyval.boolean) = TRUE; }
#line 33025 "gram.cpp"
    break;

  case 744: /* ext_opt_encoding_list: ext_opt_encoding_list ext_opt_encoding_item  */
#line 5834 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33031 "gram.cpp"
    break;

  case 745: /* ext_opt_encoding_list: %empty  */
#line 5835 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 33037 "gram.cpp"
    break;

  case 746: /* ext_opt_encoding_item: ENCODING opt_equal Sconst  */
#line 5840 "gram.y"
                {
			(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[0].str)));
		}
#line 33045 "gram.cpp"
    break;

  case 747: /* ext_opt_encoding_item: ENCODING opt_equal Iconst  */
#line 5844 "gram.y"
                {
			(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[0].ival)));
		}
#line 33053 "gram.cpp"
    break;

  case 748: /* CreateMatViewStmt: CREATE OptNoLog MATERIALIZED VIEW create_mv_target AS SelectStmt opt_with_data OptDistributedBy  */
#line 5858 "gram.y"
                                {
					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
					ctas->query = (yyvsp[-2].node);
					ctas->into = (yyvsp[-4].into);
					ctas->relkind = OBJECT_MATVIEW;
					ctas->is_select_into = false;
					/* cram additional flags into the IntoClause */
					(yyvsp[-4].into)->rel->relpersistence = (yyvsp[-7].ival);
					(yyvsp[-4].into)->skipData = !((yyvsp[-1].boolean));
					ctas->into->distributedBy = (yyvsp[0].node);

					(yyval.node) = (Node *) ctas;
				}
#line 33071 "gram.cpp"
    break;

  case 749: /* create_mv_target: qualified_name opt_column_list opt_reloptions OptTableSpace  */
#line 5875 "gram.y"
                                {
					(yyval.into) = makeNode(IntoClause);
					(yyval.into)->rel = (yyvsp[-3].range);
					(yyval.into)->colNames = (yyvsp[-2].list);
					(yyval.into)->options = (yyvsp[-1].list);
					(yyval.into)->onCommit = ONCOMMIT_NOOP;
					(yyval.into)->tableSpaceName = (yyvsp[0].str);
					(yyval.into)->viewQuery = NULL;		/* filled at analysis time */
					(yyval.into)->skipData = false;		/* might get changed later */
				}
#line 33086 "gram.cpp"
    break;

  case 750: /* OptNoLog: UNLOGGED  */
#line 5887 "gram.y"
                                                                { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
#line 33092 "gram.cpp"
    break;

  case 751: /* OptNoLog: %empty  */
#line 5888 "gram.y"
                                                                        { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
#line 33098 "gram.cpp"
    break;

  case 752: /* RefreshMatViewStmt: REFRESH MATERIALIZED VIEW opt_concurrently qualified_name opt_with_data  */
#line 5901 "gram.y"
                                {
					RefreshMatViewStmt *n = makeNode(RefreshMatViewStmt);
					n->concurrent = (yyvsp[-2].boolean);
					n->relation = (yyvsp[-1].range);
					n->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (Node *) n;
				}
#line 33110 "gram.cpp"
    break;

  case 753: /* CreateSeqStmt: CREATE OptTemp SEQUENCE qualified_name OptSeqOptList  */
#line 5921 "gram.y"
                                {
					CreateSeqStmt *n = makeNode(CreateSeqStmt);
					(yyvsp[-1].range)->relpersistence = (yyvsp[-3].ival);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->ownerId = InvalidOid;
					(yyval.node) = (Node *)n;
				}
#line 33123 "gram.cpp"
    break;

  case 754: /* AlterSeqStmt: ALTER SEQUENCE qualified_name SeqOptList  */
#line 5933 "gram.y"
                                {
					AlterSeqStmt *n = makeNode(AlterSeqStmt);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 33135 "gram.cpp"
    break;

  case 755: /* AlterSeqStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SeqOptList  */
#line 5941 "gram.y"
                                {
					AlterSeqStmt *n = makeNode(AlterSeqStmt);
					n->sequence = (yyvsp[-1].range);
					n->options = (yyvsp[0].list);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 33147 "gram.cpp"
    break;

  case 756: /* OptSeqOptList: SeqOptList  */
#line 5951 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 33153 "gram.cpp"
    break;

  case 757: /* OptSeqOptList: %empty  */
#line 5952 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 33159 "gram.cpp"
    break;

  case 758: /* SeqOptList: SeqOptElem  */
#line 5955 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 33165 "gram.cpp"
    break;

  case 759: /* SeqOptList: SeqOptList SeqOptElem  */
#line 5956 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33171 "gram.cpp"
    break;

  case 760: /* SeqOptElem: CACHE NumericOnly  */
#line 5960 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cache", (Node *)(yyvsp[0].value));
				}
#line 33179 "gram.cpp"
    break;

  case 761: /* SeqOptElem: CYCLE  */
#line 5964 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(TRUE));
				}
#line 33187 "gram.cpp"
    break;

  case 762: /* SeqOptElem: NO CYCLE  */
#line 5968 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(FALSE));
				}
#line 33195 "gram.cpp"
    break;

  case 763: /* SeqOptElem: INCREMENT opt_by NumericOnly  */
#line 5972 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("increment", (Node *)(yyvsp[0].value));
				}
#line 33203 "gram.cpp"
    break;

  case 764: /* SeqOptElem: MAXVALUE NumericOnly  */
#line 5976 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("maxvalue", (Node *)(yyvsp[0].value));
				}
#line 33211 "gram.cpp"
    break;

  case 765: /* SeqOptElem: MINVALUE NumericOnly  */
#line 5980 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("minvalue", (Node *)(yyvsp[0].value));
				}
#line 33219 "gram.cpp"
    break;

  case 766: /* SeqOptElem: NO MAXVALUE  */
#line 5984 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("maxvalue", NULL);
				}
#line 33227 "gram.cpp"
    break;

  case 767: /* SeqOptElem: NO MINVALUE  */
#line 5988 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("minvalue", NULL);
				}
#line 33235 "gram.cpp"
    break;

  case 768: /* SeqOptElem: OWNED BY any_name  */
#line 5992 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("owned_by", (Node *)(yyvsp[0].list));
				}
#line 33243 "gram.cpp"
    break;

  case 769: /* SeqOptElem: START opt_with NumericOnly  */
#line 5996 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("start", (Node *)(yyvsp[0].value));
				}
#line 33251 "gram.cpp"
    break;

  case 770: /* SeqOptElem: RESTART  */
#line 6000 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("restart", NULL);
				}
#line 33259 "gram.cpp"
    break;

  case 771: /* SeqOptElem: RESTART opt_with NumericOnly  */
#line 6004 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("restart", (Node *)(yyvsp[0].value));
				}
#line 33267 "gram.cpp"
    break;

  case 772: /* opt_by: BY  */
#line 6009 "gram.y"
                                                {}
#line 33273 "gram.cpp"
    break;

  case 773: /* opt_by: %empty  */
#line 6010 "gram.y"
                                        {}
#line 33279 "gram.cpp"
    break;

  case 774: /* NumericOnly: FCONST  */
#line 6014 "gram.y"
                                                                                        { (yyval.value) = makeFloat((yyvsp[0].str)); }
#line 33285 "gram.cpp"
    break;

  case 775: /* NumericOnly: '+' FCONST  */
#line 6015 "gram.y"
                                                                                { (yyval.value) = makeFloat((yyvsp[0].str)); }
#line 33291 "gram.cpp"
    break;

  case 776: /* NumericOnly: '-' FCONST  */
#line 6017 "gram.y"
                                {
					(yyval.value) = makeFloat((yyvsp[0].str));
					doNegateFloat((yyval.value));
				}
#line 33300 "gram.cpp"
    break;

  case 777: /* NumericOnly: SignedIconst  */
#line 6021 "gram.y"
                                                                                { (yyval.value) = makeInteger((yyvsp[0].ival)); }
#line 33306 "gram.cpp"
    break;

  case 778: /* NumericOnly_list: NumericOnly  */
#line 6024 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].value)); }
#line 33312 "gram.cpp"
    break;

  case 779: /* NumericOnly_list: NumericOnly_list ',' NumericOnly  */
#line 6025 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].value)); }
#line 33318 "gram.cpp"
    break;

  case 780: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE NonReservedWord_or_Sconst  */
#line 6038 "gram.y"
                        {
				CreatePLangStmt *n = makeNode(CreatePLangStmt);
				n->replace = (yyvsp[-4].boolean);
				n->plname = (yyvsp[0].str);
				/* parameters are all to be supplied by system */
				n->plhandler = NIL;
				n->plinline = NIL;
				n->plvalidator = NIL;
				n->pltrusted = false;
				(yyval.node) = (Node *)n;
			}
#line 33334 "gram.cpp"
    break;

  case 781: /* CreatePLangStmt: CREATE opt_or_replace opt_trusted opt_procedural LANGUAGE NonReservedWord_or_Sconst HANDLER handler_name opt_inline_handler opt_validator  */
#line 6051 "gram.y"
                        {
				CreatePLangStmt *n = makeNode(CreatePLangStmt);
				n->replace = (yyvsp[-8].boolean);
				n->plname = (yyvsp[-4].str);
				n->plhandler = (yyvsp[-2].list);
				n->plinline = (yyvsp[-1].list);
				n->plvalidator = (yyvsp[0].list);
				n->pltrusted = (yyvsp[-7].boolean);
				(yyval.node) = (Node *)n;
			}
#line 33349 "gram.cpp"
    break;

  case 782: /* opt_trusted: TRUSTED  */
#line 6064 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 33355 "gram.cpp"
    break;

  case 783: /* opt_trusted: %empty  */
#line 6065 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 33361 "gram.cpp"
    break;

  case 784: /* handler_name: name  */
#line 6073 "gram.y"
                                                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 33367 "gram.cpp"
    break;

  case 785: /* handler_name: name attrs  */
#line 6074 "gram.y"
                                                                { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
#line 33373 "gram.cpp"
    break;

  case 786: /* opt_inline_handler: INLINE_P handler_name  */
#line 6078 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 33379 "gram.cpp"
    break;

  case 787: /* opt_inline_handler: %empty  */
#line 6079 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 33385 "gram.cpp"
    break;

  case 788: /* validator_clause: VALIDATOR handler_name  */
#line 6083 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 33391 "gram.cpp"
    break;

  case 789: /* validator_clause: NO VALIDATOR  */
#line 6084 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 33397 "gram.cpp"
    break;

  case 790: /* opt_validator: validator_clause  */
#line 6088 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 33403 "gram.cpp"
    break;

  case 791: /* opt_validator: %empty  */
#line 6089 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 33409 "gram.cpp"
    break;

  case 792: /* DropPLangStmt: DROP opt_procedural LANGUAGE NonReservedWord_or_Sconst opt_drop_behavior  */
#line 6094 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_LANGUAGE;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 33424 "gram.cpp"
    break;

  case 793: /* DropPLangStmt: DROP opt_procedural LANGUAGE IF_P EXISTS NonReservedWord_or_Sconst opt_drop_behavior  */
#line 6105 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_LANGUAGE;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 33438 "gram.cpp"
    break;

  case 794: /* opt_procedural: PROCEDURAL  */
#line 6117 "gram.y"
                                                                                                {}
#line 33444 "gram.cpp"
    break;

  case 795: /* opt_procedural: %empty  */
#line 6118 "gram.y"
                                                                                                {}
#line 33450 "gram.cpp"
    break;

  case 796: /* CreateTableSpaceStmt: CREATE TABLESPACE name OptTableSpaceOwner LOCATION Sconst opt_reloptions  */
#line 6129 "gram.y"
                                {
					CreateTableSpaceStmt *n = makeNode(CreateTableSpaceStmt);
					n->tablespacename = (yyvsp[-4].str);
					n->owner = (yyvsp[-3].str);
					n->location = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33463 "gram.cpp"
    break;

  case 797: /* OptTableSpaceOwner: OWNER name  */
#line 6139 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 33469 "gram.cpp"
    break;

  case 798: /* OptTableSpaceOwner: %empty  */
#line 6140 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 33475 "gram.cpp"
    break;

  case 799: /* DropTableSpaceStmt: DROP TABLESPACE name  */
#line 6154 "gram.y"
                                {
					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
					n->tablespacename = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *) n;
				}
#line 33486 "gram.cpp"
    break;

  case 800: /* DropTableSpaceStmt: DROP TABLESPACE IF_P EXISTS name  */
#line 6161 "gram.y"
                                {
					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
					n->tablespacename = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *) n;
				}
#line 33497 "gram.cpp"
    break;

  case 801: /* CreateExtensionStmt: CREATE EXTENSION name opt_with create_extension_opt_list  */
#line 6178 "gram.y"
                                {
					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
					n->extname = (yyvsp[-2].str);
					n->if_not_exists = false;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33509 "gram.cpp"
    break;

  case 802: /* CreateExtensionStmt: CREATE EXTENSION IF_P NOT EXISTS name opt_with create_extension_opt_list  */
#line 6186 "gram.y"
                                {
					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
					n->extname = (yyvsp[-2].str);
					n->if_not_exists = true;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33521 "gram.cpp"
    break;

  case 803: /* create_extension_opt_list: create_extension_opt_list create_extension_opt_item  */
#line 6197 "gram.y"
                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33527 "gram.cpp"
    break;

  case 804: /* create_extension_opt_list: %empty  */
#line 6199 "gram.y"
                                { (yyval.list) = NIL; }
#line 33533 "gram.cpp"
    break;

  case 805: /* create_extension_opt_item: SCHEMA name  */
#line 6204 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("schema", (Node *)makeString((yyvsp[0].str)));
				}
#line 33541 "gram.cpp"
    break;

  case 806: /* create_extension_opt_item: VERSION_P NonReservedWord_or_Sconst  */
#line 6208 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[0].str)));
				}
#line 33549 "gram.cpp"
    break;

  case 807: /* create_extension_opt_item: FROM NonReservedWord_or_Sconst  */
#line 6212 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("old_version", (Node *)makeString((yyvsp[0].str)));
				}
#line 33557 "gram.cpp"
    break;

  case 808: /* AlterExtensionStmt: ALTER EXTENSION name UPDATE alter_extension_opt_list  */
#line 6224 "gram.y"
                                {
					AlterExtensionStmt *n = makeNode(AlterExtensionStmt);
					n->extname = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33568 "gram.cpp"
    break;

  case 809: /* alter_extension_opt_list: alter_extension_opt_list alter_extension_opt_item  */
#line 6234 "gram.y"
                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33574 "gram.cpp"
    break;

  case 810: /* alter_extension_opt_list: %empty  */
#line 6236 "gram.y"
                                { (yyval.list) = NIL; }
#line 33580 "gram.cpp"
    break;

  case 811: /* alter_extension_opt_item: TO NonReservedWord_or_Sconst  */
#line 6241 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[0].str)));
				}
#line 33588 "gram.cpp"
    break;

  case 812: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop AGGREGATE func_name aggr_args  */
#line 6254 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_AGGREGATE;
					n->objname = (yyvsp[-1].list);
					n->objargs = extractAggrArgTypes((yyvsp[0].list));
					(yyval.node) = (Node *)n;
				}
#line 33602 "gram.cpp"
    break;

  case 813: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop CAST '(' Typename AS Typename ')'  */
#line 6264 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-7].str);
					n->action = (yyvsp[-6].ival);
					n->objtype = OBJECT_CAST;
					n->objname = list_make1((yyvsp[-3].typnam));
					n->objargs = list_make1((yyvsp[-1].typnam));
					(yyval.node) = (Node *) n;
				}
#line 33616 "gram.cpp"
    break;

  case 814: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop COLLATION any_name  */
#line 6274 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_COLLATION;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33629 "gram.cpp"
    break;

  case 815: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop CONVERSION_P any_name  */
#line 6283 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_CONVERSION;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33642 "gram.cpp"
    break;

  case 816: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop DOMAIN_P any_name  */
#line 6292 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_DOMAIN;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33655 "gram.cpp"
    break;

  case 817: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FUNCTION function_with_argtypes  */
#line 6301 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_FUNCTION;
					n->objname = (yyvsp[0].funwithargs)->funcname;
					n->objargs = (yyvsp[0].funwithargs)->funcargs;
					(yyval.node) = (Node *)n;
				}
#line 33669 "gram.cpp"
    break;

  case 818: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop opt_procedural LANGUAGE name  */
#line 6311 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_LANGUAGE;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33682 "gram.cpp"
    break;

  case 819: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR any_operator oper_argtypes  */
#line 6320 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_OPERATOR;
					n->objname = (yyvsp[-1].list);
					n->objargs = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33696 "gram.cpp"
    break;

  case 820: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR CLASS any_name USING access_method  */
#line 6330 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-6].str);
					n->action = (yyvsp[-5].ival);
					n->objtype = OBJECT_OPCLASS;
					n->objname = (yyvsp[-2].list);
					n->objargs = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33710 "gram.cpp"
    break;

  case 821: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop OPERATOR FAMILY any_name USING access_method  */
#line 6340 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-6].str);
					n->action = (yyvsp[-5].ival);
					n->objtype = OBJECT_OPFAMILY;
					n->objname = (yyvsp[-2].list);
					n->objargs = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33724 "gram.cpp"
    break;

  case 822: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop SCHEMA name  */
#line 6350 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_SCHEMA;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33737 "gram.cpp"
    break;

  case 823: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop EVENT TRIGGER name  */
#line 6359 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_EVENT_TRIGGER;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33750 "gram.cpp"
    break;

  case 824: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TABLE any_name  */
#line 6368 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_TABLE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33763 "gram.cpp"
    break;

  case 825: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH PARSER any_name  */
#line 6377 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSPARSER;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33776 "gram.cpp"
    break;

  case 826: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH DICTIONARY any_name  */
#line 6386 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSDICTIONARY;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33789 "gram.cpp"
    break;

  case 827: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH TEMPLATE any_name  */
#line 6395 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSTEMPLATE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33802 "gram.cpp"
    break;

  case 828: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TEXT_P SEARCH CONFIGURATION any_name  */
#line 6404 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_TSCONFIGURATION;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33815 "gram.cpp"
    break;

  case 829: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop SEQUENCE any_name  */
#line 6413 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_SEQUENCE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33828 "gram.cpp"
    break;

  case 830: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop VIEW any_name  */
#line 6422 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_VIEW;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33841 "gram.cpp"
    break;

  case 831: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop MATERIALIZED VIEW any_name  */
#line 6431 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_MATVIEW;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33854 "gram.cpp"
    break;

  case 832: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FOREIGN TABLE any_name  */
#line 6440 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-4].str);
					n->action = (yyvsp[-3].ival);
					n->objtype = OBJECT_FOREIGN_TABLE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33867 "gram.cpp"
    break;

  case 833: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop FOREIGN DATA_P WRAPPER name  */
#line 6449 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-5].str);
					n->action = (yyvsp[-4].ival);
					n->objtype = OBJECT_FDW;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33880 "gram.cpp"
    break;

  case 834: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop SERVER name  */
#line 6458 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_FOREIGN_SERVER;
					n->objname = list_make1(makeString((yyvsp[0].str)));
					(yyval.node) = (Node *)n;
				}
#line 33893 "gram.cpp"
    break;

  case 835: /* AlterExtensionContentsStmt: ALTER EXTENSION name add_drop TYPE_P any_name  */
#line 6467 "gram.y"
                                {
					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
					n->extname = (yyvsp[-3].str);
					n->action = (yyvsp[-2].ival);
					n->objtype = OBJECT_TYPE;
					n->objname = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 33906 "gram.cpp"
    break;

  case 836: /* CreateFdwStmt: CREATE FOREIGN DATA_P WRAPPER name opt_fdw_options create_generic_options  */
#line 6485 "gram.y"
                                {
					CreateFdwStmt *n = makeNode(CreateFdwStmt);
					n->fdwname = (yyvsp[-2].str);
					n->func_options = (yyvsp[-1].list);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 33918 "gram.cpp"
    break;

  case 837: /* fdw_option: HANDLER handler_name  */
#line 6495 "gram.y"
                                                                        { (yyval.defelt) = makeDefElem("handler", (Node *)(yyvsp[0].list)); }
#line 33924 "gram.cpp"
    break;

  case 838: /* fdw_option: NO HANDLER  */
#line 6496 "gram.y"
                                                                                { (yyval.defelt) = makeDefElem("handler", NULL); }
#line 33930 "gram.cpp"
    break;

  case 839: /* fdw_option: VALIDATOR handler_name  */
#line 6497 "gram.y"
                                                                        { (yyval.defelt) = makeDefElem("validator", (Node *)(yyvsp[0].list)); }
#line 33936 "gram.cpp"
    break;

  case 840: /* fdw_option: NO VALIDATOR  */
#line 6498 "gram.y"
                                                                                { (yyval.defelt) = makeDefElem("validator", NULL); }
#line 33942 "gram.cpp"
    break;

  case 841: /* fdw_options: fdw_option  */
#line 6502 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 33948 "gram.cpp"
    break;

  case 842: /* fdw_options: fdw_options fdw_option  */
#line 6503 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 33954 "gram.cpp"
    break;

  case 843: /* opt_fdw_options: fdw_options  */
#line 6507 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 33960 "gram.cpp"
    break;

  case 844: /* opt_fdw_options: %empty  */
#line 6508 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 33966 "gram.cpp"
    break;

  case 845: /* DropFdwStmt: DROP FOREIGN DATA_P WRAPPER name opt_drop_behavior  */
#line 6519 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FDW;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = false;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 33981 "gram.cpp"
    break;

  case 846: /* DropFdwStmt: DROP FOREIGN DATA_P WRAPPER IF_P EXISTS name opt_drop_behavior  */
#line 6530 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FDW;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = true;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 33996 "gram.cpp"
    break;

  case 847: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name opt_fdw_options alter_generic_options  */
#line 6550 "gram.y"
                                {
					AlterFdwStmt *n = makeNode(AlterFdwStmt);
					n->fdwname = (yyvsp[-2].str);
					n->func_options = (yyvsp[-1].list);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34008 "gram.cpp"
    break;

  case 848: /* AlterFdwStmt: ALTER FOREIGN DATA_P WRAPPER name fdw_options  */
#line 6558 "gram.y"
                                {
					AlterFdwStmt *n = makeNode(AlterFdwStmt);
					n->fdwname = (yyvsp[-1].str);
					n->func_options = (yyvsp[0].list);
					n->options = NIL;
					(yyval.node) = (Node *) n;
				}
#line 34020 "gram.cpp"
    break;

  case 849: /* create_generic_options: OPTIONS '(' generic_option_list ')'  */
#line 6569 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 34026 "gram.cpp"
    break;

  case 850: /* create_generic_options: %empty  */
#line 6570 "gram.y"
                                                                                                        { (yyval.list) = NIL; }
#line 34032 "gram.cpp"
    break;

  case 851: /* generic_option_list: generic_option_elem  */
#line 6575 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 34040 "gram.cpp"
    break;

  case 852: /* generic_option_list: generic_option_list ',' generic_option_elem  */
#line 6579 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 34048 "gram.cpp"
    break;

  case 853: /* alter_generic_options: OPTIONS '(' alter_generic_option_list ')'  */
#line 6586 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 34054 "gram.cpp"
    break;

  case 854: /* alter_generic_option_list: alter_generic_option_elem  */
#line 6591 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 34062 "gram.cpp"
    break;

  case 855: /* alter_generic_option_list: alter_generic_option_list ',' alter_generic_option_elem  */
#line 6595 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 34070 "gram.cpp"
    break;

  case 856: /* alter_generic_option_elem: generic_option_elem  */
#line 6602 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
				}
#line 34078 "gram.cpp"
    break;

  case 857: /* alter_generic_option_elem: SET generic_option_elem  */
#line 6606 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
					(yyval.defelt)->defaction = DEFELEM_SET;
				}
#line 34087 "gram.cpp"
    break;

  case 858: /* alter_generic_option_elem: ADD_P generic_option_elem  */
#line 6611 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
					(yyval.defelt)->defaction = DEFELEM_ADD;
				}
#line 34096 "gram.cpp"
    break;

  case 859: /* alter_generic_option_elem: DROP generic_option_name  */
#line 6616 "gram.y"
                                {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[0].str), NULL, DEFELEM_DROP);
				}
#line 34104 "gram.cpp"
    break;

  case 860: /* generic_option_elem: generic_option_name generic_option_arg  */
#line 6623 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node));
				}
#line 34112 "gram.cpp"
    break;

  case 861: /* generic_option_name: ColLabel  */
#line 6629 "gram.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 34118 "gram.cpp"
    break;

  case 862: /* generic_option_arg: Sconst  */
#line 6634 "gram.y"
                                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 34124 "gram.cpp"
    break;

  case 863: /* CreateForeignServerStmt: CREATE SERVER name opt_type opt_foreign_server_version FOREIGN DATA_P WRAPPER name create_generic_options  */
#line 6646 "gram.y"
                                {
					CreateForeignServerStmt *n = makeNode(CreateForeignServerStmt);
					n->servername = (yyvsp[-7].str);
					n->servertype = (yyvsp[-6].str);
					n->version = (yyvsp[-5].str);
					n->fdwname = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34138 "gram.cpp"
    break;

  case 864: /* opt_type: TYPE_P Sconst  */
#line 6658 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 34144 "gram.cpp"
    break;

  case 865: /* opt_type: %empty  */
#line 6659 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 34150 "gram.cpp"
    break;

  case 866: /* foreign_server_version: VERSION_P Sconst  */
#line 6664 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 34156 "gram.cpp"
    break;

  case 867: /* foreign_server_version: VERSION_P NULL_P  */
#line 6665 "gram.y"
                                                        { (yyval.str) = NULL; }
#line 34162 "gram.cpp"
    break;

  case 868: /* opt_foreign_server_version: foreign_server_version  */
#line 6669 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 34168 "gram.cpp"
    break;

  case 869: /* opt_foreign_server_version: %empty  */
#line 6670 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 34174 "gram.cpp"
    break;

  case 870: /* DropForeignServerStmt: DROP SERVER name opt_drop_behavior  */
#line 6681 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FOREIGN_SERVER;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = false;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34189 "gram.cpp"
    break;

  case 871: /* DropForeignServerStmt: DROP SERVER IF_P EXISTS name opt_drop_behavior  */
#line 6692 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FOREIGN_SERVER;
					n->objects = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->arguments = NIL;
					n->missing_ok = true;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34204 "gram.cpp"
    break;

  case 872: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version alter_generic_options  */
#line 6712 "gram.y"
                                {
					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
					n->servername = (yyvsp[-2].str);
					n->version = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					n->has_version = true;
					(yyval.node) = (Node *) n;
				}
#line 34217 "gram.cpp"
    break;

  case 873: /* AlterForeignServerStmt: ALTER SERVER name foreign_server_version  */
#line 6721 "gram.y"
                                {
					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
					n->servername = (yyvsp[-1].str);
					n->version = (yyvsp[0].str);
					n->has_version = true;
					(yyval.node) = (Node *) n;
				}
#line 34229 "gram.cpp"
    break;

  case 874: /* AlterForeignServerStmt: ALTER SERVER name alter_generic_options  */
#line 6729 "gram.y"
                                {
					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34240 "gram.cpp"
    break;

  case 875: /* CreateForeignTableStmt: CREATE FOREIGN TABLE qualified_name '(' OptTableElementList ')' SERVER name create_generic_options  */
#line 6748 "gram.y"
                                {
					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
					(yyvsp[-6].range)->relpersistence = RELPERSISTENCE_PERMANENT;
					n->base.relation = (yyvsp[-6].range);
					n->base.tableElts = (yyvsp[-4].list);
					n->base.inhRelations = NIL;
					n->base.if_not_exists = false;
					/* FDW-specific data */
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34257 "gram.cpp"
    break;

  case 876: /* CreateForeignTableStmt: CREATE FOREIGN TABLE IF_P NOT EXISTS qualified_name '(' OptTableElementList ')' SERVER name create_generic_options  */
#line 6763 "gram.y"
                                {
					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
					(yyvsp[-6].range)->relpersistence = RELPERSISTENCE_PERMANENT;
					n->base.relation = (yyvsp[-6].range);
					n->base.tableElts = (yyvsp[-4].list);
					n->base.inhRelations = NIL;
					n->base.if_not_exists = true;
					/* FDW-specific data */
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34274 "gram.cpp"
    break;

  case 877: /* AlterForeignTableStmt: ALTER FOREIGN TABLE relation_expr alter_table_cmds  */
#line 6786 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_FOREIGN_TABLE;
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 34287 "gram.cpp"
    break;

  case 878: /* AlterForeignTableStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr alter_table_cmds  */
#line 6795 "gram.y"
                                {
					AlterTableStmt *n = makeNode(AlterTableStmt);
					n->relation = (yyvsp[-1].range);
					n->cmds = (yyvsp[0].list);
					n->relkind = OBJECT_FOREIGN_TABLE;
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 34300 "gram.cpp"
    break;

  case 879: /* CreateUserMappingStmt: CREATE USER MAPPING FOR auth_ident SERVER name create_generic_options  */
#line 6813 "gram.y"
                                {
					CreateUserMappingStmt *n = makeNode(CreateUserMappingStmt);
					n->username = (yyvsp[-3].str);
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34312 "gram.cpp"
    break;

  case 880: /* auth_ident: CURRENT_USER  */
#line 6824 "gram.y"
                                        { (yyval.str) = "current_user"; }
#line 34318 "gram.cpp"
    break;

  case 881: /* auth_ident: USER  */
#line 6825 "gram.y"
                                                { (yyval.str) = "current_user"; }
#line 34324 "gram.cpp"
    break;

  case 882: /* auth_ident: RoleId  */
#line 6826 "gram.y"
                                                { (yyval.str) = (strcmp((yyvsp[0].str), "public") == 0) ? NULL : (yyvsp[0].str); }
#line 34330 "gram.cpp"
    break;

  case 883: /* DropUserMappingStmt: DROP USER MAPPING FOR auth_ident SERVER name  */
#line 6837 "gram.y"
                                {
					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
					n->username = (yyvsp[-2].str);
					n->servername = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *) n;
				}
#line 34342 "gram.cpp"
    break;

  case 884: /* DropUserMappingStmt: DROP USER MAPPING IF_P EXISTS FOR auth_ident SERVER name  */
#line 6845 "gram.y"
                                {
					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
					n->username = (yyvsp[-2].str);
					n->servername = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *) n;
				}
#line 34354 "gram.cpp"
    break;

  case 885: /* AlterUserMappingStmt: ALTER USER MAPPING FOR auth_ident SERVER name alter_generic_options  */
#line 6862 "gram.y"
                                {
					AlterUserMappingStmt *n = makeNode(AlterUserMappingStmt);
					n->username = (yyvsp[-3].str);
					n->servername = (yyvsp[-1].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 34366 "gram.cpp"
    break;

  case 886: /* CreateTrigStmt: CREATE TRIGGER name TriggerActionTime TriggerEvents ON qualified_name TriggerForSpec TriggerWhen EXECUTE PROCEDURE func_name '(' TriggerFuncArgs ')'  */
#line 6883 "gram.y"
                                {
					CreateTrigStmt *n = makeNode(CreateTrigStmt);
					n->trigname = (yyvsp[-12].str);
					n->relation = (yyvsp[-8].range);
					n->funcname = (yyvsp[-3].list);
					n->args = (yyvsp[-1].list);
					n->row = (yyvsp[-7].boolean);
					n->timing = (yyvsp[-11].ival);
					n->events = intVal(linitial((yyvsp[-10].list)));
					n->columns = (List *) lsecond((yyvsp[-10].list));
					n->whenClause = (yyvsp[-6].node);
					n->isconstraint  = FALSE;
					n->deferrable	 = FALSE;
					n->initdeferred  = FALSE;
					n->constrrel = NULL;
					(yyval.node) = (Node *)n;
				}
#line 34388 "gram.cpp"
    break;

  case 887: /* CreateTrigStmt: CREATE CONSTRAINT TRIGGER name AFTER TriggerEvents ON qualified_name OptConstrFromTable ConstraintAttributeSpec FOR EACH ROW TriggerWhen EXECUTE PROCEDURE func_name '(' TriggerFuncArgs ')'  */
#line 6904 "gram.y"
                                {
					CreateTrigStmt *n = makeNode(CreateTrigStmt);
					n->trigname = (yyvsp[-16].str);
					n->relation = (yyvsp[-12].range);
					n->funcname = (yyvsp[-3].list);
					n->args = (yyvsp[-1].list);
					n->row = TRUE;
					n->timing = TRIGGER_TYPE_AFTER;
					n->events = intVal(linitial((yyvsp[-14].list)));
					n->columns = (List *) lsecond((yyvsp[-14].list));
					n->whenClause = (yyvsp[-6].node);
					n->isconstraint  = TRUE;
					processCASbits((yyvsp[-10].ival), (yylsp[-10]), "TRIGGER",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					n->constrrel = (yyvsp[-11].range);
					(yyval.node) = (Node *)n;
				}
#line 34411 "gram.cpp"
    break;

  case 888: /* TriggerActionTime: BEFORE  */
#line 6925 "gram.y"
                                                                                        { (yyval.ival) = TRIGGER_TYPE_BEFORE; }
#line 34417 "gram.cpp"
    break;

  case 889: /* TriggerActionTime: AFTER  */
#line 6926 "gram.y"
                                                                                        { (yyval.ival) = TRIGGER_TYPE_AFTER; }
#line 34423 "gram.cpp"
    break;

  case 890: /* TriggerActionTime: INSTEAD OF  */
#line 6927 "gram.y"
                                                                                { (yyval.ival) = TRIGGER_TYPE_INSTEAD; }
#line 34429 "gram.cpp"
    break;

  case 891: /* TriggerEvents: TriggerOneEvent  */
#line 6932 "gram.y"
                                { (yyval.list) = (yyvsp[0].list); }
#line 34435 "gram.cpp"
    break;

  case 892: /* TriggerEvents: TriggerEvents OR TriggerOneEvent  */
#line 6934 "gram.y"
                                {
					int		events1 = intVal(linitial((yyvsp[-2].list)));
					int		events2 = intVal(linitial((yyvsp[0].list)));
					List   *columns1 = (List *) lsecond((yyvsp[-2].list));
					List   *columns2 = (List *) lsecond((yyvsp[0].list));

					if (events1 & events2)
						parser_yyerror("duplicate trigger events specified");
					/*
					 * concat'ing the columns lists loses information about
					 * which columns went with which event, but so long as
					 * only UPDATE carries columns and we disallow multiple
					 * UPDATE items, it doesn't matter.  Command execution
					 * should just ignore the columns for non-UPDATE events.
					 */
					(yyval.list) = list_make2(makeInteger(events1 | events2),
									list_concat(columns1, columns2));
				}
#line 34458 "gram.cpp"
    break;

  case 893: /* TriggerOneEvent: INSERT  */
#line 6956 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); }
#line 34464 "gram.cpp"
    break;

  case 894: /* TriggerOneEvent: DELETE_P  */
#line 6958 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); }
#line 34470 "gram.cpp"
    break;

  case 895: /* TriggerOneEvent: UPDATE  */
#line 6960 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); }
#line 34476 "gram.cpp"
    break;

  case 896: /* TriggerOneEvent: UPDATE OF columnList  */
#line 6962 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[0].list)); }
#line 34482 "gram.cpp"
    break;

  case 897: /* TriggerOneEvent: TRUNCATE  */
#line 6964 "gram.y"
                                { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); }
#line 34488 "gram.cpp"
    break;

  case 898: /* TriggerForSpec: FOR TriggerForOptEach TriggerForType  */
#line 6969 "gram.y"
                                {
					(yyval.boolean) = (yyvsp[0].boolean);
				}
#line 34496 "gram.cpp"
    break;

  case 899: /* TriggerForSpec: %empty  */
#line 6973 "gram.y"
                                {
					/*
					 * If ROW/STATEMENT not specified, default to
					 * STATEMENT, per SQL
					 */
					(yyval.boolean) = FALSE;
				}
#line 34508 "gram.cpp"
    break;

  case 900: /* TriggerForOptEach: EACH  */
#line 6983 "gram.y"
                                                                                                {}
#line 34514 "gram.cpp"
    break;

  case 901: /* TriggerForOptEach: %empty  */
#line 6984 "gram.y"
                                                                                                {}
#line 34520 "gram.cpp"
    break;

  case 902: /* TriggerForType: ROW  */
#line 6988 "gram.y"
                                                                                                        { (yyval.boolean) = TRUE; }
#line 34526 "gram.cpp"
    break;

  case 903: /* TriggerForType: STATEMENT  */
#line 6989 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 34532 "gram.cpp"
    break;

  case 904: /* TriggerWhen: WHEN '(' a_expr ')'  */
#line 6993 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 34538 "gram.cpp"
    break;

  case 905: /* TriggerWhen: %empty  */
#line 6994 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 34544 "gram.cpp"
    break;

  case 906: /* TriggerFuncArgs: TriggerFuncArg  */
#line 6998 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].value)); }
#line 34550 "gram.cpp"
    break;

  case 907: /* TriggerFuncArgs: TriggerFuncArgs ',' TriggerFuncArg  */
#line 6999 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].value)); }
#line 34556 "gram.cpp"
    break;

  case 908: /* TriggerFuncArgs: %empty  */
#line 7000 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 34562 "gram.cpp"
    break;

  case 909: /* TriggerFuncArg: Iconst  */
#line 7005 "gram.y"
                                {
					char buf[64];
					snprintf(buf, sizeof(buf), "%d", (yyvsp[0].ival));
					(yyval.value) = makeString(pstrdup(buf));
				}
#line 34572 "gram.cpp"
    break;

  case 910: /* TriggerFuncArg: FCONST  */
#line 7010 "gram.y"
                                                                                                { (yyval.value) = makeString((yyvsp[0].str)); }
#line 34578 "gram.cpp"
    break;

  case 911: /* TriggerFuncArg: Sconst  */
#line 7011 "gram.y"
                                                                                                { (yyval.value) = makeString((yyvsp[0].str)); }
#line 34584 "gram.cpp"
    break;

  case 912: /* TriggerFuncArg: ColLabel  */
#line 7012 "gram.y"
                                                                                                { (yyval.value) = makeString((yyvsp[0].str)); }
#line 34590 "gram.cpp"
    break;

  case 913: /* OptConstrFromTable: FROM qualified_name  */
#line 7016 "gram.y"
                                                                                        { (yyval.range) = (yyvsp[0].range); }
#line 34596 "gram.cpp"
    break;

  case 914: /* OptConstrFromTable: %empty  */
#line 7017 "gram.y"
                                                                                                { (yyval.range) = NULL; }
#line 34602 "gram.cpp"
    break;

  case 915: /* ConstraintAttributeSpec: %empty  */
#line 7022 "gram.y"
                                { (yyval.ival) = 0; }
#line 34608 "gram.cpp"
    break;

  case 916: /* ConstraintAttributeSpec: ConstraintAttributeSpec ConstraintAttributeElem  */
#line 7024 "gram.y"
                                {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[-1].ival) | (yyvsp[0].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[0])));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[0])));
					(yyval.ival) = newspec;
				}
#line 34636 "gram.cpp"
    break;

  case 917: /* ConstraintAttributeElem: NOT DEFERRABLE  */
#line 7050 "gram.y"
                                                                        { (yyval.ival) = CAS_NOT_DEFERRABLE; }
#line 34642 "gram.cpp"
    break;

  case 918: /* ConstraintAttributeElem: DEFERRABLE  */
#line 7051 "gram.y"
                                                                        { (yyval.ival) = CAS_DEFERRABLE; }
#line 34648 "gram.cpp"
    break;

  case 919: /* ConstraintAttributeElem: INITIALLY IMMEDIATE  */
#line 7052 "gram.y"
                                                                { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; }
#line 34654 "gram.cpp"
    break;

  case 920: /* ConstraintAttributeElem: INITIALLY DEFERRED  */
#line 7053 "gram.y"
                                                                { (yyval.ival) = CAS_INITIALLY_DEFERRED; }
#line 34660 "gram.cpp"
    break;

  case 921: /* ConstraintAttributeElem: NOT VALID  */
#line 7054 "gram.y"
                                                                                { (yyval.ival) = CAS_NOT_VALID; }
#line 34666 "gram.cpp"
    break;

  case 922: /* ConstraintAttributeElem: NO INHERIT  */
#line 7055 "gram.y"
                                                                        { (yyval.ival) = CAS_NO_INHERIT; }
#line 34672 "gram.cpp"
    break;

  case 923: /* DropTrigStmt: DROP TRIGGER name ON any_name opt_drop_behavior  */
#line 7061 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_TRIGGER;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34687 "gram.cpp"
    break;

  case 924: /* DropTrigStmt: DROP TRIGGER IF_P EXISTS name ON any_name opt_drop_behavior  */
#line 7072 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_TRIGGER;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 34702 "gram.cpp"
    break;

  case 925: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel EXECUTE PROCEDURE func_name '(' ')'  */
#line 7096 "gram.y"
                                {
					CreateEventTrigStmt *n = makeNode(CreateEventTrigStmt);
					n->trigname = (yyvsp[-7].str);
					n->eventname = (yyvsp[-5].str);
					n->whenclause = NULL;
					n->funcname = (yyvsp[-2].list);
					(yyval.node) = (Node *)n;
				}
#line 34715 "gram.cpp"
    break;

  case 926: /* CreateEventTrigStmt: CREATE EVENT TRIGGER name ON ColLabel WHEN event_trigger_when_list EXECUTE PROCEDURE func_name '(' ')'  */
#line 7107 "gram.y"
                                {
					CreateEventTrigStmt *n = makeNode(CreateEventTrigStmt);
					n->trigname = (yyvsp[-9].str);
					n->eventname = (yyvsp[-7].str);
					n->whenclause = (yyvsp[-5].list);
					n->funcname = (yyvsp[-2].list);
					(yyval.node) = (Node *)n;
				}
#line 34728 "gram.cpp"
    break;

  case 927: /* event_trigger_when_list: event_trigger_when_item  */
#line 7119 "gram.y"
                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 34734 "gram.cpp"
    break;

  case 928: /* event_trigger_when_list: event_trigger_when_list AND event_trigger_when_item  */
#line 7121 "gram.y"
                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 34740 "gram.cpp"
    break;

  case 929: /* event_trigger_when_item: ColId IN_P '(' event_trigger_value_list ')'  */
#line 7126 "gram.y"
                        { (yyval.defelt) = makeDefElem((yyvsp[-4].str), (Node *) (yyvsp[-1].list)); }
#line 34746 "gram.cpp"
    break;

  case 930: /* event_trigger_value_list: SCONST  */
#line 7131 "gram.y"
                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 34752 "gram.cpp"
    break;

  case 931: /* event_trigger_value_list: event_trigger_value_list ',' SCONST  */
#line 7133 "gram.y"
                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 34758 "gram.cpp"
    break;

  case 932: /* AlterEventTrigStmt: ALTER EVENT TRIGGER name enable_trigger  */
#line 7138 "gram.y"
                                {
					AlterEventTrigStmt *n = makeNode(AlterEventTrigStmt);
					n->trigname = (yyvsp[-1].str);
					n->tgenabled = (yyvsp[0].chr);
					(yyval.node) = (Node *) n;
				}
#line 34769 "gram.cpp"
    break;

  case 933: /* enable_trigger: ENABLE_P  */
#line 7147 "gram.y"
                                                                        { (yyval.chr) = TRIGGER_FIRES_ON_ORIGIN; }
#line 34775 "gram.cpp"
    break;

  case 934: /* enable_trigger: ENABLE_P REPLICA  */
#line 7148 "gram.y"
                                                                { (yyval.chr) = TRIGGER_FIRES_ON_REPLICA; }
#line 34781 "gram.cpp"
    break;

  case 935: /* enable_trigger: ENABLE_P ALWAYS  */
#line 7149 "gram.y"
                                                                { (yyval.chr) = TRIGGER_FIRES_ALWAYS; }
#line 34787 "gram.cpp"
    break;

  case 936: /* enable_trigger: DISABLE_P  */
#line 7150 "gram.y"
                                                                        { (yyval.chr) = TRIGGER_DISABLED; }
#line 34793 "gram.cpp"
    break;

  case 937: /* CreateAssertStmt: CREATE ASSERTION name CHECK '(' a_expr ')' ConstraintAttributeSpec  */
#line 7164 "gram.y"
                                {
					CreateTrigStmt *n = makeNode(CreateTrigStmt);
					n->trigname = (yyvsp[-5].str);
					n->args = list_make1((yyvsp[-2].node));
					n->isconstraint  = TRUE;
					processCASbits((yyvsp[0].ival), (yylsp[0]), "ASSERTION",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);

					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("CREATE ASSERTION is not yet implemented"));

					(yyval.node) = (Node *)n;
				}
#line 34813 "gram.cpp"
    break;

  case 938: /* DropAssertStmt: DROP ASSERTION name opt_drop_behavior  */
#line 7183 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = NIL;
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->removeType = OBJECT_TRIGGER; /* XXX */
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("DROP ASSERTION is not yet implemented"));
					(yyval.node) = (Node *) n;
				}
#line 34829 "gram.cpp"
    break;

  case 939: /* DefineStmt: CREATE opt_ordered AGGREGATE func_name aggr_args definition  */
#line 7206 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_AGGREGATE;
					n->oldstyle = false;
					n->defnames = (yyvsp[-2].list);
					n->args = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34843 "gram.cpp"
    break;

  case 940: /* DefineStmt: CREATE opt_ordered AGGREGATE func_name old_aggr_definition  */
#line 7216 "gram.y"
                                {
					/* old-style (pre-8.2) syntax for CREATE AGGREGATE */
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_AGGREGATE;
					n->oldstyle = true;
					n->defnames = (yyvsp[-1].list);
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34858 "gram.cpp"
    break;

  case 941: /* DefineStmt: CREATE OPERATOR any_operator definition  */
#line 7227 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_OPERATOR;
					n->oldstyle = false;
					n->defnames = (yyvsp[-1].list);
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34872 "gram.cpp"
    break;

  case 942: /* DefineStmt: CREATE TYPE_P any_name definition  */
#line 7237 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TYPE;
					n->oldstyle = false;
					n->defnames = (yyvsp[-1].list);
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34886 "gram.cpp"
    break;

  case 943: /* DefineStmt: CREATE TYPE_P any_name  */
#line 7247 "gram.y"
                                {
					/* Shell type (identified by lack of definition) */
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TYPE;
					n->oldstyle = false;
					n->defnames = (yyvsp[0].list);
					n->args = NIL;
					n->definition = NIL;
					(yyval.node) = (Node *)n;
				}
#line 34901 "gram.cpp"
    break;

  case 944: /* DefineStmt: CREATE TYPE_P any_name AS '(' OptTableFuncElementList ')'  */
#line 7258 "gram.y"
                                {
					CompositeTypeStmt *n = makeNode(CompositeTypeStmt);

					/* can't use qualified_name, sigh */
					n->typevar = makeRangeVarFromAnyName((yyvsp[-4].list), (yylsp[-4]), yyscanner);
					n->coldeflist = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 34914 "gram.cpp"
    break;

  case 945: /* DefineStmt: CREATE opt_or_replace opt_trusted PROTOCOL name definition  */
#line 7267 "gram.y"
                                {
					/*
					 * The opt_or_replace is here just to avoid a grammar conflict.
					 * It's not actually supported.
					 */
					if ((yyvsp[-4].boolean))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("syntax error"),
								 parser_errposition((yylsp[-4])));

					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_EXTPROTOCOL;
					n->oldstyle = false;
					n->trusted = (yyvsp[-3].boolean);
					n->defnames = list_make1(makeString((yyvsp[-1].str)));
					n->args = NIL;
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34939 "gram.cpp"
    break;

  case 946: /* DefineStmt: CREATE TYPE_P any_name AS ENUM_P '(' opt_enum_val_list ')'  */
#line 7288 "gram.y"
                                {
					CreateEnumStmt *n = makeNode(CreateEnumStmt);
					n->typeName = (yyvsp[-5].list);
					n->vals = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 34950 "gram.cpp"
    break;

  case 947: /* DefineStmt: CREATE TYPE_P any_name AS RANGE definition  */
#line 7295 "gram.y"
                                {
					CreateRangeStmt *n = makeNode(CreateRangeStmt);
					n->typeName = (yyvsp[-3].list);
					n->params	= (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34961 "gram.cpp"
    break;

  case 948: /* DefineStmt: CREATE TEXT_P SEARCH PARSER any_name definition  */
#line 7302 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSPARSER;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34974 "gram.cpp"
    break;

  case 949: /* DefineStmt: CREATE TEXT_P SEARCH DICTIONARY any_name definition  */
#line 7311 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSDICTIONARY;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 34987 "gram.cpp"
    break;

  case 950: /* DefineStmt: CREATE TEXT_P SEARCH TEMPLATE any_name definition  */
#line 7320 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSTEMPLATE;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35000 "gram.cpp"
    break;

  case 951: /* DefineStmt: CREATE TEXT_P SEARCH CONFIGURATION any_name definition  */
#line 7329 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_TSCONFIGURATION;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35013 "gram.cpp"
    break;

  case 952: /* DefineStmt: CREATE COLLATION any_name definition  */
#line 7338 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_COLLATION;
					n->args = NIL;
					n->defnames = (yyvsp[-1].list);
					n->definition = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 35026 "gram.cpp"
    break;

  case 953: /* DefineStmt: CREATE COLLATION any_name FROM any_name  */
#line 7347 "gram.y"
                                {
					DefineStmt *n = makeNode(DefineStmt);
					n->kind = OBJECT_COLLATION;
					n->args = NIL;
					n->defnames = (yyvsp[-2].list);
					n->definition = list_make1(makeDefElem("from", (Node *) (yyvsp[0].list)));
					(yyval.node) = (Node *)n;
				}
#line 35039 "gram.cpp"
    break;

  case 954: /* opt_ordered: ORDERED  */
#line 7357 "gram.y"
                        { (yyval.boolean) = TRUE; }
#line 35045 "gram.cpp"
    break;

  case 955: /* opt_ordered: %empty  */
#line 7358 "gram.y"
                                        { (yyval.boolean) = FALSE; }
#line 35051 "gram.cpp"
    break;

  case 956: /* definition: '(' def_list ')'  */
#line 7361 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 35057 "gram.cpp"
    break;

  case 957: /* def_list: def_elem  */
#line 7364 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 35063 "gram.cpp"
    break;

  case 958: /* def_list: def_list ',' def_elem  */
#line 7365 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 35069 "gram.cpp"
    break;

  case 959: /* def_elem: ColLabel '=' def_arg  */
#line 7369 "gram.y"
                                {
					/*
					 * appendoptimized is an alias for appendonly in order to
					 * provide a reloption syntax which better reflects the
					 * featureset of AO tables. It is implemented as a very
					 * thin alias, the reloptions and messaging will still
					 * say appendonly.
					 */
					if (strcmp((yyvsp[-2].str), "appendoptimized") == 0)
						(yyval.defelt) = makeDefElem("appendonly", (Node *) (yyvsp[0].node));
					else
						(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *) (yyvsp[0].node));
				}
#line 35087 "gram.cpp"
    break;

  case 960: /* def_elem: ColLabel  */
#line 7383 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[0].str), NULL);
				}
#line 35095 "gram.cpp"
    break;

  case 961: /* def_arg: func_type  */
#line 7389 "gram.y"
                                                                        { (yyval.node) = (Node *)(yyvsp[0].typnam); }
#line 35101 "gram.cpp"
    break;

  case 962: /* def_arg: ROW  */
#line 7391 "gram.y"
                                                                                { (yyval.node) = (Node *)makeString(pstrdup("row")); }
#line 35107 "gram.cpp"
    break;

  case 963: /* def_arg: reserved_keyword  */
#line 7392 "gram.y"
                                                                        { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[0].keyword))); }
#line 35113 "gram.cpp"
    break;

  case 964: /* def_arg: qual_all_Op  */
#line 7393 "gram.y"
                                                                        { (yyval.node) = (Node *)(yyvsp[0].list); }
#line 35119 "gram.cpp"
    break;

  case 965: /* def_arg: NumericOnly  */
#line 7394 "gram.y"
                                                                        { (yyval.node) = (Node *)(yyvsp[0].value); }
#line 35125 "gram.cpp"
    break;

  case 966: /* def_arg: Sconst  */
#line 7395 "gram.y"
                                                                                { (yyval.node) = (Node *)makeString((yyvsp[0].str)); }
#line 35131 "gram.cpp"
    break;

  case 967: /* def_arg: NONE  */
#line 7402 "gram.y"
                                                                                { (yyval.node) = (Node *)makeString(pstrdup("none")); }
#line 35137 "gram.cpp"
    break;

  case 968: /* old_aggr_definition: '(' old_aggr_list ')'  */
#line 7405 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 35143 "gram.cpp"
    break;

  case 969: /* old_aggr_list: old_aggr_elem  */
#line 7408 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 35149 "gram.cpp"
    break;

  case 970: /* old_aggr_list: old_aggr_list ',' old_aggr_elem  */
#line 7409 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 35155 "gram.cpp"
    break;

  case 971: /* old_aggr_elem: IDENT '=' def_arg  */
#line 7418 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-2].str), (Node *)(yyvsp[0].node));
				}
#line 35163 "gram.cpp"
    break;

  case 972: /* opt_enum_val_list: enum_val_list  */
#line 7424 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 35169 "gram.cpp"
    break;

  case 973: /* opt_enum_val_list: %empty  */
#line 7425 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 35175 "gram.cpp"
    break;

  case 974: /* enum_val_list: Sconst  */
#line 7429 "gram.y"
                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 35181 "gram.cpp"
    break;

  case 975: /* enum_val_list: enum_val_list ',' Sconst  */
#line 7431 "gram.y"
                                { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 35187 "gram.cpp"
    break;

  case 976: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst  */
#line 7442 "gram.y"
                        {
				AlterEnumStmt *n = makeNode(AlterEnumStmt);
				n->typeName = (yyvsp[-4].list);
				n->newVal = (yyvsp[0].str);
				n->newValNeighbor = NULL;
				n->newValIsAfter = true;
				n->skipIfExists = (yyvsp[-1].boolean);
				(yyval.node) = (Node *) n;
			}
#line 35201 "gram.cpp"
    break;

  case 977: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst BEFORE Sconst  */
#line 7452 "gram.y"
                        {
				AlterEnumStmt *n = makeNode(AlterEnumStmt);
				n->typeName = (yyvsp[-6].list);
				n->newVal = (yyvsp[-2].str);
				n->newValNeighbor = (yyvsp[0].str);
				n->newValIsAfter = false;
				n->skipIfExists = (yyvsp[-3].boolean);
				(yyval.node) = (Node *) n;
			}
#line 35215 "gram.cpp"
    break;

  case 978: /* AlterEnumStmt: ALTER TYPE_P any_name ADD_P VALUE_P opt_if_not_exists Sconst AFTER Sconst  */
#line 7462 "gram.y"
                        {
				AlterEnumStmt *n = makeNode(AlterEnumStmt);
				n->typeName = (yyvsp[-6].list);
				n->newVal = (yyvsp[-2].str);
				n->newValNeighbor = (yyvsp[0].str);
				n->newValIsAfter = true;
				n->skipIfExists = (yyvsp[-3].boolean);
				(yyval.node) = (Node *) n;
			}
#line 35229 "gram.cpp"
    break;

  case 979: /* opt_if_not_exists: IF_P NOT EXISTS  */
#line 7473 "gram.y"
                                                { (yyval.boolean) = true; }
#line 35235 "gram.cpp"
    break;

  case 980: /* opt_if_not_exists: %empty  */
#line 7474 "gram.y"
                                                       { (yyval.boolean) = false; }
#line 35241 "gram.cpp"
    break;

  case 981: /* CreateOpClassStmt: CREATE OPERATOR CLASS any_name opt_default FOR TYPE_P Typename USING access_method opt_opfamily AS opclass_item_list  */
#line 7492 "gram.y"
                                {
					CreateOpClassStmt *n = makeNode(CreateOpClassStmt);
					n->opclassname = (yyvsp[-9].list);
					n->isDefault = (yyvsp[-8].boolean);
					n->datatype = (yyvsp[-5].typnam);
					n->amname = (yyvsp[-3].str);
					n->opfamilyname = (yyvsp[-2].list);
					n->items = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 35256 "gram.cpp"
    break;

  case 982: /* opclass_item_list: opclass_item  */
#line 7505 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 35262 "gram.cpp"
    break;

  case 983: /* opclass_item_list: opclass_item_list ',' opclass_item  */
#line 7506 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 35268 "gram.cpp"
    break;

  case 984: /* opclass_item: OPERATOR Iconst any_operator opclass_purpose opt_recheck  */
#line 7511 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_OPERATOR;
					n->name = (yyvsp[-2].list);
					n->args = NIL;
					n->number = (yyvsp[-3].ival);
					n->order_family = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35282 "gram.cpp"
    break;

  case 985: /* opclass_item: OPERATOR Iconst any_operator oper_argtypes opclass_purpose opt_recheck  */
#line 7522 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_OPERATOR;
					n->name = (yyvsp[-3].list);
					n->args = (yyvsp[-2].list);
					n->number = (yyvsp[-4].ival);
					n->order_family = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35296 "gram.cpp"
    break;

  case 986: /* opclass_item: FUNCTION Iconst func_name func_args  */
#line 7532 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_FUNCTION;
					n->name = (yyvsp[-1].list);
					n->args = extractArgTypes((yyvsp[0].list));
					n->number = (yyvsp[-2].ival);
					(yyval.node) = (Node *) n;
				}
#line 35309 "gram.cpp"
    break;

  case 987: /* opclass_item: FUNCTION Iconst '(' type_list ')' func_name func_args  */
#line 7541 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_FUNCTION;
					n->name = (yyvsp[-1].list);
					n->args = extractArgTypes((yyvsp[0].list));
					n->number = (yyvsp[-5].ival);
					n->class_args = (yyvsp[-3].list);
					(yyval.node) = (Node *) n;
				}
#line 35323 "gram.cpp"
    break;

  case 988: /* opclass_item: STORAGE Typename  */
#line 7551 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_STORAGETYPE;
					n->storedtype = (yyvsp[0].typnam);
					(yyval.node) = (Node *) n;
				}
#line 35334 "gram.cpp"
    break;

  case 989: /* opt_default: DEFAULT  */
#line 7559 "gram.y"
                                                                { (yyval.boolean) = TRUE; }
#line 35340 "gram.cpp"
    break;

  case 990: /* opt_default: %empty  */
#line 7560 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 35346 "gram.cpp"
    break;

  case 991: /* opt_opfamily: FAMILY any_name  */
#line 7563 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 35352 "gram.cpp"
    break;

  case 992: /* opt_opfamily: %empty  */
#line 7564 "gram.y"
                                                                                { (yyval.list) = NIL; }
#line 35358 "gram.cpp"
    break;

  case 993: /* opclass_purpose: FOR SEARCH  */
#line 7567 "gram.y"
                                                                { (yyval.list) = NIL; }
#line 35364 "gram.cpp"
    break;

  case 994: /* opclass_purpose: FOR ORDER BY any_name  */
#line 7568 "gram.y"
                                                                { (yyval.list) = (yyvsp[0].list); }
#line 35370 "gram.cpp"
    break;

  case 995: /* opclass_purpose: %empty  */
#line 7569 "gram.y"
                                                                                { (yyval.list) = NIL; }
#line 35376 "gram.cpp"
    break;

  case 996: /* opt_recheck: RECHECK  */
#line 7573 "gram.y"
                                {
					/*
					 * RECHECK no longer does anything in opclass definitions,
					 * but we still accept it to ease porting of old database
					 * dumps.
					 */
					ereport(NOTICE,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("RECHECK is no longer required"),
							 errhint("Update your data type."),
							 parser_errposition((yylsp[0])));
					(yyval.boolean) = TRUE;
				}
#line 35394 "gram.cpp"
    break;

  case 997: /* opt_recheck: %empty  */
#line 7586 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 35400 "gram.cpp"
    break;

  case 998: /* CreateOpFamilyStmt: CREATE OPERATOR FAMILY any_name USING access_method  */
#line 7592 "gram.y"
                                {
					CreateOpFamilyStmt *n = makeNode(CreateOpFamilyStmt);
					n->opfamilyname = (yyvsp[-2].list);
					n->amname = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35411 "gram.cpp"
    break;

  case 999: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING access_method ADD_P opclass_item_list  */
#line 7602 "gram.y"
                                {
					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
					n->opfamilyname = (yyvsp[-4].list);
					n->amname = (yyvsp[-2].str);
					n->isDrop = false;
					n->items = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 35424 "gram.cpp"
    break;

  case 1000: /* AlterOpFamilyStmt: ALTER OPERATOR FAMILY any_name USING access_method DROP opclass_drop_list  */
#line 7611 "gram.y"
                                {
					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
					n->opfamilyname = (yyvsp[-4].list);
					n->amname = (yyvsp[-2].str);
					n->isDrop = true;
					n->items = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 35437 "gram.cpp"
    break;

  case 1001: /* opclass_drop_list: opclass_drop  */
#line 7622 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 35443 "gram.cpp"
    break;

  case 1002: /* opclass_drop_list: opclass_drop_list ',' opclass_drop  */
#line 7623 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 35449 "gram.cpp"
    break;

  case 1003: /* opclass_drop: OPERATOR Iconst '(' type_list ')'  */
#line 7628 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_OPERATOR;
					n->number = (yyvsp[-3].ival);
					n->args = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35461 "gram.cpp"
    break;

  case 1004: /* opclass_drop: FUNCTION Iconst '(' type_list ')'  */
#line 7636 "gram.y"
                                {
					CreateOpClassItem *n = makeNode(CreateOpClassItem);
					n->itemtype = OPCLASS_ITEM_FUNCTION;
					n->number = (yyvsp[-3].ival);
					n->args = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 35473 "gram.cpp"
    break;

  case 1005: /* DropOpClassStmt: DROP OPERATOR CLASS any_name USING access_method opt_drop_behavior  */
#line 7648 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPCLASS;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35488 "gram.cpp"
    break;

  case 1006: /* DropOpClassStmt: DROP OPERATOR CLASS IF_P EXISTS any_name USING access_method opt_drop_behavior  */
#line 7659 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPCLASS;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35503 "gram.cpp"
    break;

  case 1007: /* DropOpFamilyStmt: DROP OPERATOR FAMILY any_name USING access_method opt_drop_behavior  */
#line 7673 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPFAMILY;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35518 "gram.cpp"
    break;

  case 1008: /* DropOpFamilyStmt: DROP OPERATOR FAMILY IF_P EXISTS any_name USING access_method opt_drop_behavior  */
#line 7684 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->objects = list_make1((yyvsp[-3].list));
					n->arguments = list_make1(list_make1(makeString((yyvsp[-1].str))));
					n->removeType = OBJECT_OPFAMILY;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 35533 "gram.cpp"
    break;

  case 1009: /* DropOwnedStmt: DROP OWNED BY role_list opt_drop_behavior  */
#line 7707 "gram.y"
                                {
					DropOwnedStmt *n = makeNode(DropOwnedStmt);
					n->roles = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 35544 "gram.cpp"
    break;

  case 1010: /* ReassignOwnedStmt: REASSIGN OWNED BY role_list TO name  */
#line 7717 "gram.y"
                                {
					ReassignOwnedStmt *n = makeNode(ReassignOwnedStmt);
					n->roles = (yyvsp[-2].list);
					n->newrole = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 35555 "gram.cpp"
    break;

  case 1011: /* DropStmt: DROP drop_type IF_P EXISTS any_name_list opt_drop_behavior  */
#line 7735 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = (yyvsp[-4].objtype);
					n->missing_ok = TRUE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 35570 "gram.cpp"
    break;

  case 1012: /* DropStmt: DROP drop_type any_name_list opt_drop_behavior  */
#line 7746 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = (yyvsp[-2].objtype);
					n->missing_ok = FALSE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 35585 "gram.cpp"
    break;

  case 1013: /* DropStmt: DROP INDEX CONCURRENTLY any_name_list opt_drop_behavior  */
#line 7757 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_INDEX;
					n->missing_ok = FALSE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = true;
					(yyval.node) = (Node *)n;
				}
#line 35600 "gram.cpp"
    break;

  case 1014: /* DropStmt: DROP INDEX CONCURRENTLY IF_P EXISTS any_name_list opt_drop_behavior  */
#line 7768 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_INDEX;
					n->missing_ok = TRUE;
					n->objects = (yyvsp[-1].list);
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->concurrent = true;
					(yyval.node) = (Node *)n;
				}
#line 35615 "gram.cpp"
    break;

  case 1015: /* drop_type: TABLE  */
#line 7781 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TABLE; }
#line 35621 "gram.cpp"
    break;

  case 1016: /* drop_type: EXTERNAL TABLE  */
#line 7782 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_EXTTABLE; }
#line 35627 "gram.cpp"
    break;

  case 1017: /* drop_type: EXTERNAL WEB TABLE  */
#line 7783 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_EXTTABLE; }
#line 35633 "gram.cpp"
    break;

  case 1018: /* drop_type: SEQUENCE  */
#line 7784 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_SEQUENCE; }
#line 35639 "gram.cpp"
    break;

  case 1019: /* drop_type: VIEW  */
#line 7785 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_VIEW; }
#line 35645 "gram.cpp"
    break;

  case 1020: /* drop_type: MATERIALIZED VIEW  */
#line 7786 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_MATVIEW; }
#line 35651 "gram.cpp"
    break;

  case 1021: /* drop_type: INDEX  */
#line 7787 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_INDEX; }
#line 35657 "gram.cpp"
    break;

  case 1022: /* drop_type: FOREIGN TABLE  */
#line 7788 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
#line 35663 "gram.cpp"
    break;

  case 1023: /* drop_type: EVENT TRIGGER  */
#line 7789 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
#line 35669 "gram.cpp"
    break;

  case 1024: /* drop_type: TYPE_P  */
#line 7790 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_TYPE; }
#line 35675 "gram.cpp"
    break;

  case 1025: /* drop_type: DOMAIN_P  */
#line 7791 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_DOMAIN; }
#line 35681 "gram.cpp"
    break;

  case 1026: /* drop_type: COLLATION  */
#line 7792 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_COLLATION; }
#line 35687 "gram.cpp"
    break;

  case 1027: /* drop_type: CONVERSION_P  */
#line 7793 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_CONVERSION; }
#line 35693 "gram.cpp"
    break;

  case 1028: /* drop_type: SCHEMA  */
#line 7794 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_SCHEMA; }
#line 35699 "gram.cpp"
    break;

  case 1029: /* drop_type: EXTENSION  */
#line 7795 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_EXTENSION; }
#line 35705 "gram.cpp"
    break;

  case 1030: /* drop_type: TEXT_P SEARCH PARSER  */
#line 7796 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TSPARSER; }
#line 35711 "gram.cpp"
    break;

  case 1031: /* drop_type: TEXT_P SEARCH DICTIONARY  */
#line 7797 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TSDICTIONARY; }
#line 35717 "gram.cpp"
    break;

  case 1032: /* drop_type: TEXT_P SEARCH TEMPLATE  */
#line 7798 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TSTEMPLATE; }
#line 35723 "gram.cpp"
    break;

  case 1033: /* drop_type: TEXT_P SEARCH CONFIGURATION  */
#line 7799 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
#line 35729 "gram.cpp"
    break;

  case 1034: /* drop_type: PROTOCOL  */
#line 7800 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_EXTPROTOCOL; }
#line 35735 "gram.cpp"
    break;

  case 1035: /* any_name_list: any_name  */
#line 7804 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 35741 "gram.cpp"
    break;

  case 1036: /* any_name_list: any_name_list ',' any_name  */
#line 7805 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 35747 "gram.cpp"
    break;

  case 1037: /* any_name: ColId  */
#line 7808 "gram.y"
                                                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 35753 "gram.cpp"
    break;

  case 1038: /* any_name: ColId attrs  */
#line 7809 "gram.y"
                                                                { (yyval.list) = lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)); }
#line 35759 "gram.cpp"
    break;

  case 1039: /* attrs: '.' attr_name  */
#line 7813 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 35765 "gram.cpp"
    break;

  case 1040: /* attrs: attrs '.' attr_name  */
#line 7815 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 35771 "gram.cpp"
    break;

  case 1041: /* TruncateStmt: TRUNCATE opt_table relation_expr_list opt_restart_seqs opt_drop_behavior  */
#line 7828 "gram.y"
                                {
					TruncateStmt *n = makeNode(TruncateStmt);
					n->relations = (yyvsp[-2].list);
					n->restart_seqs = (yyvsp[-1].boolean);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 35783 "gram.cpp"
    break;

  case 1042: /* opt_restart_seqs: CONTINUE_P IDENTITY_P  */
#line 7838 "gram.y"
                                                        { (yyval.boolean) = false; }
#line 35789 "gram.cpp"
    break;

  case 1043: /* opt_restart_seqs: RESTART IDENTITY_P  */
#line 7839 "gram.y"
                                                        { (yyval.boolean) = true; }
#line 35795 "gram.cpp"
    break;

  case 1044: /* opt_restart_seqs: %empty  */
#line 7840 "gram.y"
                                                                { (yyval.boolean) = false; }
#line 35801 "gram.cpp"
    break;

  case 1045: /* CommentStmt: COMMENT ON comment_type any_name IS comment_text  */
#line 7873 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = (yyvsp[-3].objtype);
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35814 "gram.cpp"
    break;

  case 1046: /* CommentStmt: COMMENT ON AGGREGATE func_name aggr_args IS comment_text  */
#line 7882 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_AGGREGATE;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractAggrArgTypes((yyvsp[-2].list));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35827 "gram.cpp"
    break;

  case 1047: /* CommentStmt: COMMENT ON FUNCTION func_name func_args IS comment_text  */
#line 7891 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_FUNCTION;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractArgTypes((yyvsp[-2].list));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35840 "gram.cpp"
    break;

  case 1048: /* CommentStmt: COMMENT ON OPERATOR any_operator oper_argtypes IS comment_text  */
#line 7900 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_OPERATOR;
					n->objname = (yyvsp[-3].list);
					n->objargs = (yyvsp[-2].list);
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35853 "gram.cpp"
    break;

  case 1049: /* CommentStmt: COMMENT ON CONSTRAINT name ON any_name IS comment_text  */
#line 7909 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_CONSTRAINT;
					n->objname = lappend((yyvsp[-2].list), makeString((yyvsp[-4].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35866 "gram.cpp"
    break;

  case 1050: /* CommentStmt: COMMENT ON RULE name ON any_name IS comment_text  */
#line 7918 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_RULE;
					n->objname = lappend((yyvsp[-2].list), makeString((yyvsp[-4].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35879 "gram.cpp"
    break;

  case 1051: /* CommentStmt: COMMENT ON RULE name IS comment_text  */
#line 7927 "gram.y"
                                {
					/* Obsolete syntax supported for awhile for compatibility */
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_RULE;
					n->objname = list_make1(makeString((yyvsp[-2].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35893 "gram.cpp"
    break;

  case 1052: /* CommentStmt: COMMENT ON TRIGGER name ON any_name IS comment_text  */
#line 7937 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_TRIGGER;
					n->objname = lappend((yyvsp[-2].list), makeString((yyvsp[-4].str)));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35906 "gram.cpp"
    break;

  case 1053: /* CommentStmt: COMMENT ON OPERATOR CLASS any_name USING access_method IS comment_text  */
#line 7946 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_OPCLASS;
					n->objname = (yyvsp[-4].list);
					n->objargs = list_make1(makeString((yyvsp[-2].str)));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35919 "gram.cpp"
    break;

  case 1054: /* CommentStmt: COMMENT ON OPERATOR FAMILY any_name USING access_method IS comment_text  */
#line 7955 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_OPFAMILY;
					n->objname = (yyvsp[-4].list);
					n->objargs = list_make1(makeString((yyvsp[-2].str)));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35932 "gram.cpp"
    break;

  case 1055: /* CommentStmt: COMMENT ON LARGE_P OBJECT_P NumericOnly IS comment_text  */
#line 7964 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_LARGEOBJECT;
					n->objname = list_make1((yyvsp[-2].value));
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35945 "gram.cpp"
    break;

  case 1056: /* CommentStmt: COMMENT ON CAST '(' Typename AS Typename ')' IS comment_text  */
#line 7973 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_CAST;
					n->objname = list_make1((yyvsp[-5].typnam));
					n->objargs = list_make1((yyvsp[-3].typnam));
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35958 "gram.cpp"
    break;

  case 1057: /* CommentStmt: COMMENT ON opt_procedural LANGUAGE any_name IS comment_text  */
#line 7982 "gram.y"
                                {
					CommentStmt *n = makeNode(CommentStmt);
					n->objtype = OBJECT_LANGUAGE;
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->comment = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 35971 "gram.cpp"
    break;

  case 1058: /* comment_type: COLUMN  */
#line 7993 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_COLUMN; }
#line 35977 "gram.cpp"
    break;

  case 1059: /* comment_type: DATABASE  */
#line 7994 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_DATABASE; }
#line 35983 "gram.cpp"
    break;

  case 1060: /* comment_type: SCHEMA  */
#line 7995 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SCHEMA; }
#line 35989 "gram.cpp"
    break;

  case 1061: /* comment_type: INDEX  */
#line 7996 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_INDEX; }
#line 35995 "gram.cpp"
    break;

  case 1062: /* comment_type: SEQUENCE  */
#line 7997 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SEQUENCE; }
#line 36001 "gram.cpp"
    break;

  case 1063: /* comment_type: TABLE  */
#line 7998 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TABLE; }
#line 36007 "gram.cpp"
    break;

  case 1064: /* comment_type: DOMAIN_P  */
#line 7999 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_DOMAIN; }
#line 36013 "gram.cpp"
    break;

  case 1065: /* comment_type: TYPE_P  */
#line 8000 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TYPE; }
#line 36019 "gram.cpp"
    break;

  case 1066: /* comment_type: VIEW  */
#line 8001 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_VIEW; }
#line 36025 "gram.cpp"
    break;

  case 1067: /* comment_type: MATERIALIZED VIEW  */
#line 8002 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_MATVIEW; }
#line 36031 "gram.cpp"
    break;

  case 1068: /* comment_type: COLLATION  */
#line 8003 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_COLLATION; }
#line 36037 "gram.cpp"
    break;

  case 1069: /* comment_type: CONVERSION_P  */
#line 8004 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_CONVERSION; }
#line 36043 "gram.cpp"
    break;

  case 1070: /* comment_type: TABLESPACE  */
#line 8005 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TABLESPACE; }
#line 36049 "gram.cpp"
    break;

  case 1071: /* comment_type: EXTENSION  */
#line 8006 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_EXTENSION; }
#line 36055 "gram.cpp"
    break;

  case 1072: /* comment_type: ROLE  */
#line 8007 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_ROLE; }
#line 36061 "gram.cpp"
    break;

  case 1073: /* comment_type: FOREIGN TABLE  */
#line 8008 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
#line 36067 "gram.cpp"
    break;

  case 1074: /* comment_type: SERVER  */
#line 8009 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_FOREIGN_SERVER; }
#line 36073 "gram.cpp"
    break;

  case 1075: /* comment_type: FOREIGN DATA_P WRAPPER  */
#line 8010 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_FDW; }
#line 36079 "gram.cpp"
    break;

  case 1076: /* comment_type: EVENT TRIGGER  */
#line 8011 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
#line 36085 "gram.cpp"
    break;

  case 1077: /* comment_type: TEXT_P SEARCH CONFIGURATION  */
#line 8012 "gram.y"
                                                                { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
#line 36091 "gram.cpp"
    break;

  case 1078: /* comment_type: TEXT_P SEARCH DICTIONARY  */
#line 8013 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSDICTIONARY; }
#line 36097 "gram.cpp"
    break;

  case 1079: /* comment_type: TEXT_P SEARCH PARSER  */
#line 8014 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSPARSER; }
#line 36103 "gram.cpp"
    break;

  case 1080: /* comment_type: TEXT_P SEARCH TEMPLATE  */
#line 8015 "gram.y"
                                                                        { (yyval.objtype) = OBJECT_TSTEMPLATE; }
#line 36109 "gram.cpp"
    break;

  case 1081: /* comment_type: RESOURCE QUEUE  */
#line 8016 "gram.y"
                                                            { (yyval.objtype) = OBJECT_RESQUEUE; }
#line 36115 "gram.cpp"
    break;

  case 1082: /* comment_type: RESOURCE GROUP_P  */
#line 8017 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_RESGROUP; }
#line 36121 "gram.cpp"
    break;

  case 1083: /* comment_text: Sconst  */
#line 8021 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 36127 "gram.cpp"
    break;

  case 1084: /* comment_text: NULL_P  */
#line 8022 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 36133 "gram.cpp"
    break;

  case 1085: /* SecLabelStmt: SECURITY LABEL opt_provider ON security_label_type any_name IS security_label  */
#line 8038 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-5].str);
					n->objtype = (yyvsp[-3].objtype);
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36147 "gram.cpp"
    break;

  case 1086: /* SecLabelStmt: SECURITY LABEL opt_provider ON AGGREGATE func_name aggr_args IS security_label  */
#line 8049 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_AGGREGATE;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractAggrArgTypes((yyvsp[-2].list));
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36161 "gram.cpp"
    break;

  case 1087: /* SecLabelStmt: SECURITY LABEL opt_provider ON FUNCTION func_name func_args IS security_label  */
#line 8060 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_FUNCTION;
					n->objname = (yyvsp[-3].list);
					n->objargs = extractArgTypes((yyvsp[-2].list));
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36175 "gram.cpp"
    break;

  case 1088: /* SecLabelStmt: SECURITY LABEL opt_provider ON LARGE_P OBJECT_P NumericOnly IS security_label  */
#line 8071 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_LARGEOBJECT;
					n->objname = list_make1((yyvsp[-2].value));
					n->objargs = NIL;
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36189 "gram.cpp"
    break;

  case 1089: /* SecLabelStmt: SECURITY LABEL opt_provider ON opt_procedural LANGUAGE any_name IS security_label  */
#line 8082 "gram.y"
                                {
					SecLabelStmt *n = makeNode(SecLabelStmt);
					n->provider = (yyvsp[-6].str);
					n->objtype = OBJECT_LANGUAGE;
					n->objname = (yyvsp[-2].list);
					n->objargs = NIL;
					n->label = (yyvsp[0].str);
					(yyval.node) = (Node *) n;
				}
#line 36203 "gram.cpp"
    break;

  case 1090: /* opt_provider: FOR NonReservedWord_or_Sconst  */
#line 8093 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 36209 "gram.cpp"
    break;

  case 1091: /* opt_provider: %empty  */
#line 8094 "gram.y"
                                                                                { (yyval.str) = NULL; }
#line 36215 "gram.cpp"
    break;

  case 1092: /* security_label_type: COLUMN  */
#line 8098 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_COLUMN; }
#line 36221 "gram.cpp"
    break;

  case 1093: /* security_label_type: DATABASE  */
#line 8099 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_DATABASE; }
#line 36227 "gram.cpp"
    break;

  case 1094: /* security_label_type: EVENT TRIGGER  */
#line 8100 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_EVENT_TRIGGER; }
#line 36233 "gram.cpp"
    break;

  case 1095: /* security_label_type: FOREIGN TABLE  */
#line 8101 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
#line 36239 "gram.cpp"
    break;

  case 1096: /* security_label_type: SCHEMA  */
#line 8102 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SCHEMA; }
#line 36245 "gram.cpp"
    break;

  case 1097: /* security_label_type: SEQUENCE  */
#line 8103 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_SEQUENCE; }
#line 36251 "gram.cpp"
    break;

  case 1098: /* security_label_type: TABLE  */
#line 8104 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TABLE; }
#line 36257 "gram.cpp"
    break;

  case 1099: /* security_label_type: DOMAIN_P  */
#line 8105 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TYPE; }
#line 36263 "gram.cpp"
    break;

  case 1100: /* security_label_type: ROLE  */
#line 8106 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_ROLE; }
#line 36269 "gram.cpp"
    break;

  case 1101: /* security_label_type: TABLESPACE  */
#line 8107 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_TABLESPACE; }
#line 36275 "gram.cpp"
    break;

  case 1102: /* security_label_type: TYPE_P  */
#line 8108 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_TYPE; }
#line 36281 "gram.cpp"
    break;

  case 1103: /* security_label_type: VIEW  */
#line 8109 "gram.y"
                                                                                        { (yyval.objtype) = OBJECT_VIEW; }
#line 36287 "gram.cpp"
    break;

  case 1104: /* security_label_type: MATERIALIZED VIEW  */
#line 8110 "gram.y"
                                                                                { (yyval.objtype) = OBJECT_MATVIEW; }
#line 36293 "gram.cpp"
    break;

  case 1105: /* security_label: Sconst  */
#line 8113 "gram.y"
                                                { (yyval.str) = (yyvsp[0].str); }
#line 36299 "gram.cpp"
    break;

  case 1106: /* security_label: NULL_P  */
#line 8114 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 36305 "gram.cpp"
    break;

  case 1107: /* FetchStmt: FETCH fetch_args  */
#line 8125 "gram.y"
                                {
					FetchStmt *n = (FetchStmt *) (yyvsp[0].node);
					n->ismove = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 36315 "gram.cpp"
    break;

  case 1108: /* FetchStmt: MOVE fetch_args  */
#line 8131 "gram.y"
                                {
					FetchStmt *n = (FetchStmt *) (yyvsp[0].node);
					n->ismove = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 36325 "gram.cpp"
    break;

  case 1109: /* fetch_args: cursor_name  */
#line 8139 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36337 "gram.cpp"
    break;

  case 1110: /* fetch_args: from_in cursor_name  */
#line 8147 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36349 "gram.cpp"
    break;

  case 1111: /* fetch_args: NEXT opt_from_in cursor_name  */
#line 8155 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36361 "gram.cpp"
    break;

  case 1112: /* fetch_args: PRIOR opt_from_in cursor_name  */
#line 8163 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36373 "gram.cpp"
    break;

  case 1113: /* fetch_args: FIRST_P opt_from_in cursor_name  */
#line 8171 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_ABSOLUTE;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36385 "gram.cpp"
    break;

  case 1114: /* fetch_args: LAST_P opt_from_in cursor_name  */
#line 8179 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_ABSOLUTE;
					n->howMany = -1;
					(yyval.node) = (Node *)n;
				}
#line 36397 "gram.cpp"
    break;

  case 1115: /* fetch_args: ABSOLUTE_P SignedIconst opt_from_in cursor_name  */
#line 8187 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_ABSOLUTE;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36409 "gram.cpp"
    break;

  case 1116: /* fetch_args: RELATIVE_P SignedIconst opt_from_in cursor_name  */
#line 8195 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_RELATIVE;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36421 "gram.cpp"
    break;

  case 1117: /* fetch_args: SignedIconst opt_from_in cursor_name  */
#line 8203 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36433 "gram.cpp"
    break;

  case 1118: /* fetch_args: ALL opt_from_in cursor_name  */
#line 8211 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = FETCH_ALL;
					(yyval.node) = (Node *)n;
				}
#line 36445 "gram.cpp"
    break;

  case 1119: /* fetch_args: FORWARD opt_from_in cursor_name  */
#line 8219 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36457 "gram.cpp"
    break;

  case 1120: /* fetch_args: FORWARD SignedIconst opt_from_in cursor_name  */
#line 8227 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36469 "gram.cpp"
    break;

  case 1121: /* fetch_args: FORWARD ALL opt_from_in cursor_name  */
#line 8235 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_FORWARD;
					n->howMany = FETCH_ALL;
					(yyval.node) = (Node *)n;
				}
#line 36481 "gram.cpp"
    break;

  case 1122: /* fetch_args: BACKWARD opt_from_in cursor_name  */
#line 8243 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = 1;
					(yyval.node) = (Node *)n;
				}
#line 36493 "gram.cpp"
    break;

  case 1123: /* fetch_args: BACKWARD SignedIconst opt_from_in cursor_name  */
#line 8251 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = (yyvsp[-2].ival);
					(yyval.node) = (Node *)n;
				}
#line 36505 "gram.cpp"
    break;

  case 1124: /* fetch_args: BACKWARD ALL opt_from_in cursor_name  */
#line 8259 "gram.y"
                                {
					FetchStmt *n = makeNode(FetchStmt);
					n->portalname = (yyvsp[0].str);
					n->direction = FETCH_BACKWARD;
					n->howMany = FETCH_ALL;
					(yyval.node) = (Node *)n;
				}
#line 36517 "gram.cpp"
    break;

  case 1125: /* from_in: FROM  */
#line 8268 "gram.y"
                                                                                        {}
#line 36523 "gram.cpp"
    break;

  case 1126: /* from_in: IN_P  */
#line 8269 "gram.y"
                                                                                                {}
#line 36529 "gram.cpp"
    break;

  case 1127: /* opt_from_in: from_in  */
#line 8272 "gram.y"
                                                                                {}
#line 36535 "gram.cpp"
    break;

  case 1128: /* opt_from_in: %empty  */
#line 8273 "gram.y"
                                                                                        {}
#line 36541 "gram.cpp"
    break;

  case 1129: /* GrantStmt: GRANT privileges ON privilege_target TO grantee_list opt_grant_grant_option  */
#line 8285 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ((yyvsp[-3].privtarget))->targtype;
					n->objtype = ((yyvsp[-3].privtarget))->objtype;
					n->objects = ((yyvsp[-3].privtarget))->objs;
					n->grantees = (yyvsp[-1].list);
					n->grant_option = (yyvsp[0].boolean);
					(yyval.node) = (Node*)n;
				}
#line 36557 "gram.cpp"
    break;

  case 1130: /* RevokeStmt: REVOKE privileges ON privilege_target FROM grantee_list opt_drop_behavior  */
#line 8301 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = false;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ((yyvsp[-3].privtarget))->targtype;
					n->objtype = ((yyvsp[-3].privtarget))->objtype;
					n->objects = ((yyvsp[-3].privtarget))->objs;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 36574 "gram.cpp"
    break;

  case 1131: /* RevokeStmt: REVOKE GRANT OPTION FOR privileges ON privilege_target FROM grantee_list opt_drop_behavior  */
#line 8315 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ((yyvsp[-3].privtarget))->targtype;
					n->objtype = ((yyvsp[-3].privtarget))->objtype;
					n->objects = ((yyvsp[-3].privtarget))->objs;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 36591 "gram.cpp"
    break;

  case 1132: /* privileges: privilege_list  */
#line 8340 "gram.y"
                                { (yyval.list) = (yyvsp[0].list); }
#line 36597 "gram.cpp"
    break;

  case 1133: /* privileges: ALL  */
#line 8342 "gram.y"
                                { (yyval.list) = NIL; }
#line 36603 "gram.cpp"
    break;

  case 1134: /* privileges: ALL PRIVILEGES  */
#line 8344 "gram.y"
                                { (yyval.list) = NIL; }
#line 36609 "gram.cpp"
    break;

  case 1135: /* privileges: ALL '(' columnList ')'  */
#line 8346 "gram.y"
                                {
					AccessPriv *n = makeNode(AccessPriv);
					n->priv_name = NULL;
					n->cols = (yyvsp[-1].list);
					(yyval.list) = list_make1(n);
				}
#line 36620 "gram.cpp"
    break;

  case 1136: /* privileges: ALL PRIVILEGES '(' columnList ')'  */
#line 8353 "gram.y"
                                {
					AccessPriv *n = makeNode(AccessPriv);
					n->priv_name = NULL;
					n->cols = (yyvsp[-1].list);
					(yyval.list) = list_make1(n);
				}
#line 36631 "gram.cpp"
    break;

  case 1137: /* privilege_list: privilege  */
#line 8361 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].accesspriv)); }
#line 36637 "gram.cpp"
    break;

  case 1138: /* privilege_list: privilege_list ',' privilege  */
#line 8362 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].accesspriv)); }
#line 36643 "gram.cpp"
    break;

  case 1139: /* privilege: SELECT opt_column_list  */
#line 8366 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = pstrdup((yyvsp[-1].keyword));
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36654 "gram.cpp"
    break;

  case 1140: /* privilege: REFERENCES opt_column_list  */
#line 8373 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = pstrdup((yyvsp[-1].keyword));
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36665 "gram.cpp"
    break;

  case 1141: /* privilege: CREATE opt_column_list  */
#line 8380 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = pstrdup((yyvsp[-1].keyword));
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36676 "gram.cpp"
    break;

  case 1142: /* privilege: ColId opt_column_list  */
#line 8387 "gram.y"
                        {
				AccessPriv *n = makeNode(AccessPriv);
				n->priv_name = (yyvsp[-1].str);
				n->cols = (yyvsp[0].list);
				(yyval.accesspriv) = n;
			}
#line 36687 "gram.cpp"
    break;

  case 1143: /* privilege_target: qualified_name_list  */
#line 8401 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_RELATION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36699 "gram.cpp"
    break;

  case 1144: /* privilege_target: TABLE qualified_name_list  */
#line 8409 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_RELATION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36711 "gram.cpp"
    break;

  case 1145: /* privilege_target: SEQUENCE qualified_name_list  */
#line 8417 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_SEQUENCE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36723 "gram.cpp"
    break;

  case 1146: /* privilege_target: FOREIGN DATA_P WRAPPER name_list  */
#line 8425 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_FDW;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36735 "gram.cpp"
    break;

  case 1147: /* privilege_target: FOREIGN SERVER name_list  */
#line 8433 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_FOREIGN_SERVER;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36747 "gram.cpp"
    break;

  case 1148: /* privilege_target: FUNCTION function_with_argtypes_list  */
#line 8441 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_FUNCTION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36759 "gram.cpp"
    break;

  case 1149: /* privilege_target: DATABASE name_list  */
#line 8449 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_DATABASE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36771 "gram.cpp"
    break;

  case 1150: /* privilege_target: DOMAIN_P any_name_list  */
#line 8457 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_DOMAIN;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36783 "gram.cpp"
    break;

  case 1151: /* privilege_target: LANGUAGE name_list  */
#line 8465 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_LANGUAGE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36795 "gram.cpp"
    break;

  case 1152: /* privilege_target: LARGE_P OBJECT_P NumericOnly_list  */
#line 8473 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_LARGEOBJECT;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36807 "gram.cpp"
    break;

  case 1153: /* privilege_target: SCHEMA name_list  */
#line 8481 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_NAMESPACE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36819 "gram.cpp"
    break;

  case 1154: /* privilege_target: TABLESPACE name_list  */
#line 8489 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_TABLESPACE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36831 "gram.cpp"
    break;

  case 1155: /* privilege_target: PROTOCOL name_list  */
#line 8497 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_EXTPROTOCOL;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36843 "gram.cpp"
    break;

  case 1156: /* privilege_target: TYPE_P any_name_list  */
#line 8505 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_OBJECT;
					n->objtype = ACL_OBJECT_TYPE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36855 "gram.cpp"
    break;

  case 1157: /* privilege_target: ALL TABLES IN_P SCHEMA name_list  */
#line 8513 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_ALL_IN_SCHEMA;
					n->objtype = ACL_OBJECT_RELATION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36867 "gram.cpp"
    break;

  case 1158: /* privilege_target: ALL SEQUENCES IN_P SCHEMA name_list  */
#line 8521 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_ALL_IN_SCHEMA;
					n->objtype = ACL_OBJECT_SEQUENCE;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36879 "gram.cpp"
    break;

  case 1159: /* privilege_target: ALL FUNCTIONS IN_P SCHEMA name_list  */
#line 8529 "gram.y"
                                {
					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
					n->targtype = ACL_TARGET_ALL_IN_SCHEMA;
					n->objtype = ACL_OBJECT_FUNCTION;
					n->objs = (yyvsp[0].list);
					(yyval.privtarget) = n;
				}
#line 36891 "gram.cpp"
    break;

  case 1160: /* grantee_list: grantee  */
#line 8540 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 36897 "gram.cpp"
    break;

  case 1161: /* grantee_list: grantee_list ',' grantee  */
#line 8541 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 36903 "gram.cpp"
    break;

  case 1162: /* grantee: RoleId  */
#line 8545 "gram.y"
                                {
					PrivGrantee *n = makeNode(PrivGrantee);
					/* This hack lets us avoid reserving PUBLIC as a keyword*/
					if (strcmp((yyvsp[0].str), "public") == 0)
						n->rolname = NULL;
					else
						n->rolname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 36917 "gram.cpp"
    break;

  case 1163: /* grantee: GROUP_P RoleId  */
#line 8555 "gram.y"
                                {
					PrivGrantee *n = makeNode(PrivGrantee);
					/* Treat GROUP PUBLIC as a synonym for PUBLIC */
					if (strcmp((yyvsp[0].str), "public") == 0)
						n->rolname = NULL;
					else
						n->rolname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 36931 "gram.cpp"
    break;

  case 1164: /* opt_grant_grant_option: WITH GRANT OPTION  */
#line 8568 "gram.y"
                                          { (yyval.boolean) = TRUE; }
#line 36937 "gram.cpp"
    break;

  case 1165: /* opt_grant_grant_option: %empty  */
#line 8569 "gram.y"
                                    { (yyval.boolean) = FALSE; }
#line 36943 "gram.cpp"
    break;

  case 1166: /* function_with_argtypes_list: function_with_argtypes  */
#line 8573 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].funwithargs)); }
#line 36949 "gram.cpp"
    break;

  case 1167: /* function_with_argtypes_list: function_with_argtypes_list ',' function_with_argtypes  */
#line 8575 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].funwithargs)); }
#line 36955 "gram.cpp"
    break;

  case 1168: /* function_with_argtypes: func_name func_args  */
#line 8580 "gram.y"
                                {
					FuncWithArgs *n = makeNode(FuncWithArgs);
					n->funcname = (yyvsp[-1].list);
					n->funcargs = extractArgTypes((yyvsp[0].list));
					(yyval.funwithargs) = n;
				}
#line 36966 "gram.cpp"
    break;

  case 1169: /* GrantRoleStmt: GRANT privilege_list TO role_list opt_grant_admin_option opt_granted_by  */
#line 8596 "gram.y"
                                {
					GrantRoleStmt *n = makeNode(GrantRoleStmt);
					n->is_grant = true;
					n->granted_roles = (yyvsp[-4].list);
					n->grantee_roles = (yyvsp[-2].list);
					n->admin_opt = (yyvsp[-1].boolean);
					n->grantor = (yyvsp[0].str);
					(yyval.node) = (Node*)n;
				}
#line 36980 "gram.cpp"
    break;

  case 1170: /* RevokeRoleStmt: REVOKE privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
#line 8609 "gram.y"
                                {
					GrantRoleStmt *n = makeNode(GrantRoleStmt);
					n->is_grant = false;
					n->admin_opt = false;
					n->granted_roles = (yyvsp[-4].list);
					n->grantee_roles = (yyvsp[-2].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node*)n;
				}
#line 36994 "gram.cpp"
    break;

  case 1171: /* RevokeRoleStmt: REVOKE ADMIN OPTION FOR privilege_list FROM role_list opt_granted_by opt_drop_behavior  */
#line 8619 "gram.y"
                                {
					GrantRoleStmt *n = makeNode(GrantRoleStmt);
					n->is_grant = false;
					n->admin_opt = true;
					n->granted_roles = (yyvsp[-4].list);
					n->grantee_roles = (yyvsp[-2].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node*)n;
				}
#line 37008 "gram.cpp"
    break;

  case 1172: /* opt_grant_admin_option: WITH ADMIN OPTION  */
#line 8630 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 37014 "gram.cpp"
    break;

  case 1173: /* opt_grant_admin_option: %empty  */
#line 8631 "gram.y"
                                                                                                        { (yyval.boolean) = FALSE; }
#line 37020 "gram.cpp"
    break;

  case 1174: /* opt_granted_by: GRANTED BY RoleId  */
#line 8634 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 37026 "gram.cpp"
    break;

  case 1175: /* opt_granted_by: %empty  */
#line 8635 "gram.y"
                                                                                                        { (yyval.str) = NULL; }
#line 37032 "gram.cpp"
    break;

  case 1176: /* AlterDefaultPrivilegesStmt: ALTER DEFAULT PRIVILEGES DefACLOptionList DefACLAction  */
#line 8646 "gram.y"
                                {
					AlterDefaultPrivilegesStmt *n = makeNode(AlterDefaultPrivilegesStmt);
					n->options = (yyvsp[-1].list);
					n->action = (GrantStmt *) (yyvsp[0].node);
					(yyval.node) = (Node*)n;
				}
#line 37043 "gram.cpp"
    break;

  case 1177: /* DefACLOptionList: DefACLOptionList DefACLOption  */
#line 8655 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 37049 "gram.cpp"
    break;

  case 1178: /* DefACLOptionList: %empty  */
#line 8656 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 37055 "gram.cpp"
    break;

  case 1179: /* DefACLOption: IN_P SCHEMA name_list  */
#line 8661 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("schemas", (Node *)(yyvsp[0].list));
				}
#line 37063 "gram.cpp"
    break;

  case 1180: /* DefACLOption: FOR ROLE role_list  */
#line 8665 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[0].list));
				}
#line 37071 "gram.cpp"
    break;

  case 1181: /* DefACLOption: FOR USER role_list  */
#line 8669 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[0].list));
				}
#line 37079 "gram.cpp"
    break;

  case 1182: /* DefACLAction: GRANT privileges ON defacl_privilege_target TO grantee_list opt_grant_grant_option  */
#line 8681 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ACL_TARGET_DEFAULTS;
					n->objtype = static_cast<GrantObjectType>((yyvsp[-3].ival));
					n->objects = NIL;
					n->grantees = (yyvsp[-1].list);
					n->grant_option = (yyvsp[0].boolean);
					(yyval.node) = (Node*)n;
				}
#line 37095 "gram.cpp"
    break;

  case 1183: /* DefACLAction: REVOKE privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
#line 8694 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = false;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ACL_TARGET_DEFAULTS;
					n->objtype = static_cast<GrantObjectType>((yyvsp[-3].ival));
					n->objects = NIL;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 37112 "gram.cpp"
    break;

  case 1184: /* DefACLAction: REVOKE GRANT OPTION FOR privileges ON defacl_privilege_target FROM grantee_list opt_drop_behavior  */
#line 8708 "gram.y"
                                {
					GrantStmt *n = makeNode(GrantStmt);
					n->is_grant = false;
					n->grant_option = true;
					n->privileges = (yyvsp[-5].list);
					n->targtype = ACL_TARGET_DEFAULTS;
					n->objtype = static_cast<GrantObjectType>((yyvsp[-3].ival));
					n->objects = NIL;
					n->grantees = (yyvsp[-1].list);
					n->behavior = (yyvsp[0].dbehavior);
					(yyval.node) = (Node *)n;
				}
#line 37129 "gram.cpp"
    break;

  case 1185: /* defacl_privilege_target: TABLES  */
#line 8723 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_RELATION; }
#line 37135 "gram.cpp"
    break;

  case 1186: /* defacl_privilege_target: FUNCTIONS  */
#line 8724 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_FUNCTION; }
#line 37141 "gram.cpp"
    break;

  case 1187: /* defacl_privilege_target: SEQUENCES  */
#line 8725 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_SEQUENCE; }
#line 37147 "gram.cpp"
    break;

  case 1188: /* defacl_privilege_target: TYPES_P  */
#line 8726 "gram.y"
                                                { (yyval.ival) = ACL_OBJECT_TYPE; }
#line 37153 "gram.cpp"
    break;

  case 1189: /* IndexStmt: CREATE opt_unique INDEX opt_concurrently opt_index_name ON qualified_name access_method_clause '(' index_params ')' opt_reloptions OptTableSpace where_clause  */
#line 8741 "gram.y"
                                {
					IndexStmt *n = makeNode(IndexStmt);
					n->unique = (yyvsp[-12].boolean);
					n->concurrent = (yyvsp[-10].boolean);
					n->idxname = (yyvsp[-9].str);
					n->relation = (yyvsp[-7].range);
					n->accessMethod = (yyvsp[-6].str);
					n->indexParams = (yyvsp[-4].list);
					n->options = (yyvsp[-2].list);
					n->tableSpace = (yyvsp[-1].str);
					n->whereClause = (yyvsp[0].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;

                    if (n->concurrent)
					{
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE INDEX CONCURRENTLY is not supported"));

					}

					(yyval.node) = (Node *)n;
				}
#line 37188 "gram.cpp"
    break;

  case 1190: /* opt_unique: UNIQUE  */
#line 8774 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 37194 "gram.cpp"
    break;

  case 1191: /* opt_unique: %empty  */
#line 8775 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 37200 "gram.cpp"
    break;

  case 1192: /* opt_concurrently: CONCURRENTLY  */
#line 8779 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 37206 "gram.cpp"
    break;

  case 1193: /* opt_concurrently: %empty  */
#line 8780 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 37212 "gram.cpp"
    break;

  case 1194: /* opt_index_name: index_name  */
#line 8784 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 37218 "gram.cpp"
    break;

  case 1195: /* opt_index_name: %empty  */
#line 8785 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 37224 "gram.cpp"
    break;

  case 1196: /* access_method_clause: USING access_method  */
#line 8789 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 37230 "gram.cpp"
    break;

  case 1197: /* access_method_clause: %empty  */
#line 8790 "gram.y"
                                                                                                { (yyval.str) = DEFAULT_INDEX_TYPE; }
#line 37236 "gram.cpp"
    break;

  case 1198: /* index_params: index_elem  */
#line 8793 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].ielem)); }
#line 37242 "gram.cpp"
    break;

  case 1199: /* index_params: index_params ',' index_elem  */
#line 8794 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].ielem)); }
#line 37248 "gram.cpp"
    break;

  case 1200: /* index_elem: ColId opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 8803 "gram.y"
                                {
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = (yyvsp[-4].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.ielem)->nulls_ordering = static_cast<SortByNulls>((yyvsp[0].ival));
				}
#line 37263 "gram.cpp"
    break;

  case 1201: /* index_elem: func_expr_windowless opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 8814 "gram.y"
                                {
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[-4].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.ielem)->nulls_ordering = static_cast<SortByNulls>((yyvsp[0].ival));
				}
#line 37278 "gram.cpp"
    break;

  case 1202: /* index_elem: '(' a_expr ')' opt_collate opt_class opt_asc_desc opt_nulls_order  */
#line 8825 "gram.y"
                                {
					(yyval.ielem) = makeNode(IndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[-5].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[-3].list);
					(yyval.ielem)->opclass = (yyvsp[-2].list);
					(yyval.ielem)->ordering = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.ielem)->nulls_ordering = static_cast<SortByNulls>((yyvsp[0].ival));
				}
#line 37293 "gram.cpp"
    break;

  case 1203: /* opt_collate: COLLATE any_name  */
#line 8837 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37299 "gram.cpp"
    break;

  case 1204: /* opt_collate: %empty  */
#line 8838 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37305 "gram.cpp"
    break;

  case 1205: /* opt_class: any_name  */
#line 8841 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37311 "gram.cpp"
    break;

  case 1206: /* opt_class: USING any_name  */
#line 8842 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37317 "gram.cpp"
    break;

  case 1207: /* opt_class: %empty  */
#line 8843 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37323 "gram.cpp"
    break;

  case 1208: /* opt_asc_desc: ASC  */
#line 8846 "gram.y"
                                                                        { (yyval.ival) = SORTBY_ASC; }
#line 37329 "gram.cpp"
    break;

  case 1209: /* opt_asc_desc: DESC  */
#line 8847 "gram.y"
                                                                                { (yyval.ival) = SORTBY_DESC; }
#line 37335 "gram.cpp"
    break;

  case 1210: /* opt_asc_desc: %empty  */
#line 8848 "gram.y"
                                                                                { (yyval.ival) = SORTBY_DEFAULT; }
#line 37341 "gram.cpp"
    break;

  case 1211: /* opt_nulls_order: NULLS_FIRST  */
#line 8851 "gram.y"
                                                        { (yyval.ival) = SORTBY_NULLS_FIRST; }
#line 37347 "gram.cpp"
    break;

  case 1212: /* opt_nulls_order: NULLS_LAST  */
#line 8852 "gram.y"
                                                                        { (yyval.ival) = SORTBY_NULLS_LAST; }
#line 37353 "gram.cpp"
    break;

  case 1213: /* opt_nulls_order: %empty  */
#line 8853 "gram.y"
                                                                                { (yyval.ival) = SORTBY_NULLS_DEFAULT; }
#line 37359 "gram.cpp"
    break;

  case 1214: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS func_return createfunc_opt_list opt_definition  */
#line 8871 "gram.y"
                                {
					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
					n->replace = (yyvsp[-7].boolean);
					n->funcname = (yyvsp[-5].list);
					n->parameters = (yyvsp[-4].list);
					n->returnType = (yyvsp[-2].typnam);
					n->options = (yyvsp[-1].list);
					n->withClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 37374 "gram.cpp"
    break;

  case 1215: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults RETURNS TABLE '(' table_func_column_list ')' createfunc_opt_list opt_definition  */
#line 8883 "gram.y"
                                {
					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
					n->replace = (yyvsp[-10].boolean);
					n->funcname = (yyvsp[-8].list);
					n->parameters = mergeTableFuncParameters((yyvsp[-7].list), (yyvsp[-3].list));
					n->returnType = TableFuncTypeName((yyvsp[-3].list));
					n->returnType->location = (yylsp[-5]);
					n->options = (yyvsp[-1].list);
					n->withClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 37390 "gram.cpp"
    break;

  case 1216: /* CreateFunctionStmt: CREATE opt_or_replace FUNCTION func_name func_args_with_defaults createfunc_opt_list opt_definition  */
#line 8896 "gram.y"
                                {
					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
					n->replace = (yyvsp[-5].boolean);
					n->funcname = (yyvsp[-3].list);
					n->parameters = (yyvsp[-2].list);
					n->returnType = NULL;
					n->options = (yyvsp[-1].list);
					n->withClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 37405 "gram.cpp"
    break;

  case 1217: /* opt_or_replace: OR REPLACE  */
#line 8909 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 37411 "gram.cpp"
    break;

  case 1218: /* opt_or_replace: %empty  */
#line 8910 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 37417 "gram.cpp"
    break;

  case 1219: /* func_args: '(' func_args_list ')'  */
#line 8913 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 37423 "gram.cpp"
    break;

  case 1220: /* func_args: '(' ')'  */
#line 8914 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37429 "gram.cpp"
    break;

  case 1221: /* func_args_list: func_arg  */
#line 8918 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
#line 37435 "gram.cpp"
    break;

  case 1222: /* func_args_list: func_args_list ',' func_arg  */
#line 8919 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
#line 37441 "gram.cpp"
    break;

  case 1223: /* func_args_with_defaults: '(' func_args_with_defaults_list ')'  */
#line 8927 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 37447 "gram.cpp"
    break;

  case 1224: /* func_args_with_defaults: '(' ')'  */
#line 8928 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37453 "gram.cpp"
    break;

  case 1225: /* func_args_with_defaults_list: func_arg_with_default  */
#line 8932 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
#line 37459 "gram.cpp"
    break;

  case 1226: /* func_args_with_defaults_list: func_args_with_defaults_list ',' func_arg_with_default  */
#line 8934 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
#line 37465 "gram.cpp"
    break;

  case 1227: /* func_arg: arg_class param_name func_type  */
#line 8949 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-1].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = (yyvsp[-2].fun_param_mode);
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37478 "gram.cpp"
    break;

  case 1228: /* func_arg: param_name arg_class func_type  */
#line 8958 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-2].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = (yyvsp[-1].fun_param_mode);
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37491 "gram.cpp"
    break;

  case 1229: /* func_arg: param_name func_type  */
#line 8967 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-1].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = FUNC_PARAM_IN;
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37504 "gram.cpp"
    break;

  case 1230: /* func_arg: arg_class func_type  */
#line 8976 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = NULL;
					n->argType = (yyvsp[0].typnam);
					n->mode = (yyvsp[-1].fun_param_mode);
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37517 "gram.cpp"
    break;

  case 1231: /* func_arg: func_type  */
#line 8985 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = NULL;
					n->argType = (yyvsp[0].typnam);
					n->mode = FUNC_PARAM_IN;
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37530 "gram.cpp"
    break;

  case 1232: /* arg_class: IN_P  */
#line 8996 "gram.y"
                                                                                { (yyval.fun_param_mode) = FUNC_PARAM_IN; }
#line 37536 "gram.cpp"
    break;

  case 1233: /* arg_class: OUT_P  */
#line 8997 "gram.y"
                                                                                        { (yyval.fun_param_mode) = FUNC_PARAM_OUT; }
#line 37542 "gram.cpp"
    break;

  case 1234: /* arg_class: INOUT  */
#line 8998 "gram.y"
                                                                                        { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
#line 37548 "gram.cpp"
    break;

  case 1235: /* arg_class: IN_P OUT_P  */
#line 8999 "gram.y"
                                                                                { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
#line 37554 "gram.cpp"
    break;

  case 1236: /* arg_class: VARIADIC  */
#line 9000 "gram.y"
                                                                                        { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; }
#line 37560 "gram.cpp"
    break;

  case 1238: /* func_return: func_type  */
#line 9011 "gram.y"
                                {
					/* We can catch over-specified results here if we want to,
					 * but for now better to silently swallow typmod, etc.
					 * - thomas 2000-03-22
					 */
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 37572 "gram.cpp"
    break;

  case 1239: /* func_type: Typename  */
#line 9025 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 37578 "gram.cpp"
    break;

  case 1240: /* func_type: type_function_name attrs '%' TYPE_P  */
#line 9027 "gram.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-3].str)), (yyvsp[-2].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 37588 "gram.cpp"
    break;

  case 1241: /* func_type: SETOF type_function_name attrs '%' TYPE_P  */
#line 9033 "gram.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-3].str)), (yyvsp[-2].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = TRUE;
					(yyval.typnam)->location = (yylsp[-3]);
				}
#line 37599 "gram.cpp"
    break;

  case 1242: /* func_arg_with_default: func_arg  */
#line 9043 "gram.y"
                                {
					(yyval.fun_param) = (yyvsp[0].fun_param);
				}
#line 37607 "gram.cpp"
    break;

  case 1243: /* func_arg_with_default: func_arg DEFAULT a_expr  */
#line 9047 "gram.y"
                                {
					(yyval.fun_param) = (yyvsp[-2].fun_param);
					(yyval.fun_param)->defexpr = (yyvsp[0].node);
				}
#line 37616 "gram.cpp"
    break;

  case 1244: /* func_arg_with_default: func_arg '=' a_expr  */
#line 9052 "gram.y"
                                {
					(yyval.fun_param) = (yyvsp[-2].fun_param);
					(yyval.fun_param)->defexpr = (yyvsp[0].node);
				}
#line 37625 "gram.cpp"
    break;

  case 1245: /* aggr_arg: func_arg  */
#line 9060 "gram.y"
                                {
					if (!((yyvsp[0].fun_param)->mode == FUNC_PARAM_IN ||
						  (yyvsp[0].fun_param)->mode == FUNC_PARAM_VARIADIC))
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("aggregates cannot have output arguments"),
								 parser_errposition((yylsp[0])));
					(yyval.fun_param) = (yyvsp[0].fun_param);
				}
#line 37639 "gram.cpp"
    break;

  case 1246: /* aggr_args: '(' '*' ')'  */
#line 9101 "gram.y"
                                {
					(yyval.list) = list_make2(NIL, makeInteger(-1));
				}
#line 37647 "gram.cpp"
    break;

  case 1247: /* aggr_args: '(' aggr_args_list ')'  */
#line 9105 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].list), makeInteger(-1));
				}
#line 37655 "gram.cpp"
    break;

  case 1248: /* aggr_args: '(' ORDER BY aggr_args_list ')'  */
#line 9109 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].list), makeInteger(0));
				}
#line 37663 "gram.cpp"
    break;

  case 1249: /* aggr_args: '(' aggr_args_list ORDER BY aggr_args_list ')'  */
#line 9113 "gram.y"
                                {
					/* this is the only case requiring consistency checking */
					(yyval.list) = makeOrderedSetArgs((yyvsp[-4].list), (yyvsp[-1].list), yyscanner);
				}
#line 37672 "gram.cpp"
    break;

  case 1250: /* aggr_args_list: aggr_arg  */
#line 9120 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].fun_param)); }
#line 37678 "gram.cpp"
    break;

  case 1251: /* aggr_args_list: aggr_args_list ',' aggr_arg  */
#line 9121 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param)); }
#line 37684 "gram.cpp"
    break;

  case 1252: /* createfunc_opt_list: createfunc_opt_item  */
#line 9126 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 37690 "gram.cpp"
    break;

  case 1253: /* createfunc_opt_list: createfunc_opt_list createfunc_opt_item  */
#line 9127 "gram.y"
                                                                  { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 37696 "gram.cpp"
    break;

  case 1254: /* common_func_opt_item: CALLED ON NULL_P INPUT_P  */
#line 9135 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(FALSE));
				}
#line 37704 "gram.cpp"
    break;

  case 1255: /* common_func_opt_item: RETURNS NULL_P ON NULL_P INPUT_P  */
#line 9139 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
				}
#line 37712 "gram.cpp"
    break;

  case 1256: /* common_func_opt_item: STRICT_P  */
#line 9143 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
				}
#line 37720 "gram.cpp"
    break;

  case 1257: /* common_func_opt_item: IMMUTABLE  */
#line 9147 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("immutable"));
				}
#line 37728 "gram.cpp"
    break;

  case 1258: /* common_func_opt_item: STABLE  */
#line 9151 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("stable"));
				}
#line 37736 "gram.cpp"
    break;

  case 1259: /* common_func_opt_item: VOLATILE  */
#line 9155 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("volatile"));
				}
#line 37744 "gram.cpp"
    break;

  case 1260: /* common_func_opt_item: EXTERNAL SECURITY DEFINER  */
#line 9159 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
				}
#line 37752 "gram.cpp"
    break;

  case 1261: /* common_func_opt_item: EXTERNAL SECURITY INVOKER  */
#line 9163 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
				}
#line 37760 "gram.cpp"
    break;

  case 1262: /* common_func_opt_item: SECURITY DEFINER  */
#line 9167 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
				}
#line 37768 "gram.cpp"
    break;

  case 1263: /* common_func_opt_item: SECURITY INVOKER  */
#line 9171 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
				}
#line 37776 "gram.cpp"
    break;

  case 1264: /* common_func_opt_item: LEAKPROOF  */
#line 9175 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(TRUE));
				}
#line 37784 "gram.cpp"
    break;

  case 1265: /* common_func_opt_item: NOT LEAKPROOF  */
#line 9179 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(FALSE));
				}
#line 37792 "gram.cpp"
    break;

  case 1266: /* common_func_opt_item: COST NumericOnly  */
#line 9183 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("cost", (Node *)(yyvsp[0].value));
				}
#line 37800 "gram.cpp"
    break;

  case 1267: /* common_func_opt_item: ROWS NumericOnly  */
#line 9187 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("rows", (Node *)(yyvsp[0].value));
				}
#line 37808 "gram.cpp"
    break;

  case 1268: /* common_func_opt_item: FunctionSetResetClause  */
#line 9191 "gram.y"
                                {
					/* we abuse the normal content of a DefElem here */
					(yyval.defelt) = makeDefElem("set", (Node *)(yyvsp[0].vsetstmt));
				}
#line 37817 "gram.cpp"
    break;

  case 1269: /* common_func_opt_item: NO SQL  */
#line 9196 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("none"));
				}
#line 37825 "gram.cpp"
    break;

  case 1270: /* common_func_opt_item: CONTAINS SQL  */
#line 9200 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("contains"));
				}
#line 37833 "gram.cpp"
    break;

  case 1271: /* common_func_opt_item: READS SQL DATA_P  */
#line 9204 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("reads"));
				}
#line 37841 "gram.cpp"
    break;

  case 1272: /* common_func_opt_item: MODIFIES SQL DATA_P  */
#line 9208 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("data_access", (Node *)makeString("modifies"));
				}
#line 37849 "gram.cpp"
    break;

  case 1273: /* common_func_opt_item: EXECUTE ON ANY  */
#line 9212 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("any"));
				}
#line 37857 "gram.cpp"
    break;

  case 1274: /* common_func_opt_item: EXECUTE ON MASTER  */
#line 9216 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("master"));
				}
#line 37865 "gram.cpp"
    break;

  case 1275: /* common_func_opt_item: EXECUTE ON INITPLAN  */
#line 9220 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("initplan"));
				}
#line 37873 "gram.cpp"
    break;

  case 1276: /* common_func_opt_item: EXECUTE ON ALL SEGMENTS  */
#line 9224 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("exec_location", (Node *)makeString("all_segments"));
				}
#line 37881 "gram.cpp"
    break;

  case 1277: /* createfunc_opt_item: AS func_as  */
#line 9231 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("as", (Node *)(yyvsp[0].list));
				}
#line 37889 "gram.cpp"
    break;

  case 1278: /* createfunc_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
#line 9235 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[0].str)));
				}
#line 37897 "gram.cpp"
    break;

  case 1279: /* createfunc_opt_item: WINDOW  */
#line 9239 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("window", (Node *)makeInteger(TRUE));
				}
#line 37905 "gram.cpp"
    break;

  case 1280: /* createfunc_opt_item: common_func_opt_item  */
#line 9243 "gram.y"
                                {
					(yyval.defelt) = (yyvsp[0].defelt);
				}
#line 37913 "gram.cpp"
    break;

  case 1281: /* func_as: Sconst  */
#line 9248 "gram.y"
                                                                { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 37919 "gram.cpp"
    break;

  case 1282: /* func_as: Sconst ',' Sconst  */
#line 9250 "gram.y"
                                {
					(yyval.list) = list_make2(makeString((yyvsp[-2].str)), makeString((yyvsp[0].str)));
				}
#line 37927 "gram.cpp"
    break;

  case 1283: /* opt_definition: WITH definition  */
#line 9256 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 37933 "gram.cpp"
    break;

  case 1284: /* opt_definition: %empty  */
#line 9257 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 37939 "gram.cpp"
    break;

  case 1285: /* table_func_column: param_name func_type  */
#line 9261 "gram.y"
                                {
					FunctionParameter *n = makeNode(FunctionParameter);
					n->name = (yyvsp[-1].str);
					n->argType = (yyvsp[0].typnam);
					n->mode = FUNC_PARAM_TABLE;
					n->defexpr = NULL;
					(yyval.fun_param) = n;
				}
#line 37952 "gram.cpp"
    break;

  case 1286: /* table_func_column_list: table_func_column  */
#line 9273 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].fun_param));
				}
#line 37960 "gram.cpp"
    break;

  case 1287: /* table_func_column_list: table_func_column_list ',' table_func_column  */
#line 9277 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].fun_param));
				}
#line 37968 "gram.cpp"
    break;

  case 1288: /* AlterFunctionStmt: ALTER FUNCTION function_with_argtypes alterfunc_opt_list opt_restrict  */
#line 9292 "gram.y"
                                {
					AlterFunctionStmt *n = makeNode(AlterFunctionStmt);
					n->func = (yyvsp[-2].funwithargs);
					n->actions = (yyvsp[-1].list);
					(yyval.node) = (Node *) n;
				}
#line 37979 "gram.cpp"
    break;

  case 1289: /* alterfunc_opt_list: common_func_opt_item  */
#line 9302 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 37985 "gram.cpp"
    break;

  case 1290: /* alterfunc_opt_list: alterfunc_opt_list common_func_opt_item  */
#line 9303 "gram.y"
                                                                  { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 37991 "gram.cpp"
    break;

  case 1293: /* RemoveFuncStmt: DROP FUNCTION func_name func_args opt_drop_behavior  */
#line 9325 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FUNCTION;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38006 "gram.cpp"
    break;

  case 1294: /* RemoveFuncStmt: DROP FUNCTION IF_P EXISTS func_name func_args opt_drop_behavior  */
#line 9336 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_FUNCTION;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38021 "gram.cpp"
    break;

  case 1295: /* RemoveAggrStmt: DROP AGGREGATE func_name aggr_args opt_drop_behavior  */
#line 9350 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_AGGREGATE;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractAggrArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38036 "gram.cpp"
    break;

  case 1296: /* RemoveAggrStmt: DROP AGGREGATE IF_P EXISTS func_name aggr_args opt_drop_behavior  */
#line 9361 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_AGGREGATE;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1(extractAggrArgTypes((yyvsp[-1].list)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38051 "gram.cpp"
    break;

  case 1297: /* RemoveOperStmt: DROP OPERATOR any_operator oper_argtypes opt_drop_behavior  */
#line 9375 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_OPERATOR;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1((yyvsp[-1].list));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38066 "gram.cpp"
    break;

  case 1298: /* RemoveOperStmt: DROP OPERATOR IF_P EXISTS any_operator oper_argtypes opt_drop_behavior  */
#line 9386 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_OPERATOR;
					n->objects = list_make1((yyvsp[-2].list));
					n->arguments = list_make1((yyvsp[-1].list));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38081 "gram.cpp"
    break;

  case 1299: /* oper_argtypes: '(' Typename ')'  */
#line 9400 "gram.y"
                                {
				   ereport(ERROR,
						   errcode(ERRCODE_SYNTAX_ERROR),
							errmsg("missing argument"),
							errhint("Use NONE to denote the missing argument of a unary operator."),
							parser_errposition((yylsp[0])));
				}
#line 38093 "gram.cpp"
    break;

  case 1300: /* oper_argtypes: '(' Typename ',' Typename ')'  */
#line 9408 "gram.y"
                                        { (yyval.list) = list_make2((yyvsp[-3].typnam), (yyvsp[-1].typnam)); }
#line 38099 "gram.cpp"
    break;

  case 1301: /* oper_argtypes: '(' NONE ',' Typename ')'  */
#line 9410 "gram.y"
                                        { (yyval.list) = list_make2(NULL, (yyvsp[-1].typnam)); }
#line 38105 "gram.cpp"
    break;

  case 1302: /* oper_argtypes: '(' Typename ',' NONE ')'  */
#line 9412 "gram.y"
                                        { (yyval.list) = list_make2((yyvsp[-3].typnam), NULL); }
#line 38111 "gram.cpp"
    break;

  case 1303: /* any_operator: all_Op  */
#line 9417 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 38117 "gram.cpp"
    break;

  case 1304: /* any_operator: ColId '.' any_operator  */
#line 9419 "gram.y"
                                        { (yyval.list) = lcons(makeString((yyvsp[-2].str)), (yyvsp[0].list)); }
#line 38123 "gram.cpp"
    break;

  case 1305: /* DoStmt: DO dostmt_opt_list  */
#line 9432 "gram.y"
                                {
					DoStmt *n = makeNode(DoStmt);
					n->args = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 38133 "gram.cpp"
    break;

  case 1306: /* dostmt_opt_list: dostmt_opt_item  */
#line 9440 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 38139 "gram.cpp"
    break;

  case 1307: /* dostmt_opt_list: dostmt_opt_list dostmt_opt_item  */
#line 9441 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 38145 "gram.cpp"
    break;

  case 1308: /* dostmt_opt_item: Sconst  */
#line 9446 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("as", (Node *)makeString((yyvsp[0].str)));
				}
#line 38153 "gram.cpp"
    break;

  case 1309: /* dostmt_opt_item: LANGUAGE NonReservedWord_or_Sconst  */
#line 9450 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[0].str)));
				}
#line 38161 "gram.cpp"
    break;

  case 1310: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH FUNCTION function_with_argtypes cast_context  */
#line 9463 "gram.y"
                                {
					CreateCastStmt *n = makeNode(CreateCastStmt);
					n->sourcetype = (yyvsp[-7].typnam);
					n->targettype = (yyvsp[-5].typnam);
					n->func = (yyvsp[-1].funwithargs);
					n->context = (CoercionContext) (yyvsp[0].ival);
					n->inout = false;
					(yyval.node) = (Node *)n;
				}
#line 38175 "gram.cpp"
    break;

  case 1311: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITHOUT FUNCTION cast_context  */
#line 9474 "gram.y"
                                {
					CreateCastStmt *n = makeNode(CreateCastStmt);
					n->sourcetype = (yyvsp[-6].typnam);
					n->targettype = (yyvsp[-4].typnam);
					n->func = NULL;
					n->context = (CoercionContext) (yyvsp[0].ival);
					n->inout = false;
					(yyval.node) = (Node *)n;
				}
#line 38189 "gram.cpp"
    break;

  case 1312: /* CreateCastStmt: CREATE CAST '(' Typename AS Typename ')' WITH INOUT cast_context  */
#line 9485 "gram.y"
                                {
					CreateCastStmt *n = makeNode(CreateCastStmt);
					n->sourcetype = (yyvsp[-6].typnam);
					n->targettype = (yyvsp[-4].typnam);
					n->func = NULL;
					n->context = (CoercionContext) (yyvsp[0].ival);
					n->inout = true;
					(yyval.node) = (Node *)n;
				}
#line 38203 "gram.cpp"
    break;

  case 1313: /* cast_context: AS IMPLICIT_P  */
#line 9496 "gram.y"
                                                                { (yyval.ival) = COERCION_IMPLICIT; }
#line 38209 "gram.cpp"
    break;

  case 1314: /* cast_context: AS ASSIGNMENT  */
#line 9497 "gram.y"
                                                                                { (yyval.ival) = COERCION_ASSIGNMENT; }
#line 38215 "gram.cpp"
    break;

  case 1315: /* cast_context: %empty  */
#line 9498 "gram.y"
                                                                                        { (yyval.ival) = COERCION_EXPLICIT; }
#line 38221 "gram.cpp"
    break;

  case 1316: /* DropCastStmt: DROP CAST opt_if_exists '(' Typename AS Typename ')' opt_drop_behavior  */
#line 9503 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_CAST;
					n->objects = list_make1(list_make1((yyvsp[-4].typnam)));
					n->arguments = list_make1(list_make1((yyvsp[-2].typnam)));
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = (yyvsp[-6].boolean);
					n->concurrent = false;
					(yyval.node) = (Node *)n;
				}
#line 38236 "gram.cpp"
    break;

  case 1317: /* opt_if_exists: IF_P EXISTS  */
#line 9515 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 38242 "gram.cpp"
    break;

  case 1318: /* opt_if_exists: %empty  */
#line 9516 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 38248 "gram.cpp"
    break;

  case 1319: /* ReindexStmt: REINDEX reindex_type qualified_name opt_force  */
#line 9531 "gram.y"
                                {
					ReindexStmt *n = makeNode(ReindexStmt);
					n->kind = (yyvsp[-2].objtype);
					n->relation = (yyvsp[-1].range);
					n->name = NULL;
					(yyval.node) = (Node *)n;
				}
#line 38260 "gram.cpp"
    break;

  case 1320: /* ReindexStmt: REINDEX SYSTEM_P name opt_force  */
#line 9539 "gram.y"
                                {
					ReindexStmt *n = makeNode(ReindexStmt);
					n->kind = OBJECT_DATABASE;
					n->name = (yyvsp[-1].str);
					n->relation = NULL;
					n->do_system = true;
					n->do_user = false;
					(yyval.node) = (Node *)n;
				}
#line 38274 "gram.cpp"
    break;

  case 1321: /* ReindexStmt: REINDEX DATABASE name opt_force  */
#line 9549 "gram.y"
                                {
					ReindexStmt *n = makeNode(ReindexStmt);
					n->kind = OBJECT_DATABASE;
					n->name = (yyvsp[-1].str);
					n->relation = NULL;
					n->do_system = true;
					n->do_user = true;
					(yyval.node) = (Node *)n;
				}
#line 38288 "gram.cpp"
    break;

  case 1322: /* reindex_type: INDEX  */
#line 9561 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_INDEX; }
#line 38294 "gram.cpp"
    break;

  case 1323: /* reindex_type: TABLE  */
#line 9562 "gram.y"
                                                                                                { (yyval.objtype) = OBJECT_TABLE; }
#line 38300 "gram.cpp"
    break;

  case 1324: /* opt_force: FORCE  */
#line 9565 "gram.y"
                                                                                        {  (yyval.boolean) = TRUE; }
#line 38306 "gram.cpp"
    break;

  case 1325: /* opt_force: %empty  */
#line 9566 "gram.y"
                                                                                        {  (yyval.boolean) = FALSE; }
#line 38312 "gram.cpp"
    break;

  case 1326: /* AlterTypeStmt: ALTER TYPE_P any_name SET DEFAULT ENCODING definition  */
#line 9575 "gram.y"
                                {
					AlterTypeStmt *n = makeNode(AlterTypeStmt);

					n->typeName = (yyvsp[-4].list);
					n->encoding = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 38324 "gram.cpp"
    break;

  case 1327: /* AlterTblSpcStmt: ALTER TABLESPACE name SET reloptions  */
#line 9592 "gram.y"
                                {
					AlterTableSpaceOptionsStmt *n =
						makeNode(AlterTableSpaceOptionsStmt);
					n->tablespacename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					n->isReset = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 38337 "gram.cpp"
    break;

  case 1328: /* AlterTblSpcStmt: ALTER TABLESPACE name RESET reloptions  */
#line 9601 "gram.y"
                                {
					AlterTableSpaceOptionsStmt *n =
						makeNode(AlterTableSpaceOptionsStmt);
					n->tablespacename = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					n->isReset = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 38350 "gram.cpp"
    break;

  case 1329: /* RenameStmt: ALTER AGGREGATE func_name aggr_args RENAME TO name  */
#line 9618 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_AGGREGATE;
					n->object = (yyvsp[-4].list);
					n->objarg = extractAggrArgTypes((yyvsp[-3].list));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38364 "gram.cpp"
    break;

  case 1330: /* RenameStmt: ALTER COLLATION any_name RENAME TO name  */
#line 9628 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLLATION;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38377 "gram.cpp"
    break;

  case 1331: /* RenameStmt: ALTER CONVERSION_P any_name RENAME TO name  */
#line 9637 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_CONVERSION;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38390 "gram.cpp"
    break;

  case 1332: /* RenameStmt: ALTER DATABASE database_name RENAME TO database_name  */
#line 9646 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_DATABASE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38403 "gram.cpp"
    break;

  case 1333: /* RenameStmt: ALTER DOMAIN_P any_name RENAME TO name  */
#line 9655 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_DOMAIN;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38416 "gram.cpp"
    break;

  case 1334: /* RenameStmt: ALTER DOMAIN_P any_name RENAME CONSTRAINT name TO name  */
#line 9664 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_CONSTRAINT;
					n->relationType = OBJECT_DOMAIN;
					n->object = (yyvsp[-5].list);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38430 "gram.cpp"
    break;

  case 1335: /* RenameStmt: ALTER FOREIGN DATA_P WRAPPER name RENAME TO name  */
#line 9674 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FDW;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38443 "gram.cpp"
    break;

  case 1336: /* RenameStmt: ALTER FUNCTION function_with_argtypes RENAME TO name  */
#line 9683 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FUNCTION;
					n->object = (yyvsp[-3].funwithargs)->funcname;
					n->objarg = (yyvsp[-3].funwithargs)->funcargs;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38457 "gram.cpp"
    break;

  case 1337: /* RenameStmt: ALTER GROUP_P RoleId RENAME TO RoleId  */
#line 9693 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ROLE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38470 "gram.cpp"
    break;

  case 1338: /* RenameStmt: ALTER opt_procedural LANGUAGE name RENAME TO name  */
#line 9702 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_LANGUAGE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38483 "gram.cpp"
    break;

  case 1339: /* RenameStmt: ALTER OPERATOR CLASS any_name USING access_method RENAME TO name  */
#line 9711 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_OPCLASS;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38497 "gram.cpp"
    break;

  case 1340: /* RenameStmt: ALTER OPERATOR FAMILY any_name USING access_method RENAME TO name  */
#line 9721 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_OPFAMILY;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38511 "gram.cpp"
    break;

  case 1341: /* RenameStmt: ALTER SCHEMA name RENAME TO name  */
#line 9731 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_SCHEMA;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38524 "gram.cpp"
    break;

  case 1342: /* RenameStmt: ALTER SERVER name RENAME TO name  */
#line 9740 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FOREIGN_SERVER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38537 "gram.cpp"
    break;

  case 1343: /* RenameStmt: ALTER TABLE relation_expr RENAME TO name  */
#line 9749 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38551 "gram.cpp"
    break;

  case 1344: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME TO name  */
#line 9759 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38565 "gram.cpp"
    break;

  case 1345: /* RenameStmt: ALTER SEQUENCE qualified_name RENAME TO name  */
#line 9769 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38579 "gram.cpp"
    break;

  case 1346: /* RenameStmt: ALTER SEQUENCE IF_P EXISTS qualified_name RENAME TO name  */
#line 9779 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38593 "gram.cpp"
    break;

  case 1347: /* RenameStmt: ALTER VIEW qualified_name RENAME TO name  */
#line 9789 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38607 "gram.cpp"
    break;

  case 1348: /* RenameStmt: ALTER VIEW IF_P EXISTS qualified_name RENAME TO name  */
#line 9799 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38621 "gram.cpp"
    break;

  case 1349: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME TO name  */
#line 9809 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38635 "gram.cpp"
    break;

  case 1350: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME TO name  */
#line 9819 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38649 "gram.cpp"
    break;

  case 1351: /* RenameStmt: ALTER INDEX qualified_name RENAME TO name  */
#line 9829 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_INDEX;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38663 "gram.cpp"
    break;

  case 1352: /* RenameStmt: ALTER INDEX IF_P EXISTS qualified_name RENAME TO name  */
#line 9839 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_INDEX;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38677 "gram.cpp"
    break;

  case 1353: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME TO name  */
#line 9849 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38691 "gram.cpp"
    break;

  case 1354: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME TO name  */
#line 9859 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->subname = NULL;
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38705 "gram.cpp"
    break;

  case 1355: /* RenameStmt: ALTER TABLE relation_expr RENAME opt_column name TO name  */
#line 9869 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38720 "gram.cpp"
    break;

  case 1356: /* RenameStmt: ALTER TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
#line 9880 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38735 "gram.cpp"
    break;

  case 1357: /* RenameStmt: ALTER MATERIALIZED VIEW qualified_name RENAME opt_column name TO name  */
#line 9891 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38750 "gram.cpp"
    break;

  case 1358: /* RenameStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name RENAME opt_column name TO name  */
#line 9902 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38765 "gram.cpp"
    break;

  case 1359: /* RenameStmt: ALTER TABLE relation_expr RENAME CONSTRAINT name TO name  */
#line 9913 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_CONSTRAINT;
					n->relationType = OBJECT_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38779 "gram.cpp"
    break;

  case 1360: /* RenameStmt: ALTER FOREIGN TABLE relation_expr RENAME opt_column name TO name  */
#line 9923 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38794 "gram.cpp"
    break;

  case 1361: /* RenameStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr RENAME opt_column name TO name  */
#line 9934 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_COLUMN;
					n->relationType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-5].range);
					n->subname = (yyvsp[-2].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 38809 "gram.cpp"
    break;

  case 1362: /* RenameStmt: ALTER RULE name ON qualified_name RENAME TO name  */
#line 9945 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_RULE;
					n->relation = (yyvsp[-3].range);
					n->subname = (yyvsp[-5].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38823 "gram.cpp"
    break;

  case 1363: /* RenameStmt: ALTER TRIGGER name ON qualified_name RENAME TO name  */
#line 9955 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TRIGGER;
					n->relation = (yyvsp[-3].range);
					n->subname = (yyvsp[-5].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38837 "gram.cpp"
    break;

  case 1364: /* RenameStmt: ALTER EVENT TRIGGER name RENAME TO name  */
#line 9965 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_EVENT_TRIGGER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38849 "gram.cpp"
    break;

  case 1365: /* RenameStmt: ALTER ROLE RoleId RENAME TO RoleId  */
#line 9973 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ROLE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38862 "gram.cpp"
    break;

  case 1366: /* RenameStmt: ALTER USER RoleId RENAME TO RoleId  */
#line 9982 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ROLE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38875 "gram.cpp"
    break;

  case 1367: /* RenameStmt: ALTER TABLESPACE name RENAME TO name  */
#line 9991 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TABLESPACE;
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38888 "gram.cpp"
    break;

  case 1368: /* RenameStmt: ALTER TEXT_P SEARCH PARSER any_name RENAME TO name  */
#line 10000 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSPARSER;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38901 "gram.cpp"
    break;

  case 1369: /* RenameStmt: ALTER TEXT_P SEARCH DICTIONARY any_name RENAME TO name  */
#line 10009 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSDICTIONARY;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38914 "gram.cpp"
    break;

  case 1370: /* RenameStmt: ALTER TEXT_P SEARCH TEMPLATE any_name RENAME TO name  */
#line 10018 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSTEMPLATE;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38927 "gram.cpp"
    break;

  case 1371: /* RenameStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name RENAME TO name  */
#line 10027 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TSCONFIGURATION;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38940 "gram.cpp"
    break;

  case 1372: /* RenameStmt: ALTER TYPE_P any_name RENAME TO name  */
#line 10036 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_TYPE;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38953 "gram.cpp"
    break;

  case 1373: /* RenameStmt: ALTER TYPE_P any_name RENAME ATTRIBUTE name TO name opt_drop_behavior  */
#line 10045 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_ATTRIBUTE;
					n->relationType = OBJECT_TYPE;
					n->relation = makeRangeVarFromAnyName((yyvsp[-6].list), (yylsp[-6]), yyscanner);
					n->subname = (yyvsp[-3].str);
					n->newname = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 38969 "gram.cpp"
    break;

  case 1374: /* RenameStmt: ALTER PROTOCOL any_name RENAME TO name  */
#line 10057 "gram.y"
                                {
					RenameStmt *n = makeNode(RenameStmt);
					n->renameType = OBJECT_EXTPROTOCOL;
					n->object = (yyvsp[-3].list);
					n->newname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 38981 "gram.cpp"
    break;

  case 1375: /* opt_column: COLUMN  */
#line 10066 "gram.y"
                                                                                        { (yyval.ival) = COLUMN; }
#line 38987 "gram.cpp"
    break;

  case 1376: /* opt_column: %empty  */
#line 10067 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 38993 "gram.cpp"
    break;

  case 1377: /* opt_set_data: SET DATA_P  */
#line 10070 "gram.y"
                                                                                { (yyval.ival) = 1; }
#line 38999 "gram.cpp"
    break;

  case 1378: /* opt_set_data: %empty  */
#line 10071 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 39005 "gram.cpp"
    break;

  case 1379: /* AlterObjectSchemaStmt: ALTER AGGREGATE func_name aggr_args SET SCHEMA name  */
#line 10082 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_AGGREGATE;
					n->object = (yyvsp[-4].list);
					n->objarg = extractAggrArgTypes((yyvsp[-3].list));
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39019 "gram.cpp"
    break;

  case 1380: /* AlterObjectSchemaStmt: ALTER COLLATION any_name SET SCHEMA name  */
#line 10092 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_COLLATION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39032 "gram.cpp"
    break;

  case 1381: /* AlterObjectSchemaStmt: ALTER CONVERSION_P any_name SET SCHEMA name  */
#line 10101 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_CONVERSION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39045 "gram.cpp"
    break;

  case 1382: /* AlterObjectSchemaStmt: ALTER DOMAIN_P any_name SET SCHEMA name  */
#line 10110 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_DOMAIN;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39058 "gram.cpp"
    break;

  case 1383: /* AlterObjectSchemaStmt: ALTER EXTENSION any_name SET SCHEMA name  */
#line 10119 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_EXTENSION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39071 "gram.cpp"
    break;

  case 1384: /* AlterObjectSchemaStmt: ALTER FUNCTION function_with_argtypes SET SCHEMA name  */
#line 10128 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_FUNCTION;
					n->object = (yyvsp[-3].funwithargs)->funcname;
					n->objarg = (yyvsp[-3].funwithargs)->funcargs;
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39085 "gram.cpp"
    break;

  case 1385: /* AlterObjectSchemaStmt: ALTER OPERATOR any_operator oper_argtypes SET SCHEMA name  */
#line 10138 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_OPERATOR;
					n->object = (yyvsp[-4].list);
					n->objarg = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39099 "gram.cpp"
    break;

  case 1386: /* AlterObjectSchemaStmt: ALTER OPERATOR CLASS any_name USING access_method SET SCHEMA name  */
#line 10148 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_OPCLASS;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39113 "gram.cpp"
    break;

  case 1387: /* AlterObjectSchemaStmt: ALTER OPERATOR FAMILY any_name USING access_method SET SCHEMA name  */
#line 10158 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_OPFAMILY;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39127 "gram.cpp"
    break;

  case 1388: /* AlterObjectSchemaStmt: ALTER TABLE relation_expr SET SCHEMA name  */
#line 10168 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39140 "gram.cpp"
    break;

  case 1389: /* AlterObjectSchemaStmt: ALTER TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
#line 10177 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39153 "gram.cpp"
    break;

  case 1390: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH PARSER any_name SET SCHEMA name  */
#line 10186 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSPARSER;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39166 "gram.cpp"
    break;

  case 1391: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH DICTIONARY any_name SET SCHEMA name  */
#line 10195 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSDICTIONARY;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39179 "gram.cpp"
    break;

  case 1392: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH TEMPLATE any_name SET SCHEMA name  */
#line 10204 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSTEMPLATE;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39192 "gram.cpp"
    break;

  case 1393: /* AlterObjectSchemaStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name SET SCHEMA name  */
#line 10213 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TSCONFIGURATION;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39205 "gram.cpp"
    break;

  case 1394: /* AlterObjectSchemaStmt: ALTER SEQUENCE qualified_name SET SCHEMA name  */
#line 10222 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39218 "gram.cpp"
    break;

  case 1395: /* AlterObjectSchemaStmt: ALTER SEQUENCE IF_P EXISTS qualified_name SET SCHEMA name  */
#line 10231 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_SEQUENCE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39231 "gram.cpp"
    break;

  case 1396: /* AlterObjectSchemaStmt: ALTER VIEW qualified_name SET SCHEMA name  */
#line 10240 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39244 "gram.cpp"
    break;

  case 1397: /* AlterObjectSchemaStmt: ALTER VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
#line 10249 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_VIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39257 "gram.cpp"
    break;

  case 1398: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW qualified_name SET SCHEMA name  */
#line 10258 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39270 "gram.cpp"
    break;

  case 1399: /* AlterObjectSchemaStmt: ALTER MATERIALIZED VIEW IF_P EXISTS qualified_name SET SCHEMA name  */
#line 10267 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_MATVIEW;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39283 "gram.cpp"
    break;

  case 1400: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE relation_expr SET SCHEMA name  */
#line 10276 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39296 "gram.cpp"
    break;

  case 1401: /* AlterObjectSchemaStmt: ALTER FOREIGN TABLE IF_P EXISTS relation_expr SET SCHEMA name  */
#line 10285 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_FOREIGN_TABLE;
					n->relation = (yyvsp[-3].range);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 39309 "gram.cpp"
    break;

  case 1402: /* AlterObjectSchemaStmt: ALTER TYPE_P any_name SET SCHEMA name  */
#line 10294 "gram.y"
                                {
					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
					n->objectType = OBJECT_TYPE;
					n->object = (yyvsp[-3].list);
					n->newschema = (yyvsp[0].str);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 39322 "gram.cpp"
    break;

  case 1403: /* AlterOwnerStmt: ALTER AGGREGATE func_name aggr_args OWNER TO RoleId  */
#line 10311 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_AGGREGATE;
					n->object = (yyvsp[-4].list);
					n->objarg = extractAggrArgTypes((yyvsp[-3].list));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39335 "gram.cpp"
    break;

  case 1404: /* AlterOwnerStmt: ALTER COLLATION any_name OWNER TO RoleId  */
#line 10320 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_COLLATION;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39347 "gram.cpp"
    break;

  case 1405: /* AlterOwnerStmt: ALTER CONVERSION_P any_name OWNER TO RoleId  */
#line 10328 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_CONVERSION;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39359 "gram.cpp"
    break;

  case 1406: /* AlterOwnerStmt: ALTER DATABASE database_name OWNER TO RoleId  */
#line 10336 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_DATABASE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39371 "gram.cpp"
    break;

  case 1407: /* AlterOwnerStmt: ALTER DOMAIN_P any_name OWNER TO RoleId  */
#line 10344 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_DOMAIN;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39383 "gram.cpp"
    break;

  case 1408: /* AlterOwnerStmt: ALTER FUNCTION function_with_argtypes OWNER TO RoleId  */
#line 10352 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_FUNCTION;
					n->object = (yyvsp[-3].funwithargs)->funcname;
					n->objarg = (yyvsp[-3].funwithargs)->funcargs;
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39396 "gram.cpp"
    break;

  case 1409: /* AlterOwnerStmt: ALTER opt_procedural LANGUAGE name OWNER TO RoleId  */
#line 10361 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_LANGUAGE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39408 "gram.cpp"
    break;

  case 1410: /* AlterOwnerStmt: ALTER LARGE_P OBJECT_P NumericOnly OWNER TO RoleId  */
#line 10369 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_LARGEOBJECT;
					n->object = list_make1((yyvsp[-3].value));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39420 "gram.cpp"
    break;

  case 1411: /* AlterOwnerStmt: ALTER OPERATOR any_operator oper_argtypes OWNER TO RoleId  */
#line 10377 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_OPERATOR;
					n->object = (yyvsp[-4].list);
					n->objarg = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39433 "gram.cpp"
    break;

  case 1412: /* AlterOwnerStmt: ALTER OPERATOR CLASS any_name USING access_method OWNER TO RoleId  */
#line 10386 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_OPCLASS;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39446 "gram.cpp"
    break;

  case 1413: /* AlterOwnerStmt: ALTER OPERATOR FAMILY any_name USING access_method OWNER TO RoleId  */
#line 10395 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_OPFAMILY;
					n->object = (yyvsp[-5].list);
					n->objarg = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39459 "gram.cpp"
    break;

  case 1414: /* AlterOwnerStmt: ALTER SCHEMA name OWNER TO RoleId  */
#line 10404 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_SCHEMA;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39471 "gram.cpp"
    break;

  case 1415: /* AlterOwnerStmt: ALTER TYPE_P any_name OWNER TO RoleId  */
#line 10412 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TYPE;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39483 "gram.cpp"
    break;

  case 1416: /* AlterOwnerStmt: ALTER TABLESPACE name OWNER TO RoleId  */
#line 10420 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TABLESPACE;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39495 "gram.cpp"
    break;

  case 1417: /* AlterOwnerStmt: ALTER PROTOCOL name OWNER TO RoleId  */
#line 10428 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_EXTPROTOCOL;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39507 "gram.cpp"
    break;

  case 1418: /* AlterOwnerStmt: ALTER TEXT_P SEARCH DICTIONARY any_name OWNER TO RoleId  */
#line 10436 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TSDICTIONARY;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39519 "gram.cpp"
    break;

  case 1419: /* AlterOwnerStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name OWNER TO RoleId  */
#line 10444 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_TSCONFIGURATION;
					n->object = (yyvsp[-3].list);
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39531 "gram.cpp"
    break;

  case 1420: /* AlterOwnerStmt: ALTER FOREIGN DATA_P WRAPPER name OWNER TO RoleId  */
#line 10452 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_FDW;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39543 "gram.cpp"
    break;

  case 1421: /* AlterOwnerStmt: ALTER SERVER name OWNER TO RoleId  */
#line 10460 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_FOREIGN_SERVER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39555 "gram.cpp"
    break;

  case 1422: /* AlterOwnerStmt: ALTER EVENT TRIGGER name OWNER TO RoleId  */
#line 10468 "gram.y"
                                {
					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
					n->objectType = OBJECT_EVENT_TRIGGER;
					n->object = list_make1(makeString((yyvsp[-3].str)));
					n->newowner = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39567 "gram.cpp"
    break;

  case 1423: /* RuleStmt: CREATE opt_or_replace RULE name AS ON event TO qualified_name where_clause DO opt_instead RuleActionList  */
#line 10487 "gram.y"
                                {
					RuleStmt *n = makeNode(RuleStmt);
					n->replace = (yyvsp[-11].boolean);
					n->relation = (yyvsp[-4].range);
					n->rulename = (yyvsp[-9].str);
					n->whereClause = (yyvsp[-3].node);
					n->event = static_cast<CmdType>((yyvsp[-6].ival));
					n->instead = (yyvsp[-1].boolean);
					n->actions = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 39583 "gram.cpp"
    break;

  case 1424: /* RuleActionList: NOTHING  */
#line 10501 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 39589 "gram.cpp"
    break;

  case 1425: /* RuleActionList: RuleActionStmt  */
#line 10502 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 39595 "gram.cpp"
    break;

  case 1426: /* RuleActionList: '(' RuleActionMulti ')'  */
#line 10503 "gram.y"
                                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 39601 "gram.cpp"
    break;

  case 1427: /* RuleActionMulti: RuleActionMulti ';' RuleActionStmtOrEmpty  */
#line 10509 "gram.y"
                                { if ((yyvsp[0].node) != NULL)
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				  else
					(yyval.list) = (yyvsp[-2].list);
				}
#line 39611 "gram.cpp"
    break;

  case 1428: /* RuleActionMulti: RuleActionStmtOrEmpty  */
#line 10515 "gram.y"
                                { if ((yyvsp[0].node) != NULL)
					(yyval.list) = list_make1((yyvsp[0].node));
				  else
					(yyval.list) = NIL;
				}
#line 39621 "gram.cpp"
    break;

  case 1434: /* RuleActionStmtOrEmpty: RuleActionStmt  */
#line 10531 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 39627 "gram.cpp"
    break;

  case 1435: /* RuleActionStmtOrEmpty: %empty  */
#line 10532 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 39633 "gram.cpp"
    break;

  case 1436: /* event: SELECT  */
#line 10535 "gram.y"
                                                                                        { (yyval.ival) = CMD_SELECT; }
#line 39639 "gram.cpp"
    break;

  case 1437: /* event: UPDATE  */
#line 10536 "gram.y"
                                                                                                { (yyval.ival) = CMD_UPDATE; }
#line 39645 "gram.cpp"
    break;

  case 1438: /* event: DELETE_P  */
#line 10537 "gram.y"
                                                                                                { (yyval.ival) = CMD_DELETE; }
#line 39651 "gram.cpp"
    break;

  case 1439: /* event: INSERT  */
#line 10538 "gram.y"
                                                                                                { (yyval.ival) = CMD_INSERT; }
#line 39657 "gram.cpp"
    break;

  case 1440: /* opt_instead: INSTEAD  */
#line 10542 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 39663 "gram.cpp"
    break;

  case 1441: /* opt_instead: ALSO  */
#line 10543 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 39669 "gram.cpp"
    break;

  case 1442: /* opt_instead: %empty  */
#line 10544 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 39675 "gram.cpp"
    break;

  case 1443: /* DropRuleStmt: DROP RULE name ON any_name opt_drop_behavior  */
#line 10550 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_RULE;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 39690 "gram.cpp"
    break;

  case 1444: /* DropRuleStmt: DROP RULE IF_P EXISTS name ON any_name opt_drop_behavior  */
#line 10561 "gram.y"
                                {
					DropStmt *n = makeNode(DropStmt);
					n->removeType = OBJECT_RULE;
					n->objects = list_make1(lappend((yyvsp[-1].list), makeString((yyvsp[-3].str))));
					n->arguments = NIL;
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (Node *) n;
				}
#line 39705 "gram.cpp"
    break;

  case 1445: /* NotifyStmt: NOTIFY ColId notify_payload  */
#line 10583 "gram.y"
                                {
					NotifyStmt *n = makeNode(NotifyStmt);
					n->conditionname = (yyvsp[-1].str);
					n->payload = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39716 "gram.cpp"
    break;

  case 1446: /* notify_payload: ',' Sconst  */
#line 10592 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 39722 "gram.cpp"
    break;

  case 1447: /* notify_payload: %empty  */
#line 10593 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 39728 "gram.cpp"
    break;

  case 1448: /* ListenStmt: LISTEN ColId  */
#line 10597 "gram.y"
                                {
					ListenStmt *n = makeNode(ListenStmt);
					n->conditionname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39738 "gram.cpp"
    break;

  case 1449: /* UnlistenStmt: UNLISTEN ColId  */
#line 10606 "gram.y"
                                {
					UnlistenStmt *n = makeNode(UnlistenStmt);
					n->conditionname = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39748 "gram.cpp"
    break;

  case 1450: /* UnlistenStmt: UNLISTEN '*'  */
#line 10612 "gram.y"
                                {
					UnlistenStmt *n = makeNode(UnlistenStmt);
					n->conditionname = NULL;
					(yyval.node) = (Node *)n;
				}
#line 39758 "gram.cpp"
    break;

  case 1451: /* TransactionStmt: ABORT_P opt_transaction  */
#line 10631 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39769 "gram.cpp"
    break;

  case 1452: /* TransactionStmt: BEGIN_P opt_transaction transaction_mode_list_or_empty  */
#line 10638 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_BEGIN;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 39780 "gram.cpp"
    break;

  case 1453: /* TransactionStmt: START TRANSACTION transaction_mode_list_or_empty  */
#line 10645 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_START;
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 39791 "gram.cpp"
    break;

  case 1454: /* TransactionStmt: COMMIT opt_transaction  */
#line 10652 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39802 "gram.cpp"
    break;

  case 1455: /* TransactionStmt: END_P opt_transaction  */
#line 10659 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39813 "gram.cpp"
    break;

  case 1456: /* TransactionStmt: ROLLBACK opt_transaction  */
#line 10666 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (Node *)n;
				}
#line 39824 "gram.cpp"
    break;

  case 1457: /* TransactionStmt: SAVEPOINT ColId  */
#line 10673 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_SAVEPOINT;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39836 "gram.cpp"
    break;

  case 1458: /* TransactionStmt: RELEASE SAVEPOINT ColId  */
#line 10681 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_RELEASE;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39848 "gram.cpp"
    break;

  case 1459: /* TransactionStmt: RELEASE ColId  */
#line 10689 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_RELEASE;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39860 "gram.cpp"
    break;

  case 1460: /* TransactionStmt: ROLLBACK opt_transaction TO SAVEPOINT ColId  */
#line 10697 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK_TO;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39872 "gram.cpp"
    break;

  case 1461: /* TransactionStmt: ROLLBACK opt_transaction TO ColId  */
#line 10705 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK_TO;
					n->options = list_make1(makeDefElem("savepoint_name",
														(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				}
#line 39884 "gram.cpp"
    break;

  case 1462: /* TransactionStmt: PREPARE TRANSACTION Sconst  */
#line 10713 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_PREPARE;
					n->gid = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39895 "gram.cpp"
    break;

  case 1463: /* TransactionStmt: COMMIT PREPARED Sconst  */
#line 10720 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_COMMIT_PREPARED;
					n->gid = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39906 "gram.cpp"
    break;

  case 1464: /* TransactionStmt: ROLLBACK PREPARED Sconst  */
#line 10727 "gram.y"
                                {
					TransactionStmt *n = makeNode(TransactionStmt);
					n->kind = TRANS_STMT_ROLLBACK_PREPARED;
					n->gid = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 39917 "gram.cpp"
    break;

  case 1465: /* opt_transaction: WORK  */
#line 10735 "gram.y"
                                                                                {}
#line 39923 "gram.cpp"
    break;

  case 1466: /* opt_transaction: TRANSACTION  */
#line 10736 "gram.y"
                                                                                        {}
#line 39929 "gram.cpp"
    break;

  case 1467: /* opt_transaction: %empty  */
#line 10737 "gram.y"
                                                                                                {}
#line 39935 "gram.cpp"
    break;

  case 1468: /* transaction_mode_item: ISOLATION LEVEL iso_level  */
#line 10742 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_isolation",
									   makeStringConst((yyvsp[0].str), (yylsp[0]))); }
#line 39942 "gram.cpp"
    break;

  case 1469: /* transaction_mode_item: READ ONLY  */
#line 10745 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_read_only",
									   makeIntConst(TRUE, (yylsp[-1]))); }
#line 39949 "gram.cpp"
    break;

  case 1470: /* transaction_mode_item: READ WRITE  */
#line 10748 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_read_only",
									   makeIntConst(FALSE, (yylsp[-1]))); }
#line 39956 "gram.cpp"
    break;

  case 1471: /* transaction_mode_item: DEFERRABLE  */
#line 10751 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_deferrable",
									   makeIntConst(TRUE, (yylsp[0]))); }
#line 39963 "gram.cpp"
    break;

  case 1472: /* transaction_mode_item: NOT DEFERRABLE  */
#line 10754 "gram.y"
                                        { (yyval.defelt) = makeDefElem("transaction_deferrable",
									   makeIntConst(FALSE, (yylsp[-1]))); }
#line 39970 "gram.cpp"
    break;

  case 1473: /* transaction_mode_list: transaction_mode_item  */
#line 10761 "gram.y"
                                        { (yyval.list) = list_make1((yyvsp[0].defelt)); }
#line 39976 "gram.cpp"
    break;

  case 1474: /* transaction_mode_list: transaction_mode_list ',' transaction_mode_item  */
#line 10763 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt)); }
#line 39982 "gram.cpp"
    break;

  case 1475: /* transaction_mode_list: transaction_mode_list transaction_mode_item  */
#line 10765 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 39988 "gram.cpp"
    break;

  case 1477: /* transaction_mode_list_or_empty: %empty  */
#line 10771 "gram.y"
                                        { (yyval.list) = NIL; }
#line 39994 "gram.cpp"
    break;

  case 1478: /* ViewStmt: CREATE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 10785 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-7].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->replace = false;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					(yyval.node) = (Node *) n;
				}
#line 40010 "gram.cpp"
    break;

  case 1479: /* ViewStmt: CREATE OR REPLACE OptTemp VIEW qualified_name opt_column_list opt_reloptions AS SelectStmt opt_check_option  */
#line 10798 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-5].range);
					n->view->relpersistence = (yyvsp[-7].ival);
					n->aliases = (yyvsp[-4].list);
					n->query = (yyvsp[-1].node);
					n->replace = true;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					(yyval.node) = (Node *) n;
				}
#line 40026 "gram.cpp"
    break;

  case 1480: /* ViewStmt: CREATE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
#line 10811 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-7].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-5].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[-1].node));
					n->replace = false;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					if (n->withCheckOption != NO_CHECK_OPTION)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[0])));
					(yyval.node) = (Node *) n;
				}
#line 40047 "gram.cpp"
    break;

  case 1481: /* ViewStmt: CREATE OR REPLACE OptTemp RECURSIVE VIEW qualified_name '(' columnList ')' opt_reloptions AS SelectStmt opt_check_option  */
#line 10829 "gram.y"
                                {
					ViewStmt *n = makeNode(ViewStmt);
					n->view = (yyvsp[-7].range);
					n->view->relpersistence = (yyvsp[-10].ival);
					n->aliases = (yyvsp[-5].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[-1].node));
					n->replace = true;
					n->options = (yyvsp[-3].list);
					n->withCheckOption = static_cast<ViewCheckOption>((yyvsp[0].ival));
					if (n->withCheckOption != NO_CHECK_OPTION)
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[0])));
					(yyval.node) = (Node *) n;
				}
#line 40068 "gram.cpp"
    break;

  case 1482: /* opt_check_option: WITH CHECK OPTION  */
#line 10848 "gram.y"
                                                                { (yyval.ival) = CASCADED_CHECK_OPTION; }
#line 40074 "gram.cpp"
    break;

  case 1483: /* opt_check_option: WITH CASCADED CHECK OPTION  */
#line 10849 "gram.y"
                                                { (yyval.ival) = CASCADED_CHECK_OPTION; }
#line 40080 "gram.cpp"
    break;

  case 1484: /* opt_check_option: WITH LOCAL CHECK OPTION  */
#line 10850 "gram.y"
                                                        { (yyval.ival) = LOCAL_CHECK_OPTION; }
#line 40086 "gram.cpp"
    break;

  case 1485: /* opt_check_option: %empty  */
#line 10851 "gram.y"
                                                                { (yyval.ival) = NO_CHECK_OPTION; }
#line 40092 "gram.cpp"
    break;

  case 1486: /* LoadStmt: LOAD file_name  */
#line 10862 "gram.y"
                                {
					LoadStmt *n = makeNode(LoadStmt);
					n->filename = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 40102 "gram.cpp"
    break;

  case 1487: /* CreatedbStmt: CREATE DATABASE database_name opt_with createdb_opt_list  */
#line 10878 "gram.y"
                                {
					CreatedbStmt *n = makeNode(CreatedbStmt);
					n->dbname = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40113 "gram.cpp"
    break;

  case 1488: /* createdb_opt_list: createdb_opt_list createdb_opt_item  */
#line 10887 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 40119 "gram.cpp"
    break;

  case 1489: /* createdb_opt_list: %empty  */
#line 10888 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 40125 "gram.cpp"
    break;

  case 1490: /* createdb_opt_item: TABLESPACE opt_equal name  */
#line 10893 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("tablespace", (Node *)makeString((yyvsp[0].str)));
				}
#line 40133 "gram.cpp"
    break;

  case 1491: /* createdb_opt_item: TABLESPACE opt_equal DEFAULT  */
#line 10897 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("tablespace", NULL);
				}
#line 40141 "gram.cpp"
    break;

  case 1492: /* createdb_opt_item: LOCATION opt_equal Sconst  */
#line 10901 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("location", (Node *)makeString((yyvsp[0].str)));
				}
#line 40149 "gram.cpp"
    break;

  case 1493: /* createdb_opt_item: LOCATION opt_equal DEFAULT  */
#line 10905 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("location", NULL);
				}
#line 40157 "gram.cpp"
    break;

  case 1494: /* createdb_opt_item: TEMPLATE opt_equal name  */
#line 10909 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("template", (Node *)makeString((yyvsp[0].str)));
				}
#line 40165 "gram.cpp"
    break;

  case 1495: /* createdb_opt_item: TEMPLATE opt_equal DEFAULT  */
#line 10913 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("template", NULL);
				}
#line 40173 "gram.cpp"
    break;

  case 1496: /* createdb_opt_item: ENCODING opt_equal Sconst  */
#line 10917 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[0].str)));
				}
#line 40181 "gram.cpp"
    break;

  case 1497: /* createdb_opt_item: ENCODING opt_equal Iconst  */
#line 10921 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 40189 "gram.cpp"
    break;

  case 1498: /* createdb_opt_item: ENCODING opt_equal DEFAULT  */
#line 10925 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("encoding", NULL);
				}
#line 40197 "gram.cpp"
    break;

  case 1499: /* createdb_opt_item: LC_COLLATE_P opt_equal Sconst  */
#line 10929 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_collate", (Node *)makeString((yyvsp[0].str)));
				}
#line 40205 "gram.cpp"
    break;

  case 1500: /* createdb_opt_item: LC_COLLATE_P opt_equal DEFAULT  */
#line 10933 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_collate", NULL);
				}
#line 40213 "gram.cpp"
    break;

  case 1501: /* createdb_opt_item: LC_CTYPE_P opt_equal Sconst  */
#line 10937 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_ctype", (Node *)makeString((yyvsp[0].str)));
				}
#line 40221 "gram.cpp"
    break;

  case 1502: /* createdb_opt_item: LC_CTYPE_P opt_equal DEFAULT  */
#line 10941 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("lc_ctype", NULL);
				}
#line 40229 "gram.cpp"
    break;

  case 1503: /* createdb_opt_item: CONNECTION LIMIT opt_equal SignedIconst  */
#line 10945 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 40237 "gram.cpp"
    break;

  case 1504: /* createdb_opt_item: OWNER opt_equal name  */
#line 10949 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("owner", (Node *)makeString((yyvsp[0].str)));
				}
#line 40245 "gram.cpp"
    break;

  case 1505: /* createdb_opt_item: OWNER opt_equal DEFAULT  */
#line 10953 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("owner", NULL);
				}
#line 40253 "gram.cpp"
    break;

  case 1506: /* opt_equal: '='  */
#line 10962 "gram.y"
                                                                                                {}
#line 40259 "gram.cpp"
    break;

  case 1507: /* opt_equal: %empty  */
#line 10963 "gram.y"
                                                                                                {}
#line 40265 "gram.cpp"
    break;

  case 1508: /* AlterDatabaseStmt: ALTER DATABASE database_name opt_with alterdb_opt_list  */
#line 10975 "gram.y"
                                 {
					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
					n->dbname = (yyvsp[-2].str);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				 }
#line 40276 "gram.cpp"
    break;

  case 1509: /* AlterDatabaseStmt: ALTER DATABASE database_name SET TABLESPACE name  */
#line 10982 "gram.y"
                                 {
					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
					n->dbname = (yyvsp[-3].str);
					n->options = list_make1(makeDefElem("tablespace",
													(Node *)makeString((yyvsp[0].str))));
					(yyval.node) = (Node *)n;
				 }
#line 40288 "gram.cpp"
    break;

  case 1510: /* AlterDatabaseSetStmt: ALTER DATABASE database_name SetResetClause  */
#line 10993 "gram.y"
                                {
					AlterDatabaseSetStmt *n = makeNode(AlterDatabaseSetStmt);
					n->dbname = (yyvsp[-1].str);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 40299 "gram.cpp"
    break;

  case 1511: /* alterdb_opt_list: alterdb_opt_list alterdb_opt_item  */
#line 11003 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].defelt)); }
#line 40305 "gram.cpp"
    break;

  case 1512: /* alterdb_opt_list: %empty  */
#line 11004 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 40311 "gram.cpp"
    break;

  case 1513: /* alterdb_opt_item: CONNECTION LIMIT opt_equal SignedIconst  */
#line 11009 "gram.y"
                                {
					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[0].ival)));
				}
#line 40319 "gram.cpp"
    break;

  case 1514: /* DropdbStmt: DROP DATABASE database_name  */
#line 11023 "gram.y"
                                {
					DropdbStmt *n = makeNode(DropdbStmt);
					n->dbname = (yyvsp[0].str);
					n->missing_ok = FALSE;
					(yyval.node) = (Node *)n;
				}
#line 40330 "gram.cpp"
    break;

  case 1515: /* DropdbStmt: DROP DATABASE IF_P EXISTS database_name  */
#line 11030 "gram.y"
                                {
					DropdbStmt *n = makeNode(DropdbStmt);
					n->dbname = (yyvsp[0].str);
					n->missing_ok = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 40341 "gram.cpp"
    break;

  case 1516: /* AlterSystemStmt: ALTER SYSTEM_P SET generic_set  */
#line 11048 "gram.y"
                                {
					AlterSystemStmt *n = makeNode(AlterSystemStmt);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 40351 "gram.cpp"
    break;

  case 1517: /* AlterSystemStmt: ALTER SYSTEM_P RESET generic_reset  */
#line 11054 "gram.y"
                                {
					AlterSystemStmt *n = makeNode(AlterSystemStmt);
					n->setstmt = (yyvsp[0].vsetstmt);
					(yyval.node) = (Node *)n;
				}
#line 40361 "gram.cpp"
    break;

  case 1518: /* CreateDomainStmt: CREATE DOMAIN_P any_name opt_as Typename ColQualList  */
#line 11070 "gram.y"
                                {
					CreateDomainStmt *n = makeNode(CreateDomainStmt);
					n->domainname = (yyvsp[-3].list);
					n->typeName = (yyvsp[-1].typnam);
					SplitColQualList((yyvsp[0].list), &n->constraints, &n->collClause,
									 yyscanner);
					(yyval.node) = (Node *)n;
				}
#line 40374 "gram.cpp"
    break;

  case 1519: /* AlterDomainStmt: ALTER DOMAIN_P any_name alter_column_default  */
#line 11083 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'T';
					n->typeName = (yyvsp[-1].list);
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 40386 "gram.cpp"
    break;

  case 1520: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP NOT NULL_P  */
#line 11092 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'N';
					n->typeName = (yyvsp[-3].list);
					(yyval.node) = (Node *)n;
				}
#line 40397 "gram.cpp"
    break;

  case 1521: /* AlterDomainStmt: ALTER DOMAIN_P any_name SET NOT NULL_P  */
#line 11100 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'O';
					n->typeName = (yyvsp[-3].list);
					(yyval.node) = (Node *)n;
				}
#line 40408 "gram.cpp"
    break;

  case 1522: /* AlterDomainStmt: ALTER DOMAIN_P any_name ADD_P TableConstraint  */
#line 11108 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'C';
					n->typeName = (yyvsp[-2].list);
					n->def = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 40420 "gram.cpp"
    break;

  case 1523: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT name opt_drop_behavior  */
#line 11117 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'X';
					n->typeName = (yyvsp[-4].list);
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (Node *)n;
				}
#line 40434 "gram.cpp"
    break;

  case 1524: /* AlterDomainStmt: ALTER DOMAIN_P any_name DROP CONSTRAINT IF_P EXISTS name opt_drop_behavior  */
#line 11128 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'X';
					n->typeName = (yyvsp[-6].list);
					n->name = (yyvsp[-1].str);
					n->behavior = (yyvsp[0].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (Node *)n;
				}
#line 40448 "gram.cpp"
    break;

  case 1525: /* AlterDomainStmt: ALTER DOMAIN_P any_name VALIDATE CONSTRAINT name  */
#line 11139 "gram.y"
                                {
					AlterDomainStmt *n = makeNode(AlterDomainStmt);
					n->subtype = 'V';
					n->typeName = (yyvsp[-3].list);
					n->name = (yyvsp[0].str);
					(yyval.node) = (Node *)n;
				}
#line 40460 "gram.cpp"
    break;

  case 1526: /* opt_as: AS  */
#line 11148 "gram.y"
                                                                                                {}
#line 40466 "gram.cpp"
    break;

  case 1527: /* opt_as: %empty  */
#line 11149 "gram.y"
                                                                                        {}
#line 40472 "gram.cpp"
    break;

  case 1528: /* AlterTSDictionaryStmt: ALTER TEXT_P SEARCH DICTIONARY any_name definition  */
#line 11161 "gram.y"
                                {
					AlterTSDictionaryStmt *n = makeNode(AlterTSDictionaryStmt);
					n->dictname = (yyvsp[-1].list);
					n->options = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40483 "gram.cpp"
    break;

  case 1529: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ADD_P MAPPING FOR name_list WITH any_name_list  */
#line 11171 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_ADD_MAPPING;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = (yyvsp[-2].list);
					n->dicts = (yyvsp[0].list);
					n->override = false;
					n->replace = false;
					(yyval.node) = (Node*)n;
				}
#line 40498 "gram.cpp"
    break;

  case 1530: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list WITH any_name_list  */
#line 11182 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = (yyvsp[-2].list);
					n->dicts = (yyvsp[0].list);
					n->override = true;
					n->replace = false;
					(yyval.node) = (Node*)n;
				}
#line 40513 "gram.cpp"
    break;

  case 1531: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING REPLACE any_name WITH any_name  */
#line 11193 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_REPLACE_DICT;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = NIL;
					n->dicts = list_make2((yyvsp[-2].list),(yyvsp[0].list));
					n->override = false;
					n->replace = true;
					(yyval.node) = (Node*)n;
				}
#line 40528 "gram.cpp"
    break;

  case 1532: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name ALTER MAPPING FOR name_list REPLACE any_name WITH any_name  */
#line 11204 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN;
					n->cfgname = (yyvsp[-8].list);
					n->tokentype = (yyvsp[-4].list);
					n->dicts = list_make2((yyvsp[-2].list),(yyvsp[0].list));
					n->override = false;
					n->replace = true;
					(yyval.node) = (Node*)n;
				}
#line 40543 "gram.cpp"
    break;

  case 1533: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING FOR name_list  */
#line 11215 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_DROP_MAPPING;
					n->cfgname = (yyvsp[-4].list);
					n->tokentype = (yyvsp[0].list);
					n->missing_ok = false;
					(yyval.node) = (Node*)n;
				}
#line 40556 "gram.cpp"
    break;

  case 1534: /* AlterTSConfigurationStmt: ALTER TEXT_P SEARCH CONFIGURATION any_name DROP MAPPING IF_P EXISTS FOR name_list  */
#line 11224 "gram.y"
                                {
					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
					n->kind = ALTER_TSCONFIG_DROP_MAPPING;
					n->cfgname = (yyvsp[-6].list);
					n->tokentype = (yyvsp[0].list);
					n->missing_ok = true;
					(yyval.node) = (Node*)n;
				}
#line 40569 "gram.cpp"
    break;

  case 1535: /* CreateConversionStmt: CREATE opt_default CONVERSION_P any_name FOR Sconst TO Sconst FROM any_name  */
#line 11247 "gram.y"
                        {
				CreateConversionStmt *n = makeNode(CreateConversionStmt);
				n->conversion_name = (yyvsp[-6].list);
				n->for_encoding_name = (yyvsp[-4].str);
				n->to_encoding_name = (yyvsp[-2].str);
				n->func_name = (yyvsp[0].list);
				n->def = (yyvsp[-8].boolean);
				(yyval.node) = (Node *)n;
			}
#line 40583 "gram.cpp"
    break;

  case 1536: /* ClusterStmt: CLUSTER opt_verbose qualified_name cluster_index_specification  */
#line 11269 "gram.y"
                                {
					ClusterStmt *n = makeNode(ClusterStmt);
					n->relation = (yyvsp[-1].range);
					n->indexname = (yyvsp[0].str);
					n->verbose = (yyvsp[-2].boolean);
					(yyval.node) = (Node*)n;
				}
#line 40595 "gram.cpp"
    break;

  case 1537: /* ClusterStmt: CLUSTER opt_verbose  */
#line 11277 "gram.y"
                                {
					ClusterStmt *n = makeNode(ClusterStmt);
					n->relation = NULL;
					n->indexname = NULL;
					n->verbose = (yyvsp[0].boolean);
					(yyval.node) = (Node*)n;
				}
#line 40607 "gram.cpp"
    break;

  case 1538: /* ClusterStmt: CLUSTER opt_verbose index_name ON qualified_name  */
#line 11286 "gram.y"
                                {
					ClusterStmt *n = makeNode(ClusterStmt);
					n->relation = (yyvsp[0].range);
					n->indexname = (yyvsp[-2].str);
					n->verbose = (yyvsp[-3].boolean);
					(yyval.node) = (Node*)n;
				}
#line 40619 "gram.cpp"
    break;

  case 1539: /* cluster_index_specification: USING index_name  */
#line 11296 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 40625 "gram.cpp"
    break;

  case 1540: /* cluster_index_specification: %empty  */
#line 11297 "gram.y"
                                                                { (yyval.str) = NULL; }
#line 40631 "gram.cpp"
    break;

  case 1541: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose  */
#line 11310 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM;
					if ((yyvsp[-2].boolean))
						n->options |= VACOPT_FULL;
					if ((yyvsp[0].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->freeze_table_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->multixact_freeze_min_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->multixact_freeze_table_age = (yyvsp[-1].boolean) ? 0 : -1;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (Node *)n;
				}
#line 40651 "gram.cpp"
    break;

  case 1542: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose qualified_name  */
#line 11326 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_FULL;
					if ((yyvsp[-1].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->relation = (yyvsp[0].range);
					n->va_cols = NIL;
					(yyval.node) = (Node *)n;
				}
#line 40671 "gram.cpp"
    break;

  case 1543: /* VacuumStmt: VACUUM opt_full opt_freeze opt_verbose AnalyzeStmt  */
#line 11342 "gram.y"
                                {
					VacuumStmt *n = (VacuumStmt *) (yyvsp[0].node);
					n->options |= VACOPT_VACUUM;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_FULL;
					if ((yyvsp[-1].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_min_age = (yyvsp[-2].boolean) ? 0 : -1;
					n->multixact_freeze_table_age = (yyvsp[-2].boolean) ? 0 : -1;
					(yyval.node) = (Node *)n;
				}
#line 40689 "gram.cpp"
    break;

  case 1544: /* VacuumStmt: VACUUM '(' vacuum_option_list ')'  */
#line 11356 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM | (yyvsp[-1].ival);
					if (n->options & VACOPT_FREEZE)
					{
						n->freeze_min_age = n->freeze_table_age = 0;
						n->multixact_freeze_min_age = 0;
						n->multixact_freeze_table_age = 0;
					}
					else
					{
						n->freeze_min_age = n->freeze_table_age = -1;
						n->multixact_freeze_min_age = -1;
						n->multixact_freeze_table_age = -1;
					}
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (Node *) n;
				}
#line 40713 "gram.cpp"
    break;

  case 1545: /* VacuumStmt: VACUUM '(' vacuum_option_list ')' qualified_name opt_name_list  */
#line 11376 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_VACUUM | (yyvsp[-3].ival);
					if (n->options & VACOPT_FREEZE)
					{
						n->freeze_min_age = n->freeze_table_age = 0;
						n->multixact_freeze_min_age = 0;
						n->multixact_freeze_table_age = 0;
					}
					else
					{
						n->freeze_min_age = n->freeze_table_age = -1;
						n->multixact_freeze_min_age = -1;
						n->multixact_freeze_table_age = -1;
					}
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= VACOPT_ANALYZE;
					(yyval.node) = (Node *) n;
				}
#line 40739 "gram.cpp"
    break;

  case 1546: /* vacuum_option_list: vacuum_option_elem  */
#line 11400 "gram.y"
                                                                                                        { (yyval.ival) = (yyvsp[0].ival); }
#line 40745 "gram.cpp"
    break;

  case 1547: /* vacuum_option_list: vacuum_option_list ',' vacuum_option_elem  */
#line 11401 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[-2].ival) | (yyvsp[0].ival); }
#line 40751 "gram.cpp"
    break;

  case 1548: /* vacuum_option_elem: analyze_keyword  */
#line 11405 "gram.y"
                                                { (yyval.ival) = VACOPT_ANALYZE; }
#line 40757 "gram.cpp"
    break;

  case 1549: /* vacuum_option_elem: VERBOSE  */
#line 11406 "gram.y"
                                                        { (yyval.ival) = VACOPT_VERBOSE; }
#line 40763 "gram.cpp"
    break;

  case 1550: /* vacuum_option_elem: FREEZE  */
#line 11407 "gram.y"
                                                        { (yyval.ival) = VACOPT_FREEZE; }
#line 40769 "gram.cpp"
    break;

  case 1551: /* vacuum_option_elem: FULL  */
#line 11408 "gram.y"
                                                        { (yyval.ival) = VACOPT_FULL; }
#line 40775 "gram.cpp"
    break;

  case 1552: /* vacuum_option_elem: YEZZEY  */
#line 11409 "gram.y"
                                                        { (yyval.ival) = VACOPT_YEZZEY; }
#line 40781 "gram.cpp"
    break;

  case 1553: /* AnalyzeStmt: analyze_keyword opt_verbose opt_rootonly_all  */
#line 11414 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-1].boolean))
						n->options |= VACOPT_VERBOSE;
					if ((yyvsp[0].boolean))
						n->options |= VACOPT_ROOTONLY;
					n->freeze_min_age = -1;
					n->freeze_table_age = -1;
					n->multixact_freeze_min_age = -1;
					n->multixact_freeze_table_age = -1;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (Node *)n;
				}
#line 40801 "gram.cpp"
    break;

  case 1554: /* AnalyzeStmt: analyze_keyword opt_verbose qualified_name opt_name_list  */
#line 11430 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-2].boolean))
						n->options |= VACOPT_VERBOSE;
					n->freeze_min_age = -1;
					n->freeze_table_age = -1;
					n->multixact_freeze_min_age = -1;
					n->multixact_freeze_table_age = -1;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40819 "gram.cpp"
    break;

  case 1555: /* AnalyzeStmt: analyze_keyword opt_verbose FULLSCAN qualified_name opt_name_list  */
#line 11444 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_VERBOSE;
					n->options |= VACOPT_FULLSCAN;
					n->freeze_min_age = -1;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40835 "gram.cpp"
    break;

  case 1556: /* AnalyzeStmt: analyze_keyword opt_verbose ROOTPARTITION qualified_name opt_name_list  */
#line 11456 "gram.y"
                                {
					VacuumStmt *n = makeNode(VacuumStmt);
					n->options = VACOPT_ANALYZE;
					if ((yyvsp[-3].boolean))
						n->options |= VACOPT_VERBOSE;
					n->options |= VACOPT_ROOTONLY;
					n->freeze_min_age = -1;
					n->relation = (yyvsp[-1].range);
					n->va_cols = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 40851 "gram.cpp"
    break;

  case 1557: /* analyze_keyword: ANALYZE  */
#line 11470 "gram.y"
                                                                                                {}
#line 40857 "gram.cpp"
    break;

  case 1558: /* analyze_keyword: ANALYSE  */
#line 11471 "gram.y"
                                                                                {}
#line 40863 "gram.cpp"
    break;

  case 1559: /* opt_verbose: VERBOSE  */
#line 11475 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 40869 "gram.cpp"
    break;

  case 1560: /* opt_verbose: %empty  */
#line 11476 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40875 "gram.cpp"
    break;

  case 1561: /* opt_rootonly_all: ROOTPARTITION ALL  */
#line 11480 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 40881 "gram.cpp"
    break;

  case 1562: /* opt_rootonly_all: %empty  */
#line 11481 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40887 "gram.cpp"
    break;

  case 1563: /* opt_full: FULL  */
#line 11484 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 40893 "gram.cpp"
    break;

  case 1564: /* opt_full: %empty  */
#line 11485 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40899 "gram.cpp"
    break;

  case 1565: /* opt_freeze: FREEZE  */
#line 11488 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 40905 "gram.cpp"
    break;

  case 1566: /* opt_freeze: %empty  */
#line 11489 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40911 "gram.cpp"
    break;

  case 1567: /* opt_name_list: '(' name_list ')'  */
#line 11493 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 40917 "gram.cpp"
    break;

  case 1568: /* opt_name_list: %empty  */
#line 11494 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 40923 "gram.cpp"
    break;

  case 1569: /* ExplainStmt: EXPLAIN ExplainableStmt  */
#line 11508 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = NIL;
					(yyval.node) = (Node *) n;
				}
#line 40934 "gram.cpp"
    break;

  case 1570: /* ExplainStmt: EXPLAIN analyze_keyword opt_verbose opt_dxl ExplainableStmt  */
#line 11515 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = list_make1(makeDefElem("analyze", NULL));
					if ((yyvsp[-2].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL));
					if ((yyvsp[-1].boolean))
						n->options = lappend(n->options,
											 makeDefElem("dxl", NULL));
					(yyval.node) = (Node *) n;
				}
#line 40951 "gram.cpp"
    break;

  case 1571: /* ExplainStmt: EXPLAIN VERBOSE opt_dxl ExplainableStmt  */
#line 11528 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = list_make1(makeDefElem("verbose", NULL));
					if ((yyvsp[-1].boolean))
						n->options = lappend(n->options,
											 makeDefElem("dxl", NULL));
					(yyval.node) = (Node *) n;
				}
#line 40965 "gram.cpp"
    break;

  case 1572: /* ExplainStmt: EXPLAIN '(' explain_option_list ')' ExplainableStmt  */
#line 11538 "gram.y"
                                {
					ExplainStmt *n = makeNode(ExplainStmt);
					n->query = (yyvsp[0].node);
					n->options = (yyvsp[-2].list);
					(yyval.node) = (Node *) n;
				}
#line 40976 "gram.cpp"
    break;

  case 1582: /* ExplainableStmt: CreateStmt  */
#line 11557 "gram.y"
                                {
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("cannot EXPLAIN CREATE TABLE without AS "
							 		"clause"));
				}
#line 40987 "gram.cpp"
    break;

  case 1583: /* opt_dxl: DXL  */
#line 11565 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 40993 "gram.cpp"
    break;

  case 1584: /* opt_dxl: %empty  */
#line 11566 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 40999 "gram.cpp"
    break;

  case 1585: /* explain_option_list: explain_option_elem  */
#line 11571 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].defelt));
				}
#line 41007 "gram.cpp"
    break;

  case 1586: /* explain_option_list: explain_option_list ',' explain_option_elem  */
#line 11575 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].defelt));
				}
#line 41015 "gram.cpp"
    break;

  case 1587: /* explain_option_elem: explain_option_name explain_option_arg  */
#line 11582 "gram.y"
                                {
					(yyval.defelt) = makeDefElem((yyvsp[-1].str), (yyvsp[0].node));
				}
#line 41023 "gram.cpp"
    break;

  case 1588: /* explain_option_name: NonReservedWord  */
#line 11588 "gram.y"
                                                        { (yyval.str) = (yyvsp[0].str); }
#line 41029 "gram.cpp"
    break;

  case 1589: /* explain_option_name: analyze_keyword  */
#line 11589 "gram.y"
                                                        { (yyval.str) = "analyze"; }
#line 41035 "gram.cpp"
    break;

  case 1590: /* explain_option_arg: opt_boolean_or_string  */
#line 11593 "gram.y"
                                                { (yyval.node) = (Node *) makeString((yyvsp[0].str)); }
#line 41041 "gram.cpp"
    break;

  case 1591: /* explain_option_arg: NumericOnly  */
#line 11594 "gram.y"
                                                        { (yyval.node) = (Node *) (yyvsp[0].value); }
#line 41047 "gram.cpp"
    break;

  case 1592: /* explain_option_arg: %empty  */
#line 11595 "gram.y"
                                                        { (yyval.node) = NULL; }
#line 41053 "gram.cpp"
    break;

  case 1593: /* PrepareStmt: PREPARE name prep_type_clause AS PreparableStmt  */
#line 11606 "gram.y"
                                {
					PrepareStmt *n = makeNode(PrepareStmt);
					n->name = (yyvsp[-3].str);
					n->argtypes = (yyvsp[-2].list);
					n->query = (yyvsp[0].node);
					(yyval.node) = (Node *) n;
				}
#line 41065 "gram.cpp"
    break;

  case 1594: /* prep_type_clause: '(' type_list ')'  */
#line 11615 "gram.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 41071 "gram.cpp"
    break;

  case 1595: /* prep_type_clause: %empty  */
#line 11616 "gram.y"
                                                                        { (yyval.list) = NIL; }
#line 41077 "gram.cpp"
    break;

  case 1600: /* ExecuteStmt: EXECUTE name execute_param_clause  */
#line 11634 "gram.y"
                                {
					ExecuteStmt *n = makeNode(ExecuteStmt);
					n->name = (yyvsp[-1].str);
					n->params = (yyvsp[0].list);
					(yyval.node) = (Node *) n;
				}
#line 41088 "gram.cpp"
    break;

  case 1601: /* ExecuteStmt: CREATE OptTemp TABLE create_as_target AS EXECUTE name execute_param_clause opt_with_data  */
#line 11642 "gram.y"
                                {
					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
					ExecuteStmt *n = makeNode(ExecuteStmt);
					n->name = (yyvsp[-2].str);
					n->params = (yyvsp[-1].list);
					ctas->query = (Node *) n;
					ctas->into = (yyvsp[-5].into);
					ctas->relkind = OBJECT_TABLE;
					ctas->is_select_into = false;
					/* cram additional flags into the IntoClause */
					(yyvsp[-5].into)->rel->relpersistence = (yyvsp[-7].ival);
					(yyvsp[-5].into)->skipData = !((yyvsp[0].boolean));
					(yyval.node) = (Node *) ctas;
				}
#line 41107 "gram.cpp"
    break;

  case 1602: /* execute_param_clause: '(' expr_list ')'  */
#line 11658 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 41113 "gram.cpp"
    break;

  case 1603: /* execute_param_clause: %empty  */
#line 11659 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 41119 "gram.cpp"
    break;

  case 1604: /* DeallocateStmt: DEALLOCATE name  */
#line 11670 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = (yyvsp[0].str);
						(yyval.node) = (Node *) n;
					}
#line 41129 "gram.cpp"
    break;

  case 1605: /* DeallocateStmt: DEALLOCATE PREPARE name  */
#line 11676 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = (yyvsp[0].str);
						(yyval.node) = (Node *) n;
					}
#line 41139 "gram.cpp"
    break;

  case 1606: /* DeallocateStmt: DEALLOCATE ALL  */
#line 11682 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = NULL;
						(yyval.node) = (Node *) n;
					}
#line 41149 "gram.cpp"
    break;

  case 1607: /* DeallocateStmt: DEALLOCATE PREPARE ALL  */
#line 11688 "gram.y"
                                        {
						DeallocateStmt *n = makeNode(DeallocateStmt);
						n->name = NULL;
						(yyval.node) = (Node *) n;
					}
#line 41159 "gram.cpp"
    break;

  case 1608: /* cdb_string_list: cdb_string  */
#line 11703 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 41165 "gram.cpp"
    break;

  case 1609: /* cdb_string_list: cdb_string_list ',' cdb_string  */
#line 11705 "gram.y"
                                {
					if (list_member((yyvsp[-2].list), (yyvsp[0].node)))
						ereport(ERROR,
								errcode(ERRCODE_INVALID_TABLE_DEFINITION),
								 errmsg("duplicate location uri"),
								 parser_errposition((yylsp[0])));
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 41178 "gram.cpp"
    break;

  case 1610: /* cdb_string: Sconst  */
#line 11718 "gram.y"
                                {
					(yyval.node) = (Node *) makeString((yyvsp[0].str));
				}
#line 41186 "gram.cpp"
    break;

  case 1611: /* InsertStmt: opt_with_clause INSERT INTO relation_expr_opt_alias insert_rest returning_clause  */
#line 11732 "gram.y"
                                {
					(yyvsp[-1].istmt)->relation = (yyvsp[-2].range);
					(yyvsp[-1].istmt)->returningList = (yyvsp[0].list);
					(yyvsp[-1].istmt)->withClause = (yyvsp[-5].with);
					(yyval.node) = (Node *) (yyvsp[-1].istmt);
				}
#line 41197 "gram.cpp"
    break;

  case 1612: /* insert_rest: SelectStmt  */
#line 11742 "gram.y"
                                {
					(yyval.istmt) = makeNode(InsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 41207 "gram.cpp"
    break;

  case 1613: /* insert_rest: '(' insert_column_list ')' SelectStmt  */
#line 11748 "gram.y"
                                {
					(yyval.istmt) = makeNode(InsertStmt);
					(yyval.istmt)->cols = (yyvsp[-2].list);
					(yyval.istmt)->selectStmt = (yyvsp[0].node);
				}
#line 41217 "gram.cpp"
    break;

  case 1614: /* insert_rest: DEFAULT VALUES  */
#line 11754 "gram.y"
                                {
					(yyval.istmt) = makeNode(InsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				}
#line 41227 "gram.cpp"
    break;

  case 1615: /* insert_column_list: insert_column_item  */
#line 11763 "gram.y"
                                        { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 41233 "gram.cpp"
    break;

  case 1616: /* insert_column_list: insert_column_list ',' insert_column_item  */
#line 11765 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 41239 "gram.cpp"
    break;

  case 1617: /* insert_column_item: ColId opt_indirection  */
#line 11770 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[-1].str);
					(yyval.target)->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[-1]);
				}
#line 41251 "gram.cpp"
    break;

  case 1618: /* returning_clause: RETURNING target_list  */
#line 11780 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 41257 "gram.cpp"
    break;

  case 1619: /* returning_clause: %empty  */
#line 11781 "gram.y"
                                                                { (yyval.list) = NIL; }
#line 41263 "gram.cpp"
    break;

  case 1620: /* DeleteStmt: opt_with_clause DELETE_P FROM relation_expr_opt_alias using_clause where_or_current_clause returning_clause  */
#line 11794 "gram.y"
                                {
					DeleteStmt *n = makeNode(DeleteStmt);
					n->relation = (yyvsp[-3].range);
					n->usingClause = (yyvsp[-2].list);
					n->whereClause = (yyvsp[-1].node);
					n->returningList = (yyvsp[0].list);
					n->withClause = (yyvsp[-6].with);
					(yyval.node) = (Node *)n;
				}
#line 41277 "gram.cpp"
    break;

  case 1621: /* using_clause: USING from_list  */
#line 11806 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 41283 "gram.cpp"
    break;

  case 1622: /* using_clause: %empty  */
#line 11807 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 41289 "gram.cpp"
    break;

  case 1623: /* LockStmt: LOCK_P opt_table relation_expr_list opt_lock opt_nowait opt_masteronly  */
#line 11819 "gram.y"
                                {
					LockStmt *n = makeNode(LockStmt);

					n->relations = (yyvsp[-3].list);
					n->mode = (yyvsp[-2].ival);
					n->nowait = (yyvsp[-1].boolean);
					n->masteronly = (yyvsp[0].boolean);
					if (n->masteronly && n->mode != AccessShareLock)
					{
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								errmsg("provided lock mode is not supported for MASTER ONLY"),
							 	errhint("Only ACCESS SHARE mode is supported for MASTER ONLY."),
								parser_errposition((yylsp[-2])));
					}
					(yyval.node) = (Node *)n;
				}
#line 41311 "gram.cpp"
    break;

  case 1624: /* opt_lock: IN_P lock_type MODE  */
#line 11838 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-1].ival); }
#line 41317 "gram.cpp"
    break;

  case 1625: /* opt_lock: %empty  */
#line 11839 "gram.y"
                                                                                { (yyval.ival) = AccessExclusiveLock; }
#line 41323 "gram.cpp"
    break;

  case 1626: /* lock_type: ACCESS SHARE  */
#line 11842 "gram.y"
                                                                { (yyval.ival) = AccessShareLock; }
#line 41329 "gram.cpp"
    break;

  case 1627: /* lock_type: ROW SHARE  */
#line 11843 "gram.y"
                                                                                { (yyval.ival) = RowShareLock; }
#line 41335 "gram.cpp"
    break;

  case 1628: /* lock_type: ROW EXCLUSIVE  */
#line 11844 "gram.y"
                                                                        { (yyval.ival) = RowExclusiveLock; }
#line 41341 "gram.cpp"
    break;

  case 1629: /* lock_type: SHARE UPDATE EXCLUSIVE  */
#line 11845 "gram.y"
                                                                { (yyval.ival) = ShareUpdateExclusiveLock; }
#line 41347 "gram.cpp"
    break;

  case 1630: /* lock_type: SHARE  */
#line 11846 "gram.y"
                                                                                { (yyval.ival) = ShareLock; }
#line 41353 "gram.cpp"
    break;

  case 1631: /* lock_type: SHARE ROW EXCLUSIVE  */
#line 11847 "gram.y"
                                                                { (yyval.ival) = ShareRowExclusiveLock; }
#line 41359 "gram.cpp"
    break;

  case 1632: /* lock_type: EXCLUSIVE  */
#line 11848 "gram.y"
                                                                                { (yyval.ival) = ExclusiveLock; }
#line 41365 "gram.cpp"
    break;

  case 1633: /* lock_type: ACCESS EXCLUSIVE  */
#line 11849 "gram.y"
                                                                        { (yyval.ival) = AccessExclusiveLock; }
#line 41371 "gram.cpp"
    break;

  case 1634: /* opt_nowait: NOWAIT  */
#line 11852 "gram.y"
                                                                        { (yyval.boolean) = TRUE; }
#line 41377 "gram.cpp"
    break;

  case 1635: /* opt_nowait: %empty  */
#line 11853 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 41383 "gram.cpp"
    break;

  case 1636: /* opt_masteronly: MASTER ONLY  */
#line 11856 "gram.y"
                                                                { (yyval.boolean) = true; }
#line 41389 "gram.cpp"
    break;

  case 1637: /* opt_masteronly: %empty  */
#line 11857 "gram.y"
                                                                                { (yyval.boolean) = false; }
#line 41395 "gram.cpp"
    break;

  case 1638: /* UpdateStmt: opt_with_clause UPDATE relation_expr_opt_alias SET set_clause_list from_clause where_or_current_clause returning_clause  */
#line 11872 "gram.y"
                                {
					UpdateStmt *n = makeNode(UpdateStmt);
					n->relation = (yyvsp[-5].range);
					n->targetList = (yyvsp[-3].list);
					n->fromClause = (yyvsp[-2].list);
					n->whereClause = (yyvsp[-1].node);
					n->returningList = (yyvsp[0].list);
					n->withClause = (yyvsp[-7].with);
					(yyval.node) = (Node *)n;
				}
#line 41410 "gram.cpp"
    break;

  case 1639: /* set_clause_list: set_clause  */
#line 11885 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 41416 "gram.cpp"
    break;

  case 1640: /* set_clause_list: set_clause_list ',' set_clause  */
#line 11886 "gram.y"
                                                                { (yyval.list) = list_concat((yyvsp[-2].list),(yyvsp[0].list)); }
#line 41422 "gram.cpp"
    break;

  case 1641: /* set_clause: single_set_clause  */
#line 11890 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 41428 "gram.cpp"
    break;

  case 1642: /* set_clause: multiple_set_clause  */
#line 11891 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 41434 "gram.cpp"
    break;

  case 1643: /* single_set_clause: set_target '=' ctext_expr  */
#line 11896 "gram.y"
                                {
					(yyval.target) = (yyvsp[-2].target);
					(yyval.target)->val = (Node *) (yyvsp[0].node);
				}
#line 41443 "gram.cpp"
    break;

  case 1644: /* multiple_set_clause: '(' set_target_list ')' '=' ctext_row  */
#line 11904 "gram.y"
                                {
					ListCell *col_cell;
					ListCell *val_cell;

					/*
					 * Break the ctext_row apart, merge individual expressions
					 * into the destination ResTargets.  XXX this approach
					 * cannot work for general row expressions as sources.
					 */
					if (list_length((yyvsp[-3].list)) != list_length((yyvsp[0].list)))
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("number of columns does not match number of values"),
								 parser_errposition((yylsp[-4])));
					forboth(col_cell, (yyvsp[-3].list), val_cell, (yyvsp[0].list))
					{
						ResTarget *res_col = (ResTarget *) lfirst(col_cell);
						Node *res_val = (Node *) lfirst(val_cell);

						res_col->val = res_val;
					}

					(yyval.list) = (yyvsp[-3].list);
				}
#line 41472 "gram.cpp"
    break;

  case 1645: /* set_target: ColId opt_indirection  */
#line 11932 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[-1].str);
					(yyval.target)->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[-1]);
				}
#line 41484 "gram.cpp"
    break;

  case 1646: /* set_target_list: set_target  */
#line 11942 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 41490 "gram.cpp"
    break;

  case 1647: /* set_target_list: set_target_list ',' set_target  */
#line 11943 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list),(yyvsp[0].target)); }
#line 41496 "gram.cpp"
    break;

  case 1648: /* DeclareCursorStmt: DECLARE cursor_name cursor_options CURSOR opt_hold FOR SelectStmt  */
#line 11954 "gram.y"
                                {
					DeclareCursorStmt *n = makeNode(DeclareCursorStmt);
					n->portalname = (yyvsp[-5].str);
					/* currently we always set FAST_PLAN option */
					n->options = (yyvsp[-4].ival) | (yyvsp[-2].ival) | CURSOR_OPT_FAST_PLAN;
					n->query = (yyvsp[0].node);
					(yyval.node) = (Node *)n;
				}
#line 41509 "gram.cpp"
    break;

  case 1649: /* cursor_name: name  */
#line 11964 "gram.y"
                                                                { (yyval.str) = (yyvsp[0].str); }
#line 41515 "gram.cpp"
    break;

  case 1650: /* cursor_options: %empty  */
#line 11967 "gram.y"
                                                                { (yyval.ival) = 0; }
#line 41521 "gram.cpp"
    break;

  case 1651: /* cursor_options: cursor_options NO SCROLL  */
#line 11968 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-2].ival) | CURSOR_OPT_NO_SCROLL; }
#line 41527 "gram.cpp"
    break;

  case 1652: /* cursor_options: cursor_options SCROLL  */
#line 11969 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_SCROLL; }
#line 41533 "gram.cpp"
    break;

  case 1653: /* cursor_options: cursor_options BINARY  */
#line 11970 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_BINARY; }
#line 41539 "gram.cpp"
    break;

  case 1654: /* cursor_options: cursor_options INSENSITIVE  */
#line 11971 "gram.y"
                                                        { (yyval.ival) = (yyvsp[-1].ival) | CURSOR_OPT_INSENSITIVE; }
#line 41545 "gram.cpp"
    break;

  case 1655: /* cursor_options: cursor_options PARALLEL RETRIEVE  */
#line 11972 "gram.y"
                                                                { (yyval.ival) = (yyvsp[-2].ival) | CURSOR_OPT_PARALLEL_RETRIEVE; }
#line 41551 "gram.cpp"
    break;

  case 1656: /* opt_hold: %empty  */
#line 11975 "gram.y"
                                                                { (yyval.ival) = 0; }
#line 41557 "gram.cpp"
    break;

  case 1657: /* opt_hold: WITH HOLD  */
#line 11976 "gram.y"
                                                                                { (yyval.ival) = CURSOR_OPT_HOLD; }
#line 41563 "gram.cpp"
    break;

  case 1658: /* opt_hold: WITHOUT HOLD  */
#line 11977 "gram.y"
                                                                        { (yyval.ival) = 0; }
#line 41569 "gram.cpp"
    break;

  case 1661: /* RetrieveStmt: RETRIEVE SignedIconst FROM ENDPOINT name  */
#line 12031 "gram.y"
                                {
					RetrieveStmt *n = makeNode(RetrieveStmt);
					n->endpoint_name = (yyvsp[0].str);
					n->count = (yyvsp[-3].ival);
					(yyval.node) = (Node *)n;
				}
#line 41580 "gram.cpp"
    break;

  case 1662: /* RetrieveStmt: RETRIEVE ALL FROM ENDPOINT name  */
#line 12038 "gram.y"
                                {
					RetrieveStmt *n = makeNode(RetrieveStmt);
					n->endpoint_name = (yyvsp[0].str);
					n->count = -1;
					n->is_all = true;
					(yyval.node) = (Node *)n;
				}
#line 41592 "gram.cpp"
    break;

  case 1663: /* select_with_parens: '(' select_no_parens ')'  */
#line 12048 "gram.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 41598 "gram.cpp"
    break;

  case 1664: /* select_with_parens: '(' select_with_parens ')'  */
#line 12049 "gram.y"
                                                                        { (yyval.node) = (yyvsp[-1].node); }
#line 41604 "gram.cpp"
    break;

  case 1665: /* select_no_parens: simple_select  */
#line 12064 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 41610 "gram.cpp"
    break;

  case 1666: /* select_no_parens: select_clause sort_clause  */
#line 12066 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-1].node), (yyvsp[0].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-1].node);
				}
#line 41621 "gram.cpp"
    break;

  case 1667: /* select_no_parens: select_clause opt_sort_clause for_locking_clause opt_select_limit  */
#line 12073 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[-1].list),
										list_nth((yyvsp[0].list), 0), list_nth((yyvsp[0].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41633 "gram.cpp"
    break;

  case 1668: /* select_no_parens: select_clause opt_sort_clause select_limit opt_for_locking_clause  */
#line 12081 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[0].list),
										list_nth((yyvsp[-1].list), 0), list_nth((yyvsp[-1].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41645 "gram.cpp"
    break;

  case 1669: /* select_no_parens: with_clause select_clause  */
#line 12089 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[0].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[-1].with),
										yyscanner);
					(yyval.node) = (yyvsp[0].node);
				}
#line 41657 "gram.cpp"
    break;

  case 1670: /* select_no_parens: with_clause select_clause sort_clause  */
#line 12097 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-1].node), (yyvsp[0].list), NIL,
										NULL, NULL,
										(yyvsp[-2].with),
										yyscanner);
					(yyval.node) = (yyvsp[-1].node);
				}
#line 41669 "gram.cpp"
    break;

  case 1671: /* select_no_parens: with_clause select_clause opt_sort_clause for_locking_clause opt_select_limit  */
#line 12105 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[-1].list),
										list_nth((yyvsp[0].list), 0), list_nth((yyvsp[0].list), 1),
										(yyvsp[-4].with),
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41681 "gram.cpp"
    break;

  case 1672: /* select_no_parens: with_clause select_clause opt_sort_clause select_limit opt_for_locking_clause  */
#line 12113 "gram.y"
                                {
					insertSelectOptions((SelectStmt *) (yyvsp[-3].node), (yyvsp[-2].list), (yyvsp[0].list),
										list_nth((yyvsp[-1].list), 0), list_nth((yyvsp[-1].list), 1),
										(yyvsp[-4].with),
										yyscanner);
					(yyval.node) = (yyvsp[-3].node);
				}
#line 41693 "gram.cpp"
    break;

  case 1673: /* select_clause: simple_select  */
#line 12123 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 41699 "gram.cpp"
    break;

  case 1674: /* select_clause: select_with_parens  */
#line 12124 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 41705 "gram.cpp"
    break;

  case 1675: /* simple_select: SELECT opt_distinct opt_target_list into_clause from_clause where_clause group_clause having_clause window_clause  */
#line 12154 "gram.y"
                                {
					SelectStmt *n = makeNode(SelectStmt);
					n->distinctClause = (yyvsp[-7].list);
					n->targetList = (yyvsp[-6].list);
					n->intoClause = (yyvsp[-5].into);
					n->fromClause = (yyvsp[-4].list);
					n->whereClause = (yyvsp[-3].node);
					n->groupClause = (yyvsp[-2].list);
					n->havingClause = (yyvsp[-1].node);
					n->windowClause = (yyvsp[0].list);
					(yyval.node) = (Node *)n;
				}
#line 41722 "gram.cpp"
    break;

  case 1676: /* simple_select: values_clause  */
#line 12166 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 41728 "gram.cpp"
    break;

  case 1677: /* simple_select: TABLE relation_expr  */
#line 12168 "gram.y"
                                {
					/* same as SELECT * FROM relation_expr */
					ColumnRef *cr = makeNode(ColumnRef);
					ResTarget *rt = makeNode(ResTarget);
					SelectStmt *n = makeNode(SelectStmt);

					cr->fields = list_make1(makeNode(A_Star));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (Node *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[0].range));
					(yyval.node) = (Node *)n;
				}
#line 41751 "gram.cpp"
    break;

  case 1678: /* simple_select: select_clause UNION opt_all select_clause  */
#line 12187 "gram.y"
                                {
					(yyval.node) = makeSetOp(SETOP_UNION, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 41759 "gram.cpp"
    break;

  case 1679: /* simple_select: select_clause INTERSECT opt_all select_clause  */
#line 12191 "gram.y"
                                {
					(yyval.node) = makeSetOp(SETOP_INTERSECT, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 41767 "gram.cpp"
    break;

  case 1680: /* simple_select: select_clause EXCEPT opt_all select_clause  */
#line 12195 "gram.y"
                                {
					(yyval.node) = makeSetOp(SETOP_EXCEPT, (yyvsp[-1].boolean), (yyvsp[-3].node), (yyvsp[0].node));
				}
#line 41775 "gram.cpp"
    break;

  case 1681: /* with_clause: WITH cte_list  */
#line 12210 "gram.y"
                        {
				(yyval.with) = makeNode(WithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[-1]);
			}
#line 41786 "gram.cpp"
    break;

  case 1682: /* with_clause: WITH RECURSIVE cte_list  */
#line 12217 "gram.y"
                        {
				(yyval.with) = makeNode(WithClause);
				(yyval.with)->ctes = (yyvsp[0].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[-2]);
			}
#line 41797 "gram.cpp"
    break;

  case 1683: /* cte_list: common_table_expr  */
#line 12226 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 41803 "gram.cpp"
    break;

  case 1684: /* cte_list: cte_list ',' common_table_expr  */
#line 12227 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 41809 "gram.cpp"
    break;

  case 1685: /* common_table_expr: name opt_name_list AS '(' PreparableStmt ')'  */
#line 12231 "gram.y"
                        {
				CommonTableExpr *n = makeNode(CommonTableExpr);
				n->ctename = (yyvsp[-5].str);
				n->aliascolnames = (yyvsp[-4].list);
				n->ctequery = (yyvsp[-1].node);
				n->location = (yylsp[-5]);
				(yyval.node) = (Node *) n;
			}
#line 41822 "gram.cpp"
    break;

  case 1686: /* opt_with_clause: with_clause  */
#line 12242 "gram.y"
                                                                                        { (yyval.with) = (yyvsp[0].with); }
#line 41828 "gram.cpp"
    break;

  case 1687: /* opt_with_clause: %empty  */
#line 12243 "gram.y"
                                                                                        { (yyval.with) = NULL; }
#line 41834 "gram.cpp"
    break;

  case 1688: /* into_clause: INTO OptTempTableName  */
#line 12248 "gram.y"
                                {
					(yyval.into) = makeNode(IntoClause);
					(yyval.into)->rel = (yyvsp[0].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = ONCOMMIT_NOOP;
					(yyval.into)->tableSpaceName = NULL;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				}
#line 41849 "gram.cpp"
    break;

  case 1689: /* into_clause: %empty  */
#line 12259 "gram.y"
                                { (yyval.into) = NULL; }
#line 41855 "gram.cpp"
    break;

  case 1690: /* OptTempTableName: TEMPORARY opt_table qualified_name  */
#line 12268 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41864 "gram.cpp"
    break;

  case 1691: /* OptTempTableName: TEMP opt_table qualified_name  */
#line 12273 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41873 "gram.cpp"
    break;

  case 1692: /* OptTempTableName: LOCAL TEMPORARY opt_table qualified_name  */
#line 12278 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41882 "gram.cpp"
    break;

  case 1693: /* OptTempTableName: LOCAL TEMP opt_table qualified_name  */
#line 12283 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41891 "gram.cpp"
    break;

  case 1694: /* OptTempTableName: GLOBAL TEMPORARY opt_table qualified_name  */
#line 12288 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-3])));
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41903 "gram.cpp"
    break;

  case 1695: /* OptTempTableName: GLOBAL TEMP opt_table qualified_name  */
#line 12296 "gram.y"
                                {
					ereport(WARNING,
							errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[-3])));
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
				}
#line 41915 "gram.cpp"
    break;

  case 1696: /* OptTempTableName: UNLOGGED opt_table qualified_name  */
#line 12304 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_UNLOGGED;
				}
#line 41924 "gram.cpp"
    break;

  case 1697: /* OptTempTableName: TABLE qualified_name  */
#line 12309 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				}
#line 41933 "gram.cpp"
    break;

  case 1698: /* OptTempTableName: qualified_name  */
#line 12314 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				}
#line 41942 "gram.cpp"
    break;

  case 1699: /* opt_table: TABLE  */
#line 12320 "gram.y"
                                                                                        {}
#line 41948 "gram.cpp"
    break;

  case 1700: /* opt_table: %empty  */
#line 12321 "gram.y"
                                                                                                {}
#line 41954 "gram.cpp"
    break;

  case 1701: /* opt_all: ALL  */
#line 12324 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 41960 "gram.cpp"
    break;

  case 1702: /* opt_all: DISTINCT  */
#line 12325 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 41966 "gram.cpp"
    break;

  case 1703: /* opt_all: %empty  */
#line 12326 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 41972 "gram.cpp"
    break;

  case 1704: /* opt_distinct: DISTINCT  */
#line 12333 "gram.y"
                                                                                                { (yyval.list) = list_make1(NIL); }
#line 41978 "gram.cpp"
    break;

  case 1705: /* opt_distinct: DISTINCT ON '(' expr_list ')'  */
#line 12334 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 41984 "gram.cpp"
    break;

  case 1706: /* opt_distinct: ALL  */
#line 12335 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 41990 "gram.cpp"
    break;

  case 1707: /* opt_distinct: %empty  */
#line 12336 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 41996 "gram.cpp"
    break;

  case 1708: /* opt_sort_clause: sort_clause  */
#line 12340 "gram.y"
                                                                                                { (yyval.list) = (yyvsp[0].list);}
#line 42002 "gram.cpp"
    break;

  case 1709: /* opt_sort_clause: %empty  */
#line 12341 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42008 "gram.cpp"
    break;

  case 1710: /* sort_clause: ORDER BY sortby_list  */
#line 12345 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42014 "gram.cpp"
    break;

  case 1711: /* sortby_list: sortby  */
#line 12349 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].sortby)); }
#line 42020 "gram.cpp"
    break;

  case 1712: /* sortby_list: sortby_list ',' sortby  */
#line 12350 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].sortby)); }
#line 42026 "gram.cpp"
    break;

  case 1713: /* sortby: a_expr USING qual_all_Op opt_nulls_order  */
#line 12354 "gram.y"
                                {
					(yyval.sortby) = makeNode(SortBy);
					(yyval.sortby)->node = (yyvsp[-3].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = static_cast<SortByNulls>((yyvsp[0].ival));
					(yyval.sortby)->useOp = (yyvsp[-1].list);
					(yyval.sortby)->location = (yylsp[-1]);
				}
#line 42039 "gram.cpp"
    break;

  case 1714: /* sortby: a_expr opt_asc_desc opt_nulls_order  */
#line 12363 "gram.y"
                                {
					(yyval.sortby) = makeNode(SortBy);
					(yyval.sortby)->node = (yyvsp[-2].node);
					(yyval.sortby)->sortby_dir = static_cast<SortByDir>((yyvsp[-1].ival));
					(yyval.sortby)->sortby_nulls = static_cast<SortByNulls>((yyvsp[0].ival));
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				}
#line 42052 "gram.cpp"
    break;

  case 1715: /* select_limit: limit_clause offset_clause  */
#line 12375 "gram.y"
                                                                        { (yyval.list) = list_make2((yyvsp[0].node), (yyvsp[-1].node)); }
#line 42058 "gram.cpp"
    break;

  case 1716: /* select_limit: offset_clause limit_clause  */
#line 12376 "gram.y"
                                                                { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].node)); }
#line 42064 "gram.cpp"
    break;

  case 1717: /* select_limit: limit_clause  */
#line 12377 "gram.y"
                                                                                { (yyval.list) = list_make2(NULL, (yyvsp[0].node)); }
#line 42070 "gram.cpp"
    break;

  case 1718: /* select_limit: offset_clause  */
#line 12378 "gram.y"
                                                                                { (yyval.list) = list_make2((yyvsp[0].node), NULL); }
#line 42076 "gram.cpp"
    break;

  case 1719: /* opt_select_limit: select_limit  */
#line 12382 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42082 "gram.cpp"
    break;

  case 1720: /* opt_select_limit: %empty  */
#line 12383 "gram.y"
                                                                                { (yyval.list) = list_make2(NULL,NULL); }
#line 42088 "gram.cpp"
    break;

  case 1721: /* limit_clause: LIMIT select_limit_value  */
#line 12388 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 42094 "gram.cpp"
    break;

  case 1722: /* limit_clause: LIMIT select_limit_value ',' select_offset_value  */
#line 12390 "gram.y"
                                {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							errcode(ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[-3])));
				}
#line 42107 "gram.cpp"
    break;

  case 1723: /* limit_clause: FETCH first_or_next select_fetch_first_value row_or_rows ONLY  */
#line 12406 "gram.y"
                                { (yyval.node) = (yyvsp[-2].node); }
#line 42113 "gram.cpp"
    break;

  case 1724: /* limit_clause: FETCH first_or_next row_or_rows ONLY  */
#line 12408 "gram.y"
                                { (yyval.node) = makeIntConst(1, -1); }
#line 42119 "gram.cpp"
    break;

  case 1725: /* offset_clause: OFFSET select_offset_value  */
#line 12413 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 42125 "gram.cpp"
    break;

  case 1726: /* offset_clause: OFFSET select_fetch_first_value row_or_rows  */
#line 12416 "gram.y"
                                { (yyval.node) = (yyvsp[-1].node); }
#line 42131 "gram.cpp"
    break;

  case 1727: /* select_limit_value: a_expr  */
#line 12420 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42137 "gram.cpp"
    break;

  case 1728: /* select_limit_value: ALL  */
#line 12422 "gram.y"
                                {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[0]));
				}
#line 42146 "gram.cpp"
    break;

  case 1729: /* select_offset_value: a_expr  */
#line 12429 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42152 "gram.cpp"
    break;

  case 1730: /* select_fetch_first_value: c_expr  */
#line 12449 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42158 "gram.cpp"
    break;

  case 1731: /* select_fetch_first_value: '+' I_or_F_const  */
#line 12451 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 42164 "gram.cpp"
    break;

  case 1732: /* select_fetch_first_value: '-' I_or_F_const  */
#line 12453 "gram.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 42170 "gram.cpp"
    break;

  case 1733: /* I_or_F_const: Iconst  */
#line 12457 "gram.y"
                                                                                                { (yyval.node) = makeIntConst((yyvsp[0].ival),(yylsp[0])); }
#line 42176 "gram.cpp"
    break;

  case 1734: /* I_or_F_const: FCONST  */
#line 12458 "gram.y"
                                                                                                { (yyval.node) = makeFloatConst((yyvsp[0].str),(yylsp[0])); }
#line 42182 "gram.cpp"
    break;

  case 1735: /* row_or_rows: ROW  */
#line 12462 "gram.y"
                                                                                        { (yyval.ival) = 0; }
#line 42188 "gram.cpp"
    break;

  case 1736: /* row_or_rows: ROWS  */
#line 12463 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 42194 "gram.cpp"
    break;

  case 1737: /* first_or_next: FIRST_P  */
#line 12466 "gram.y"
                                                                                { (yyval.ival) = 0; }
#line 42200 "gram.cpp"
    break;

  case 1738: /* first_or_next: NEXT  */
#line 12467 "gram.y"
                                                                                                { (yyval.ival) = 0; }
#line 42206 "gram.cpp"
    break;

  case 1739: /* group_clause: GROUP_P BY group_elem_list  */
#line 12472 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42212 "gram.cpp"
    break;

  case 1740: /* group_clause: %empty  */
#line 12473 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42218 "gram.cpp"
    break;

  case 1741: /* group_elem_list: group_elem  */
#line 12477 "gram.y"
                                                      { (yyval.list) = (yyvsp[0].list); }
#line 42224 "gram.cpp"
    break;

  case 1742: /* group_elem_list: group_elem_list ',' group_elem  */
#line 12478 "gram.y"
                                                        { (yyval.list) = list_concat((yyvsp[-2].list), (yyvsp[0].list)); }
#line 42230 "gram.cpp"
    break;

  case 1743: /* group_elem: a_expr  */
#line 12482 "gram.y"
                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 42236 "gram.cpp"
    break;

  case 1744: /* group_elem: ROLLUP '(' expr_list ')'  */
#line 12484 "gram.y"
                {
					GroupingClause *n = makeNode(GroupingClause);
					n->groupType = GROUPINGTYPE_ROLLUP;
					n->groupsets = (yyvsp[-1].list);
					n->location = (yylsp[-3]);
					(yyval.list) = list_make1 ((Node*)n);
				}
#line 42248 "gram.cpp"
    break;

  case 1745: /* group_elem: CUBE '(' expr_list ')'  */
#line 12492 "gram.y"
                {
					GroupingClause *n = makeNode(GroupingClause);
					n->groupType = GROUPINGTYPE_CUBE;
					n->groupsets = (yyvsp[-1].list);
					n->location = (yylsp[-3]);
					(yyval.list) = list_make1 ((Node*)n);
				}
#line 42260 "gram.cpp"
    break;

  case 1746: /* group_elem: GROUPING SETS '(' group_elem_list ')'  */
#line 12500 "gram.y"
                {
					GroupingClause *n = makeNode(GroupingClause);
					n->groupType = GROUPINGTYPE_GROUPING_SETS;
					n->groupsets = (yyvsp[-1].list);
					n->location = (yylsp[-4]);
					(yyval.list) = list_make1 ((Node*)n);
				}
#line 42272 "gram.cpp"
    break;

  case 1747: /* group_elem: '(' ')'  */
#line 12508 "gram.y"
                { (yyval.list) = list_make1(NIL); }
#line 42278 "gram.cpp"
    break;

  case 1748: /* having_clause: HAVING a_expr  */
#line 12512 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 42284 "gram.cpp"
    break;

  case 1749: /* having_clause: %empty  */
#line 12513 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 42290 "gram.cpp"
    break;

  case 1750: /* for_locking_clause: for_locking_items  */
#line 12517 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42296 "gram.cpp"
    break;

  case 1751: /* for_locking_clause: FOR READ ONLY  */
#line 12518 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42302 "gram.cpp"
    break;

  case 1752: /* opt_for_locking_clause: for_locking_clause  */
#line 12522 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42308 "gram.cpp"
    break;

  case 1753: /* opt_for_locking_clause: %empty  */
#line 12523 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42314 "gram.cpp"
    break;

  case 1754: /* for_locking_items: for_locking_item  */
#line 12527 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 42320 "gram.cpp"
    break;

  case 1755: /* for_locking_items: for_locking_items for_locking_item  */
#line 12528 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 42326 "gram.cpp"
    break;

  case 1756: /* for_locking_item: for_locking_strength locked_rels_list opt_nowait  */
#line 12533 "gram.y"
                                {
					LockingClause *n = makeNode(LockingClause);
					n->lockedRels = (yyvsp[-1].list);
					n->strength = static_cast<LockClauseStrength>((yyvsp[-2].ival));
					n->noWait = (yyvsp[0].boolean);
					(yyval.node) = (Node *) n;
				}
#line 42338 "gram.cpp"
    break;

  case 1757: /* for_locking_strength: FOR UPDATE  */
#line 12543 "gram.y"
                                                                                        { (yyval.ival) = LCS_FORUPDATE; }
#line 42344 "gram.cpp"
    break;

  case 1758: /* for_locking_strength: FOR NO KEY UPDATE  */
#line 12544 "gram.y"
                                                                        { (yyval.ival) = LCS_FORNOKEYUPDATE; }
#line 42350 "gram.cpp"
    break;

  case 1759: /* for_locking_strength: FOR SHARE  */
#line 12545 "gram.y"
                                                                                { (yyval.ival) = LCS_FORSHARE; }
#line 42356 "gram.cpp"
    break;

  case 1760: /* for_locking_strength: FOR KEY SHARE  */
#line 12546 "gram.y"
                                                                                { (yyval.ival) = LCS_FORKEYSHARE; }
#line 42362 "gram.cpp"
    break;

  case 1761: /* locked_rels_list: OF qualified_name_list  */
#line 12550 "gram.y"
                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 42368 "gram.cpp"
    break;

  case 1762: /* locked_rels_list: %empty  */
#line 12551 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42374 "gram.cpp"
    break;

  case 1763: /* values_clause: VALUES ctext_row  */
#line 12557 "gram.y"
                                {
					SelectStmt *n = makeNode(SelectStmt);
					n->valuesLists = list_make1((yyvsp[0].list));
					(yyval.node) = (Node *) n;
				}
#line 42384 "gram.cpp"
    break;

  case 1764: /* values_clause: values_clause ',' ctext_row  */
#line 12563 "gram.y"
                                {
					SelectStmt *n = (SelectStmt *) (yyvsp[-2].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[0].list));
					(yyval.node) = (Node *) n;
				}
#line 42394 "gram.cpp"
    break;

  case 1765: /* from_clause: FROM from_list  */
#line 12580 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42400 "gram.cpp"
    break;

  case 1766: /* from_clause: %empty  */
#line 12581 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42406 "gram.cpp"
    break;

  case 1767: /* from_list: table_ref  */
#line 12585 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 42412 "gram.cpp"
    break;

  case 1768: /* from_list: from_list ',' table_ref  */
#line 12586 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 42418 "gram.cpp"
    break;

  case 1769: /* table_ref: relation_expr opt_alias_clause  */
#line 12593 "gram.y"
                                {
					(yyvsp[-1].range)->alias = (yyvsp[0].alias);
					(yyval.node) = (Node *) (yyvsp[-1].range);
				}
#line 42427 "gram.cpp"
    break;

  case 1770: /* table_ref: func_table func_alias_clause  */
#line 12598 "gram.y"
                                {
					RangeFunction *n = (RangeFunction *) (yyvsp[-1].node);
					n->alias = reinterpret_cast<Alias *>(linitial((yyvsp[0].list)));
					n->coldeflist = reinterpret_cast<List *>(lsecond((yyvsp[0].list)));
					(yyval.node) = (Node *) n;
				}
#line 42438 "gram.cpp"
    break;

  case 1771: /* table_ref: LATERAL_P func_table func_alias_clause  */
#line 12605 "gram.y"
                                {
					RangeFunction *n = (RangeFunction *) (yyvsp[-1].node);
					n->lateral = true;
					n->alias =  reinterpret_cast<Alias *>(linitial((yyvsp[0].list)));
					n->coldeflist = reinterpret_cast<List *>(lsecond((yyvsp[0].list)));
					(yyval.node) = (Node *) n;
				}
#line 42450 "gram.cpp"
    break;

  case 1772: /* table_ref: select_with_parens opt_alias_clause  */
#line 12613 "gram.y"
                                {
					RangeSubselect *n = makeNode(RangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[-1].node);
					n->alias = (yyvsp[0].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[0].alias) == NULL)
					{
						if (IsA((yyvsp[-1].node), SelectStmt) &&
							((SelectStmt *) (yyvsp[-1].node))->valuesLists)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
						else
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
					}
					(yyval.node) = (Node *) n;
				}
#line 42489 "gram.cpp"
    break;

  case 1773: /* table_ref: LATERAL_P select_with_parens opt_alias_clause  */
#line 12648 "gram.y"
                                {
					RangeSubselect *n = makeNode(RangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[-1].node);
					n->alias = (yyvsp[0].alias);
					/* same comment as above */
					if ((yyvsp[0].alias) == NULL)
					{
						if (IsA((yyvsp[-1].node), SelectStmt) &&
							((SelectStmt *) (yyvsp[-1].node))->valuesLists)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
						else
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[-1])));
					}
					(yyval.node) = (Node *) n;
				}
#line 42518 "gram.cpp"
    break;

  case 1774: /* table_ref: joined_table  */
#line 12673 "gram.y"
                                {
					(yyval.node) = (Node *) (yyvsp[0].jexpr);
				}
#line 42526 "gram.cpp"
    break;

  case 1775: /* table_ref: '(' joined_table ')' alias_clause  */
#line 12677 "gram.y"
                                {
					(yyvsp[-2].jexpr)->alias = (yyvsp[0].alias);
					(yyval.node) = (Node *) (yyvsp[-2].jexpr);
				}
#line 42535 "gram.cpp"
    break;

  case 1776: /* joined_table: '(' joined_table ')'  */
#line 12703 "gram.y"
                                {
					(yyval.jexpr) = (yyvsp[-1].jexpr);
				}
#line 42543 "gram.cpp"
    break;

  case 1777: /* joined_table: table_ref CROSS JOIN table_ref  */
#line 12707 "gram.y"
                                {
					/* CROSS JOIN is same as unqualified inner join */
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = JOIN_INNER;
					n->isNatural = FALSE;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				}
#line 42559 "gram.cpp"
    break;

  case 1778: /* joined_table: table_ref join_type JOIN table_ref join_qual  */
#line 12719 "gram.y"
                                {
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = (yyvsp[-3].jtype);
					n->isNatural = FALSE;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), List))
						n->usingClause = (List *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					(yyval.jexpr) = n;
				}
#line 42576 "gram.cpp"
    break;

  case 1779: /* joined_table: table_ref JOIN table_ref join_qual  */
#line 12732 "gram.y"
                                {
					/* letting join_type reduce to empty doesn't work */
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = JOIN_INNER;
					n->isNatural = FALSE;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[-1].node);
					if ((yyvsp[0].node) != NULL && IsA((yyvsp[0].node), List))
						n->usingClause = (List *) (yyvsp[0].node); /* USING clause */
					else
						n->quals = (yyvsp[0].node); /* ON clause */
					(yyval.jexpr) = n;
				}
#line 42594 "gram.cpp"
    break;

  case 1780: /* joined_table: table_ref NATURAL join_type JOIN table_ref  */
#line 12746 "gram.y"
                                {
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = (yyvsp[-2].jtype);
					n->isNatural = TRUE;
					n->larg = (yyvsp[-4].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				}
#line 42609 "gram.cpp"
    break;

  case 1781: /* joined_table: table_ref NATURAL JOIN table_ref  */
#line 12757 "gram.y"
                                {
					/* letting join_type reduce to empty doesn't work */
					JoinExpr *n = makeNode(JoinExpr);
					n->jointype = JOIN_INNER;
					n->isNatural = TRUE;
					n->larg = (yyvsp[-3].node);
					n->rarg = (yyvsp[0].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				}
#line 42625 "gram.cpp"
    break;

  case 1782: /* alias_clause: AS ColId '(' name_list ')'  */
#line 12772 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[-3].str);
					(yyval.alias)->colnames = (yyvsp[-1].list);
				}
#line 42635 "gram.cpp"
    break;

  case 1783: /* alias_clause: AS ColId  */
#line 12778 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[0].str);
				}
#line 42644 "gram.cpp"
    break;

  case 1784: /* alias_clause: ColId '(' name_list ')'  */
#line 12783 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[-3].str);
					(yyval.alias)->colnames = (yyvsp[-1].list);
				}
#line 42654 "gram.cpp"
    break;

  case 1785: /* alias_clause: ColId  */
#line 12789 "gram.y"
                                {
					(yyval.alias) = makeNode(Alias);
					(yyval.alias)->aliasname = (yyvsp[0].str);
				}
#line 42663 "gram.cpp"
    break;

  case 1786: /* opt_alias_clause: alias_clause  */
#line 12795 "gram.y"
                                                                        { (yyval.alias) = (yyvsp[0].alias); }
#line 42669 "gram.cpp"
    break;

  case 1787: /* opt_alias_clause: %empty  */
#line 12796 "gram.y"
                                                                                                { (yyval.alias) = NULL; }
#line 42675 "gram.cpp"
    break;

  case 1788: /* func_alias_clause: alias_clause  */
#line 12805 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[0].alias), NIL);
				}
#line 42683 "gram.cpp"
    break;

  case 1789: /* func_alias_clause: AS '(' TableFuncElementList ')'  */
#line 12809 "gram.y"
                                {
					(yyval.list) = list_make2(NULL, (yyvsp[-1].list));
				}
#line 42691 "gram.cpp"
    break;

  case 1790: /* func_alias_clause: AS ColId '(' TableFuncElementList ')'  */
#line 12813 "gram.y"
                                {
					Alias *a = makeNode(Alias);
					a->aliasname = (yyvsp[-3].str);
					(yyval.list) = list_make2(a, (yyvsp[-1].list));
				}
#line 42701 "gram.cpp"
    break;

  case 1791: /* func_alias_clause: ColId '(' TableFuncElementList ')'  */
#line 12819 "gram.y"
                                {
					Alias *a = makeNode(Alias);
					a->aliasname = (yyvsp[-3].str);
					(yyval.list) = list_make2(a, (yyvsp[-1].list));
				}
#line 42711 "gram.cpp"
    break;

  case 1792: /* func_alias_clause: %empty  */
#line 12825 "gram.y"
                                {
					(yyval.list) = list_make2(NULL, NIL);
				}
#line 42719 "gram.cpp"
    break;

  case 1793: /* join_type: FULL join_outer  */
#line 12830 "gram.y"
                                                                                { (yyval.jtype) = JOIN_FULL; }
#line 42725 "gram.cpp"
    break;

  case 1794: /* join_type: LEFT join_outer  */
#line 12831 "gram.y"
                                                                                        { (yyval.jtype) = JOIN_LEFT; }
#line 42731 "gram.cpp"
    break;

  case 1795: /* join_type: RIGHT join_outer  */
#line 12832 "gram.y"
                                                                                        { (yyval.jtype) = JOIN_RIGHT; }
#line 42737 "gram.cpp"
    break;

  case 1796: /* join_type: INNER_P  */
#line 12833 "gram.y"
                                                                                                { (yyval.jtype) = JOIN_INNER; }
#line 42743 "gram.cpp"
    break;

  case 1797: /* join_outer: OUTER_P  */
#line 12837 "gram.y"
                                                                                        { (yyval.node) = NULL; }
#line 42749 "gram.cpp"
    break;

  case 1798: /* join_outer: %empty  */
#line 12838 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 42755 "gram.cpp"
    break;

  case 1799: /* join_qual: USING '(' name_list ')'  */
#line 12850 "gram.y"
                                                                        { (yyval.node) = (Node *) (yyvsp[-1].list); }
#line 42761 "gram.cpp"
    break;

  case 1800: /* join_qual: ON a_expr  */
#line 12851 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 42767 "gram.cpp"
    break;

  case 1801: /* relation_expr: qualified_name  */
#line 12857 "gram.y"
                                {
					/* default inheritance */
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->inhOpt = INH_DEFAULT;
					(yyval.range)->alias = NULL;
				}
#line 42778 "gram.cpp"
    break;

  case 1802: /* relation_expr: qualified_name '*'  */
#line 12864 "gram.y"
                                {
					/* inheritance query */
					(yyval.range) = (yyvsp[-1].range);
					(yyval.range)->inhOpt = INH_YES;
					(yyval.range)->alias = NULL;
				}
#line 42789 "gram.cpp"
    break;

  case 1803: /* relation_expr: ONLY qualified_name  */
#line 12871 "gram.y"
                                {
					/* no inheritance */
					(yyval.range) = (yyvsp[0].range);
					(yyval.range)->inhOpt = INH_NO;
					(yyval.range)->alias = NULL;
				}
#line 42800 "gram.cpp"
    break;

  case 1804: /* relation_expr: ONLY '(' qualified_name ')'  */
#line 12878 "gram.y"
                                {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[-1].range);
					(yyval.range)->inhOpt = INH_NO;
					(yyval.range)->alias = NULL;
				}
#line 42811 "gram.cpp"
    break;

  case 1805: /* relation_expr_list: relation_expr  */
#line 12888 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].range)); }
#line 42817 "gram.cpp"
    break;

  case 1806: /* relation_expr_list: relation_expr_list ',' relation_expr  */
#line 12889 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
#line 42823 "gram.cpp"
    break;

  case 1807: /* relation_expr_opt_alias: relation_expr  */
#line 12903 "gram.y"
                                {
					(yyval.range) = (yyvsp[0].range);
				}
#line 42831 "gram.cpp"
    break;

  case 1808: /* relation_expr_opt_alias: relation_expr ColId  */
#line 12907 "gram.y"
                                {
					Alias *alias = makeNode(Alias);
					alias->aliasname = (yyvsp[0].str);
					(yyvsp[-1].range)->alias = alias;
					(yyval.range) = (yyvsp[-1].range);
				}
#line 42842 "gram.cpp"
    break;

  case 1809: /* relation_expr_opt_alias: relation_expr AS ColId  */
#line 12914 "gram.y"
                                {
					Alias *alias = makeNode(Alias);
					alias->aliasname = (yyvsp[0].str);
					(yyvsp[-2].range)->alias = alias;
					(yyval.range) = (yyvsp[-2].range);
				}
#line 42853 "gram.cpp"
    break;

  case 1810: /* func_table: func_expr_windowless opt_ordinality  */
#line 12935 "gram.y"
                                {
					RangeFunction *n = makeNode(RangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[0].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[-1].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (Node *) n;
				}
#line 42867 "gram.cpp"
    break;

  case 1811: /* func_table: ROWS FROM '(' rowsfrom_list ')' opt_ordinality  */
#line 12945 "gram.y"
                                {
					RangeFunction *n = makeNode(RangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[0].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[-2].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (Node *) n;
				}
#line 42881 "gram.cpp"
    break;

  case 1812: /* rowsfrom_item: func_expr_windowless opt_col_def_list  */
#line 12957 "gram.y"
                                { (yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].list)); }
#line 42887 "gram.cpp"
    break;

  case 1813: /* rowsfrom_list: rowsfrom_item  */
#line 12961 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].list)); }
#line 42893 "gram.cpp"
    break;

  case 1814: /* rowsfrom_list: rowsfrom_list ',' rowsfrom_item  */
#line 12962 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].list)); }
#line 42899 "gram.cpp"
    break;

  case 1815: /* opt_col_def_list: AS '(' TableFuncElementList ')'  */
#line 12965 "gram.y"
                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 42905 "gram.cpp"
    break;

  case 1816: /* opt_col_def_list: %empty  */
#line 12966 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 42911 "gram.cpp"
    break;

  case 1817: /* opt_ordinality: WITH_ORDINALITY  */
#line 12969 "gram.y"
                                                                        { (yyval.boolean) = true; }
#line 42917 "gram.cpp"
    break;

  case 1818: /* opt_ordinality: %empty  */
#line 12970 "gram.y"
                                                                                                { (yyval.boolean) = false; }
#line 42923 "gram.cpp"
    break;

  case 1819: /* where_clause: WHERE a_expr  */
#line 12975 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 42929 "gram.cpp"
    break;

  case 1820: /* where_clause: %empty  */
#line 12976 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 42935 "gram.cpp"
    break;

  case 1821: /* where_or_current_clause: WHERE a_expr  */
#line 12981 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 42941 "gram.cpp"
    break;

  case 1822: /* where_or_current_clause: WHERE CURRENT_P OF cursor_name  */
#line 12983 "gram.y"
                                {
					CurrentOfExpr *n = makeNode(CurrentOfExpr);
					/* cvarno is filled in by parse analysis */
					n->cursor_name = (yyvsp[0].str);
					n->cursor_param = 0;
					(yyval.node) = (Node *) n;
				}
#line 42953 "gram.cpp"
    break;

  case 1823: /* where_or_current_clause: %empty  */
#line 12990 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 42959 "gram.cpp"
    break;

  case 1824: /* OptTableFuncElementList: TableFuncElementList  */
#line 12995 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 42965 "gram.cpp"
    break;

  case 1825: /* OptTableFuncElementList: %empty  */
#line 12996 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 42971 "gram.cpp"
    break;

  case 1826: /* TableFuncElementList: TableFuncElement  */
#line 13001 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 42979 "gram.cpp"
    break;

  case 1827: /* TableFuncElementList: TableFuncElementList ',' TableFuncElement  */
#line 13005 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 42987 "gram.cpp"
    break;

  case 1828: /* TableFuncElement: ColId Typename opt_collate_clause  */
#line 13011 "gram.y"
                                {
					ColumnDef *n = makeNode(ColumnDef);
					n->colname = (yyvsp[-2].str);
					n->typeName = (yyvsp[-1].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (CollateClause *) (yyvsp[0].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *)n;
				}
#line 43009 "gram.cpp"
    break;

  case 1829: /* Typename: SimpleTypename opt_array_bounds  */
#line 13041 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
				}
#line 43018 "gram.cpp"
    break;

  case 1830: /* Typename: SETOF SimpleTypename opt_array_bounds  */
#line 13046 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[0].list);
					(yyval.typnam)->setof = TRUE;
				}
#line 43028 "gram.cpp"
    break;

  case 1831: /* Typename: SimpleTypename ARRAY '[' Iconst ']'  */
#line 13053 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
				}
#line 43037 "gram.cpp"
    break;

  case 1832: /* Typename: SETOF SimpleTypename ARRAY '[' Iconst ']'  */
#line 13058 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[-1].ival)));
					(yyval.typnam)->setof = TRUE;
				}
#line 43047 "gram.cpp"
    break;

  case 1833: /* Typename: SimpleTypename ARRAY  */
#line 13064 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				}
#line 43056 "gram.cpp"
    break;

  case 1834: /* Typename: SETOF SimpleTypename ARRAY  */
#line 13069 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = TRUE;
				}
#line 43066 "gram.cpp"
    break;

  case 1835: /* NestedTypename: Typename  */
#line 13077 "gram.y"
                                                    { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43072 "gram.cpp"
    break;

  case 1836: /* NestedTypename: Typename '{' nested_type_list '}'  */
#line 13079 "gram.y"
                                {
                    (yyval.typnam) = makeNode(TypeName);
                    (yyval.typnam)->names = NIL; /* indicate nesting */
                    (yyval.typnam)->typmods = lappend(list_make1((yyvsp[-3].typnam)), (yyvsp[-1].list)); /* given types are considered typemods */
                    (yyval.typnam)->typemod = -1;
				}
#line 43083 "gram.cpp"
    break;

  case 1837: /* opt_array_bounds: opt_array_bounds '[' ']'  */
#line 13088 "gram.y"
                                        {  (yyval.list) = lappend((yyvsp[-2].list), makeInteger(-1)); }
#line 43089 "gram.cpp"
    break;

  case 1838: /* opt_array_bounds: opt_array_bounds '[' Iconst ']'  */
#line 13090 "gram.y"
                                        {  (yyval.list) = lappend((yyvsp[-3].list), makeInteger((yyvsp[-1].ival))); }
#line 43095 "gram.cpp"
    break;

  case 1839: /* opt_array_bounds: %empty  */
#line 13092 "gram.y"
                                        {  (yyval.list) = NIL; }
#line 43101 "gram.cpp"
    break;

  case 1840: /* SimpleTypename: GenericType  */
#line 13096 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43107 "gram.cpp"
    break;

  case 1841: /* SimpleTypename: Numeric  */
#line 13097 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43113 "gram.cpp"
    break;

  case 1842: /* SimpleTypename: Bit  */
#line 13098 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43119 "gram.cpp"
    break;

  case 1843: /* SimpleTypename: Character  */
#line 13099 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43125 "gram.cpp"
    break;

  case 1844: /* SimpleTypename: ConstDatetime  */
#line 13100 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43131 "gram.cpp"
    break;

  case 1845: /* SimpleTypename: ConstInterval opt_interval  */
#line 13102 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-1].typnam);
					(yyval.typnam)->typmods = (yyvsp[0].list);
				}
#line 43140 "gram.cpp"
    break;

  case 1846: /* SimpleTypename: ConstInterval '(' Iconst ')' opt_interval  */
#line 13107 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[-4].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						if (list_length((yyvsp[0].list)) != 1)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("interval precision specified twice"),
									 parser_errposition((yylsp[-4])));
						(yyval.typnam)->typmods = lappend((yyvsp[0].list), makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					}
					else
						(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												 makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
				}
#line 43160 "gram.cpp"
    break;

  case 1847: /* ConstTypename: Numeric  */
#line 13136 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43166 "gram.cpp"
    break;

  case 1848: /* ConstTypename: ConstBit  */
#line 13137 "gram.y"
                                                                                                { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43172 "gram.cpp"
    break;

  case 1849: /* ConstTypename: ConstCharacter  */
#line 13138 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43178 "gram.cpp"
    break;

  case 1850: /* ConstTypename: ConstDatetime  */
#line 13139 "gram.y"
                                                                                        { (yyval.typnam) = (yyvsp[0].typnam); }
#line 43184 "gram.cpp"
    break;

  case 1851: /* GenericType: type_function_name opt_type_modifiers  */
#line 13151 "gram.y"
                                {
					(yyval.typnam) = makeTypeName((yyvsp[-1].str));
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43194 "gram.cpp"
    break;

  case 1852: /* GenericType: type_function_name attrs opt_type_modifiers  */
#line 13157 "gram.y"
                                {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[-2].str)), (yyvsp[-1].list)));
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-2]);
				}
#line 43204 "gram.cpp"
    break;

  case 1853: /* opt_type_modifiers: '(' expr_list ')'  */
#line 13164 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 43210 "gram.cpp"
    break;

  case 1854: /* opt_type_modifiers: %empty  */
#line 13165 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 43216 "gram.cpp"
    break;

  case 1855: /* Numeric: INT_P  */
#line 13172 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43225 "gram.cpp"
    break;

  case 1856: /* Numeric: INTEGER  */
#line 13177 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43234 "gram.cpp"
    break;

  case 1857: /* Numeric: SMALLINT  */
#line 13182 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43243 "gram.cpp"
    break;

  case 1858: /* Numeric: BIGINT  */
#line 13187 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("int8_t");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43252 "gram.cpp"
    break;

  case 1859: /* Numeric: REAL  */
#line 13192 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43261 "gram.cpp"
    break;

  case 1860: /* Numeric: FLOAT_P opt_float  */
#line 13197 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43270 "gram.cpp"
    break;

  case 1861: /* Numeric: DOUBLE_P PRECISION  */
#line 13202 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43279 "gram.cpp"
    break;

  case 1862: /* Numeric: DECIMAL_P opt_type_modifiers  */
#line 13207 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43289 "gram.cpp"
    break;

  case 1863: /* Numeric: DEC opt_type_modifiers  */
#line 13213 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43299 "gram.cpp"
    break;

  case 1864: /* Numeric: NUMERIC opt_type_modifiers  */
#line 13219 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[0].list);
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43309 "gram.cpp"
    break;

  case 1865: /* Numeric: BOOLEAN_P  */
#line 13225 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43318 "gram.cpp"
    break;

  case 1866: /* opt_float: '(' Iconst ')'  */
#line 13232 "gram.y"
                                {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[-1].ival) < 1)
						ereport(ERROR,
								errcode(ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[-1])));
					else if ((yyvsp[-1].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[-1].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								errcode(ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[-1])));
				}
#line 43343 "gram.cpp"
    break;

  case 1867: /* opt_float: %empty  */
#line 13253 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("float4");
				}
#line 43351 "gram.cpp"
    break;

  case 1868: /* Bit: BitWithLength  */
#line 13263 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43359 "gram.cpp"
    break;

  case 1869: /* Bit: BitWithoutLength  */
#line 13267 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43367 "gram.cpp"
    break;

  case 1870: /* ConstBit: BitWithLength  */
#line 13275 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43375 "gram.cpp"
    break;

  case 1871: /* ConstBit: BitWithoutLength  */
#line 13279 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->typmods = NIL;
				}
#line 43384 "gram.cpp"
    break;

  case 1872: /* BitWithLength: BIT opt_varying '(' expr_list ')'  */
#line 13287 "gram.y"
                                {
					char *typname;

					typname = (yyvsp[-3].boolean) ? pstrdup("varbit") : pstrdup("bit");
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[-1].list);
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43397 "gram.cpp"
    break;

  case 1873: /* BitWithoutLength: BIT opt_varying  */
#line 13299 "gram.y"
                                {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[0].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43415 "gram.cpp"
    break;

  case 1874: /* Character: CharacterWithLength  */
#line 13320 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43423 "gram.cpp"
    break;

  case 1875: /* Character: CharacterWithoutLength  */
#line 13324 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43431 "gram.cpp"
    break;

  case 1876: /* ConstCharacter: CharacterWithLength  */
#line 13330 "gram.y"
                                {
					(yyval.typnam) = (yyvsp[0].typnam);
				}
#line 43439 "gram.cpp"
    break;

  case 1877: /* ConstCharacter: CharacterWithoutLength  */
#line 13334 "gram.y"
                                {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[0].typnam);
					(yyval.typnam)->typmods = NIL;
				}
#line 43454 "gram.cpp"
    break;

  case 1878: /* CharacterWithLength: character '(' Iconst ')' opt_charset  */
#line 13347 "gram.y"
                                {
					if (((yyvsp[0].str) != NULL) && (strcmp((yyvsp[0].str), "sql_text") != 0))
						(yyvsp[-4].str) = psprintf("%s_%s", (yyvsp[-4].str), (yyvsp[0].str));

					(yyval.typnam) = SystemTypeName((yyvsp[-4].str));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43467 "gram.cpp"
    break;

  case 1879: /* CharacterWithoutLength: character opt_charset  */
#line 13358 "gram.y"
                                {
					if (((yyvsp[0].str) != NULL) && (strcmp((yyvsp[0].str), "sql_text") != 0))
						(yyvsp[-1].str) = psprintf("%s_%s", (yyvsp[-1].str), (yyvsp[0].str));

					(yyval.typnam) = SystemTypeName((yyvsp[-1].str));

					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[-1].str), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));

					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43484 "gram.cpp"
    break;

  case 1880: /* character: CHARACTER opt_varying  */
#line 13373 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43490 "gram.cpp"
    break;

  case 1881: /* character: CHAR_P opt_varying  */
#line 13375 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43496 "gram.cpp"
    break;

  case 1882: /* character: VARCHAR  */
#line 13377 "gram.y"
                                                                                { (yyval.str) = pstrdup("varchar"); }
#line 43502 "gram.cpp"
    break;

  case 1883: /* character: NATIONAL CHARACTER opt_varying  */
#line 13379 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43508 "gram.cpp"
    break;

  case 1884: /* character: NATIONAL CHAR_P opt_varying  */
#line 13381 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43514 "gram.cpp"
    break;

  case 1885: /* character: NCHAR opt_varying  */
#line 13383 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].boolean) ? pstrdup("varchar"): pstrdup("bpchar"); }
#line 43520 "gram.cpp"
    break;

  case 1886: /* opt_varying: VARYING  */
#line 13387 "gram.y"
                                                                                                { (yyval.boolean) = TRUE; }
#line 43526 "gram.cpp"
    break;

  case 1887: /* opt_varying: %empty  */
#line 13388 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 43532 "gram.cpp"
    break;

  case 1888: /* opt_charset: CHARACTER SET ColId  */
#line 13392 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 43538 "gram.cpp"
    break;

  case 1889: /* opt_charset: %empty  */
#line 13393 "gram.y"
                                                                                                { (yyval.str) = NULL; }
#line 43544 "gram.cpp"
    break;

  case 1890: /* ConstDatetime: TIMESTAMP '(' Iconst ')' opt_timezone  */
#line 13401 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43557 "gram.cpp"
    break;

  case 1891: /* ConstDatetime: TIMESTAMP opt_timezone  */
#line 13410 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43569 "gram.cpp"
    break;

  case 1892: /* ConstDatetime: TIME '(' Iconst ')' opt_timezone  */
#line 13418 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[-2].ival), (yylsp[-2])));
					(yyval.typnam)->location = (yylsp[-4]);
				}
#line 43582 "gram.cpp"
    break;

  case 1893: /* ConstDatetime: TIME opt_timezone  */
#line 13427 "gram.y"
                                {
					if ((yyvsp[0].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[-1]);
				}
#line 43594 "gram.cpp"
    break;

  case 1894: /* ConstInterval: INTERVAL  */
#line 13438 "gram.y"
                                {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[0]);
				}
#line 43603 "gram.cpp"
    break;

  case 1895: /* opt_timezone: WITH_TIME ZONE  */
#line 13445 "gram.y"
                                                                                        { (yyval.boolean) = TRUE; }
#line 43609 "gram.cpp"
    break;

  case 1896: /* opt_timezone: WITHOUT TIME ZONE  */
#line 13446 "gram.y"
                                                                                        { (yyval.boolean) = FALSE; }
#line 43615 "gram.cpp"
    break;

  case 1897: /* opt_timezone: %empty  */
#line 13447 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 43621 "gram.cpp"
    break;

  case 1898: /* opt_interval: YEAR_P  */
#line 13452 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[0]))); }
#line 43627 "gram.cpp"
    break;

  case 1899: /* opt_interval: MONTH_P  */
#line 13454 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[0]))); }
#line 43633 "gram.cpp"
    break;

  case 1900: /* opt_interval: DAY_P  */
#line 13456 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[0]))); }
#line 43639 "gram.cpp"
    break;

  case 1901: /* opt_interval: HOUR_P  */
#line 13458 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[0]))); }
#line 43645 "gram.cpp"
    break;

  case 1902: /* opt_interval: MINUTE_P  */
#line 13460 "gram.y"
                                { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[0]))); }
#line 43651 "gram.cpp"
    break;

  case 1903: /* opt_interval: interval_second  */
#line 13462 "gram.y"
                                { (yyval.list) = (yyvsp[0].list); }
#line 43657 "gram.cpp"
    break;

  case 1904: /* opt_interval: YEAR_P TO MONTH_P  */
#line 13464 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[-2])));
				}
#line 43666 "gram.cpp"
    break;

  case 1905: /* opt_interval: DAY_P TO HOUR_P  */
#line 13469 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[-2])));
				}
#line 43675 "gram.cpp"
    break;

  case 1906: /* opt_interval: DAY_P TO MINUTE_P  */
#line 13474 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
				}
#line 43685 "gram.cpp"
    break;

  case 1907: /* opt_interval: DAY_P TO interval_second  */
#line 13480 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[-2]));
				}
#line 43697 "gram.cpp"
    break;

  case 1908: /* opt_interval: HOUR_P TO MINUTE_P  */
#line 13488 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[-2])));
				}
#line 43706 "gram.cpp"
    break;

  case 1909: /* opt_interval: HOUR_P TO interval_second  */
#line 13493 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[-2]));
				}
#line 43717 "gram.cpp"
    break;

  case 1910: /* opt_interval: MINUTE_P TO interval_second  */
#line 13500 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[-2]));
				}
#line 43727 "gram.cpp"
    break;

  case 1911: /* opt_interval: %empty  */
#line 13506 "gram.y"
                                { (yyval.list) = NIL; }
#line 43733 "gram.cpp"
    break;

  case 1912: /* interval_second: SECOND_P  */
#line 13511 "gram.y"
                                {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[0])));
				}
#line 43741 "gram.cpp"
    break;

  case 1913: /* interval_second: SECOND_P '(' Iconst ')'  */
#line 13515 "gram.y"
                                {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[-3])),
									makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
				}
#line 43750 "gram.cpp"
    break;

  case 1914: /* a_expr: c_expr  */
#line 13544 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 43756 "gram.cpp"
    break;

  case 1915: /* a_expr: a_expr TYPECAST Typename  */
#line 13546 "gram.y"
                                        { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); }
#line 43762 "gram.cpp"
    break;

  case 1916: /* a_expr: a_expr COLLATE any_name  */
#line 13548 "gram.y"
                                {
					CollateClause *n = makeNode(CollateClause);
					n->arg = (yyvsp[-2].node);
					n->collname = (yyvsp[0].list);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *) n;
				}
#line 43774 "gram.cpp"
    break;

  case 1917: /* a_expr: a_expr AT TIME ZONE a_expr  */
#line 13556 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[0].node), (yyvsp[-4].node)),
											   (yylsp[-3]));
				}
#line 43784 "gram.cpp"
    break;

  case 1918: /* a_expr: '+' a_expr  */
#line 13571 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 43790 "gram.cpp"
    break;

  case 1919: /* a_expr: '-' a_expr  */
#line 13573 "gram.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 43796 "gram.cpp"
    break;

  case 1920: /* a_expr: a_expr '+' a_expr  */
#line 13575 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43802 "gram.cpp"
    break;

  case 1921: /* a_expr: a_expr '-' a_expr  */
#line 13577 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43808 "gram.cpp"
    break;

  case 1922: /* a_expr: a_expr '*' a_expr  */
#line 13579 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43814 "gram.cpp"
    break;

  case 1923: /* a_expr: a_expr '/' a_expr  */
#line 13581 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43820 "gram.cpp"
    break;

  case 1924: /* a_expr: a_expr '%' a_expr  */
#line 13583 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43826 "gram.cpp"
    break;

  case 1925: /* a_expr: a_expr '^' a_expr  */
#line 13585 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43832 "gram.cpp"
    break;

  case 1926: /* a_expr: a_expr '<' a_expr  */
#line 13587 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43838 "gram.cpp"
    break;

  case 1927: /* a_expr: a_expr '>' a_expr  */
#line 13589 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43844 "gram.cpp"
    break;

  case 1928: /* a_expr: a_expr '=' a_expr  */
#line 13591 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43850 "gram.cpp"
    break;

  case 1929: /* a_expr: a_expr qual_Op a_expr  */
#line 13594 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43856 "gram.cpp"
    break;

  case 1930: /* a_expr: qual_Op a_expr  */
#line 13596 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 43862 "gram.cpp"
    break;

  case 1931: /* a_expr: a_expr qual_Op  */
#line 13598 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[0].list), (yyvsp[-1].node), NULL, (yylsp[0])); }
#line 43868 "gram.cpp"
    break;

  case 1932: /* a_expr: a_expr AND a_expr  */
#line 13601 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43874 "gram.cpp"
    break;

  case 1933: /* a_expr: a_expr OR a_expr  */
#line 13603 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43880 "gram.cpp"
    break;

  case 1934: /* a_expr: NOT a_expr  */
#line 13605 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 43886 "gram.cpp"
    break;

  case 1935: /* a_expr: a_expr LIKE a_expr  */
#line 13608 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43892 "gram.cpp"
    break;

  case 1936: /* a_expr: a_expr LIKE a_expr ESCAPE a_expr  */
#line 13610 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-3]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
				}
#line 43903 "gram.cpp"
    break;

  case 1937: /* a_expr: a_expr NOT LIKE a_expr  */
#line 13617 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2])); }
#line 43909 "gram.cpp"
    break;

  case 1938: /* a_expr: a_expr NOT LIKE a_expr ESCAPE a_expr  */
#line 13619 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
				}
#line 43920 "gram.cpp"
    break;

  case 1939: /* a_expr: a_expr ILIKE a_expr  */
#line 13626 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 43926 "gram.cpp"
    break;

  case 1940: /* a_expr: a_expr ILIKE a_expr ESCAPE a_expr  */
#line 13628 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-3]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
				}
#line 43937 "gram.cpp"
    break;

  case 1941: /* a_expr: a_expr NOT ILIKE a_expr  */
#line 13635 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2])); }
#line 43943 "gram.cpp"
    break;

  case 1942: /* a_expr: a_expr NOT ILIKE a_expr ESCAPE a_expr  */
#line 13637 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
				}
#line 43954 "gram.cpp"
    break;

  case 1943: /* a_expr: a_expr SIMILAR TO a_expr  */
#line 13645 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[0].node), makeNullAConst(-1)),
											   (yylsp[-2]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[-3].node), (Node *) n, (yylsp[-2]));
				}
#line 43965 "gram.cpp"
    break;

  case 1944: /* a_expr: a_expr SIMILAR TO a_expr ESCAPE a_expr  */
#line 13652 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-4]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[-5].node), (Node *) n, (yylsp[-4]));
				}
#line 43976 "gram.cpp"
    break;

  case 1945: /* a_expr: a_expr NOT SIMILAR TO a_expr  */
#line 13659 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[0].node), makeNullAConst(-1)),
											   (yylsp[-3]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[-4].node), (Node *) n, (yylsp[-3]));
				}
#line 43987 "gram.cpp"
    break;

  case 1946: /* a_expr: a_expr NOT SIMILAR TO a_expr ESCAPE a_expr  */
#line 13666 "gram.y"
                                {
					FuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[-2].node), (yyvsp[0].node)),
											   (yylsp[-5]));
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[-6].node), (Node *) n, (yylsp[-5]));
				}
#line 43998 "gram.cpp"
    break;

  case 1947: /* a_expr: a_expr IS NULL_P  */
#line 13683 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-2].node);
					n->nulltesttype = IS_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44009 "gram.cpp"
    break;

  case 1948: /* a_expr: a_expr ISNULL  */
#line 13690 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-1].node);
					n->nulltesttype = IS_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44020 "gram.cpp"
    break;

  case 1949: /* a_expr: a_expr IS NOT NULL_P  */
#line 13697 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-3].node);
					n->nulltesttype = IS_NOT_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44031 "gram.cpp"
    break;

  case 1950: /* a_expr: a_expr NOTNULL  */
#line 13704 "gram.y"
                                {
					NullTest *n = makeNode(NullTest);
					n->arg = (Expr *) (yyvsp[-1].node);
					n->nulltesttype = IS_NOT_NULL;
					(yyval.node) = (Node *)n;
				}
#line 44042 "gram.cpp"
    break;

  case 1951: /* a_expr: row OVERLAPS row  */
#line 13711 "gram.y"
                                {
					if (list_length((yyvsp[-2].list)) != 2)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[-2])));
					if (list_length((yyvsp[0].list)) != 2)
						ereport(ERROR,
								errcode(ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[0])));
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[-2].list), (yyvsp[0].list)),
											   (yylsp[-1]));
				}
#line 44062 "gram.cpp"
    break;

  case 1952: /* a_expr: a_expr IS TRUE_P  */
#line 13727 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-2].node);
					b->booltesttype = IS_TRUE;
					(yyval.node) = (Node *)b;
				}
#line 44073 "gram.cpp"
    break;

  case 1953: /* a_expr: a_expr IS NOT TRUE_P  */
#line 13734 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_TRUE;
					(yyval.node) = (Node *)b;
				}
#line 44084 "gram.cpp"
    break;

  case 1954: /* a_expr: a_expr IS FALSE_P  */
#line 13741 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-2].node);
					b->booltesttype = IS_FALSE;
					(yyval.node) = (Node *)b;
				}
#line 44095 "gram.cpp"
    break;

  case 1955: /* a_expr: a_expr IS NOT FALSE_P  */
#line 13748 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_FALSE;
					(yyval.node) = (Node *)b;
				}
#line 44106 "gram.cpp"
    break;

  case 1956: /* a_expr: a_expr IS UNKNOWN  */
#line 13755 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-2].node);
					b->booltesttype = IS_UNKNOWN;
					(yyval.node) = (Node *)b;
				}
#line 44117 "gram.cpp"
    break;

  case 1957: /* a_expr: a_expr IS NOT UNKNOWN  */
#line 13762 "gram.y"
                                {
					BooleanTest *b = makeNode(BooleanTest);
					b->arg = (Expr *) (yyvsp[-3].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					(yyval.node) = (Node *)b;
				}
#line 44128 "gram.cpp"
    break;

  case 1958: /* a_expr: a_expr IS DISTINCT FROM a_expr  */
#line 13769 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
				}
#line 44136 "gram.cpp"
    break;

  case 1959: /* a_expr: a_expr IS NOT DISTINCT FROM a_expr  */
#line 13773 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
									(Node *) makeSimpleA_Expr(AEXPR_DISTINCT,
															  "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
											 (yylsp[-4]));

				}
#line 44148 "gram.cpp"
    break;

  case 1960: /* a_expr: a_expr IS OF '(' type_list ')'  */
#line 13781 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[-5].node), (Node *) (yyvsp[-1].list), (yylsp[-4]));
				}
#line 44156 "gram.cpp"
    break;

  case 1961: /* a_expr: a_expr IS NOT OF '(' type_list ')'  */
#line 13785 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[-6].node), (Node *) (yyvsp[-1].list), (yylsp[-5]));
				}
#line 44164 "gram.cpp"
    break;

  case 1962: /* a_expr: a_expr BETWEEN opt_asymmetric b_expr AND b_expr  */
#line 13795 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
						(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-5].node), (yyvsp[-2].node), (yylsp[-4])),
						(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
											 (yylsp[-4]));
				}
#line 44175 "gram.cpp"
    break;

  case 1963: /* a_expr: a_expr NOT BETWEEN opt_asymmetric b_expr AND b_expr  */
#line 13802 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
						(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-6].node), (yyvsp[-2].node), (yylsp[-5])),
						(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-6].node), (yyvsp[0].node), (yylsp[-5])),
											 (yylsp[-5]));
				}
#line 44186 "gram.cpp"
    break;

  case 1964: /* a_expr: a_expr BETWEEN SYMMETRIC b_expr AND b_expr  */
#line 13809 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
						(Node *) makeA_Expr(AEXPR_AND, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-5].node), (yyvsp[-2].node), (yylsp[-4])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
											(yylsp[-4])),
						(Node *) makeA_Expr(AEXPR_AND, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[-5].node), (yyvsp[-2].node), (yylsp[-4])),
											(yylsp[-4])),
											 (yylsp[-4]));
				}
#line 44203 "gram.cpp"
    break;

  case 1965: /* a_expr: a_expr NOT BETWEEN SYMMETRIC b_expr AND b_expr  */
#line 13822 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
						(Node *) makeA_Expr(AEXPR_OR, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-6].node), (yyvsp[-2].node), (yylsp[-5])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-6].node), (yyvsp[0].node), (yylsp[-5])),
											(yylsp[-5])),
						(Node *) makeA_Expr(AEXPR_OR, NIL,
							(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-6].node), (yyvsp[0].node), (yylsp[-5])),
							(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-6].node), (yyvsp[-2].node), (yylsp[-5])),
											(yylsp[-5])),
											 (yylsp[-5]));
				}
#line 44220 "gram.cpp"
    break;

  case 1966: /* a_expr: a_expr IN_P in_expr  */
#line 13835 "gram.y"
                                {
					/* in_expr returns a SubLink or a list of a_exprs */
					if (IsA((yyvsp[0].node), SubLink))
					{
						/* generate foo = ANY (subquery) */
						SubLink *n = (SubLink *) (yyvsp[0].node);
						n->subLinkType = ANY_SUBLINK;
						n->testexpr = (yyvsp[-2].node);
						n->operName = list_make1(makeString("="));
						n->location = (yylsp[-1]);
						(yyval.node) = (Node *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1]));
					}
				}
#line 44243 "gram.cpp"
    break;

  case 1967: /* a_expr: a_expr NOT IN_P in_expr  */
#line 13854 "gram.y"
                                {
					/* in_expr returns a SubLink or a list of a_exprs */
					if (IsA((yyvsp[0].node), SubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						SubLink *n = (SubLink *) (yyvsp[0].node);
						n->subLinkType = ANY_SUBLINK;
						n->testexpr = (yyvsp[-3].node);
						n->operName = list_make1(makeString("="));
						n->location = (yylsp[-1]);
						/* Stick a NOT on top */
						(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (Node *) n, (yylsp[-2]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "<>", (yyvsp[-3].node), (yyvsp[0].node), (yylsp[-2]));
					}
				}
#line 44268 "gram.cpp"
    break;

  case 1968: /* a_expr: a_expr subquery_Op sub_type select_with_parens  */
#line 13875 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = static_cast<SubLinkType>((yyvsp[-1].ival));
					n->testexpr = (yyvsp[-3].node);
					n->operName = (yyvsp[-2].list);
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-2]);
					(yyval.node) = (Node *)n;
				}
#line 44282 "gram.cpp"
    break;

  case 1969: /* a_expr: a_expr subquery_Op sub_type '(' a_expr ')'  */
#line 13885 "gram.y"
                                {
					if ((yyvsp[-3].ival) == ANY_SUBLINK)
						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ANY, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
					else
						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ALL, (yyvsp[-4].list), (yyvsp[-5].node), (yyvsp[-1].node), (yylsp[-4]));
				}
#line 44293 "gram.cpp"
    break;

  case 1970: /* a_expr: UNIQUE select_with_parens  */
#line 13892 "gram.y"
                                {
					/* Not sure how to get rid of the parentheses
					 * but there are lots of shift/reduce errors without them.
					 *
					 * Should be able to implement this by plopping the entire
					 * select into a node, then transforming the target expressions
					 * from whatever they are into count(*), and testing the
					 * entire result equal to one.
					 * But, will probably implement a separate node in the executor.
					 */
					ereport(ERROR,
							errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
							 errmsg("UNIQUE predicate is not yet implemented"),
							 parser_errposition((yylsp[-1])));
				}
#line 44313 "gram.cpp"
    break;

  case 1971: /* a_expr: a_expr IS DOCUMENT_P  */
#line 13908 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
									 list_make1((yyvsp[-2].node)), (yylsp[-1]));
				}
#line 44322 "gram.cpp"
    break;

  case 1972: /* a_expr: a_expr IS NOT DOCUMENT_P  */
#line 13913 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
														 list_make1((yyvsp[-3].node)), (yylsp[-2])),
											 (yylsp[-2]));
				}
#line 44333 "gram.cpp"
    break;

  case 1973: /* b_expr: c_expr  */
#line 13931 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44339 "gram.cpp"
    break;

  case 1974: /* b_expr: b_expr TYPECAST Typename  */
#line 13933 "gram.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-2].node), (yyvsp[0].typnam), (yylsp[-1])); }
#line 44345 "gram.cpp"
    break;

  case 1975: /* b_expr: '+' b_expr  */
#line 13935 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 44351 "gram.cpp"
    break;

  case 1976: /* b_expr: '-' b_expr  */
#line 13937 "gram.y"
                                { (yyval.node) = doNegate((yyvsp[0].node), (yylsp[-1])); }
#line 44357 "gram.cpp"
    break;

  case 1977: /* b_expr: b_expr '+' b_expr  */
#line 13939 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44363 "gram.cpp"
    break;

  case 1978: /* b_expr: b_expr '-' b_expr  */
#line 13941 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44369 "gram.cpp"
    break;

  case 1979: /* b_expr: b_expr '*' b_expr  */
#line 13943 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44375 "gram.cpp"
    break;

  case 1980: /* b_expr: b_expr '/' b_expr  */
#line 13945 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44381 "gram.cpp"
    break;

  case 1981: /* b_expr: b_expr '%' b_expr  */
#line 13947 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44387 "gram.cpp"
    break;

  case 1982: /* b_expr: b_expr '^' b_expr  */
#line 13949 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44393 "gram.cpp"
    break;

  case 1983: /* b_expr: b_expr '<' b_expr  */
#line 13951 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44399 "gram.cpp"
    break;

  case 1984: /* b_expr: b_expr '>' b_expr  */
#line 13953 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44405 "gram.cpp"
    break;

  case 1985: /* b_expr: b_expr '=' b_expr  */
#line 13955 "gram.y"
                                { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44411 "gram.cpp"
    break;

  case 1986: /* b_expr: b_expr qual_Op b_expr  */
#line 13957 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), (yyvsp[-2].node), (yyvsp[0].node), (yylsp[-1])); }
#line 44417 "gram.cpp"
    break;

  case 1987: /* b_expr: qual_Op b_expr  */
#line 13959 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[-1].list), NULL, (yyvsp[0].node), (yylsp[-1])); }
#line 44423 "gram.cpp"
    break;

  case 1988: /* b_expr: b_expr qual_Op  */
#line 13961 "gram.y"
                                { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[0].list), (yyvsp[-1].node), NULL, (yylsp[0])); }
#line 44429 "gram.cpp"
    break;

  case 1989: /* b_expr: b_expr IS DISTINCT FROM b_expr  */
#line 13963 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-4].node), (yyvsp[0].node), (yylsp[-3]));
				}
#line 44437 "gram.cpp"
    break;

  case 1990: /* b_expr: b_expr IS NOT DISTINCT FROM b_expr  */
#line 13967 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL,
						NULL, (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[-5].node), (yyvsp[0].node), (yylsp[-4])), (yylsp[-4]));
				}
#line 44446 "gram.cpp"
    break;

  case 1991: /* b_expr: b_expr IS OF '(' type_list ')'  */
#line 13972 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[-5].node), (Node *) (yyvsp[-1].list), (yylsp[-4]));
				}
#line 44454 "gram.cpp"
    break;

  case 1992: /* b_expr: b_expr IS NOT OF '(' type_list ')'  */
#line 13976 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[-6].node), (Node *) (yyvsp[-1].list), (yylsp[-5]));
				}
#line 44462 "gram.cpp"
    break;

  case 1993: /* b_expr: b_expr IS DOCUMENT_P  */
#line 13980 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
									 list_make1((yyvsp[-2].node)), (yylsp[-1]));
				}
#line 44471 "gram.cpp"
    break;

  case 1994: /* b_expr: b_expr IS NOT DOCUMENT_P  */
#line 13985 "gram.y"
                                {
					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
														 list_make1((yyvsp[-3].node)), (yylsp[-2])),
											 (yylsp[-2]));
				}
#line 44482 "gram.cpp"
    break;

  case 1995: /* c_expr: columnref  */
#line 14001 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 44488 "gram.cpp"
    break;

  case 1996: /* c_expr: AexprConst  */
#line 14002 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 44494 "gram.cpp"
    break;

  case 1997: /* c_expr: PARAM opt_indirection  */
#line 14004 "gram.y"
                                {
					ParamRef *p = makeNode(ParamRef);
					p->number = (yyvsp[-1].ival);
					p->location = (yylsp[-1]);
					if ((yyvsp[0].list))
					{
						A_Indirection *n = makeNode(A_Indirection);
						n->arg = (Node *) p;
						n->indirection = check_indirection((yyvsp[0].list), yyscanner);
						(yyval.node) = (Node *) n;
					}
					else
						(yyval.node) = (Node *) p;
				}
#line 44513 "gram.cpp"
    break;

  case 1998: /* c_expr: '(' a_expr ')' opt_indirection  */
#line 14019 "gram.y"
                                {
					if ((yyvsp[0].list))
					{
						A_Indirection *n = makeNode(A_Indirection);
						n->arg = (yyvsp[-2].node);
						n->indirection = check_indirection((yyvsp[0].list), yyscanner);
						(yyval.node) = (Node *)n;
					}
					else
						(yyval.node) = (yyvsp[-2].node);
				}
#line 44529 "gram.cpp"
    break;

  case 1999: /* c_expr: case_expr  */
#line 14031 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44535 "gram.cpp"
    break;

  case 2000: /* c_expr: func_expr  */
#line 14033 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44541 "gram.cpp"
    break;

  case 2001: /* c_expr: decode_expr  */
#line 14035 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44547 "gram.cpp"
    break;

  case 2002: /* c_expr: select_with_parens  */
#line 14037 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = EXPR_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[0]);
					(yyval.node) = (Node *)n;
				}
#line 44561 "gram.cpp"
    break;

  case 2003: /* c_expr: select_with_parens indirection  */
#line 14047 "gram.y"
                                {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					SubLink *n = makeNode(SubLink);
					A_Indirection *a = makeNode(A_Indirection);
					n->subLinkType = EXPR_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[-1].node);
					n->location = (yylsp[-1]);
					a->arg = (Node *)n;
					a->indirection = check_indirection((yyvsp[0].list), yyscanner);
					(yyval.node) = (Node *)a;
				}
#line 44588 "gram.cpp"
    break;

  case 2004: /* c_expr: EXISTS select_with_parens  */
#line 14070 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = EXISTS_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 44602 "gram.cpp"
    break;

  case 2005: /* c_expr: ARRAY select_with_parens  */
#line 14080 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subLinkType = ARRAY_SUBLINK;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[0].node);
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 44616 "gram.cpp"
    break;

  case 2006: /* c_expr: ARRAY array_expr  */
#line 14090 "gram.y"
                                {
					A_ArrayExpr *n = (A_ArrayExpr *) (yyvsp[0].node);
					Assert(IsA(n, A_ArrayExpr));
					/* point outermost A_ArrayExpr to the ARRAY keyword */
					n->location = (yylsp[-1]);
					(yyval.node) = (Node *)n;
				}
#line 44628 "gram.cpp"
    break;

  case 2007: /* c_expr: TABLE '(' table_value_select_clause ')'  */
#line 14098 "gram.y"
                                {
					TableValueExpr *n = makeNode(TableValueExpr);
					n->subquery = (yyvsp[-1].node);
					n->location = (yylsp[-3]);
					(yyval.node) = (Node *)n;
				}
#line 44639 "gram.cpp"
    break;

  case 2008: /* c_expr: row  */
#line 14105 "gram.y"
                                {
					RowExpr *r = makeNode(RowExpr);
					r->args = (yyvsp[0].list);
					r->row_typeid = InvalidOid;	/* not analyzed yet */
					r->colnames = NIL;	/* to be filled in during analysis */
					r->location = (yylsp[0]);
					(yyval.node) = (Node *)r;
				}
#line 44652 "gram.cpp"
    break;

  case 2009: /* scatter_clause: %empty  */
#line 14116 "gram.y"
                                                                        { (yyval.list) = NIL; }
#line 44658 "gram.cpp"
    break;

  case 2010: /* scatter_clause: SCATTER RANDOMLY  */
#line 14117 "gram.y"
                                                                { (yyval.list) = list_make1(NULL); }
#line 44664 "gram.cpp"
    break;

  case 2011: /* scatter_clause: SCATTER BY expr_list  */
#line 14118 "gram.y"
                                                        { (yyval.list) = (yyvsp[0].list); }
#line 44670 "gram.cpp"
    break;

  case 2012: /* table_value_select_clause: SelectStmt scatter_clause  */
#line 14123 "gram.y"
                {
			SelectStmt	*s	 = (SelectStmt *) (yyvsp[-1].node);
			s->scatterClause = (yyvsp[0].list);
			(yyval.node) = (Node *) s;
		}
#line 44680 "gram.cpp"
    break;

  case 2013: /* func_application: func_name '(' ')'  */
#line 14131 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall((yyvsp[-2].list), NIL, (yylsp[-2]));
				}
#line 44688 "gram.cpp"
    break;

  case 2014: /* func_application: func_name '(' func_arg_list opt_sort_clause ')'  */
#line 14135 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-4].list), (yyvsp[-2].list), (yylsp[-4]));
					n->agg_order = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 44698 "gram.cpp"
    break;

  case 2015: /* func_application: func_name '(' VARIADIC func_arg_expr opt_sort_clause ')'  */
#line 14141 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-5].list), list_make1((yyvsp[-2].node)), (yylsp[-5]));
					n->func_variadic = TRUE;
					n->agg_order = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 44709 "gram.cpp"
    break;

  case 2016: /* func_application: func_name '(' func_arg_list ',' VARIADIC func_arg_expr opt_sort_clause ')'  */
#line 14148 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-7].list), lappend((yyvsp[-5].list), (yyvsp[-2].node)), (yylsp[-7]));
					n->func_variadic = TRUE;
					n->agg_order = (yyvsp[-1].list);
					(yyval.node) = (Node *)n;
				}
#line 44720 "gram.cpp"
    break;

  case 2017: /* func_application: func_name '(' ALL func_arg_list opt_sort_clause ')'  */
#line 14155 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-5].list), (yyvsp[-2].list), (yylsp[-5]));
					n->agg_order = (yyvsp[-1].list);
					/* Ideally we'd mark the FuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in FuncCall at the moment.
					 */
					n->func_variadic = FALSE;
					n->location = (yylsp[-5]);
					n->over = NULL;
					(yyval.node) = (Node *)n;
				}
#line 44737 "gram.cpp"
    break;

  case 2018: /* func_application: func_name '(' DISTINCT func_arg_list opt_sort_clause ')'  */
#line 14168 "gram.y"
                                {
					FuncCall *n = makeFuncCall((yyvsp[-5].list), (yyvsp[-2].list), (yylsp[-5]));
					n->agg_order = (yyvsp[-1].list);
					n->agg_distinct = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 44748 "gram.cpp"
    break;

  case 2019: /* func_application: func_name '(' '*' ')'  */
#line 14175 "gram.y"
                                {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The FuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					FuncCall *n = makeFuncCall((yyvsp[-3].list), NIL, (yylsp[-3]));
					n->agg_star = TRUE;
					(yyval.node) = (Node *)n;
				}
#line 44768 "gram.cpp"
    break;

  case 2020: /* func_expr: func_application within_group_clause filter_clause over_clause  */
#line 14203 "gram.y"
                                {
					FuncCall *n = (FuncCall *) (yyvsp[-3].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[-2].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[-2])));
						if (n->agg_distinct)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[-2])));
						if (n->func_variadic)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[-2])));
						n->agg_order = (yyvsp[-2].list);
						n->agg_within_group = TRUE;
					}
					n->agg_filter = (yyvsp[-1].node);
					n->over = (yyvsp[0].windef);
					(yyval.node) = (Node *) n;
				}
#line 44807 "gram.cpp"
    break;

  case 2021: /* func_expr: func_expr_common_subexpr  */
#line 14238 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 44813 "gram.cpp"
    break;

  case 2022: /* func_expr_windowless: func_application  */
#line 14248 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 44819 "gram.cpp"
    break;

  case 2023: /* func_expr_windowless: func_expr_common_subexpr  */
#line 14249 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 44825 "gram.cpp"
    break;

  case 2024: /* func_expr_common_subexpr: COLLATION FOR '(' a_expr ')'  */
#line 14257 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[-1].node)),
											   (yylsp[-4]));
				}
#line 44835 "gram.cpp"
    break;

  case 2025: /* func_expr_common_subexpr: CURRENT_DATE  */
#line 14263 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::date".
					 *
					 * We cannot use "'now'::date" because coerce_type() will
					 * immediately reduce that to a constant representing
					 * today's date.  We need to delay the conversion until
					 * runtime, else the wrong things will happen when
					 * CURRENT_DATE is used in a column default value or rule.
					 *
					 * This could be simplified if we had a way to generate
					 * an expression tree representing runtime application
					 * of type-input conversion functions.  (As of PG 7.3
					 * that is actually possible, but not clear that we want
					 * to rely on it.)
					 *
					 * The token location is attached to the run-time
					 * typecast, not to the Const, for the convenience of
					 * pg_stat_statements (which doesn't want these constructs
					 * to appear to be replaceable constants).
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast(n, SystemTypeName("date"), (yylsp[0]));
				}
#line 44865 "gram.cpp"
    break;

  case 2026: /* func_expr_common_subexpr: CURRENT_TIME  */
#line 14289 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timetz".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast(n, SystemTypeName("timetz"), (yylsp[0]));
				}
#line 44879 "gram.cpp"
    break;

  case 2027: /* func_expr_common_subexpr: CURRENT_TIME '(' Iconst ')'  */
#line 14299 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timetz(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("timetz");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast(n, d, (yylsp[-3]));
				}
#line 44896 "gram.cpp"
    break;

  case 2028: /* func_expr_common_subexpr: CURRENT_TIMESTAMP  */
#line 14312 "gram.y"
                                {
					/*
					 * Translate as "now()", since we have a function that
					 * does exactly what is needed.
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("now"), NIL, (yylsp[0]));
				}
#line 44908 "gram.cpp"
    break;

  case 2029: /* func_expr_common_subexpr: CURRENT_TIMESTAMP '(' Iconst ')'  */
#line 14320 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timestamptz(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("timestamptz");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast(n, d, (yylsp[-3]));
				}
#line 44925 "gram.cpp"
    break;

  case 2030: /* func_expr_common_subexpr: LOCALTIME  */
#line 14333 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::time".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast((Node *)n, SystemTypeName("time"), (yylsp[0]));
				}
#line 44939 "gram.cpp"
    break;

  case 2031: /* func_expr_common_subexpr: LOCALTIME '(' Iconst ')'  */
#line 14343 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::time(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("time");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast((Node *)n, d, (yylsp[-3]));
				}
#line 44956 "gram.cpp"
    break;

  case 2032: /* func_expr_common_subexpr: LOCALTIMESTAMP  */
#line 14356 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timestamp".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					(yyval.node) = makeTypeCast(n, SystemTypeName("timestamp"), (yylsp[0]));
				}
#line 44970 "gram.cpp"
    break;

  case 2033: /* func_expr_common_subexpr: LOCALTIMESTAMP '(' Iconst ')'  */
#line 14366 "gram.y"
                                {
					/*
					 * Translate as "'now'::text::timestamp(n)".
					 * See comments for CURRENT_DATE.
					 */
					Node *n;
					TypeName *d;
					n = makeStringConstCast("now", -1, SystemTypeName("text"));
					d = SystemTypeName("timestamp");
					d->typmods = list_make1(makeIntConst((yyvsp[-1].ival), (yylsp[-1])));
					(yyval.node) = makeTypeCast(n, d, (yylsp[-3]));
				}
#line 44987 "gram.cpp"
    break;

  case 2034: /* func_expr_common_subexpr: CURRENT_ROLE  */
#line 14379 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_user"), NIL, (yylsp[0]));
				}
#line 44995 "gram.cpp"
    break;

  case 2035: /* func_expr_common_subexpr: CURRENT_USER  */
#line 14383 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_user"), NIL, (yylsp[0]));
				}
#line 45003 "gram.cpp"
    break;

  case 2036: /* func_expr_common_subexpr: SESSION_USER  */
#line 14387 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("session_user"), NIL, (yylsp[0]));
				}
#line 45011 "gram.cpp"
    break;

  case 2037: /* func_expr_common_subexpr: USER  */
#line 14391 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_user"), NIL, (yylsp[0]));
				}
#line 45019 "gram.cpp"
    break;

  case 2038: /* func_expr_common_subexpr: CURRENT_CATALOG  */
#line 14395 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_database"), NIL, (yylsp[0]));
				}
#line 45027 "gram.cpp"
    break;

  case 2039: /* func_expr_common_subexpr: CURRENT_SCHEMA  */
#line 14399 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("current_schema"), NIL, (yylsp[0]));
				}
#line 45035 "gram.cpp"
    break;

  case 2040: /* func_expr_common_subexpr: CAST '(' a_expr AS Typename ')'  */
#line 14403 "gram.y"
                                { (yyval.node) = makeTypeCast((yyvsp[-3].node), (yyvsp[-1].typnam), (yylsp[-5])); }
#line 45041 "gram.cpp"
    break;

  case 2041: /* func_expr_common_subexpr: EXTRACT '(' extract_list ')'  */
#line 14405 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45049 "gram.cpp"
    break;

  case 2042: /* func_expr_common_subexpr: OVERLAY '(' overlay_list ')'  */
#line 14409 "gram.y"
                                {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45062 "gram.cpp"
    break;

  case 2043: /* func_expr_common_subexpr: POSITION '(' position_list ')'  */
#line 14418 "gram.y"
                                {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("position"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45071 "gram.cpp"
    break;

  case 2044: /* func_expr_common_subexpr: SUBSTRING '(' substr_list ')'  */
#line 14423 "gram.y"
                                {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("substring"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45082 "gram.cpp"
    break;

  case 2045: /* func_expr_common_subexpr: TREAT '(' a_expr AS Typename ')'  */
#line 14430 "gram.y"
                                {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName(((Value *)llast((yyvsp[-1].typnam)->names))->val.str),
												list_make1((yyvsp[-3].node)),
												(yylsp[-5]));
				}
#line 45101 "gram.cpp"
    break;

  case 2046: /* func_expr_common_subexpr: TRIM '(' BOTH trim_list ')'  */
#line 14445 "gram.y"
                                {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 45112 "gram.cpp"
    break;

  case 2047: /* func_expr_common_subexpr: TRIM '(' LEADING trim_list ')'  */
#line 14452 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 45120 "gram.cpp"
    break;

  case 2048: /* func_expr_common_subexpr: TRIM '(' TRAILING trim_list ')'  */
#line 14456 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[-1].list), (yylsp[-4]));
				}
#line 45128 "gram.cpp"
    break;

  case 2049: /* func_expr_common_subexpr: TRIM '(' trim_list ')'  */
#line 14460 "gram.y"
                                {
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45136 "gram.cpp"
    break;

  case 2050: /* func_expr_common_subexpr: NULLIF '(' a_expr ',' a_expr ')'  */
#line 14464 "gram.y"
                                {
					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NULLIF, "=", (yyvsp[-3].node), (yyvsp[-1].node), (yylsp[-5]));
				}
#line 45144 "gram.cpp"
    break;

  case 2051: /* func_expr_common_subexpr: COALESCE '(' expr_list ')'  */
#line 14468 "gram.y"
                                {
					CoalesceExpr *c = makeNode(CoalesceExpr);
					c->args = (yyvsp[-1].list);
					c->location = (yylsp[-3]);
					(yyval.node) = (Node *)c;
				}
#line 45155 "gram.cpp"
    break;

  case 2052: /* func_expr_common_subexpr: GREATEST '(' expr_list ')'  */
#line 14475 "gram.y"
                                {
					MinMaxExpr *v = makeNode(MinMaxExpr);
					v->args = (yyvsp[-1].list);
					v->op = IS_GREATEST;
					v->location = (yylsp[-3]);
					(yyval.node) = (Node *)v;
				}
#line 45167 "gram.cpp"
    break;

  case 2053: /* func_expr_common_subexpr: LEAST '(' expr_list ')'  */
#line 14483 "gram.y"
                                {
					MinMaxExpr *v = makeNode(MinMaxExpr);
					v->args = (yyvsp[-1].list);
					v->op = IS_LEAST;
					v->location = (yylsp[-3]);
					(yyval.node) = (Node *)v;
				}
#line 45179 "gram.cpp"
    break;

  case 2054: /* func_expr_common_subexpr: GROUPING '(' expr_list ')'  */
#line 14491 "gram.y"
                {
					GroupingFunc *f = makeNode(GroupingFunc);
					f->args = (yyvsp[-1].list);
					(yyval.node) = (Node*)f;
				}
#line 45189 "gram.cpp"
    break;

  case 2055: /* func_expr_common_subexpr: GROUP_ID '(' ')'  */
#line 14498 "gram.y"
                                {
					GroupId *gid = makeNode(GroupId);
					(yyval.node) = (Node *)gid;
				}
#line 45198 "gram.cpp"
    break;

  case 2056: /* func_expr_common_subexpr: MEDIAN '(' a_expr ')'  */
#line 14503 "gram.y"
                                {
					/*
					 * MEDIAN is parsed as an alias to percentile_cont(0.5).
					 * We keep track of original expression to deparse
					 * it later in views, etc.
					 */
					FuncCall   *n;
					SortBy	   *sortby;

					n = makeNode(FuncCall);
					n->funcname = SystemFuncName("median");
					n->args = list_make1(makeAConst(makeFloat(pstrdup("0.5")), (yylsp[-3])));

					sortby = makeNode(SortBy);
					sortby->node = (yyvsp[-1].node);
					sortby->sortby_dir = SORTBY_DEFAULT;
					sortby->sortby_nulls = SORTBY_NULLS_DEFAULT;
					sortby->useOp = NIL;
					sortby->location = -1;		/* no operator */
					n->agg_order = list_make1(sortby);

					n->agg_within_group = TRUE;
					n->agg_filter = NULL;
					n->over = NULL;
					n->location = (yylsp[-3]);
					(yyval.node) = (Node *) n;
				}
#line 45230 "gram.cpp"
    break;

  case 2057: /* func_expr_common_subexpr: DECODE '(' a_expr ',' a_expr ')'  */
#line 14531 "gram.y"
                                {
					FuncCall *n = makeNode(FuncCall);
					n->funcname = list_make1(makeString("decode"));
					n->args = list_make2((yyvsp[-3].node), (yyvsp[-1].node));
                    n->agg_order = NIL;
					n->agg_star = FALSE;
					n->agg_distinct = FALSE;
					n->func_variadic = FALSE;
					n->agg_filter = NULL;
					n->location = (yylsp[-5]);
					n->over = NULL;
					(yyval.node) = (Node *)n;
				}
#line 45248 "gram.cpp"
    break;

  case 2058: /* func_expr_common_subexpr: XMLCONCAT '(' expr_list ')'  */
#line 14545 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLCONCAT, NULL, NIL, (yyvsp[-1].list), (yylsp[-3]));
				}
#line 45256 "gram.cpp"
    break;

  case 2059: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ')'  */
#line 14549 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-1].str), NIL, NIL, (yylsp[-4]));
				}
#line 45264 "gram.cpp"
    break;

  case 2060: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ')'  */
#line 14553 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-3].str), (yyvsp[-1].list), NIL, (yylsp[-6]));
				}
#line 45272 "gram.cpp"
    break;

  case 2061: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' expr_list ')'  */
#line 14557 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-3].str), NIL, (yyvsp[-1].list), (yylsp[-6]));
				}
#line 45280 "gram.cpp"
    break;

  case 2062: /* func_expr_common_subexpr: XMLELEMENT '(' NAME_P ColLabel ',' xml_attributes ',' expr_list ')'  */
#line 14561 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[-5].str), (yyvsp[-3].list), (yyvsp[-1].list), (yylsp[-8]));
				}
#line 45288 "gram.cpp"
    break;

  case 2063: /* func_expr_common_subexpr: XMLEXISTS '(' c_expr xmlexists_argument ')'  */
#line 14565 "gram.y"
                                {
					/* xmlexists(A PASSING [BY REF] B [BY REF]) is
					 * converted to xmlexists(A, B)*/
					(yyval.node) = (Node *) makeFuncCall(SystemFuncName("xmlexists"), list_make2((yyvsp[-2].node), (yyvsp[-1].node)), (yylsp[-4]));
				}
#line 45298 "gram.cpp"
    break;

  case 2064: /* func_expr_common_subexpr: XMLEXISTS '(' a_expr ',' a_expr ')'  */
#line 14579 "gram.y"
                                {
					FuncCall *n = makeNode(FuncCall);
					n->funcname = SystemFuncName("xmlexists");
					n->args = list_make2((yyvsp[-3].node), (yyvsp[-1].node));
					n->agg_order = NIL;
					n->agg_star = FALSE;
					n->agg_distinct = FALSE;
					n->func_variadic = FALSE;
					n->over = NULL;
					n->location = (yylsp[-5]);
					(yyval.node) = (Node *)n;
				}
#line 45315 "gram.cpp"
    break;

  case 2065: /* func_expr_common_subexpr: XMLFOREST '(' xml_attribute_list ')'  */
#line 14592 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLFOREST, NULL, (yyvsp[-1].list), NIL, (yylsp[-3]));
				}
#line 45323 "gram.cpp"
    break;

  case 2066: /* func_expr_common_subexpr: XMLPARSE '(' document_or_content a_expr xml_whitespace_option ')'  */
#line 14596 "gram.y"
                                {
					XmlExpr *x = (XmlExpr *)
						makeXmlExpr(IS_XMLPARSE, NULL, NIL,
									list_make2((yyvsp[-2].node), makeBoolAConst((yyvsp[-1].boolean), -1)),
									(yylsp[-5]));
					x->xmloption = static_cast<XmlOptionType>((yyvsp[-3].ival));
					(yyval.node) = (Node *)x;
				}
#line 45336 "gram.cpp"
    break;

  case 2067: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ')'  */
#line 14605 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[-1].str), NULL, NIL, (yylsp[-4]));
				}
#line 45344 "gram.cpp"
    break;

  case 2068: /* func_expr_common_subexpr: XMLPI '(' NAME_P ColLabel ',' a_expr ')'  */
#line 14609 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[-3].str), NULL, list_make1((yyvsp[-1].node)), (yylsp[-6]));
				}
#line 45352 "gram.cpp"
    break;

  case 2069: /* func_expr_common_subexpr: XMLROOT '(' a_expr ',' xml_root_version opt_xml_root_standalone ')'  */
#line 14613 "gram.y"
                                {
					(yyval.node) = makeXmlExpr(IS_XMLROOT, NULL, NIL,
									 list_make3((yyvsp[-4].node), (yyvsp[-2].node), (yyvsp[-1].node)), (yylsp[-6]));
				}
#line 45361 "gram.cpp"
    break;

  case 2070: /* func_expr_common_subexpr: XMLSERIALIZE '(' document_or_content a_expr AS SimpleTypename ')'  */
#line 14618 "gram.y"
                                {
					XmlSerialize *n = makeNode(XmlSerialize);
					n->xmloption = static_cast<XmlOptionType>((yyvsp[-4].ival));
					n->expr = (yyvsp[-3].node);
					n->typeName = (yyvsp[-1].typnam);
					n->location = (yylsp[-6]);
					(yyval.node) = (Node *)n;
				}
#line 45374 "gram.cpp"
    break;

  case 2071: /* xml_root_version: VERSION_P a_expr  */
#line 14632 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 45380 "gram.cpp"
    break;

  case 2072: /* xml_root_version: VERSION_P NO VALUE_P  */
#line 14634 "gram.y"
                                { (yyval.node) = makeNullAConst(-1); }
#line 45386 "gram.cpp"
    break;

  case 2073: /* opt_xml_root_standalone: ',' STANDALONE_P YES_P  */
#line 14638 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); }
#line 45392 "gram.cpp"
    break;

  case 2074: /* opt_xml_root_standalone: ',' STANDALONE_P NO  */
#line 14640 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); }
#line 45398 "gram.cpp"
    break;

  case 2075: /* opt_xml_root_standalone: ',' STANDALONE_P NO VALUE_P  */
#line 14642 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); }
#line 45404 "gram.cpp"
    break;

  case 2076: /* opt_xml_root_standalone: %empty  */
#line 14644 "gram.y"
                                { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); }
#line 45410 "gram.cpp"
    break;

  case 2077: /* xml_attributes: XMLATTRIBUTES '(' xml_attribute_list ')'  */
#line 14647 "gram.y"
                                                                { (yyval.list) = (yyvsp[-1].list); }
#line 45416 "gram.cpp"
    break;

  case 2078: /* xml_attribute_list: xml_attribute_el  */
#line 14650 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 45422 "gram.cpp"
    break;

  case 2079: /* xml_attribute_list: xml_attribute_list ',' xml_attribute_el  */
#line 14651 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 45428 "gram.cpp"
    break;

  case 2080: /* xml_attribute_el: a_expr AS ColLabel  */
#line 14655 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *) (yyvsp[-2].node);
					(yyval.target)->location = (yylsp[-2]);
				}
#line 45440 "gram.cpp"
    break;

  case 2081: /* xml_attribute_el: a_expr  */
#line 14663 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *) (yyvsp[0].node);
					(yyval.target)->location = (yylsp[0]);
				}
#line 45452 "gram.cpp"
    break;

  case 2082: /* document_or_content: DOCUMENT_P  */
#line 14672 "gram.y"
                                                                        { (yyval.ival) = XMLOPTION_DOCUMENT; }
#line 45458 "gram.cpp"
    break;

  case 2083: /* document_or_content: CONTENT_P  */
#line 14673 "gram.y"
                                                                                                { (yyval.ival) = XMLOPTION_CONTENT; }
#line 45464 "gram.cpp"
    break;

  case 2084: /* xml_whitespace_option: PRESERVE WHITESPACE_P  */
#line 14676 "gram.y"
                                                        { (yyval.boolean) = TRUE; }
#line 45470 "gram.cpp"
    break;

  case 2085: /* xml_whitespace_option: STRIP_P WHITESPACE_P  */
#line 14677 "gram.y"
                                                                                { (yyval.boolean) = FALSE; }
#line 45476 "gram.cpp"
    break;

  case 2086: /* xml_whitespace_option: %empty  */
#line 14678 "gram.y"
                                                                                                { (yyval.boolean) = FALSE; }
#line 45482 "gram.cpp"
    break;

  case 2087: /* xmlexists_argument: PASSING c_expr  */
#line 14684 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 45490 "gram.cpp"
    break;

  case 2088: /* xmlexists_argument: PASSING c_expr BY REF  */
#line 14688 "gram.y"
                                {
					(yyval.node) = (yyvsp[-2].node);
				}
#line 45498 "gram.cpp"
    break;

  case 2089: /* xmlexists_argument: PASSING BY REF c_expr  */
#line 14692 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 45506 "gram.cpp"
    break;

  case 2090: /* xmlexists_argument: PASSING BY REF c_expr BY REF  */
#line 14696 "gram.y"
                                {
					(yyval.node) = (yyvsp[-2].node);
				}
#line 45514 "gram.cpp"
    break;

  case 2091: /* within_group_clause: WITHIN GROUP_P '(' sort_clause ')'  */
#line 14706 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45520 "gram.cpp"
    break;

  case 2092: /* within_group_clause: %empty  */
#line 14707 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 45526 "gram.cpp"
    break;

  case 2093: /* filter_clause: FILTER '(' WHERE a_expr ')'  */
#line 14711 "gram.y"
                                                                                { (yyval.node) = (yyvsp[-1].node); }
#line 45532 "gram.cpp"
    break;

  case 2094: /* filter_clause: %empty  */
#line 14712 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 45538 "gram.cpp"
    break;

  case 2095: /* window_clause: WINDOW window_definition_list  */
#line 14720 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 45544 "gram.cpp"
    break;

  case 2096: /* window_clause: %empty  */
#line 14721 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 45550 "gram.cpp"
    break;

  case 2097: /* window_definition_list: window_definition  */
#line 14725 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].windef)); }
#line 45556 "gram.cpp"
    break;

  case 2098: /* window_definition_list: window_definition_list ',' window_definition  */
#line 14727 "gram.y"
                                                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].windef)); }
#line 45562 "gram.cpp"
    break;

  case 2099: /* window_definition: ColId AS window_specification  */
#line 14732 "gram.y"
                                {
					WindowDef *n = (yyvsp[0].windef);
					n->name = (yyvsp[-2].str);
					(yyval.windef) = n;
				}
#line 45572 "gram.cpp"
    break;

  case 2100: /* over_clause: OVER window_specification  */
#line 14740 "gram.y"
                                { (yyval.windef) = (yyvsp[0].windef); }
#line 45578 "gram.cpp"
    break;

  case 2101: /* over_clause: OVER ColId  */
#line 14742 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->name = (yyvsp[0].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[0]);
					(yyval.windef) = n;
				}
#line 45595 "gram.cpp"
    break;

  case 2102: /* over_clause: %empty  */
#line 14755 "gram.y"
                                { (yyval.windef) = NULL; }
#line 45601 "gram.cpp"
    break;

  case 2103: /* window_specification: '(' opt_existing_window_name opt_partition_clause opt_sort_clause opt_frame_clause ')'  */
#line 14760 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->name = NULL;
					n->refname = (yyvsp[-4].str);
					n->partitionClause = (yyvsp[-3].list);
					n->orderClause = (yyvsp[-2].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[-1].windef)->frameOptions;
					n->startOffset = (yyvsp[-1].windef)->startOffset;
					n->endOffset = (yyvsp[-1].windef)->endOffset;
					n->location = (yylsp[-5]);
					(yyval.windef) = n;
				}
#line 45619 "gram.cpp"
    break;

  case 2104: /* opt_existing_window_name: ColId  */
#line 14785 "gram.y"
                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 45625 "gram.cpp"
    break;

  case 2105: /* opt_existing_window_name: %empty  */
#line 14786 "gram.y"
                                                                                        { (yyval.str) = NULL; }
#line 45631 "gram.cpp"
    break;

  case 2106: /* opt_partition_clause: PARTITION BY sortby_list  */
#line 14789 "gram.y"
                                               { (yyval.list) = (yyvsp[0].list); }
#line 45637 "gram.cpp"
    break;

  case 2107: /* opt_partition_clause: %empty  */
#line 14790 "gram.y"
                                    { (yyval.list) = NIL; }
#line 45643 "gram.cpp"
    break;

  case 2108: /* opt_frame_clause: RANGE frame_extent window_frame_exclusion  */
#line 14803 "gram.y"
                                {
					WindowDef *n = (yyvsp[-1].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
#if 0
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[-2])));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[-2])));
#endif
					(yyval.windef) = n;
				}
#line 45667 "gram.cpp"
    break;

  case 2109: /* opt_frame_clause: ROWS frame_extent window_frame_exclusion  */
#line 14824 "gram.y"
                                {
					WindowDef *n = (yyvsp[-1].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				}
#line 45677 "gram.cpp"
    break;

  case 2110: /* opt_frame_clause: %empty  */
#line 14830 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45689 "gram.cpp"
    break;

  case 2111: /* frame_extent: frame_bound  */
#line 14840 "gram.y"
                                {
					WindowDef *n = (yyvsp[0].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[0])));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[0])));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				}
#line 45710 "gram.cpp"
    break;

  case 2112: /* frame_extent: BETWEEN frame_bound AND frame_bound  */
#line 14857 "gram.y"
                                {
					WindowDef *n1 = (yyvsp[-2].windef);
					WindowDef *n2 = (yyvsp[0].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[-2])));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[0])));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[0])));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								errcode(ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[0])));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				}
#line 45751 "gram.cpp"
    break;

  case 2113: /* frame_bound: UNBOUNDED PRECEDING  */
#line 14902 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45763 "gram.cpp"
    break;

  case 2114: /* frame_bound: UNBOUNDED FOLLOWING  */
#line 14910 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45775 "gram.cpp"
    break;

  case 2115: /* frame_bound: CURRENT_P ROW  */
#line 14918 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45787 "gram.cpp"
    break;

  case 2116: /* frame_bound: a_expr PRECEDING  */
#line 14926 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[-1].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45799 "gram.cpp"
    break;

  case 2117: /* frame_bound: a_expr FOLLOWING  */
#line 14934 "gram.y"
                                {
					WindowDef *n = makeNode(WindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[-1].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				}
#line 45811 "gram.cpp"
    break;

  case 2118: /* window_frame_exclusion: EXCLUDE CURRENT_P ROW  */
#line 14943 "gram.y"
                                              { checkWindowExclude(); (yyval.ival) = 0; }
#line 45817 "gram.cpp"
    break;

  case 2119: /* window_frame_exclusion: EXCLUDE GROUP_P  */
#line 14944 "gram.y"
                                          { checkWindowExclude(); (yyval.ival) = 0; }
#line 45823 "gram.cpp"
    break;

  case 2120: /* window_frame_exclusion: EXCLUDE TIES  */
#line 14945 "gram.y"
                                       { checkWindowExclude(); (yyval.ival) = 0; }
#line 45829 "gram.cpp"
    break;

  case 2121: /* window_frame_exclusion: EXCLUDE NO OTHERS  */
#line 14946 "gram.y"
                                            { checkWindowExclude(); (yyval.ival) = 0; }
#line 45835 "gram.cpp"
    break;

  case 2122: /* window_frame_exclusion: %empty  */
#line 14947 "gram.y"
                                    { (yyval.ival) = 0; }
#line 45841 "gram.cpp"
    break;

  case 2123: /* row: ROW '(' expr_list ')'  */
#line 14961 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45847 "gram.cpp"
    break;

  case 2124: /* row: ROW '(' ')'  */
#line 14962 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 45853 "gram.cpp"
    break;

  case 2125: /* row: '(' expr_list ',' a_expr ')'  */
#line 14963 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-3].list), (yyvsp[-1].node)); }
#line 45859 "gram.cpp"
    break;

  case 2126: /* sub_type: ANY  */
#line 14966 "gram.y"
                                                                                                { (yyval.ival) = ANY_SUBLINK; }
#line 45865 "gram.cpp"
    break;

  case 2127: /* sub_type: SOME  */
#line 14967 "gram.y"
                                                                                                { (yyval.ival) = ANY_SUBLINK; }
#line 45871 "gram.cpp"
    break;

  case 2128: /* sub_type: ALL  */
#line 14968 "gram.y"
                                                                                                { (yyval.ival) = ALL_SUBLINK; }
#line 45877 "gram.cpp"
    break;

  case 2129: /* all_Op: Op  */
#line 14971 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 45883 "gram.cpp"
    break;

  case 2130: /* all_Op: MathOp  */
#line 14972 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 45889 "gram.cpp"
    break;

  case 2131: /* MathOp: '+'  */
#line 14975 "gram.y"
                                                                                        { (yyval.str) = "+"; }
#line 45895 "gram.cpp"
    break;

  case 2132: /* MathOp: '-'  */
#line 14976 "gram.y"
                                                                                                { (yyval.str) = "-"; }
#line 45901 "gram.cpp"
    break;

  case 2133: /* MathOp: '*'  */
#line 14977 "gram.y"
                                                                                                { (yyval.str) = "*"; }
#line 45907 "gram.cpp"
    break;

  case 2134: /* MathOp: '/'  */
#line 14978 "gram.y"
                                                                                                { (yyval.str) = "/"; }
#line 45913 "gram.cpp"
    break;

  case 2135: /* MathOp: '%'  */
#line 14979 "gram.y"
                                                                                                { (yyval.str) = "%"; }
#line 45919 "gram.cpp"
    break;

  case 2136: /* MathOp: '^'  */
#line 14980 "gram.y"
                                                                                                { (yyval.str) = "^"; }
#line 45925 "gram.cpp"
    break;

  case 2137: /* MathOp: '<'  */
#line 14981 "gram.y"
                                                                                                { (yyval.str) = "<"; }
#line 45931 "gram.cpp"
    break;

  case 2138: /* MathOp: '>'  */
#line 14982 "gram.y"
                                                                                                { (yyval.str) = ">"; }
#line 45937 "gram.cpp"
    break;

  case 2139: /* MathOp: '='  */
#line 14983 "gram.y"
                                                                                                { (yyval.str) = "="; }
#line 45943 "gram.cpp"
    break;

  case 2140: /* qual_Op: Op  */
#line 14987 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 45949 "gram.cpp"
    break;

  case 2141: /* qual_Op: OPERATOR '(' any_operator ')'  */
#line 14989 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45955 "gram.cpp"
    break;

  case 2142: /* qual_all_Op: all_Op  */
#line 14994 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 45961 "gram.cpp"
    break;

  case 2143: /* qual_all_Op: OPERATOR '(' any_operator ')'  */
#line 14996 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45967 "gram.cpp"
    break;

  case 2144: /* subquery_Op: all_Op  */
#line 15001 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 45973 "gram.cpp"
    break;

  case 2145: /* subquery_Op: OPERATOR '(' any_operator ')'  */
#line 15003 "gram.y"
                                        { (yyval.list) = (yyvsp[-1].list); }
#line 45979 "gram.cpp"
    break;

  case 2146: /* subquery_Op: LIKE  */
#line 15005 "gram.y"
                                        { (yyval.list) = list_make1(makeString("~~")); }
#line 45985 "gram.cpp"
    break;

  case 2147: /* subquery_Op: NOT LIKE  */
#line 15007 "gram.y"
                                        { (yyval.list) = list_make1(makeString("!~~")); }
#line 45991 "gram.cpp"
    break;

  case 2148: /* subquery_Op: ILIKE  */
#line 15009 "gram.y"
                                        { (yyval.list) = list_make1(makeString("~~*")); }
#line 45997 "gram.cpp"
    break;

  case 2149: /* subquery_Op: NOT ILIKE  */
#line 15011 "gram.y"
                                        { (yyval.list) = list_make1(makeString("!~~*")); }
#line 46003 "gram.cpp"
    break;

  case 2150: /* expr_list: a_expr  */
#line 15023 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 46011 "gram.cpp"
    break;

  case 2151: /* expr_list: expr_list ',' a_expr  */
#line 15027 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 46019 "gram.cpp"
    break;

  case 2152: /* func_arg_list: func_arg_expr  */
#line 15034 "gram.y"
                                {
					(yyval.list) = list_make1((yyvsp[0].node));
				}
#line 46027 "gram.cpp"
    break;

  case 2153: /* func_arg_list: func_arg_list ',' func_arg_expr  */
#line 15038 "gram.y"
                                {
					(yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node));
				}
#line 46035 "gram.cpp"
    break;

  case 2154: /* func_arg_expr: a_expr  */
#line 15044 "gram.y"
                                {
					(yyval.node) = (yyvsp[0].node);
				}
#line 46043 "gram.cpp"
    break;

  case 2155: /* func_arg_expr: param_name COLON_EQUALS a_expr  */
#line 15048 "gram.y"
                                {
					NamedArgExpr *na = makeNode(NamedArgExpr);
					na->name = (yyvsp[-2].str);
					na->arg = (Expr *) (yyvsp[0].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[-2]);
					(yyval.node) = (Node *) na;
				}
#line 46056 "gram.cpp"
    break;

  case 2156: /* type_list: Typename  */
#line 15058 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].typnam)); }
#line 46062 "gram.cpp"
    break;

  case 2157: /* type_list: type_list ',' Typename  */
#line 15059 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
#line 46068 "gram.cpp"
    break;

  case 2158: /* nested_type_list: NestedTypename  */
#line 15063 "gram.y"
                                                                        { (yyval.list) = list_make1((yyvsp[0].typnam)); }
#line 46074 "gram.cpp"
    break;

  case 2159: /* nested_type_list: nested_type_list ',' NestedTypename  */
#line 15064 "gram.y"
                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].typnam)); }
#line 46080 "gram.cpp"
    break;

  case 2160: /* array_expr: '[' expr_list ']'  */
#line 15068 "gram.y"
                                {
					(yyval.node) = makeAArrayExpr((yyvsp[-1].list), (yylsp[-2]));
				}
#line 46088 "gram.cpp"
    break;

  case 2161: /* array_expr: '[' array_expr_list ']'  */
#line 15072 "gram.y"
                                {
					(yyval.node) = makeAArrayExpr((yyvsp[-1].list), (yylsp[-2]));
				}
#line 46096 "gram.cpp"
    break;

  case 2162: /* array_expr: '[' ']'  */
#line 15076 "gram.y"
                                {
					(yyval.node) = makeAArrayExpr(NIL, (yylsp[-1]));
				}
#line 46104 "gram.cpp"
    break;

  case 2163: /* array_expr_list: array_expr  */
#line 15081 "gram.y"
                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46110 "gram.cpp"
    break;

  case 2164: /* array_expr_list: array_expr_list ',' array_expr  */
#line 15082 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 46116 "gram.cpp"
    break;

  case 2165: /* extract_list: extract_arg FROM a_expr  */
#line 15088 "gram.y"
                                {
					(yyval.list) = list_make2(makeStringConst((yyvsp[-2].str), (yylsp[-2])), (yyvsp[0].node));
				}
#line 46124 "gram.cpp"
    break;

  case 2166: /* extract_list: %empty  */
#line 15091 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 46130 "gram.cpp"
    break;

  case 2167: /* extract_arg: IDENT  */
#line 15098 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46136 "gram.cpp"
    break;

  case 2168: /* extract_arg: YEAR_P  */
#line 15099 "gram.y"
                                                                                                { (yyval.str) = "year"; }
#line 46142 "gram.cpp"
    break;

  case 2169: /* extract_arg: MONTH_P  */
#line 15100 "gram.y"
                                                                                                { (yyval.str) = "month"; }
#line 46148 "gram.cpp"
    break;

  case 2170: /* extract_arg: DAY_P  */
#line 15101 "gram.y"
                                                                                                { (yyval.str) = "day"; }
#line 46154 "gram.cpp"
    break;

  case 2171: /* extract_arg: HOUR_P  */
#line 15102 "gram.y"
                                                                                                { (yyval.str) = "hour"; }
#line 46160 "gram.cpp"
    break;

  case 2172: /* extract_arg: MINUTE_P  */
#line 15103 "gram.y"
                                                                                                { (yyval.str) = "minute"; }
#line 46166 "gram.cpp"
    break;

  case 2173: /* extract_arg: SECOND_P  */
#line 15104 "gram.y"
                                                                                                { (yyval.str) = "second"; }
#line 46172 "gram.cpp"
    break;

  case 2174: /* extract_arg: Sconst  */
#line 15105 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46178 "gram.cpp"
    break;

  case 2175: /* overlay_list: a_expr overlay_placing substr_from substr_for  */
#line 15116 "gram.y"
                                {
					(yyval.list) = list_make4((yyvsp[-3].node), (yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46186 "gram.cpp"
    break;

  case 2176: /* overlay_list: a_expr overlay_placing substr_from  */
#line 15120 "gram.y"
                                {
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46194 "gram.cpp"
    break;

  case 2177: /* overlay_placing: PLACING a_expr  */
#line 15127 "gram.y"
                                { (yyval.node) = (yyvsp[0].node); }
#line 46200 "gram.cpp"
    break;

  case 2178: /* position_list: b_expr IN_P b_expr  */
#line 15133 "gram.y"
                                                                                        { (yyval.list) = list_make2((yyvsp[0].node), (yyvsp[-2].node)); }
#line 46206 "gram.cpp"
    break;

  case 2179: /* position_list: %empty  */
#line 15134 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 46212 "gram.cpp"
    break;

  case 2180: /* substr_list: a_expr substr_from substr_for  */
#line 15151 "gram.y"
                                {
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46220 "gram.cpp"
    break;

  case 2181: /* substr_list: a_expr substr_for substr_from  */
#line 15155 "gram.y"
                                {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[-2].node), (yyvsp[0].node), (yyvsp[-1].node));
				}
#line 46229 "gram.cpp"
    break;

  case 2182: /* substr_list: a_expr substr_from  */
#line 15160 "gram.y"
                                {
					(yyval.list) = list_make2((yyvsp[-1].node), (yyvsp[0].node));
				}
#line 46237 "gram.cpp"
    break;

  case 2183: /* substr_list: a_expr substr_for  */
#line 15164 "gram.y"
                                {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[-1].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[0].node),
												 SystemTypeName("int4"), -1));
				}
#line 46256 "gram.cpp"
    break;

  case 2184: /* substr_list: expr_list  */
#line 15179 "gram.y"
                                {
					(yyval.list) = (yyvsp[0].list);
				}
#line 46264 "gram.cpp"
    break;

  case 2185: /* substr_list: %empty  */
#line 15183 "gram.y"
                                { (yyval.list) = NIL; }
#line 46270 "gram.cpp"
    break;

  case 2186: /* substr_from: FROM a_expr  */
#line 15187 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46276 "gram.cpp"
    break;

  case 2187: /* substr_for: FOR a_expr  */
#line 15190 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46282 "gram.cpp"
    break;

  case 2188: /* trim_list: a_expr FROM expr_list  */
#line 15193 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[0].list), (yyvsp[-2].node)); }
#line 46288 "gram.cpp"
    break;

  case 2189: /* trim_list: FROM expr_list  */
#line 15194 "gram.y"
                                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 46294 "gram.cpp"
    break;

  case 2190: /* trim_list: expr_list  */
#line 15195 "gram.y"
                                                                                                { (yyval.list) = (yyvsp[0].list); }
#line 46300 "gram.cpp"
    break;

  case 2191: /* in_expr: select_with_parens  */
#line 15199 "gram.y"
                                {
					SubLink *n = makeNode(SubLink);
					n->subselect = (yyvsp[0].node);
					/* other fields will be filled later */
					(yyval.node) = (Node *)n;
				}
#line 46311 "gram.cpp"
    break;

  case 2192: /* in_expr: '(' expr_list ')'  */
#line 15205 "gram.y"
                                                                                        { (yyval.node) = (Node *)(yyvsp[-1].list); }
#line 46317 "gram.cpp"
    break;

  case 2193: /* case_expr: CASE case_arg when_clause_list case_default END_P  */
#line 15216 "gram.y"
                                {
					CaseExpr *c = makeNode(CaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (Expr *) (yyvsp[-3].node);
					c->args = (yyvsp[-2].list);
					c->defresult = (Expr *) (yyvsp[-1].node);
					c->location = (yylsp[-4]);
					(yyval.node) = (Node *)c;
				}
#line 46331 "gram.cpp"
    break;

  case 2194: /* when_clause_list: when_clause  */
#line 15229 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46337 "gram.cpp"
    break;

  case 2195: /* when_clause_list: when_clause_list when_clause  */
#line 15230 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46343 "gram.cpp"
    break;

  case 2196: /* when_clause: WHEN when_operand THEN a_expr  */
#line 15235 "gram.y"
                                {
					CaseWhen *w = makeNode(CaseWhen);
					w->expr = (Expr *) (yyvsp[-2].node);
					w->result = (Expr *) (yyvsp[0].node);
					w->location = (yylsp[-3]);
					(yyval.node) = (Node *)w;
				}
#line 46355 "gram.cpp"
    break;

  case 2197: /* when_operand: a_expr  */
#line 15245 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46361 "gram.cpp"
    break;

  case 2198: /* when_operand: IS NOT DISTINCT FROM a_expr  */
#line 15246 "gram.y"
                                                        { (yyval.node) = makeIsNotDistinctFromNode((yyvsp[0].node),(yylsp[-3])); }
#line 46367 "gram.cpp"
    break;

  case 2199: /* case_default: ELSE a_expr  */
#line 15250 "gram.y"
                                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46373 "gram.cpp"
    break;

  case 2200: /* case_default: %empty  */
#line 15251 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 46379 "gram.cpp"
    break;

  case 2201: /* case_arg: a_expr  */
#line 15254 "gram.y"
                                                                                        { (yyval.node) = (yyvsp[0].node); }
#line 46385 "gram.cpp"
    break;

  case 2202: /* case_arg: %empty  */
#line 15255 "gram.y"
                                                                                                { (yyval.node) = NULL; }
#line 46391 "gram.cpp"
    break;

  case 2203: /* decode_expr: DECODE '(' a_expr search_result_list decode_default ')'  */
#line 15270 "gram.y"
                                {
					CaseExpr *c = makeNode(CaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (Expr *) (yyvsp[-3].node);
					c->args = (yyvsp[-2].list);
					c->defresult = (Expr *) (yyvsp[-1].node);
					(yyval.node) = (Node *) c;
				}
#line 46404 "gram.cpp"
    break;

  case 2204: /* search_result_list: search_result  */
#line 15281 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46410 "gram.cpp"
    break;

  case 2205: /* search_result_list: search_result_list search_result  */
#line 15282 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46416 "gram.cpp"
    break;

  case 2206: /* search_result: ',' a_expr ',' a_expr  */
#line 15287 "gram.y"
                                {
					Node *n = makeIsNotDistinctFromNode((yyvsp[-2].node),(yylsp[-2]));
					CaseWhen *w = makeNode(CaseWhen);
					w->expr = (Expr *) n;
					w->result = (Expr *) (yyvsp[0].node);
					(yyval.node) = (Node *) w;
				}
#line 46428 "gram.cpp"
    break;

  case 2207: /* decode_default: ',' a_expr  */
#line 15297 "gram.y"
                                                                                { (yyval.node) = (yyvsp[0].node); }
#line 46434 "gram.cpp"
    break;

  case 2208: /* decode_default: %empty  */
#line 15298 "gram.y"
                                                                                { (yyval.node) = NULL; }
#line 46440 "gram.cpp"
    break;

  case 2209: /* columnref: ColId  */
#line 15303 "gram.y"
                                {
					(yyval.node) = makeColumnRef((yyvsp[0].str), NIL, (yylsp[0]), yyscanner);
				}
#line 46448 "gram.cpp"
    break;

  case 2210: /* columnref: ColId indirection  */
#line 15307 "gram.y"
                                {
					(yyval.node) = makeColumnRef((yyvsp[-1].str), (yyvsp[0].list), (yylsp[-1]), yyscanner);
				}
#line 46456 "gram.cpp"
    break;

  case 2211: /* indirection_el: '.' attr_name  */
#line 15314 "gram.y"
                                {
					(yyval.node) = (Node *) makeString((yyvsp[0].str));
				}
#line 46464 "gram.cpp"
    break;

  case 2212: /* indirection_el: '.' '*'  */
#line 15318 "gram.y"
                                {
					(yyval.node) = (Node *) makeNode(A_Star);
				}
#line 46472 "gram.cpp"
    break;

  case 2213: /* indirection_el: '[' a_expr ']'  */
#line 15322 "gram.y"
                                {
					A_Indices *ai = makeNode(A_Indices);
					ai->lidx = NULL;
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (Node *) ai;
				}
#line 46483 "gram.cpp"
    break;

  case 2214: /* indirection_el: '[' a_expr ':' a_expr ']'  */
#line 15329 "gram.y"
                                {
					A_Indices *ai = makeNode(A_Indices);
					ai->lidx = (yyvsp[-3].node);
					ai->uidx = (yyvsp[-1].node);
					(yyval.node) = (Node *) ai;
				}
#line 46494 "gram.cpp"
    break;

  case 2215: /* indirection: indirection_el  */
#line 15338 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46500 "gram.cpp"
    break;

  case 2216: /* indirection: indirection indirection_el  */
#line 15339 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46506 "gram.cpp"
    break;

  case 2217: /* opt_indirection: %empty  */
#line 15343 "gram.y"
                                                                                                { (yyval.list) = NIL; }
#line 46512 "gram.cpp"
    break;

  case 2218: /* opt_indirection: opt_indirection indirection_el  */
#line 15344 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-1].list), (yyvsp[0].node)); }
#line 46518 "gram.cpp"
    break;

  case 2221: /* ctext_expr: a_expr  */
#line 15359 "gram.y"
                                                                { (yyval.node) = (Node *) (yyvsp[0].node); }
#line 46524 "gram.cpp"
    break;

  case 2222: /* ctext_expr: DEFAULT  */
#line 15361 "gram.y"
                                {
					SetToDefault *n = makeNode(SetToDefault);
					n->location = (yylsp[0]);
					(yyval.node) = (Node *) n;
				}
#line 46534 "gram.cpp"
    break;

  case 2223: /* ctext_expr_list: ctext_expr  */
#line 15369 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].node)); }
#line 46540 "gram.cpp"
    break;

  case 2224: /* ctext_expr_list: ctext_expr_list ',' ctext_expr  */
#line 15370 "gram.y"
                                                                        { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].node)); }
#line 46546 "gram.cpp"
    break;

  case 2225: /* ctext_row: '(' ctext_expr_list ')'  */
#line 15378 "gram.y"
                                                                        { (yyval.list) = (yyvsp[-1].list); }
#line 46552 "gram.cpp"
    break;

  case 2226: /* opt_target_list: target_list  */
#line 15388 "gram.y"
                                                                        { (yyval.list) = (yyvsp[0].list); }
#line 46558 "gram.cpp"
    break;

  case 2227: /* opt_target_list: %empty  */
#line 15389 "gram.y"
                                                                                        { (yyval.list) = NIL; }
#line 46564 "gram.cpp"
    break;

  case 2228: /* target_list: target_el  */
#line 15393 "gram.y"
                                                                                                { (yyval.list) = list_make1((yyvsp[0].target)); }
#line 46570 "gram.cpp"
    break;

  case 2229: /* target_list: target_list ',' target_el  */
#line 15394 "gram.y"
                                                                                { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].target)); }
#line 46576 "gram.cpp"
    break;

  case 2230: /* target_el: a_expr AS ColLabel  */
#line 15398 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[-2].node);
					(yyval.target)->location = (yylsp[-2]);
				}
#line 46588 "gram.cpp"
    break;

  case 2231: /* target_el: a_expr IDENT  */
#line 15420 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[-1].node);
					(yyval.target)->location = (yylsp[-1]);
				}
#line 46600 "gram.cpp"
    break;

  case 2232: /* target_el: a_expr ColLabelNoAs  */
#line 15428 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = (yyvsp[0].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[-1].node);
					(yyval.target)->location = (yylsp[-1]);
				}
#line 46612 "gram.cpp"
    break;

  case 2233: /* target_el: a_expr  */
#line 15436 "gram.y"
                                {
					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)(yyvsp[0].node);
					(yyval.target)->location = (yylsp[0]);
				}
#line 46624 "gram.cpp"
    break;

  case 2234: /* target_el: '*'  */
#line 15444 "gram.y"
                                {
					ColumnRef *n = makeNode(ColumnRef);
					n->fields = list_make1(makeNode(A_Star));
					n->location = (yylsp[0]);

					(yyval.target) = makeNode(ResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (Node *)n;
					(yyval.target)->location = (yylsp[0]);
				}
#line 46640 "gram.cpp"
    break;

  case 2235: /* qualified_name_list: qualified_name  */
#line 15465 "gram.y"
                                                                                        { (yyval.list) = list_make1((yyvsp[0].range)); }
#line 46646 "gram.cpp"
    break;

  case 2236: /* qualified_name_list: qualified_name_list ',' qualified_name  */
#line 15466 "gram.y"
                                                                 { (yyval.list) = lappend((yyvsp[-2].list), (yyvsp[0].range)); }
#line 46652 "gram.cpp"
    break;

  case 2237: /* qualified_name: ColId  */
#line 15478 "gram.y"
                                {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[0].str), (yylsp[0]));
				}
#line 46660 "gram.cpp"
    break;

  case 2238: /* qualified_name: ColId indirection  */
#line 15482 "gram.y"
                                {
					check_qualified_name((yyvsp[0].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[-1]));
					switch (list_length((yyvsp[0].list)))
					{
						case 1:
						    (yyval.range)->uid = NULL;
							(yyval.range)->catalogname = (yyvsp[-1].str);
							(yyval.range)->schemaname = NULL;
							(yyval.range)->relname = strVal(linitial((yyvsp[0].list)));
							break;
						case 2:
						    (yyval.range)->uid = NULL;
							(yyval.range)->catalogname = (yyvsp[-1].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[0].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[0].list)));
							break;
						case 3:
						    (yyval.range)->uid = (yyvsp[-1].str);
							(yyval.range)->catalogname = strVal(linitial((yyvsp[0].list)));
							(yyval.range)->schemaname = strVal(lsecond((yyvsp[0].list)));
							(yyval.range)->relname = strVal(lthird((yyvsp[0].list)));
							break;
						default:
							//ereport(ERROR, mdxn: ereport NameListToString
							//		errcode(ERRCODE_SYNTAX_ERROR),
							//		 errmsg("improper qualified name (too many dotted names): %s",
							//				NameListToString(lcons(makeString($1), $2))),
							//		 parser_errposition(@1));
							break;
					}
				}
#line 46697 "gram.cpp"
    break;

  case 2239: /* name_list: name  */
#line 15517 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46703 "gram.cpp"
    break;

  case 2240: /* name_list: name_list ',' name  */
#line 15519 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 46709 "gram.cpp"
    break;

  case 2241: /* name: ColId  */
#line 15523 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46715 "gram.cpp"
    break;

  case 2242: /* database_name: ColId  */
#line 15526 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46721 "gram.cpp"
    break;

  case 2243: /* access_method: ColId  */
#line 15529 "gram.y"
                                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46727 "gram.cpp"
    break;

  case 2244: /* attr_name: ColLabel  */
#line 15531 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46733 "gram.cpp"
    break;

  case 2245: /* index_name: ColId  */
#line 15533 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46739 "gram.cpp"
    break;

  case 2246: /* file_name: Sconst  */
#line 15535 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46745 "gram.cpp"
    break;

  case 2247: /* func_name: type_function_name  */
#line 15546 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46751 "gram.cpp"
    break;

  case 2248: /* func_name: ColId indirection  */
#line 15548 "gram.y"
                                        {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[-1].str)), (yyvsp[0].list)),
											 yyscanner);
					}
#line 46760 "gram.cpp"
    break;

  case 2249: /* AexprConst: Iconst  */
#line 15559 "gram.y"
                                {
					(yyval.node) = makeIntConst((yyvsp[0].ival), (yylsp[0]));
				}
#line 46768 "gram.cpp"
    break;

  case 2250: /* AexprConst: FCONST  */
#line 15563 "gram.y"
                                {
					(yyval.node) = makeFloatConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46776 "gram.cpp"
    break;

  case 2251: /* AexprConst: Sconst  */
#line 15567 "gram.y"
                                {
					(yyval.node) = makeStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46784 "gram.cpp"
    break;

  case 2252: /* AexprConst: BCONST  */
#line 15571 "gram.y"
                                {
					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46792 "gram.cpp"
    break;

  case 2253: /* AexprConst: XCONST  */
#line 15575 "gram.y"
                                {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[0].str), (yylsp[0]));
				}
#line 46805 "gram.cpp"
    break;

  case 2254: /* AexprConst: func_name Sconst  */
#line 15584 "gram.y"
                                {
					/* generic type 'literal' syntax */
					TypeName *t = makeTypeNameFromNameList((yyvsp[-1].list));
					t->location = (yylsp[-1]);
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 46816 "gram.cpp"
    break;

  case 2255: /* AexprConst: func_name '(' func_arg_list opt_sort_clause ')' Sconst  */
#line 15591 "gram.y"
                                {
					/* generic syntax with a type modifier */
					TypeName *t = makeTypeNameFromNameList((yyvsp[-5].list));
					ListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow NamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[-3].list))
					{
						NamedArgExpr *arg = (NamedArgExpr *) lfirst(lc);

						if (IsA(arg, NamedArgExpr))
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location));
					}
					if ((yyvsp[-2].list) != NIL)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[-2])));

					t->typmods = (yyvsp[-3].list);
					t->location = (yylsp[-5]);
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), t);
				}
#line 46852 "gram.cpp"
    break;

  case 2256: /* AexprConst: ConstTypename Sconst  */
#line 15623 "gram.y"
                                {
					(yyval.node) = makeStringConstCast((yyvsp[0].str), (yylsp[0]), (yyvsp[-1].typnam));
				}
#line 46860 "gram.cpp"
    break;

  case 2257: /* AexprConst: ConstInterval Sconst opt_interval  */
#line 15627 "gram.y"
                                {
					TypeName *t = (yyvsp[-2].typnam);
					t->typmods = (yyvsp[0].list);
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 46870 "gram.cpp"
    break;

  case 2258: /* AexprConst: ConstInterval '(' Iconst ')' Sconst opt_interval  */
#line 15633 "gram.y"
                                {
					TypeName *t = (yyvsp[-5].typnam);
					if ((yyvsp[0].list) != NIL)
					{
						if (list_length((yyvsp[0].list)) != 1)
							ereport(ERROR,
									errcode(ERRCODE_SYNTAX_ERROR),
									 errmsg("interval precision specified twice"),
									 parser_errposition((yylsp[-5])));
						t->typmods = lappend((yyvsp[0].list), makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeIntConst((yyvsp[-3].ival), (yylsp[-3])));
					(yyval.node) = makeStringConstCast((yyvsp[-1].str), (yylsp[-1]), t);
				}
#line 46891 "gram.cpp"
    break;

  case 2259: /* AexprConst: TRUE_P  */
#line 15650 "gram.y"
                                {
					(yyval.node) = makeBoolAConst(TRUE, (yylsp[0]));
				}
#line 46899 "gram.cpp"
    break;

  case 2260: /* AexprConst: FALSE_P  */
#line 15654 "gram.y"
                                {
					(yyval.node) = makeBoolAConst(FALSE, (yylsp[0]));
				}
#line 46907 "gram.cpp"
    break;

  case 2261: /* AexprConst: NULL_P  */
#line 15658 "gram.y"
                                {
					(yyval.node) = makeNullAConst((yylsp[0]));
				}
#line 46915 "gram.cpp"
    break;

  case 2262: /* Iconst: ICONST  */
#line 15663 "gram.y"
                                                                                        { (yyval.ival) = (yyvsp[0].ival); }
#line 46921 "gram.cpp"
    break;

  case 2263: /* Sconst: SCONST  */
#line 15664 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46927 "gram.cpp"
    break;

  case 2264: /* RoleId: NonReservedWord  */
#line 15665 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46933 "gram.cpp"
    break;

  case 2265: /* QueueId: NonReservedWord  */
#line 15666 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46939 "gram.cpp"
    break;

  case 2266: /* role_list: RoleId  */
#line 15669 "gram.y"
                                        { (yyval.list) = list_make1(makeString((yyvsp[0].str))); }
#line 46945 "gram.cpp"
    break;

  case 2267: /* role_list: role_list ',' RoleId  */
#line 15671 "gram.y"
                                        { (yyval.list) = lappend((yyvsp[-2].list), makeString((yyvsp[0].str))); }
#line 46951 "gram.cpp"
    break;

  case 2268: /* SignedIconst: Iconst  */
#line 15674 "gram.y"
                                                                                { (yyval.ival) = (yyvsp[0].ival); }
#line 46957 "gram.cpp"
    break;

  case 2269: /* SignedIconst: '+' Iconst  */
#line 15675 "gram.y"
                                                                                        { (yyval.ival) = + (yyvsp[0].ival); }
#line 46963 "gram.cpp"
    break;

  case 2270: /* SignedIconst: '-' Iconst  */
#line 15676 "gram.y"
                                                                                        { (yyval.ival) = - (yyvsp[0].ival); }
#line 46969 "gram.cpp"
    break;

  case 2271: /* ColId: IDENT  */
#line 15692 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 46975 "gram.cpp"
    break;

  case 2272: /* ColId: unreserved_keyword  */
#line 15693 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 46981 "gram.cpp"
    break;

  case 2273: /* ColId: col_name_keyword  */
#line 15694 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 46987 "gram.cpp"
    break;

  case 2274: /* type_function_name: IDENT  */
#line 15699 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 46993 "gram.cpp"
    break;

  case 2275: /* type_function_name: unreserved_keyword  */
#line 15700 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 46999 "gram.cpp"
    break;

  case 2276: /* type_function_name: type_func_name_keyword  */
#line 15701 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47005 "gram.cpp"
    break;

  case 2277: /* NonReservedWord: IDENT  */
#line 15706 "gram.y"
                                                                                { (yyval.str) = (yyvsp[0].str); }
#line 47011 "gram.cpp"
    break;

  case 2278: /* NonReservedWord: unreserved_keyword  */
#line 15707 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47017 "gram.cpp"
    break;

  case 2279: /* NonReservedWord: col_name_keyword  */
#line 15708 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47023 "gram.cpp"
    break;

  case 2280: /* NonReservedWord: type_func_name_keyword  */
#line 15709 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47029 "gram.cpp"
    break;

  case 2281: /* ColLabel: IDENT  */
#line 15715 "gram.y"
                                                                                        { (yyval.str) = (yyvsp[0].str); }
#line 47035 "gram.cpp"
    break;

  case 2282: /* ColLabel: unreserved_keyword  */
#line 15716 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47041 "gram.cpp"
    break;

  case 2283: /* ColLabel: col_name_keyword  */
#line 15717 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47047 "gram.cpp"
    break;

  case 2284: /* ColLabel: type_func_name_keyword  */
#line 15718 "gram.y"
                                                                                { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47053 "gram.cpp"
    break;

  case 2285: /* ColLabel: reserved_keyword  */
#line 15719 "gram.y"
                                                                                        { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47059 "gram.cpp"
    break;

  case 2602: /* ColLabelNoAs: keywords_ok_in_alias_no_as  */
#line 16068 "gram.y"
                                             { (yyval.str)=pstrdup((yyvsp[0].keyword)); }
#line 47065 "gram.cpp"
    break;

  case 2608: /* PartitionColId: PartitionIdentKeyword  */
#line 16078 "gram.y"
                                      { (yyval.str) = pstrdup((yyvsp[0].keyword)); }
#line 47071 "gram.cpp"
    break;

  case 2609: /* PartitionColId: IDENT  */
#line 16079 "gram.y"
                                { (yyval.str) = pstrdup((yyvsp[0].str)); }
#line 47077 "gram.cpp"
    break;


#line 47081 "gram.cpp"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
    }

  yyerror_range[1] = yylloc;
  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, yyscanner);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  ++yylsp;
  YYLLOC_DEFAULT (*yylsp, yyerror_range, 2);

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, yyscanner);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

#line 16556 "gram.y"


/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static Node *
makeColumnRef(char *colname, List *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a ColumnRef node, with an A_Indirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the ColumnRef node.
	 */
	ColumnRef  *c = makeNode(ColumnRef);
	int		nfields = 0;
	ListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), A_Indices))
		{
			A_Indirection *i = makeNode(A_Indirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to A_Indirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = reinterpret_cast<Node *>(c);
			return reinterpret_cast<Node *>(i);
		}
		else if (IsA(lfirst(l), A_Star))
		{
			/* We only allow '*' at the end of a ColumnRef */
			if (_it_ != indirection->lst.end())
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return reinterpret_cast<Node *>(c);
}

static Node *
makeTypeCast(Node *arg, TypeName *type, int location)
{
	TypeCast *n = makeNode(TypeCast);
	n->arg = arg;
	n->typeName = type;
	n->location = location;
	return (Node *) n;
}

static Node *
makeStringConst(char *str, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_String;
	n->val.val.str = str;
	n->location = location;

	return (Node *)n;
}

static Node *
makeStringConstCast(char *str, int location, TypeName *type)
{
	Node *s = makeStringConst(str, location);

	return makeTypeCast(s, type, -1);
}

static Node *
makeIntConst(int val, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_Integer;
	n->val.val.ival = val;
	n->location = location;

	return (Node *)n;
}

static Node *
makeFloatConst(char *str, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_Float;
	n->val.val.str = str;
	n->location = location;

	return reinterpret_cast<Node *>(n);
}

static Node *
makeBitStringConst(char *str, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_BitString;
	n->val.val.str = str;
	n->location = location;

	return reinterpret_cast<Node *>(n);
}

static Node *
makeNullAConst(int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_Null;
	n->location = location;

	return reinterpret_cast<Node *>(n);
}

static Node *
makeAConst(Value *v, int location)
{
	Node *n;

	switch (v->type)
	{
		case T_Float:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_Integer:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_String:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an A_Const string node and put it inside a boolean cast.
 */
static Node *
makeBoolAConst(bool state, int location)
{
	A_Const *n = makeNode(A_Const);

	n->val.type = T_String;
	n->val.val.str = (state ? pstrdup("t") : pstrdup("f"));
	n->location = location;

	return makeTypeCast(reinterpret_cast<Node *>(n), SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(List *names, core_yyscan_t yyscanner)
{
	ListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), String))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static List *
check_func_name(List *names, core_yyscan_t yyscanner)
{
	ListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), String))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static List *
check_indirection(List *indirection, core_yyscan_t yyscanner)
{
	ListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), A_Star))
		{
			if (++_it_ != indirection->lst.end())
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* extractArgTypes()
 * Given a list of FunctionParameter nodes, extract a list of just the
 * argument types (TypeNames) for input parameters only.  This is what
 * is needed to look up an existing function, which is what is wanted by
 * the productions that use this call.
 */
static List *
extractArgTypes(List *parameters)
{
	List	   *result = NIL;
	ListCell   *i;

	foreach(i, parameters)
	{
		FunctionParameter *p = reinterpret_cast<FunctionParameter *>(lfirst(i));

		if (p->mode != FUNC_PARAM_OUT && p->mode != FUNC_PARAM_TABLE)
			result = lappend(result, p->argType);
	}
	return result;
}

/* extractAggrArgTypes()
 * As above, but work from the output of the aggr_args production.
 */
static List *
extractAggrArgTypes(List *aggrargs)
{
	Assert(list_length(aggrargs) == 2);
	return extractArgTypes(reinterpret_cast<List *>(linitial(aggrargs)));
}

/* makeOrderedSetArgs()
 * Build the result of the aggr_args production (which see the comments for).
 * This handles only the case where both given lists are nonempty, so that
 * we have to deal with multiple VARIADIC arguments.
 */
static List *
makeOrderedSetArgs(List *directargs, List *orderedargs,
				   core_yyscan_t yyscanner)
{
	FunctionParameter *lastd = reinterpret_cast<FunctionParameter *>(llast(directargs));
	int			ndirectargs;

	/* No restriction unless last direct arg is VARIADIC */
	if (lastd->mode == FUNC_PARAM_VARIADIC)
	{
		FunctionParameter *firsto = reinterpret_cast<FunctionParameter *>(linitial(orderedargs));

		/*
		 * We ignore the names, though the aggr_arg production allows them;
		 * it doesn't allow default values, so those need not be checked.
		 */
		if (list_length(orderedargs) != 1 ||
			firsto->mode != FUNC_PARAM_VARIADIC ||
			!equal(lastd->argType, firsto->argType))
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 errmsg("an ordered-set aggregate with a VARIADIC direct argument must have one VARIADIC aggregated argument of the same data type"),
					 parser_errposition(exprLocation(reinterpret_cast<Node *>(firsto))));

		/* OK, drop the duplicate VARIADIC argument from the internal form */
		orderedargs = NIL;
	}

	/* don't merge into the next line, as list_concat changes directargs */
	ndirectargs = list_length(directargs);

	return list_make2(list_concat(directargs, orderedargs),
					  makeInteger(ndirectargs));
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in SelectStmt productions.
 */
static void
insertSelectOptions(SelectStmt *stmt,
					List *sortClause, List *lockingClause,
					Node *limitOffset, Node *limitCount,
					WithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, SelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation(reinterpret_cast<Node *>(sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset)));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount)));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation(reinterpret_cast<Node *>(withClause))));
		stmt->withClause = withClause;
	}
}

static Node *
makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg)
{
	SelectStmt *n = makeNode(SelectStmt);

	n->op = op;
	n->all = all;
	n->larg = reinterpret_cast<SelectStmt *>(larg);
	n->rarg = reinterpret_cast<SelectStmt *>(rarg);
	return (Node *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
List *
SystemFuncName(char *name)
{
	return list_make2(makeString("pg_catalog"), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
TypeName *
SystemTypeName(char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString("pg_catalog"),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static Node *
doNegate(Node *n, int location)
{
	if (IsA(n, A_Const))
	{
		A_Const *con = reinterpret_cast<A_Const *>(n);

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_Integer)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_Float)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (Node *) makeSimpleA_Expr(AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(Value *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, Float));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static Node *
makeAArrayExpr(List *elements, int location)
{
	A_ArrayExpr *n = makeNode(A_ArrayExpr);

	n->elements = elements;
	n->location = location;
	return (Node *) n;
}

static Node *
makeXmlExpr(XmlExprOp op, char *name, List *named_args, List *args,
			int location)
{
	XmlExpr		*x = makeNode(XmlExpr);

	x->op = op;
	x->name = name;
	/*
	 * named_args is a list of ResTarget; it'll be split apart into separate
	 * expression and name lists in transformXmlExpr().
	 */
	x->named_args = named_args;
	x->arg_names = NIL;
	x->args = args;
	/* xmloption, if relevant, must be filled in by caller */
	/* type and typmod will be filled in during parse analysis */
	x->type = InvalidOid;			/* marks the node as not analyzed */
	x->location = location;
	return reinterpret_cast<Node *>(x);
}

/*
 * Merge the input and output parameters of a table function.
 */
static List *
mergeTableFuncParameters(List *func_args, List *columns)
{
	ListCell   *lc;

	/* Explicit OUT and INOUT parameters shouldn't be used in this syntax */
	foreach(lc, func_args)
	{
		FunctionParameter *p = reinterpret_cast<FunctionParameter *>(lfirst(lc));

		switch (p->mode)
		{
			/* Input modes */
			case FUNC_PARAM_IN:
			case FUNC_PARAM_VARIADIC:
				break;

			/* Output modes */
			case FUNC_PARAM_TABLE:
				Insist(false);  /* not feasible */
				break;
			case FUNC_PARAM_OUT:
				ereport(ERROR,
						errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("OUT arguments aren't allowed in TABLE functions"));
				break;
			case FUNC_PARAM_INOUT:
				ereport(ERROR,
						errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("INOUT arguments aren't allowed in TABLE functions"));
				break;
		}
	}

	return list_concat(func_args, columns);
}

/*
 * Determine return type of a TABLE function.  A single result column
 * returns setof that column's type; otherwise return setof record.
 */
static TypeName *
TableFuncTypeName(List *columns)
{
	TypeName *result;

	if (list_length(columns) == 1)
	{
		FunctionParameter *p = reinterpret_cast<FunctionParameter *>(linitial(columns));

		result = reinterpret_cast<TypeName *>(copyObject(p->argType));
	}
	else
		result = SystemTypeName("record");

	result->setof = true;

	return result;
}

static void
checkWindowExclude(void)
{
	/*
	 * because the syntax has historically existed without doing anything
	 * we have chosen to add a guc to allow simply ignoring the exclude clause
	 * rather than raising an error.
	 */
	if (gp_ignore_window_exclude)
		return;

	/* MPP-13628 */
	ereport(ERROR,
			errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
			 errmsg("window EXCLUDE clause not yet implemented"));
}

/*
 * Create the IS_NOT_DISTINCT_FROM expression node
 *     used by CASE x WHEN IS NOT DISTINCT FROM and DECODE()
 */
static Node*
makeIsNotDistinctFromNode(Node *expr, int position)
{
	Node *n = reinterpret_cast<Node *>(makeA_Expr(AEXPR_NOT, NIL, NULL,
								reinterpret_cast<Node *>(makeSimpleA_Expr(AEXPR_DISTINCT,
	 													"=", NULL, expr, position)), position));
	return n;
}

/*
 * Convert a list of (dotted) names to a RangeVar (like
 * makeRangeVarFromNameList, but with position support).  The
 * "AnyName" refers to the any_name production in the grammar.
 */
static RangeVar *
makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner)
{
	RangeVar *r = makeNode(RangeVar);

	switch (list_length(names))
	{
		case 1:
			r->catalogname = NULL;
			r->schemaname = NULL;
			r->relname = strVal(linitial(names));
			break;
		case 2:
			r->catalogname = NULL;
			r->schemaname = strVal(linitial(names));
			r->relname = strVal(lsecond(names));
			break;
		case 3:
			r->catalogname = strVal(linitial(names));
			r->schemaname = strVal(lsecond(names));
			r->relname = strVal(lthird(names));
			break;
		default:
			//ereport(ERROR, mdxn: ereport NameListToString
			//		errcode(ERRCODE_SYNTAX_ERROR),
			//		 errmsg("improper qualified name (too many dotted names): %s",
			//				NameListToString(names)),
			//		 parser_errposition(position));
			break;
	}

	r->relpersistence = RELPERSISTENCE_PERMANENT;
	r->location = position;

	return r;
}

/* Separate Constraint nodes from COLLATE clauses in a ColQualList */
static void
SplitColQualList(List *qualList,
				 List **constraintList, CollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	*collClause = NULL;
	for (auto cell = qualList->lst.begin(); cell != qualList->lst.end(); )
	{
		Node   *n = reinterpret_cast<Node *>(lfirst(cell));
		if (IsA(n, Constraint))
		{
			/* keep it in list */
			++cell;
			continue;
		}
		if (IsA(n, CollateClause))
		{
			CollateClause *c = reinterpret_cast<CollateClause *>(n);

			if (*collClause)
				ereport(ERROR,
						errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		cell = qualList->lst.erase(cell);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view definition as the query.
 * ----------
 */
static Node *
makeRecursiveViewSelect(char *relname, List *aliases, Node *query)
{
	SelectStmt *s = makeNode(SelectStmt);
	WithClause *w = makeNode(WithClause);
	CommonTableExpr *cte = makeNode(CommonTableExpr);
	List	   *tl = NIL;
	ListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		ResTarget *rt = makeNode(ResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return reinterpret_cast<Node *>(s);
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}
